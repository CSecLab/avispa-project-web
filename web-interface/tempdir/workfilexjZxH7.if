%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfilexjZxH7

section signature:

state_auth_serv_S: agent * agent * agent * symmetric_key * symmetric_key * text * text * nat * symmetric_key * set(agent) * nat -> fact
state_server_B: agent * agent * agent * symmetric_key * symmetric_key * text * text * nat * symmetric_key * nat -> fact
state_client_A: agent * agent * symmetric_key * symmetric_key * nat * text * text * symmetric_key * nat -> fact


section types:

set_91: set
MGoal, start: message
Na, Nb, Dummy_Nb, Dummy_Na, dummy_nonce: text
State, 5, SID, 4, 3, Dummy_State, SID2, SID1, 2, 1, 0: nat
Dummy_Set_52, ASGoal, Set_52: set(agent)
A, B, S, A2Goal, A1Goal, a, b, s, i: agent
alice_bob_nb, bob_alice_na, secret_k: protocol_id
K_BS, K_AS, Dummy_Kab, Kab, dummy_sk, kas, kbs: symmetric_key


section inits:

initial_state init1 := 
 iknows(start).
 iknows(a).
 iknows(b).
 iknows(s).
 iknows(i).
 state_client_A(a,b,kbs,kas,0,dummy_nonce,dummy_nonce,dummy_sk,3).
 state_server_B(b,a,s,kbs,kas,dummy_nonce,dummy_nonce,1,dummy_sk,4).
 state_auth_serv_S(s,a,b,kbs,kas,dummy_nonce,dummy_nonce,1,dummy_sk,set_91,5)


section rules:

step step_0 (A,B,K_BS,K_AS,Dummy_Na,Nb,Kab,SID,Na) :=
 state_client_A(A,B,K_BS,K_AS,0,Dummy_Na,Nb,Kab,SID).
 iknows(start)
=[exists Na]=>
 state_client_A(A,B,K_BS,K_AS,1,Na,Nb,Kab,SID).
 iknows(scrypt(K_AS,pair(Na,A))).
 witness(A,B,bob_alice_na,Na)

step step_1 (A,B,K_BS,K_AS,Na,Dummy_Nb,Dummy_Kab,SID,Nb,Kab) :=
 state_client_A(A,B,K_BS,K_AS,1,Na,Dummy_Nb,Dummy_Kab,SID).
 iknows(pair(scrypt(K_AS,pair(Kab,pair(Na,pair(A,B)))),scrypt(Kab,pair(Na,Nb))))
 =>
 state_client_A(A,B,K_BS,K_AS,2,Na,Nb,Kab,SID).
 iknows(scrypt(Kab,Nb)).
 request(A,B,alice_bob_nb,Nb,SID)

step step_2 (B,A,S,K_BS,K_AS,Dummy_Na,Dummy_Nb,Kab,SID,Na,Nb) :=
 state_server_B(B,A,S,K_BS,K_AS,Dummy_Na,Dummy_Nb,1,Kab,SID).
 iknows(scrypt(K_AS,pair(Na,A)))
=[exists Nb]=>
 state_server_B(B,A,S,K_BS,K_AS,Na,Nb,2,Kab,SID).
 iknows(scrypt(K_BS,pair(scrypt(K_AS,pair(Na,A)),pair(Nb,B)))).
 witness(B,A,alice_bob_nb,Nb)

step step_3 (B,A,S,K_BS,K_AS,Na,Nb,Dummy_Kab,SID,Kab) :=
 state_server_B(B,A,S,K_BS,K_AS,Na,Nb,2,Dummy_Kab,SID).
 iknows(scrypt(K_BS,pair(Kab,pair(Nb,scrypt(K_AS,pair(Kab,pair(Na,pair(A,B))))))))
 =>
 state_server_B(B,A,S,K_BS,K_AS,Na,Nb,3,Kab,SID).
 iknows(pair(scrypt(K_AS,pair(Kab,pair(Na,pair(A,B)))),scrypt(Kab,pair(Na,Nb))))

step step_4 (B,A,S,K_BS,K_AS,Na,Nb,Dummy_Kab,SID,Kab) :=
 state_server_B(B,A,S,K_BS,K_AS,Na,Nb,3,Dummy_Kab,SID).
 iknows(scrypt(Kab,Nb))
 =>
 state_server_B(B,A,S,K_BS,K_AS,Na,Nb,4,Kab,SID).
 request(B,A,bob_alice_na,Na,SID)

step step_5 (S,A,B,K_BS,K_AS,Dummy_Na,Dummy_Nb,Dummy_Kab,Dummy_Set_52,SID,Na,Nb,Kab) :=
 state_auth_serv_S(S,A,B,K_BS,K_AS,Dummy_Na,Dummy_Nb,1,Dummy_Kab,Dummy_Set_52,SID).
 iknows(scrypt(K_BS,pair(scrypt(K_AS,pair(Na,A)),pair(Nb,B))))
=[exists Kab]=>
 state_auth_serv_S(S,A,B,K_BS,K_AS,Na,Nb,2,Kab,Dummy_Set_52,SID).
 iknows(scrypt(K_BS,pair(Kab,pair(Nb,scrypt(K_AS,pair(Kab,pair(Na,pair(A,B)))))))).
 secret(Kab,secret_k,Dummy_Set_52).
 contains(A,Dummy_Set_52).
 contains(B,Dummy_Set_52).
 contains(S,Dummy_Set_52)


section properties:

property secrecy_of_secret_k (MGoal,ASGoal) :=
 [] ((secret(MGoal,secret_k,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property authentication_on_alice_bob_nb (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,alice_bob_nb,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,alice_bob_nb,MGoal))
     /\ ((request(A1Goal,A2Goal,alice_bob_nb,MGoal,SID1)
           /\ request(A1Goal,A2Goal,alice_bob_nb,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_bob_alice_na (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,bob_alice_na,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,bob_alice_na,MGoal))
     /\ ((request(A1Goal,A2Goal,bob_alice_na,MGoal,SID1)
           /\ request(A1Goal,A2Goal,bob_alice_na,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state secrecy_of_secret_k (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,secret_k,ASGoal) &
 not(contains(i,ASGoal))

attack_state authentication_on_alice_bob_nb (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,alice_bob_nb,MGoal,SID) &
 not(witness(A2Goal,A1Goal,alice_bob_nb,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_alice_bob_nb (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,alice_bob_nb,MGoal,SID1).
 request(A1Goal,A2Goal,alice_bob_nb,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_bob_alice_na (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,bob_alice_na,MGoal,SID) &
 not(witness(A2Goal,A1Goal,bob_alice_na,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_bob_alice_na (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,bob_alice_na,MGoal,SID1).
 request(A1Goal,A2Goal,bob_alice_na,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

