role owner(
               ON,CS,US:agent,
               DEK:symmetric_key,
               Kcs,Kw,Kdo:public_key,
                H:hash_func,
               SND,RCV:channel(dy))
         played_by ON def=
             local
		 G,Y,T1,T2,T3,S,P1,P2,P3:text,
                 State:nat,
                 M,PK:message
                           const subs,on_cs_id:protocol_id
            init
                 State:=0
                 transition 
                        1.State=0/\RCV(start)=|>
                             
                                 State':=1/\PK':=H(H(G.inv(Y)),H(G.T1),H(G.T2),H(G.T3)))
                          		/\MK'=H(Y1.T11.T22.T33)
                                             /\SND({PK}_Kcs)
                             /\E':=H(I.M.H(H(G.inv(Y)).inv(S)).(H(G.T1).inv(S)).(H(G.T2).inv(S)).(H(G.T3).inv(S)))
                                        
                                          /\SND({M}_DEK}_E'}_Kcs)
			2.State=1 /\RCV({UID}_inv(Kdo))

		                   State':=2/\W':=new()
                                                          /\SND({W'}_Kdo)
                                                           /\P':=new()
 
                           /\SK':=(H(H(G.inv(P1)).inv(T1)).H(H(G.inv(P2)).inv(T2)).H(H(G.inv(P3)).inv(T3)))

/\C':=((P'.(H(G.inv(Y)).H(G.T1).H(G.T2).H(G.T3)).H(P.(H(H(G.inv(P1)).inv(T1)).H(H(G.inv(P2)).inv(T2)).H(H(G.inv(P3)).inv(T3))).H(H(G.inv(Y)).H(G.T1).H(G.T2).H(G.T3)).(P.(H(H(G.inv(P1)).inv(T1)).H(H(G.inv(P2)).inv(T2)).H(H(G.inv(P3)).inv(T3)).P))
/\SND(W.{H(H(G.inv(P1)).inv(T1)).H(H(G.inv(P2)).inv(T2)).H(H(G.inv(P3)).inv(T3))}.((P'.(H(G.inv(Y)).H(G.T1).H(G.T2).H(G.T3)).H(P.(H(H(G.inv(P1)).inv(T1)).H(H(G.inv(P2)).inv(T2)).H(H(G.inv(P3)).inv(T3))).H(H(G.inv(Y)).H(G.T1).H(G.T2).H(G.T3)).(P.(H(H(G.inv(P1)).inv(T1)).H(H(G.inv(P2)).inv(T2)).H(H(G.inv(P3)).inv(T3)).P)).H(W.{H(H(G.inv(P1)).inv(T1)).H(H(G.inv(P2)).inv(T2)).H(H(G.inv(P3)).inv(T3))}.((P'.(H(G.inv(Y)).H(G.T1).H(G.T2).H(G.T3)).H(P.(H(H(G.inv(P1)).inv(T1)).H(H(G.inv(P2)).inv(T2)).H(H(G.inv(P3)).inv(T3))).H(H(G.inv(Y)).H(G.T1).H(G.T2).H(G.T3)).(P.(H(H(G.inv(P1)).inv(T1)).H(H(G.inv(P2)).inv(T2)).H(H(G.inv(P3)).inv(T3)).P))))
secret(PK',subs,{ON,CS})                           
witness(ON,CS,on_cs_id,C')
end role
role cloudserver(
	ON,CS,US:agent,
	DEK:symmetric_key,
	Kdc:public_key,
	H:hash_func,
	SND,RCV:channel(dy))

	played_by CS def=
		local
			State:nat,
			M:message
			G,Y,T1,T2,T3,P1,P2,P3:text
			init
				State:=0
				transition
					1.State= 0 /\RCV(W.{H(H(G.inv(P1)).inv(T1)).H(H(G.inv(P2)).inv(T2)).H(H(G.inv(P3)).inv(T3))}.((P'.(H(G.inv(Y)).H(G.T1).H(G.T2).H(G.T3)).H(P.(H(H(G.inv(P1)).inv(T1)).H(H(G.inv(P2)).inv(T2)).H(H(G.inv(P3)).inv(T3))).H(H(G.inv(Y)).H(G.T1).H(G.T2).H(G.T3)).(P.(H(H(G.inv(P1)).inv(T1)).H(H(G.inv(P2)).inv(T2)).H(H(G.inv(P3)).inv(T3)).P)).H(W.{H(H(G.inv(P1)).inv(T1)).H(H(G.inv(P2)).inv(T2)).H(H(G.inv(P3)).inv(T3))}.((P'.(H(G.inv(Y)).H(G.T1).H(G.T2).H(G.T3)).H(P.(H(H(G.inv(P1)).inv(T1)).H(H(G.inv(P2)).inv(T2)).H(H(G.inv(P3)).inv(T3))).H(H(G.inv(Y)).H(G.T1).H(G.T2).H(G.T3)).(P.(H(H(G.inv(P1)).inv(T1)).H(H(G.inv(P2)).inv(T2)).H(H(G.inv(P3)).inv(T3)).P))))
/\SND({C}_Kdc)
end role
role user(
	ON,CS,US:agent,
	DEK:symmetric_key,
	Kdc:public_key,
	H:hash_func,
	SND,RCV:channel(dy))
		played_by A def=

			local


				State:nat,
				M:message
				init
				State:=0
					transition
					1.State= 0 /\RCV({C}_Kdc)
						State':= 2 /\UID':=new()
							H(P.H(H(G.inv(P1)).inv(T1)).H(H(G.inv(P2)).inv(T2)).H(H(G.inv(P3)).inv(T3)).H(H(G.inv(y)).H(G.T1).H(G.T2).H(G.T3))))
end role
role session(

	ON,CS,US:agent,

                DEK:symmetric_key,

                  H:hash_func)

              def=

                   local 
			SON,RON,SCS,RCS,SUS,RUS:channel(dy)

                   composition

                         owner(ON,CS,US,DEK,H,SON,RON)

                       /\cloudserver(ON,CS,US,DEK,H,SCS,RCS)

                       /\user(ON,CS,US,DEK,H,SUS,RUS)

      end role


role environment()
 def=

                      DEK     : symmetric_key,

                      on,cs,us : agent,

                      h: hash_func
 
			intruder_knowledge = {on,cs,us,h}

                   
               composition

                             session(on,cs,us,DEK,h)

                          /\ session(on,cs,us,DEK,h)

                          /\ session(on,cs,us,DEK,h)


 end role