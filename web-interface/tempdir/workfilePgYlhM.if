%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfilePgYlhM

section signature:

state_server: agent * agent * agent * symmetric_key * text * text * text * hash_func * nat * message * text * text * text * text * text * text * text * text * text * text * text * symmetric_key * hash_func * set(agent) * set(agent) * nat -> fact
state_registrationCenter: agent * agent * agent * symmetric_key * symmetric_key * text * text * text * hash_func * nat * message * message * message * text * text * text * text * text * text * text * symmetric_key * set(agent) * nat -> fact
state_user: agent * agent * agent * symmetric_key * text * text * text * hash_func * nat * text * text * text * text * text * text * text * hash_func * symmetric_key * set(agent) * set(agent) * nat -> fact


section types:

set_200, set_199, set_198, set_196, set_195, set_193, set_192, set_190, set_189, set_188, set_178, set_177, set_163, set_146, set_145: set
Ri, Dummy_R12, Dummy_R11, Dummy_Ga, dummy_msg, Ga, R11, R12, MGoal, start: message
Succ, H, dummy_hash, h: hash_func
C1, X, B1, R2, Msg, Msg1, Msg2, Msg3, Msg4, Msun, GB1, Dummy_Msun, Dummy_Msg1, Dummy_GB1, Dummy_Msg, ID, Dummy_B1, Sid, G, Dummy_R2, Dummy_B, Dummy_C2, Dummy_GC1, Dummy_X, Dummy_C1, C2, B, GC1, Dummy_Msg3, Dummy_SK, Dummy_Msg2, Dummy_C, Dummy_GA1, Dummy_R1, Dummy_A1, dummy_nonce, id, sid, g, A1, R1, C, SK, GA1: text
K1, Vj, Dummy_K1, dummy_sk, Vi, vi, vj, kii, vii, vij: symmetric_key
Dummy_Set_107, Dummy_Set_104, Dummy_Set_70, Set_70, Dummy_Set_38, Dummy_Set_32, Set_38, ASGoal, Set_32, Set_107, Set_104: set(agent)
s_rc_r2, gc1, s_u_sk, k1, u_rc_gaki, ga1, msg3, gb1: protocol_id
U, S, RC, A2Goal, A1Goal, u, rc, s, i: agent
13, 11, 9, 8, State, 5, SID, 6, 4, Dummy_State, 3, SID2, SID1, 2, 1, 0, 7: nat


section inits:

initial_state init1 := 
 iknows(start).
 iknows(u).
 iknows(rc).
 iknows(s).
 iknows(kii).
 iknows(vii).
 iknows(vij).
 iknows(i).
 state_user(u,rc,s,vi,id,sid,g,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_hash,dummy_sk,set_145,set_146,3).
 state_registrationCenter(s,u,rc,vi,vj,id,sid,g,h,1,dummy_msg,dummy_msg,dummy_msg,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_sk,set_163,4).
 state_server(rc,u,s,vj,id,sid,g,h,5,dummy_msg,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_sk,dummy_hash,set_177,set_178,5).
 state_registrationCenter(s,i,rc,vii,vj,id,sid,g,h,1,dummy_msg,dummy_msg,dummy_msg,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_sk,set_190,8).
 state_server(rc,i,s,vj,id,sid,g,h,5,dummy_msg,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_sk,dummy_hash,set_192,set_193,9).
 state_user(u,rc,i,vi,id,sid,g,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_hash,dummy_sk,set_195,set_196,11).
 state_server(rc,u,i,vij,id,sid,g,h,5,dummy_msg,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_sk,dummy_hash,set_199,set_200,13)


section rules:

step step_0 (U,S,RC,Vi,ID,Sid,G,H,Dummy_A1,Dummy_R1,C,Msg2,SK,Dummy_GA1,Msg3,Succ,K1,Dummy_Set_32,Set_38,SID,A1,R1) :=
 state_user(U,S,RC,Vi,ID,Sid,G,H,0,Dummy_A1,Dummy_R1,C,Msg2,SK,Dummy_GA1,Msg3,Succ,K1,Dummy_Set_32,Set_38,SID).
 iknows(start)
=[exists R1,A1]=>
 state_user(U,S,RC,Vi,ID,Sid,G,H,2,A1,R1,C,Msg2,SK,exp(G,A1),Msg3,Succ,K1,Dummy_Set_32,Set_38,SID).
 iknows(pair(ID,scrypt(Vi,pair(exp(G,A1),R1)))).
 secret(exp(G,A1),ga1,Dummy_Set_32).
 witness(U,RC,u_rc_gaki,exp(G,A1)).
 contains(U,Dummy_Set_32).
 contains(RC,Dummy_Set_32)

step step_1 (U,S,RC,Vi,ID,Sid,G,H,A1,R1,Dummy_C,Msg2,SK,GA1,Msg3,Succ,Dummy_K1,Set_32,Dummy_Set_38,SID,C) :=
 state_user(U,S,RC,Vi,ID,Sid,G,H,2,A1,R1,Dummy_C,Msg2,SK,GA1,Msg3,Succ,Dummy_K1,Set_32,Dummy_Set_38,SID).
 iknows(pair(ID,scrypt(Vi,C)))
 =>
 state_user(U,S,RC,Vi,ID,Sid,G,H,4,A1,R1,C,Msg2,SK,GA1,Msg3,Succ,exp(C,A1),Set_32,Dummy_Set_38,SID).
 iknows(pair(ID,pair(Sid,scrypt(exp(C,A1),pair(ID,pair(Sid,R1)))))).
 secret(exp(C,A1),k1,Dummy_Set_38).
 contains(U,Dummy_Set_38).
 contains(S,Dummy_Set_38)

step step_2 (U,S,RC,Vi,ID,Sid,G,H,A1,R1,C,Dummy_Msg2,Dummy_SK,GA1,Dummy_Msg3,Succ,K1,Set_32,Set_38,SID,Msg2,Msg3) :=
 state_user(U,S,RC,Vi,ID,Sid,G,H,4,A1,R1,C,Dummy_Msg2,Dummy_SK,GA1,Dummy_Msg3,Succ,K1,Set_32,Set_38,SID).
 iknows(pair(ID,pair(Sid,pair(scrypt(K1,pair(Msg2,pair(ID,pair(Sid,R1)))),apply(H,pair(ID,pair(Sid,Msg3)))))))
 =>
 state_user(U,S,RC,Vi,ID,Sid,G,H,8,A1,R1,C,Msg2,exp(Msg2,A1),GA1,Msg3,Succ,K1,Set_32,Set_38,SID).
 iknows(apply(H,pair(apply(Succ,exp(Msg2,A1)),pair(ID,Sid)))).
 witness(U,S,s_u_sk,exp(Msg2,A1))

step step_3 (RC,U,S,Vi,Vj,ID,Sid,G,H,Dummy_Ga,Dummy_R11,R12,Dummy_C1,C2,Dummy_X,B,R2,Dummy_GC1,GB1,Dummy_K1,Dummy_Set_70,SID,Ga,R11,C1,X) :=
 state_registrationCenter(RC,U,S,Vi,Vj,ID,Sid,G,H,1,Dummy_Ga,Dummy_R11,R12,Dummy_C1,C2,Dummy_X,B,R2,Dummy_GC1,GB1,Dummy_K1,Dummy_Set_70,SID).
 iknows(pair(ID,scrypt(Vi,pair(Ga,R11)))).
 request(RC,U,u_rc_gaki,Ga,SID)
=[exists X,C1]=>
 state_registrationCenter(RC,U,S,Vi,Vj,ID,Sid,G,H,3,Ga,R11,R12,C1,C2,X,B,R2,exp(G,C1),GB1,exp(Ga,C1),Dummy_Set_70,SID).
 iknows(pair(ID,scrypt(Vi,exp(G,C1)))).
 secret(exp(G,C1),gc1,Dummy_Set_70).
 contains(U,Dummy_Set_70).
 contains(RC,Dummy_Set_70)

step step_4 (RC,U,S,Vi,Vj,ID,Sid,G,H,Ga,Dummy_R11,Dummy_R12,C1,Dummy_C2,X,Dummy_B,Dummy_R2,GC1,GB1,K1,Set_70,SID,R11,R12,C2,B,R2) :=
 state_registrationCenter(RC,U,S,Vi,Vj,ID,Sid,G,H,3,Ga,Dummy_R11,Dummy_R12,C1,Dummy_C2,X,Dummy_B,Dummy_R2,GC1,GB1,K1,Set_70,SID).
 iknows(pair(ID,pair(Sid,pair(scrypt(K1,pair(ID,pair(Sid,R11))),scrypt(Vj,pair(B,pair(apply(H,scrypt(K1,pair(ID,pair(Sid,R12)))),pair(ID,pair(Sid,R2))))))))).
 request(RC,S,s_rc_r2,R2,SID)
=[exists C2]=>
 state_registrationCenter(RC,U,S,Vi,Vj,ID,Sid,G,H,6,Ga,R11,R12,C1,C2,X,B,R2,GC1,GB1,K1,Set_70,SID).
 iknows(pair(Sid,scrypt(Vj,pair(exp(Ga,C2),pair(ID,pair(Sid,pair(scrypt(K1,pair(exp(B,C2),pair(ID,pair(Sid,R11)))),R2)))))))

step step_5 (S,U,RC,Vj,ID,Sid,G,H,Ri,C1,X,Dummy_B1,Dummy_R2,Dummy_Msg,Msg1,Msg2,Msg3,Msg4,Msun,Dummy_GB1,K1,Succ,Dummy_Set_104,Set_107,SID,B1,R2,Msg) :=
 state_server(S,U,RC,Vj,ID,Sid,G,H,5,Ri,C1,X,Dummy_B1,Dummy_R2,Dummy_Msg,Msg1,Msg2,Msg3,Msg4,Msun,Dummy_GB1,K1,Succ,Dummy_Set_104,Set_107,SID).
 iknows(pair(ID,pair(Sid,Msg)))
=[exists R2,B1]=>
 state_server(S,U,RC,Vj,ID,Sid,G,H,7,Ri,C1,X,B1,R2,Msg,Msg1,Msg2,Msg3,Msg4,Msun,exp(G,B1),K1,Succ,Dummy_Set_104,Set_107,SID).
 iknows(pair(ID,pair(Sid,pair(Msg,scrypt(Vj,pair(exp(G,B1),pair(apply(H,Msg),pair(ID,pair(Sid,R2))))))))).
 secret(exp(G,B1),gb1,Dummy_Set_104).
 witness(S,RC,s_rc_r2,R2).
 contains(S,Dummy_Set_104).
 contains(RC,Dummy_Set_104)

step step_6 (S,U,RC,Vj,ID,Sid,G,H,Ri,C1,X,B1,R2,Msg,Dummy_Msg1,Msg2,Dummy_Msg3,Msg4,Dummy_Msun,GB1,K1,Succ,Set_104,Dummy_Set_107,SID,Msg1,Msun) :=
 state_server(S,U,RC,Vj,ID,Sid,G,H,7,Ri,C1,X,B1,R2,Msg,Dummy_Msg1,Msg2,Dummy_Msg3,Msg4,Dummy_Msun,GB1,K1,Succ,Set_104,Dummy_Set_107,SID).
 iknows(pair(Sid,scrypt(Vj,pair(Msg1,pair(ID,pair(Sid,pair(Msun,R2)))))))
 =>
 state_server(S,U,RC,Vj,ID,Sid,G,H,9,Ri,C1,X,B1,R2,Msg,Msg1,Msg2,exp(Dummy_Msg1,B1),Msg4,Msun,GB1,K1,Succ,Set_104,Dummy_Set_107,SID).
 iknows(pair(ID,pair(Sid,pair(Msun,apply(H,pair(ID,pair(Sid,exp(Dummy_Msg1,B1)))))))).
 secret(exp(Dummy_Msg1,B1),msg3,Dummy_Set_107).
 contains(S,Dummy_Set_107).
 contains(RC,Dummy_Set_107)

step step_7 (S,U,RC,Vj,ID,Sid,G,H,Ri,C1,X,B1,R2,Msg,Msg1,Msg2,Dummy_Msg3,Msg4,Msun,GB1,K1,Succ,Set_104,Set_107,SID,Msg3) :=
 state_server(S,U,RC,Vj,ID,Sid,G,H,9,Ri,C1,X,B1,R2,Msg,Msg1,Msg2,Dummy_Msg3,Msg4,Msun,GB1,K1,Succ,Set_104,Set_107,SID).
 iknows(apply(H,pair(apply(Succ,Msg3),pair(ID,Sid))))
 =>
 state_server(S,U,RC,Vj,ID,Sid,G,H,11,Ri,C1,X,B1,R2,Msg,Msg1,Msg2,Msg3,Msg4,Msun,GB1,K1,Succ,Set_104,Set_107,SID).
 request(S,U,s_u_sk,Msg3,SID)


section properties:

property secrecy_of_ga1 (MGoal,ASGoal) :=
 [] ((secret(MGoal,ga1,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_gb1 (MGoal,ASGoal) :=
 [] ((secret(MGoal,gb1,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_gc1 (MGoal,ASGoal) :=
 [] ((secret(MGoal,gc1,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_k1 (MGoal,ASGoal) :=
 [] ((secret(MGoal,k1,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_msg3 (MGoal,ASGoal) :=
 [] ((secret(MGoal,msg3,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property authentication_on_s_rc_r2 (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,s_rc_r2,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,s_rc_r2,MGoal))
     /\ ((request(A1Goal,A2Goal,s_rc_r2,MGoal,SID1)
           /\ request(A1Goal,A2Goal,s_rc_r2,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_u_rc_gaki (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,u_rc_gaki,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,u_rc_gaki,MGoal))
     /\ ((request(A1Goal,A2Goal,u_rc_gaki,MGoal,SID1)
           /\ request(A1Goal,A2Goal,u_rc_gaki,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_s_u_sk (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,s_u_sk,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,s_u_sk,MGoal))
     /\ ((request(A1Goal,A2Goal,s_u_sk,MGoal,SID1)
           /\ request(A1Goal,A2Goal,s_u_sk,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state secrecy_of_ga1 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,ga1,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_gb1 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,gb1,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_gc1 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,gc1,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_k1 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,k1,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_msg3 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,msg3,ASGoal) &
 not(contains(i,ASGoal))

attack_state authentication_on_s_rc_r2 (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,s_rc_r2,MGoal,SID) &
 not(witness(A2Goal,A1Goal,s_rc_r2,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_s_rc_r2 (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,s_rc_r2,MGoal,SID1).
 request(A1Goal,A2Goal,s_rc_r2,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_u_rc_gaki (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,u_rc_gaki,MGoal,SID) &
 not(witness(A2Goal,A1Goal,u_rc_gaki,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_u_rc_gaki (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,u_rc_gaki,MGoal,SID1).
 request(A1Goal,A2Goal,u_rc_gaki,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_s_u_sk (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,s_u_sk,MGoal,SID) &
 not(witness(A2Goal,A1Goal,s_u_sk,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_s_u_sk (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,s_u_sk,MGoal,SID1).
 request(A1Goal,A2Goal,s_u_sk,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

