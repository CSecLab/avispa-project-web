role alice (U,S:agent,
Sk:symmetric_key,
H:hash_func,
Snd,Rcv:channel(dy))
%played by user
played_by U
def=
local State:nat,
IDu,PWu,Bb,TPWu ,EIDu ,P,Q,X,B,Ms,Skeys,Skeyu:text,
Ai,Bi,Ci,Di,Vi,Ti,Ts,Mi,Alfa,Beta:text
const
 sub1,sub2,sud3,bob_X,alice_bob_ti : protocol_id
init State:=0
transition
%registration
1.State=0 /\ Rcv(start) =|>
   State':=1 /\ B':= new()
/\ IDu':= new()
/\ EIDu':=H(IDu'.B')
/\ TPWu':=new()

%%%%%%%%%%%/\ secret ({IDu,PWu,B},sub2,U)
%%% send registeration message%%%
/\ Snd ({ EIDu'.TPWu'}_Sk)
/\ secret ({EIDu,TPWu},sub1,{U,S})


           %Recieve registration acknowldgement
2.State = 1 /\ Rcv({Ai'.Bi'.H.P'.Q'}_Sk) /\ Ai'= exp(H(EIDu.TPWu),TPWu) =|> 
State':= 2 /\ PWu':=new()
/\ Ai':= exp(H(EIDu.PWu'),PWu')

/\ secret (X,bob_X,S)
/\ secret ({Ai,Bi,P,Q},sub2,{U,S})         %%%%%%/\ Bi':= (exp(H(EIDu.TPWu),(X + TPWu)).exp(H(EIDu),PWu))/ exp(H(EIDu),TPWu)
                                           %%%%%%/\ BBi':= Bi'.exp(H(EIDu),PWu')/ exp(H(EIDu),TPWu')
/\ Bi':= exp(H(EIDu),(X.PWu))              %%%%%%/\secret({Ai,Bi,PWu},alice_AiBiPw,U)
/\ request(S,U,sub2,{Ai,Bi,P,Q})


   

                             %%%send login request
/\ Ci':= Bi'.exp(H(EIDu),PWu)
/\ Alfa':=new()
/\ Di' := exp(H(EIDu),Alfa')
/\ Ti':=new()
/\ Mi':=H(EIDu.Ci'.Di'.Ti')
/\Snd(EIDu .Di'.Mi'.Ti')
%%/\ secret 
/\ witness(U,S,alice_bob_ti,Ti')
%%%% Reseive Mutual Authentication Message

3.State=2 /\ Rcv(EIDu.Vi'.Ms'.Ts') /\ Ms'= H(EIDu.Ci.Vi'.exp(Vi',Alfa).Ts') =|>
 request(S,U,bob_alice_ts,Ts')
/\ Skeyu':=exp(Vi',Alfa)
end role

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%ROLE BOB %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

role bob (U,S:agent,
Sk:symmetric_key,
H:hash_func,
Snd,Rcv:channel(dy))
%played by server
played_by S
def=
local State:nat,
IDu ,PWu,Bb,TPWu,EIDu,P,Q,X,B,Ms,Skeys,Skeyu:text,
Ai,Bi,Ci,Di,Vi,Ti,Ts,Mi,Alfa,Beta:text
const
 sub1,sub2,sud3,bob_X ,bob_alice_ts : protocol_id
init State:=0
transition
%registration
                     %%%%% Recieve registration request%%%%
4.State=0 /\ Rcv({EIDu'.TPWu'}_Sk)=|>    
State':=1 /\  X':= new()
/\ Ai':= exp(H(EIDu'.TPWu'),TPWu')
/\ Bi':= exp(H(EIDu'.TPWu'),(X'.TPWu')) 
/\ P' := new()
/\ Q' := new()
/\ Snd({Ai'.Bi'.H.P'.Q'}_Sk)
%/\ witness(S,U,sub2,{Ai,Bi,P,Q})
/\ secret ({EIDu,TPWu},sub1,{U,S})
/\ secret ({Ai,Bi,P,Q},sub2,{U,S}) %%%%%/\ secret ({IDu,PWu,B},sub2,U)
/\ secret (X,bob_X,S)

%% Recieve login request

5.State = 1 /\ Rcv (EIDu.Di',Mi',Ti') /\  Mi'= H( EIDu . Ci'.Di'.Ti') =|>
State' := 2 /\ Ci':=exp(H(EIDu),X)
 /\ request(U,S,alice_bob_ti,Ti')

/\ Beta' := new()
/\ Vi':= exp(H(EIDu),Beta')
/\ Skeys':= exp(Di',Beta')
/\ Ts' := new()
/\ Ms' := H(EIDu.Ci'.Vi'.Skeys'.Ts')
/\ Snd(EIDu .Vi'. Ms'.Ts')
/\ witness(S,U,bob_alice_ts,Ts')
end role

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%role session%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

role session(U, S: agent,
Sk : symmetric_key,
H : hash_func)
def=
local SI, SJ, RI, RJ: channel (dy)
composition
alice (U, S, Sk, H, SI, RI)
/\ bob (U, S, Sk, H, SJ, RJ)
end role
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%role environment()%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

role environment()
def=
const u, s: agent,
sk : symmetric_key,
h : hash_func,
 ti, ts : text,
alice_bob_ti, bob_alice_ts, alice_bob_alpha,
bob_alice_beta, subs1, subs2, 
bob_X : protocol_id
intruder_knowledge = {u, s, h,  ti, ts}
composition
session(u, s, sk, h)
/\ session(u, s, sk, h)
end role
goal
secrecy_of sub1
secrecy_of sub2
secrecy_of bob_X
%%%%secrecy_of subs3
%%%%%secrecy_of subs4
%%%%%%%%secrecy_of subs5
authentication_on sub2
authentication_on alice_bob_ti
authentication_on alice_bob_alpha
authentication_on bob_alice_ts
authentication_on bob_alice_beta
end goal
environment()
