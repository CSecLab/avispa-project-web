%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfileH1wTpXQToI

section signature:

state_server: agent * agent * agent * symmetric_key * symmetric_key * public_key * nat * nat * nat * nat * hash_func * nat * nat * message * message * message * message * text * text * text -> fact
state_user: agent * agent * agent * symmetric_key * symmetric_key * public_key * nat * nat * nat * nat * nat * nat * hash_func * nat * nat * nat * text * text * text * message * message * message * message -> fact
state_registrationcenter: agent * agent * agent * public_key * public_key * public_key * nat * nat * nat * nat * nat * nat * hash_func * nat * nat * nat * nat * set(agent) * set(agent) -> fact


section types:

set_198, set_197, set_194, set_193, set_190, set_189, set_164, set_163: set
Dummy_Set_68, Set_68, Dummy_Set_65, Set_65, ASGoal: set(agent)
user_server_Ij, user_server_Ii, server_user_Ij, user_server_ki, server_user_kj, user_server_skij, server_user_skij, ki, kj: protocol_id
Pj, Ns, Nu, Dummy_Pi, Dummy_Ns, Dummy_Nu, Dummy_Pj, dummy_nonce, Pi: text
Ri, Rj, Vi, Vj, Dummy_Vj, Dummy_Rj, Dummy_Vi, Dummy_Ri, dummy_msg, MGoal, start: message
H, h: hash_func
16, 9, 15, 7, 13, 11, 8, B, PWu, State, Dummy_D, Ii, Zu, 5, Ti, PW, ID, SID, Dummy_B, 4, Dummy_Ti, Dummy_Ii, Dummy_Ij, Dummy_State, 3, dummy_nat, Ij, SID2, SID1, Z, Zs, z, zu, zs, zi, pwu, id, sid, ij, ii, ti, pw, 2, 1, 0, D: nat
Xs, X, Xu, x, xs, xu, xi: public_key
Dummy_SKij, Dummy_Kj, SKij, Dummy_Ki, Ki, dummy_sk, skij, Kj: symmetric_key
RC, U, S, A2Goal, A1Goal, rc, u, s, i: agent


section inits:

initial_state init1 := 
 iknows(start).
 iknows(rc).
 iknows(s).
 iknows(u).
 iknows(x).
 iknows(xs).
 iknows(xu).
 iknows(zi).
 iknows(xi).
 iknows(h).
 iknows(i).
 state_registrationcenter(rc,u,s,x,xu,xs,dummy_nat,dummy_nat,dummy_nat,dummy_nat,dummy_nat,3,h,1,dummy_nat,dummy_nat,dummy_nat,set_163,set_164).
 state_user(u,rc,s,dummy_sk,dummy_sk,xs,dummy_nat,dummy_nat,dummy_nat,dummy_nat,dummy_nat,4,h,5,dummy_nat,dummy_nat,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg).
 state_server(s,rc,u,dummy_sk,dummy_sk,xu,dummy_nat,dummy_nat,dummy_nat,5,h,0,dummy_nat,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_nonce,dummy_nonce,dummy_nonce).
 state_user(u,i,s,dummy_sk,dummy_sk,xs,dummy_nat,dummy_nat,dummy_nat,dummy_nat,dummy_nat,8,h,5,dummy_nat,dummy_nat,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg).
 state_server(s,i,u,dummy_sk,dummy_sk,xu,dummy_nat,dummy_nat,dummy_nat,9,h,0,dummy_nat,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_nonce,dummy_nonce,dummy_nonce).
 state_registrationcenter(rc,i,s,x,xi,xs,dummy_nat,dummy_nat,dummy_nat,dummy_nat,dummy_nat,11,h,1,dummy_nat,dummy_nat,dummy_nat,set_193,set_194).
 state_server(s,rc,i,dummy_sk,dummy_sk,xi,dummy_nat,dummy_nat,dummy_nat,13,h,0,dummy_nat,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_nonce,dummy_nonce,dummy_nonce).
 state_registrationcenter(rc,u,i,x,xu,xi,dummy_nat,dummy_nat,dummy_nat,dummy_nat,dummy_nat,15,h,1,dummy_nat,dummy_nat,dummy_nat,set_197,set_198).
 state_user(u,rc,i,dummy_sk,dummy_sk,xi,dummy_nat,dummy_nat,dummy_nat,dummy_nat,dummy_nat,16,h,5,dummy_nat,dummy_nat,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg)


section rules:

step step_0 (RC,U,S,X,Xs,Xu,Z,Zs,Zu,PWu,ID,SID,H,Ii,Dummy_Ij,Ti,Dummy_Set_65,Set_68) :=
 state_registrationcenter(RC,U,S,X,Xs,Xu,Z,Zs,Zu,PWu,ID,SID,H,1,Ii,Dummy_Ij,Ti,Dummy_Set_65,Set_68).
 iknows(SID)
 =>
 state_registrationcenter(RC,U,S,X,Xs,Xu,Z,Zs,Zu,PWu,ID,SID,H,3,Ii,exp(apply(H,pair(SID,Xs)),X),Ti,Dummy_Set_65,Set_68).
 secret(Dummy_Ij,user_server_Ij,Dummy_Set_65).
 iknows(H).
 contains(RC,Dummy_Set_65).
 contains(S,Dummy_Set_65)

step step_1 (RC,U,S,X,Xs,Xu,Z,Zs,Zu,PWu,ID,SID,H,Dummy_Ii,Ij,Dummy_Ti,Set_65,Dummy_Set_68) :=
 state_registrationcenter(RC,U,S,X,Xs,Xu,Z,Zs,Zu,PWu,ID,SID,H,3,Dummy_Ii,Ij,Dummy_Ti,Set_65,Dummy_Set_68).
 iknows(ID)
 =>
 state_registrationcenter(RC,U,S,X,Xs,Xu,Z,Zs,Zu,PWu,ID,SID,H,5,exp(apply(H,pair(ID,Xu)),X),Ij,xor(apply(H,pair(ID,pair(Zu,PWu))),Dummy_Ii),Set_65,Dummy_Set_68).
 secret(Dummy_Ii,user_server_Ii,Dummy_Set_68).
 iknows(H).
 contains(RC,Dummy_Set_68).
 contains(U,Dummy_Set_68)

step step_2 (U,RC,S,Ki,SKij,Xs,Ii,Zu,Ti,PW,ID,SID,H,B,PWu,Pj,Ns,Nu,Ri,Rj,Vi,Vj) :=
 state_user(U,RC,S,Ki,SKij,Xs,Ii,Zu,Ti,PW,ID,SID,H,5,B,PWu,Pj,Ns,Nu,Ri,Rj,Vi,Vj).
 iknows(ID)
 =>
 state_user(U,RC,S,Ki,SKij,Xs,Ii,Zu,Ti,PW,ID,SID,H,7,B,PWu,Pj,Ns,Nu,Ri,Rj,Vi,Vj).
 iknows(H)

step step_3 (U,RC,S,Dummy_Ki,Xs,Dummy_Ii,Zu,Ti,PW,ID,SID,H,Dummy_B,PWu,Dummy_Pj,Dummy_Nu,Dummy_Ri,Rj,Dummy_Vi,Vj,B) :=
 state_user(U,RC,S,Dummy_Ki,apply(H,exp(Dummy_B,xor(apply(H,Dummy_Ki),Rj))),Xs,Dummy_Ii,Zu,Ti,PW,ID,SID,H,9,Dummy_B,PWu,Dummy_Pj,xor(apply(H,Dummy_Ki),Rj),Dummy_Nu,Dummy_Ri,Rj,Dummy_Vi,Vj).
 iknows(SID)
=[exists B]=>
 state_user(U,RC,S,exp(Dummy_Ii,Dummy_Pj),apply(H,exp(Dummy_B,xor(apply(H,Dummy_Ki),Rj))),Xs,xor(apply(H,pair(ID,pair(Zu,PWu))),Ti),Zu,Ti,PW,ID,SID,H,7,B,PWu,exp(apply(H,pair(SID,Xs)),apply(H,exp(Zu,Xs))),xor(apply(H,Dummy_Ki),Rj),exp(Dummy_Ki,B),xor(apply(H,Dummy_Ki),Dummy_Nu),Rj,apply(H,pair(Dummy_Ki,Dummy_Nu)),Vj).
 iknows(ID)

step step_4 (S,RC,U,Kj,SKij,Xu,Ij,Zs,ID,SID,H,D,Ri,Rj,Vi,Vj,Ns,Nu,Pi) :=
 state_server(S,RC,U,Kj,SKij,Xu,Ij,Zs,ID,SID,H,0,D,Ri,Rj,Vi,Vj,Ns,Nu,Pi).
 iknows(start)
 =>
 state_server(S,RC,U,Kj,SKij,Xu,Ij,Zs,ID,SID,H,2,D,Ri,Rj,Vi,Vj,Ns,Nu,Pi).
 iknows(SID)

step step_5 (S,RC,U,Dummy_Kj,Dummy_SKij,Xu,Ij,Zs,ID,SID,H,Dummy_D,Ri,Dummy_Rj,Vi,Dummy_Vj,Dummy_Ns,Dummy_Nu,Dummy_Pi,D) :=
 state_server(S,RC,U,Dummy_Kj,Dummy_SKij,Xu,Ij,Zs,ID,SID,H,2,Dummy_D,Ri,Dummy_Rj,Vi,Dummy_Vj,Dummy_Ns,Dummy_Nu,Dummy_Pi).
 iknows(H)
=[exists D]=>
 state_server(S,RC,U,exp(Ij,Dummy_Pi),apply(H,exp(Dummy_D,Dummy_Nu)),Xu,Ij,Zs,ID,SID,H,4,D,Ri,xor(apply(H,Dummy_Kj),Dummy_Ns),Vi,apply(H,pair(Dummy_Kj,Dummy_Ns)),exp(Dummy_D,Dummy_Kj),xor(apply(H,Dummy_Kj),Ri),exp(apply(H,pair(ID,Xu)),apply(H,exp(Zs,Xu)))).
 iknows(SID)


section properties:

property secrecy_of_user_server_Ii (MGoal,ASGoal) :=
 [] ((secret(MGoal,user_server_Ii,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_user_server_Ij (MGoal,ASGoal) :=
 [] ((secret(MGoal,user_server_Ij,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_ki (MGoal,ASGoal) :=
 [] ((secret(MGoal,ki,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_kj (MGoal,ASGoal) :=
 [] ((secret(MGoal,kj,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property authentication_on_user_server_skij (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,user_server_skij,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,user_server_skij,MGoal))
     /\ ((request(A1Goal,A2Goal,user_server_skij,MGoal,SID1)
           /\ request(A1Goal,A2Goal,user_server_skij,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state secrecy_of_user_server_Ii (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,user_server_Ii,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_user_server_Ij (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,user_server_Ij,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_ki (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,ki,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_kj (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,kj,ASGoal) &
 not(contains(i,ASGoal))

attack_state authentication_on_user_server_skij (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,user_server_skij,MGoal,SID) &
 not(witness(A2Goal,A1Goal,user_server_skij,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_user_server_skij (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,user_server_skij,MGoal,SID1).
 request(A1Goal,A2Goal,user_server_skij,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

