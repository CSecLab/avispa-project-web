role alice (A, S, B: agent,
            Ka : symmetric_key,
            SND_SA, RCV_SA, SND_BA, RCV_BA: channel(dy))
played_by A
def=
    local State : nat,
          Na,Ns : text,
              K : symmetric_key,
              X : {symmetric_key.text.text}_symmetric_key
init State := 0
transition
1. State = 0 /\ RCV_BA(start) =|>
   StateÅf:= 2 /\ NaÅf := new()
               /\ SND_SA(A.B.{NaÅf}_Ka)
2. State = 2 /\ RCV_SA(A.B.{KÅf.Na.NsÅf}_Ka.XÅf) =|>
   StateÅf:= 4 /\ SND_BA(A.B.XÅf.{Na.NsÅf}_KÅf)
3. State = 4 /\ RCV_BA(A.B.{Ns.Na}_K) =|>
   StateÅf:= 6 /\ request(A,B,alice_bob_na,Na)
end role

role server (A, S, B : agent,
              Ka, Kb : symmetric_key,
       SND_AS, RCV_AS: channel(dy))
played_by S
def=
local State : nat,
      Ns,Na : text,
          K : symmetric_key
init State := 1
transition
1. State = 1 /\ RCV_AS(A.B.{NaÅf}_Ka) =|>
   StateÅf:= 3 /\ NsÅf := new() /\ KÅf := new()
               /\ SND_AS(A.B.{KÅf.NaÅf.NsÅf}_Ka.{KÅf.NaÅf.NsÅf}_Kb)
               /\ secret(KÅf,k,{A,B,S})
end role

role bob (A, S, B: agent,
              Kb : symmetric_key,
   SND_AB, RCV_AB: channel(dy))
played_by B
def=
local State : nat,
     Ns, Na : text,
          K : symmetric_key
init State := 5
transition
1. State = 5 /\ RCV_AB(A.B.{KÅf.NaÅf.NsÅf}_Kb.{NaÅf.NsÅf}_KÅf) =|>
   StateÅf:= 7 /\ SND_AB(A.B.{NsÅf.NaÅf}_KÅf)
               /\ witness(B,A,alice_bob_na,NaÅf)
end role

role session(A, S, B : agent,
              Ka, Kb : symmetric_key)
def=
local
  SSA, RSA,
  SBA, RBA,
  SAS, RAS,
  SAB, RAB : channel (dy)
composition
  alice (A, S, B, Ka, SSA, RSA, SBA, RBA)
  /\ server(A, S, B, Ka, Kb, SAS, RAS)
  /\ bob (A, S, B, Kb, SAB, RAB)
end role

role environment()
def=
const a, b, s : agent,
      ka, kb, ki : symmetric_key,
      alice_bob_na, k: protocol_id
intruder_knowledge = {a, b, s, ki}
composition
  session(a,s,b,ka,kb)
  /\ session(a,s,i,ka,ki)
  /\ session(i,s,b,ki,kb)
end role

goal
secrecy_of k
authentication_on alice_bob_na
end goal

environment()