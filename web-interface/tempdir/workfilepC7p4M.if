%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfilepC7p4M

section signature:

state_server: agent * agent * hash_func * hash_func * hash_func * public_key * public_key * text * text * text * text * text * text * nat * public_key * nat -> fact
state_client: agent * agent * hash_func * hash_func * hash_func * public_key * public_key * text * text * text * text * text * pair(text,pair(text,text)) * pair(text,text) * text * nat * apply(hash_func,pair(apply(hash_func,pair(text,pair(text,text))),pair(agent,pair(agent,pair(text,pair(text,text)))))) * apply(hash_func,pair(agent,pair(text,pair(text,apply(hash_func,pair(text,pair(text,text))))))) * apply(hash_func,pair(agent,pair(text,pair(text,apply(hash_func,pair(text,pair(text,text))))))) * public_key * apply(hash_func,pair(text,pair(text,text))) * set(agent) * set(agent) * nat -> fact


section types:

dummy_msg, MGoal, start: message
na_nb1, na_nb2, sec_clientk, sec_serverk: protocol_id
set_93, set_92, set_122, set_121, set_119, set_118: set
ASGoal, Set_43, Set_41, Dummy_Set_43, Dummy_Set_41: set(agent)
M, Dummy_M: apply(hash_func,pair(text,pair(text,text)))
dummy_pk, ka, kb, ki, ks, Ka, Kb, Ks, Dummy_Ka, Dummy_Kb: public_key
ClientK, ServerK, Dummy_ServerK, Dummy_ClientK: apply(hash_func,pair(agent,pair(text,pair(text,apply(hash_func,pair(text,pair(text,text)))))))
h, prf, keygen, H, PRF, KeyGen: hash_func
Finished, Dummy_Finished: apply(hash_func,pair(apply(hash_func,pair(text,pair(text,text))),pair(agent,pair(agent,pair(text,pair(text,text))))))
3, SID, SID2, SID1, State, 5, 2, 1, 0, 10, 6, 4, Dummy_State: nat
UserId, Dummy_UserId: pair(text,text)
MethAuth, Dummy_MethAuth: pair(text,pair(text,text))
A2Goal, A1Goal, a, b, A, B, i: agent
Dummy_Sid, Dummy_Na, dummy_nonce, Na, Nb, Sid, Pa, Xt, PMS, Dummy_Nb, Dummy_PMS, Dummy_Xt, Dummy_Pa: text


section inits:

initial_state init1 := 
 iknows(start).
 iknows(a).
 iknows(b).
 iknows(ka).
 iknows(kb).
 iknows(ks).
 iknows(ki).
 iknows(inv(ki)).
 iknows(crypt(inv(ks),pair(i,ki))).
 iknows(i).
 state_client(a,b,h,prf,keygen,ka,ks,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,pair(dummy_nonce,pair(dummy_nonce,dummy_nonce)),pair(dummy_nonce,dummy_nonce),dummy_nonce,0,dummy_msg,dummy_msg,dummy_msg,dummy_pk,dummy_msg,set_92,set_93,3).
 state_server(b,a,h,prf,keygen,kb,ks,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,1,dummy_pk,4).
 state_client(a,i,h,prf,keygen,ka,ks,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,pair(dummy_nonce,pair(dummy_nonce,dummy_nonce)),pair(dummy_nonce,dummy_nonce),dummy_nonce,0,dummy_msg,dummy_msg,dummy_msg,dummy_pk,dummy_msg,set_118,set_119,6).
 state_server(b,i,h,prf,keygen,kb,ks,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,1,dummy_pk,10)


section rules:

step step_0 (A,B,H,PRF,KeyGen,Ka,Ks,Dummy_Na,Dummy_Sid,Dummy_Pa,Dummy_Xt,PMS,Dummy_MethAuth,Dummy_UserId,Nb,Finished,ClientK,ServerK,Kb,M,Set_41,Set_43,SID,Na,Sid,Pa,Xt,MethAuth,UserId) :=
 state_client(A,B,H,PRF,KeyGen,Ka,Ks,Dummy_Na,Dummy_Sid,Dummy_Pa,Dummy_Xt,PMS,Dummy_MethAuth,Dummy_UserId,Nb,0,Finished,ClientK,ServerK,Kb,M,Set_41,Set_43,SID).
 iknows(start)
=[exists Sid,UserId,MethAuth,Xt,Pa,Na]=>
 state_client(A,B,H,PRF,KeyGen,Ka,Ks,Na,Sid,Pa,Xt,PMS,MethAuth,UserId,Nb,2,Finished,ClientK,ServerK,Kb,M,Set_41,Set_43,SID).
 iknows(pair(A,pair(Na,pair(Sid,pair(Pa,pair(Dummy_Xt,pair(Dummy_MethAuth,Dummy_UserId)))))))

step step_1 (A,B,H,PRF,KeyGen,Ka,Ks,Na,Sid,Pa,Xt,Dummy_PMS,MethAuth,UserId,Dummy_Nb,Dummy_Finished,Dummy_ClientK,Dummy_ServerK,Dummy_Kb,Dummy_M,Set_41,Set_43,SID,PMS,Nb,Kb) :=
 state_client(A,B,H,PRF,KeyGen,Ka,Ks,Na,Sid,Pa,Xt,Dummy_PMS,MethAuth,UserId,Dummy_Nb,2,Dummy_Finished,Dummy_ClientK,Dummy_ServerK,Dummy_Kb,Dummy_M,Set_41,Set_43,SID).
 iknows(pair(Nb,pair(Sid,pair(Pa,crypt(inv(Ks),pair(B,Kb))))))
=[exists PMS]=>
 state_client(A,B,H,PRF,KeyGen,Ka,Ks,Na,Sid,Pa,Xt,PMS,MethAuth,UserId,Nb,3,apply(H,pair(apply(PRF,pair(PMS,pair(Na,Nb))),pair(A,pair(B,pair(Na,pair(Pa,Sid)))))),apply(KeyGen,pair(A,pair(Na,pair(Nb,apply(PRF,pair(PMS,pair(Na,Nb))))))),apply(KeyGen,pair(B,pair(Na,pair(Nb,apply(PRF,pair(PMS,pair(Na,Nb))))))),Kb,apply(PRF,pair(PMS,pair(Na,Nb))),Set_41,Set_43,SID).
 iknows(pair(crypt(Kb,PMS),pair(crypt(inv(Ks),pair(A,Ka)),pair(crypt(inv(Ka),apply(H,pair(Nb,pair(B,PMS)))),scrypt(apply(KeyGen,pair(A,pair(Na,pair(Nb,apply(PRF,pair(PMS,pair(Na,Nb))))))),apply(H,pair(apply(PRF,pair(PMS,pair(Na,Nb))),pair(A,pair(B,pair(Na,pair(Pa,Sid))))))))))).
 witness(A,B,na_nb2,pair(Na,Nb))

step step_2 (A,B,H,PRF,KeyGen,Ka,Ks,Na,Sid,Pa,Xt,PMS,MethAuth,UserId,Nb,Finished,ClientK,ServerK,Kb,M,Dummy_Set_41,Dummy_Set_43,SID) :=
 state_client(A,B,H,PRF,KeyGen,Ka,Ks,Na,Sid,Pa,Xt,PMS,MethAuth,UserId,Nb,3,Finished,ClientK,ServerK,Kb,M,Dummy_Set_41,Dummy_Set_43,SID).
 iknows(scrypt(ServerK,Finished))
 =>
 state_client(A,B,H,PRF,KeyGen,Ka,Ks,Na,Sid,Pa,Xt,PMS,MethAuth,UserId,Nb,5,Finished,ClientK,ServerK,Kb,M,Dummy_Set_41,Dummy_Set_43,SID).
 request(A,B,na_nb1,pair(Na,Nb),SID).
 secret(ClientK,sec_clientk,Dummy_Set_41).
 secret(ServerK,sec_serverk,Dummy_Set_43).
 contains(A,Dummy_Set_41).
 contains(B,Dummy_Set_41).
 contains(A,Dummy_Set_43).
 contains(B,Dummy_Set_43)

step step_3 (B,A,H,PRF,KeyGen,Kb,Ks,Dummy_Na,Dummy_Nb,Dummy_Sid,Dummy_Pa,Dummy_Xt,PMS,Ka,SID,Na,Nb,Sid,Pa,Xt) :=
 state_server(B,A,H,PRF,KeyGen,Kb,Ks,Dummy_Na,Dummy_Nb,Dummy_Sid,Dummy_Pa,Dummy_Xt,PMS,1,Ka,SID).
 iknows(pair(A,pair(Na,pair(Sid,pair(Pa,Xt)))))
=[exists Nb]=>
 state_server(B,A,H,PRF,KeyGen,Kb,Ks,Na,Nb,Sid,Pa,Xt,PMS,3,Ka,SID).
 iknows(pair(Nb,pair(Sid,pair(Pa,pair(Dummy_Xt,crypt(inv(Ks),pair(B,Kb))))))).
 witness(B,A,na_nb1,pair(Na,Nb))

step step_4 (B,A,H,PRF,KeyGen,Kb,Ks,Na,Nb,Sid,Pa,Xt,Dummy_PMS,Dummy_Ka,SID,PMS,Ka) :=
 state_server(B,A,H,PRF,KeyGen,Kb,Ks,Na,Nb,Sid,Pa,Xt,Dummy_PMS,3,Dummy_Ka,SID).
 iknows(pair(crypt(Kb,PMS),pair(crypt(inv(Ks),pair(A,Ka)),pair(crypt(inv(Ka),apply(H,pair(Nb,pair(B,PMS)))),scrypt(apply(KeyGen,pair(A,pair(Na,pair(Nb,apply(PRF,pair(PMS,pair(Na,Nb))))))),apply(H,pair(apply(PRF,pair(PMS,pair(Na,Nb))),pair(A,pair(B,pair(Na,pair(Pa,Sid)))))))))))
 =>
 state_server(B,A,H,PRF,KeyGen,Kb,Ks,Na,Nb,Sid,Pa,Xt,PMS,5,Ka,SID).
 iknows(scrypt(apply(KeyGen,pair(B,pair(Na,pair(Nb,apply(PRF,pair(PMS,pair(Na,Nb))))))),apply(H,pair(apply(PRF,pair(PMS,pair(Na,Nb))),pair(A,pair(B,pair(Na,pair(Pa,Sid)))))))).
 request(B,A,na_nb2,pair(Na,Nb),SID)


section properties:

property secrecy_of_sec_clientk (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_clientk,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_sec_serverk (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_serverk,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property authentication_on_na_nb1 (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,na_nb1,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,na_nb1,MGoal))
     /\ ((request(A1Goal,A2Goal,na_nb1,MGoal,SID1)
           /\ request(A1Goal,A2Goal,na_nb1,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_na_nb2 (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,na_nb2,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,na_nb2,MGoal))
     /\ ((request(A1Goal,A2Goal,na_nb2,MGoal,SID1)
           /\ request(A1Goal,A2Goal,na_nb2,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state secrecy_of_sec_clientk (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_clientk,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_sec_serverk (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_serverk,ASGoal) &
 not(contains(i,ASGoal))

attack_state authentication_on_na_nb1 (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,na_nb1,MGoal,SID) &
 not(witness(A2Goal,A1Goal,na_nb1,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_na_nb1 (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,na_nb1,MGoal,SID1).
 request(A1Goal,A2Goal,na_nb1,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_na_nb2 (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,na_nb2,MGoal,SID) &
 not(witness(A2Goal,A1Goal,na_nb2,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_na_nb2 (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,na_nb2,MGoal,SID1).
 request(A1Goal,A2Goal,na_nb2,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

