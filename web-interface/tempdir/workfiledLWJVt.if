%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfiledLWJVt

section signature:

state_brouter: agent * agent * agent * text * symmetric_key * symmetric_key * public_key * public_key * hash_func * set(text) * nat * text * text * text * text * text * set(agent) * set(agent) * nat -> fact
state_lrouter: agent * agent * agent * text * text * symmetric_key * symmetric_key * public_key * hash_func * nat * text * text * text * text * public_key * scrypt(symmetric_key,pair(text,pair(text,pair(text,text)))) * set(agent) * nat -> fact
state_enddevice: agent * agent * agent * text * text * symmetric_key * symmetric_key * public_key * hash_func * nat * text * text * text * text * set(agent) * nat -> fact


section types:

X, Dummy_X: scrypt(symmetric_key,pair(text,pair(text,pair(text,text))))
set_161, set_160, set_158, set_156, set_151, set_150, set_141, set_131: set
IdList, set_130, set_129: set(text)
Set_79, Set_77, Set_54, Dummy_Set_79, Dummy_Set_77, Dummy_Set_54, Dummy_Set_27, Set_27, ASGoal: set(agent)
start, MGoal: message
State, 9, 8, 7, 5, SID, 4, Dummy_State, 3, SID2, SID1, 2, 1, 0: nat
H, h: hash_func
Kpubb, Kpubl, Dummy_Kpubl, dummy_pk, kpubb, kpubl, ki: public_key
Keb, Klb, dummy_sk, Kel, kel, klb, keb, kil, kib, kei, kli: symmetric_key
Ne, Nl, Nb, IDe, IDl, IDs, Dummy_IDe, Dummy_Nb, Dummy_IDl, Dummy_Nl, Dummy_Ne, dummy_nonce, ide, idl, ids, idi: text
E, L, B, A2Goal, A1Goal, e, l, b, i: agent
nb, prikey, br_lr_nb, lr_br_nl, nl, br_ed_nb, ed_lr_ne, ne, ed_br_ne, lr_ed_nl: protocol_id


section inits:

initial_state init1 := 
 iknows(start).
 iknows(e).
 iknows(l).
 iknows(b).
 iknows(ide).
 iknows(idl).
 iknows(ids).
 iknows(kil).
 iknows(kib).
 iknows(kli).
 iknows(kei).
 iknows(ki).
 iknows(inv(ki)).
 iknows(h).
 iknows(i).
 state_enddevice(e,l,b,ide,ids,kel,keb,kpubb,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_131,3).
 state_lrouter(l,e,b,idl,ids,kel,klb,kpubb,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_pk,scrypt(dummy_sk,pair(dummy_nonce,pair(dummy_nonce,pair(dummy_nonce,dummy_nonce)))),set_141,4).
 state_brouter(l,e,b,ids,keb,klb,kpubb,kpubl,h,set_129,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_150,set_151,5).
 state_enddevice(e,l,b,ide,ids,kel,keb,kpubb,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_156,7).
 state_lrouter(l,e,b,idl,ids,kel,klb,kpubb,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_pk,scrypt(dummy_sk,pair(dummy_nonce,pair(dummy_nonce,pair(dummy_nonce,dummy_nonce)))),set_158,8).
 state_brouter(l,e,b,ids,keb,klb,kpubb,kpubl,h,set_130,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_160,set_161,9).
 contains(ide,set_129).
 contains(idl,set_129).
 contains(ids,set_129).
 contains(ide,set_130).
 contains(idl,set_130).
 contains(ids,set_130)


section rules:

step step_0 (E,L,B,IDe,IDs,Kel,Keb,Kpubb,H,Dummy_Ne,Nl,Nb,IDl,Set_27,SID,Ne) :=
 state_enddevice(E,L,B,IDe,IDs,Kel,Keb,Kpubb,H,0,Dummy_Ne,Nl,Nb,IDl,Set_27,SID).
 iknows(start)
=[exists Ne]=>
 state_enddevice(E,L,B,IDe,IDs,Kel,Keb,Kpubb,H,1,Ne,Nl,Nb,IDl,Set_27,SID).
 iknows(pair(IDe,Ne))

step step_1 (E,L,B,IDe,IDs,Kel,Keb,Kpubb,H,Dummy_Ne,Dummy_Nl,Nb,Dummy_IDl,Dummy_Set_27,SID,Ne,Nl,IDl) :=
 state_enddevice(E,L,B,IDe,IDs,Kel,Keb,Kpubb,H,1,Dummy_Ne,Dummy_Nl,Nb,Dummy_IDl,Dummy_Set_27,SID).
 iknows(pair(IDl,Nl))
=[exists Ne]=>
 state_enddevice(E,L,B,IDe,IDs,Kel,Keb,Kpubb,H,2,Ne,Nl,Nb,IDl,Dummy_Set_27,SID).
 iknows(pair(scrypt(Keb,pair(IDe,pair(IDl,pair(IDs,Ne)))),pair(apply(h,pair(scrypt(Keb,pair(IDe,pair(IDl,pair(IDs,Ne)))),pair(Kel,pair(IDe,Ne)))),pair(IDe,Ne)))).
 secret(Ne,ne,Dummy_Set_27).
 witness(E,L,ed_lr_ne,Ne).
 contains(E,Dummy_Set_27).
 contains(L,Dummy_Set_27).
 contains(B,Dummy_Set_27)

step step_2 (E,L,B,IDe,IDs,Kel,Keb,Kpubb,H,Ne,Nl,Dummy_Nb,IDl,Set_27,SID,Nb) :=
 state_enddevice(E,L,B,IDe,IDs,Kel,Keb,Kpubb,H,2,Ne,Nl,Dummy_Nb,IDl,Set_27,SID).
 iknows(scrypt(Keb,pair(IDl,Nb)))
 =>
 state_enddevice(E,L,B,IDe,IDs,Kel,Keb,Kpubb,H,3,Ne,Nl,Nb,IDl,Set_27,SID).
 request(E,B,br_ed_nb,Nb,SID)

step step_3 (L,E,B,IDl,IDs,Kel,Klb,Kpubb,H,Ne,Dummy_Nl,Nb,Dummy_IDe,Kpubl,X,Set_54,SID,Nl,IDe) :=
 state_lrouter(L,E,B,IDl,IDs,Kel,Klb,Kpubb,H,0,Ne,Dummy_Nl,Nb,Dummy_IDe,Kpubl,X,Set_54,SID).
 iknows(pair(IDe,Ne))
=[exists Nl]=>
 state_lrouter(L,E,B,IDl,IDs,Kel,Klb,Kpubb,H,1,Ne,Nl,Nb,IDe,Kpubl,X,Set_54,SID).
 iknows(pair(IDl,Nl))

step step_4 (L,E,B,IDl,IDs,Kel,Klb,Kpubb,H,Dummy_Ne,Dummy_Nl,Nb,Dummy_IDe,Kpubl,Dummy_X,Dummy_Set_54,SID,Ne,Nl,IDe,X) :=
 state_lrouter(L,E,B,IDl,IDs,Kel,Klb,Kpubb,H,1,Dummy_Ne,Dummy_Nl,Nb,Dummy_IDe,Kpubl,Dummy_X,Dummy_Set_54,SID).
 iknows(pair(X,pair(apply(h,pair(X,pair(Kel,pair(IDe,Ne)))),pair(IDe,Ne))))
=[exists Nl]=>
 state_lrouter(L,E,B,IDl,IDs,Kel,Klb,Kpubb,H,2,Ne,Nl,Nb,IDe,Kpubl,X,Dummy_Set_54,SID).
 iknows(pair(X,pair(apply(h,pair(X,pair(Klb,pair(IDl,Nl)))),pair(IDl,Nl)))).
 secret(Nl,nl,Dummy_Set_54).
 witness(L,B,lr_br_nl,Nl).
 contains(E,Dummy_Set_54).
 contains(B,Dummy_Set_54)

step step_5 (L,E,B,IDl,IDs,Kel,Klb,Kpubb,H,Ne,Nl,Dummy_Nb,IDe,Dummy_Kpubl,X,Set_54,SID,Nb,Kpubl) :=
 state_lrouter(L,E,B,IDl,IDs,Kel,Klb,Kpubb,H,2,Ne,Nl,Dummy_Nb,IDe,Dummy_Kpubl,X,Set_54,SID).
 iknows(pair(Nb,pair(crypt(inv(Kpubb),pair(IDe,IDs)),scrypt(Klb,pair(Kpubl,inv(Kpubl))))))
 =>
 state_lrouter(L,E,B,IDl,IDs,Kel,Klb,Kpubb,H,3,Ne,Nl,Nb,IDe,Kpubl,X,Set_54,SID).
 request(L,E,ed_lr_ne,Ne,SID).
 request(L,B,br_lr_nb,Nb,SID)

step step_6 (L,E,B,IDs,Keb,Klb,Kpubb,Kpubl,H,IdList,Dummy_Ne,Dummy_Nl,Dummy_Nb,Dummy_IDe,Dummy_IDl,Dummy_Set_77,Dummy_Set_79,SID,Ne,Nl,Nb,IDe,IDl) :=
 state_brouter(L,E,B,IDs,Keb,Klb,Kpubb,Kpubl,H,IdList,0,Dummy_Ne,Dummy_Nl,Dummy_Nb,Dummy_IDe,Dummy_IDl,Dummy_Set_77,Dummy_Set_79,SID).
 iknows(pair(scrypt(Keb,pair(IDe,pair(IDl,pair(IDs,Ne)))),pair(apply(h,pair(scrypt(Keb,pair(IDe,pair(IDl,pair(IDs,Ne)))),pair(Klb,pair(IDl,Nl)))),pair(IDl,Nl)))).
 contains(IDe,IdList).
 contains(IDl,IdList)
=[exists Nb]=>
 state_brouter(L,E,B,IDs,Keb,Klb,Kpubb,Kpubl,H,IdList,1,Ne,Nl,Nb,IDe,IDl,Dummy_Set_77,Dummy_Set_79,SID).
 iknows(pair(Nb,pair(crypt(inv(Kpubb),pair(IDe,IDs)),scrypt(Klb,pair(Kpubl,inv(Kpubl)))))).
 secret(inv(Kpubl),prikey,Dummy_Set_77).
 iknows(scrypt(Keb,pair(IDl,Nb))).
 secret(Nb,nb,Dummy_Set_79).
 witness(B,L,br_lr_nb,Nb).
 witness(B,E,br_ed_nb,Nb).
 request(B,L,lr_br_nl,Nl,SID).
 contains(L,Dummy_Set_77).
 contains(B,Dummy_Set_77).
 contains(E,Dummy_Set_79).
 contains(L,Dummy_Set_79).
 contains(B,Dummy_Set_79).
 contains(IDe,IdList).
 contains(IDl,IdList)


section properties:

property secrecy_of_ne (MGoal,ASGoal) :=
 [] ((secret(MGoal,ne,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_nl (MGoal,ASGoal) :=
 [] ((secret(MGoal,nl,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_nb (MGoal,ASGoal) :=
 [] ((secret(MGoal,nb,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_prikey (MGoal,ASGoal) :=
 [] ((secret(MGoal,prikey,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property authentication_on_ed_lr_ne (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,ed_lr_ne,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,ed_lr_ne,MGoal))
     /\ ((request(A1Goal,A2Goal,ed_lr_ne,MGoal,SID1)
           /\ request(A1Goal,A2Goal,ed_lr_ne,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_lr_br_nl (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,lr_br_nl,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,lr_br_nl,MGoal))
     /\ ((request(A1Goal,A2Goal,lr_br_nl,MGoal,SID1)
           /\ request(A1Goal,A2Goal,lr_br_nl,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_br_lr_nb (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,br_lr_nb,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,br_lr_nb,MGoal))
     /\ ((request(A1Goal,A2Goal,br_lr_nb,MGoal,SID1)
           /\ request(A1Goal,A2Goal,br_lr_nb,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_br_ed_nb (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,br_ed_nb,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,br_ed_nb,MGoal))
     /\ ((request(A1Goal,A2Goal,br_ed_nb,MGoal,SID1)
           /\ request(A1Goal,A2Goal,br_ed_nb,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state secrecy_of_ne (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,ne,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_nl (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,nl,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_nb (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,nb,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_prikey (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,prikey,ASGoal) &
 not(contains(i,ASGoal))

attack_state authentication_on_ed_lr_ne (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,ed_lr_ne,MGoal,SID) &
 not(witness(A2Goal,A1Goal,ed_lr_ne,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_ed_lr_ne (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,ed_lr_ne,MGoal,SID1).
 request(A1Goal,A2Goal,ed_lr_ne,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_lr_br_nl (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,lr_br_nl,MGoal,SID) &
 not(witness(A2Goal,A1Goal,lr_br_nl,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_lr_br_nl (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,lr_br_nl,MGoal,SID1).
 request(A1Goal,A2Goal,lr_br_nl,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_br_lr_nb (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,br_lr_nb,MGoal,SID) &
 not(witness(A2Goal,A1Goal,br_lr_nb,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_br_lr_nb (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,br_lr_nb,MGoal,SID1).
 request(A1Goal,A2Goal,br_lr_nb,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_br_ed_nb (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,br_ed_nb,MGoal,SID) &
 not(witness(A2Goal,A1Goal,br_ed_nb,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_br_ed_nb (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,br_ed_nb,MGoal,SID1).
 request(A1Goal,A2Goal,br_ed_nb,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

