role server(S, R, T1, Ti: agent,
S1, Si, SR: symmetric_key,
SND,RCV: channel(dy))
played_by S def=
local State : nat,
r1, r2, t, ID1, TS1, ID2, TS2: text,
init State := 0
transition
0.  State   = 0 /\ SND(t')
1.  State' := 1 /\ RCV({t'. r1'. r2'. {{ID1, r1', TS1'}_S1. {ID2, r2', TS2'}_Si}_S1}_SR)
=|> State' := 2
                /\ witness(tag1, server, tag1_server_ID1, ID1)
				/\ witness(tag1, server, tag1_server_TS1, TS1')
				/\ witness(tagi, server, tagi_server_ID2, ID2)
				/\ witness(tagi, server, tagi_server_TS2, TS2')
                /\ secret (ID1, id3, {T1, S})
				/\ secret (TS1, id4, {T1, S})
				/\ secret (ID2, id5, {Ti, S})
				/\ secret (TS2, id6, {Ti, S})

end role
%%%%%%%%%%%%%%%%%%%%%%%%

role reader(S, R, T1, Ti: agent,
SR : symmetric_key,
SND,RCV: channel(dy))
played_by R def=
local State : nat,
r1, r2, t : text,
M1 : {text, text, text}_symmetric_key
M2 : {text, text, text}_symmetric_key
MG1:{text, text, text, text}_symmetric_key
MG2: {text, text, text, text}_symmetric_key
P  : {text, text}_symmetric_key
init State := 0
transition
0. State   = 0 /\ RCV(t')
1. State' := 1 /\ SND(t')
2. State' := 2 /\ RCV(r1'. M1'. MG1')
3. State' := 3 /\ SND(r1'. M1'. MG1'. t')
4. State' := 4 /\ RCV(r2'. M2'. MG2')
5. State' := 5 /\ SND(r2'. M2'. MG2')
6. State' := 6 /\ RCV(P')
7. State' := 7 /\ SND({t'. r1'. r2'. P'}_SR)

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


role tag1(S, R, T1, Ti: agent,
S1, SG: symmetric_key,
SND,RCV: channel(dy))
played_by T1 def=
local State : nat,
r1, r2, t, ID1, TS1, IDG, TSG: text,
M2 : {text,text,text}_symmetric_key
init State := 0
transition
0.  State = 0   /\ RCV(t')
=|> State' := 1 /\ r1' := new()
                /\ SND(r1', {ID1, r1', TS1'}_S1 . {IDG, r1', TSG', t'}_SG)
				/\ request(tag1, tagi, tag1_tagi_IDG, IDG)
                /\ request(tag1, tagi, tag1_tagi_TSG, TSG')
1. State' := 2  /\ RCV(r2'. M2'. {IDG, r2', TSG', {ID1, r1', TS1'}_S1)}_SG)
=|> State' := 3
                /\ witness(tagi, tag1, tagi_tag1_IDG, IDG)
                /\ witness(tagi, tag1, tagi_tag1_TSG, TSG')
                /\ secret(TSG',id, {T1, Ti})
                /\ secret (IDG, id2, {T1, Ti})
2. State' :=4   /\ SND({{ID1, r1', TS1'}_S1. M2'}_S1)
                /\ request(tag1, server, tag1_server_ID1, ID1)
				/\ request(tag1, server, tag1_server_TS1, TS1')
=|> State' := 5
                
                /\ TS1':=new()
                /\ TSG' := new()
end role
%%%%%%%%%%%%%%%%%%%%%%%%%

role tagi(S, R, T1, Ti: agent,
Si, SG: symmetric_key,
SND,RCV: channel(dy))
played_by T1 def=
local State : nat,
r1, r2, t, ID2, TS2, IDG, TSG: text,
M1 : {text,text,text}_symmetric_key
init State := 0
transition
0. State' := 0  /\ RCV(r1'. M1'. {IDG, r1', TSG', t'}_SG. t')
=|> State' := 1

                /\ witness(tag1, tagi, tag1_tagi_IDG, IDG)
                /\ witness(tag1, tagi, tag1_tagi_TSG, TSG')
				/\ secret(TSG',id, {T1, Ti})
                /\ secret (IDG, id2, {T1, Ti})
1. State' := 2  /\  r2' := new()
                /\SND(r2', {ID2, r2', TS2'}_Si . {IDG, r2', TSG', M1'}_SG)
	
=|> State' := 3
                /\ request(tagi, tag1, tagi_tag1_IDG, IDG)
                /\ request(tagi, tag1, tagi_tag1_TSG, TSG')
                /\ request(tagi, server, tagi_server_ID2, ID2)
				/\ request(tagi, server, tagi_server_TS2, TS2')

                /\ TS2':=new()
                /\ TSG' := new()
end role
%%%%%%%%%%%%%%%%%%%%%%%%%

role session(S, R, T1, Ti: agent,
 S1, Si, SR, SG: symmetric_key)
def=
local SND, RCV: channel (dy)
composition
   server (S, R, T1, Ti, S1, Si, SR,  SND, RCV)
/\ reader (S, R, T1, Ti, SR, SND, RCV)
/\ tag1(S, R, T1, Ti, S1, SG, SND, RCV)
/\ tagi(S, R, T1, Ti, S2, SG, SND, RCV)

end role
%%%%%%%%%%%%%%%%%%%%%%%%%

role environment( ) def=
const
id, id2,id3, id4, id5, id6, tag1_server_ID1, tag1_server_TS1, tagi_server_ID2, tagi_server_TS2, tag1_tagi_IDG, tag1_tagi_TSG, tagi_tag1_IDG, tagi_tag1_TSG: protocol_id,
s1, si, sR, sG, sint: symmetric_key,
s, r, t1, ti: agent
intruder_Knowledge = {s,r,t1, ti, sint}
composition
   session((s, r, t1, ti, s1, si, sR)
/\ session(s, r, t1, ti, i,  sint, sG)
/\ session(s, r, t1, ti, i,  sint, sG)
end role
%%%%%%%%%%%%%%%%%%%%%%%%%

goal
secrecy_of id, id2, id3, id4, id5, id6
authentication_on tag1_server_ID1
authentication_on tag1_server_TS1
authentication_on tagi_server_ID2
authentication_on tagi_server_TS2
authentication_on tag1_tagi_IDG
authentication_on tag1_tagi_TSG
authentication_on tagi_tag1_IDG
authentication_on tagi_tag1_TSG
end goal
%%%%%%%%%%%%%%%%%%%%%%%%%
environment()