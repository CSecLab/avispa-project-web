%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%% User

role user(Ui,BS,Sj : agent,
		MKsj : symmetric_key,
		MKui : symmetric_key,
		H : hash_func,
		Snd, Rcv : channel(dy))
	  
 played_by Ui
 def=
  local State : nat,
  
  IDi, RPWi, APMi, RMui, Ni, PWi, UKi : text,
  Rui, Kui, SNj, Si, Zi, Kj, Kbs, GIdi, RNuj :text,
  T1, T2 :text
  
  const sensornode_basestation, basestation_user, user_basestation, user_sensornode,
  subs1, subs2, subs3, subs4, subs5, subs6 : protocol_id

  init State := 0
  transition

1. State = 0 /\ Rcv(start) =|>

%registrationPhase
State' := 1 
		/\ w' := H(IDi.PWi.Ru).
		/\ Snd(Ui.BS.{IDi.w'}_MKui)

2. State = 1
		/\ Rcv(BS.Ui.{ri'.H}_MKui) =|>

%loginPhase
State' := 2
		/\secret({Kj},subs1,{SN,BS})
		/\secret({MKsj},subs2,{SN,BS})
		/\secret({RMui},subs3,{U,BS})
		/\secret({RMusi},sub4,{U,SN})
		/\secret({APMi,GIdx},subs5,{U,BS})
		/\secret({PWi,Pu},subs6,U)
		/\ RNui' := new()
		/\ w' := H(IDi.PWi.Ru ),
		/\ M1' := xor(w',RNui')
		/\ T1' := new()
		/\ M2' := H(ri.RNui.GIDx.T1')
		/\ Kui' := xor(Ji,Ru,T1')
		/\ M3' := {GIDx.M1'.M2'.RNui}_Kui'
		/\ Snd(Ui.BS.IDi.M3'.T1')

3. State = 2
		/\ Rcv(BS.Ui.IDi.M4'.T2') =|>

%groupJoiningPhase
State' := 3
		/\ KUGi' := xor(Ji,Ru,Tg1)
		/\ Tg1' := new()
		/\ Mx1' := H(KUGi'.IDi.GIDx.Tg1'.HGi)
		/\ Snd(Ui.BS.IDi.Mx1'.Tg1'.GIDx.HGi)

4. State = 3
		/\ Rcv(BS.Ui.IDi.Mx2'.Tg2') =|>

%authenticationPhase
State' := 4
		/\ RNUsi' := new()
		/\ M5' := xor(M1,RNUsi')
		/\ M6' := H(M5'.IDsj.RNUsi' )
		/\ M7' :=  {M5'.M6'.T1.T2.APMi.RNUsi'.T3}_keyij
		/\ Snd(Ui.Sj.IDi.IDsj.M7'.Tokenij.T3)

5. State = 4
		/\ Rcv(Sj.Ui.IDi.IDsj.M8') =|>

end role
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%% BS

role basestation(BS,SN,U :agent,
				MKsj : symmetric_key,
				MKui : symmetric_key,
				H : hash_func,
				Snd, Rcv :channel(dy))
played_by BS
def=

	local State : nat,
	
	RPWi, RMui, Rui, Kbs, Kui, Si, Zi, T2, APMi, GIdi, Ni, PWi, UKi : text,
	SNj, IDi, Kj, Tj, T1, M3 : text
	
	const sensornode_basestation, sensornode_user, user_basestation, user_sensornode,
	subs1, subs2, subs3, subs4, subs5, subs6 : protocol_id

init State := 0
transition

%postDeploymentPhase
1. State = 0
		/\ Rcv(SNj.BS.IDsj.Tj'.{Kj'.IDsj.Tj'}_MKsj) =|>

State' := 1


%registrationPhase
2. State = 1
		/\ Rcv(Ui.BS.{IDi.w'}_MKui) =|>

State' := 2
		/\secret({Kj},subs1,{SN,BS})
		/\secret({MKsj},subs2,{SN,BS})
		/\secret({RMui},subs3,{U,BS})
		/\secret({RMusi},sub4,{U,SN})
		/\secret({APMi,GIdx},subs5,{U,BS})
		/\secret({PWi,Pu},subs6,U)
		/\ ri' := xor(w,H(IDi.S))
		/\ Snd(BS.Ui.{ri'.H}_MKui)

%loginPhase
3. State = 2
		/\ Rcv(Ui.BS.IDi.M3'.T1') =|>

State' := 3
		/\ Keyij' := H(IDi.IDsj.MKsj.Kj)
		/\ T2' := new()
		/\ Tokenij' := H(IDi.IDsj.T1'.T2'.APMi.MKsj.M1).
		/\ M4' := {IDi.IDsj.Keyij'.Tokenij'.APMi.T1'.T2' }_Kui
		/\ Snd(BS.Ui.IDi.M4'.T2')

%groupJoiningPhase
4. State = 3
		/\ Rcv(Ui.BS.IDi.Mx1'.Tg1'.GIDx.HGi) =|>

State' := 4
		/\ HGi' := xor(HGi,H(GIDx.H(IDi.S)))
		/\ Tg2' := new()
		/\ Mx2' := H(KUGi.HGi'.Tg1'.Tg2')
		/\ Snd(BS.Ui.IDi.Mx2'.Tg2')

end role	

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%% SN

role sensornode(Sj,BS,Ui : agent,
				MKsj : symmetric_key,
				H : hash_func,
				Snd,Rcv : channel(dy))

played_by Sj	
def=

local State : nat,

SNj, Tj, Kj, Kbs :text,
IDi, APMi, GIdi, RPWi, RMui, T1,T2,Si,Zi,Rui,Kui,Ni,PWi,UKi : text		

const sensornode_basestation, user_basestation, sensornode_user, user_sensornode,
subs1, subs2, subs3, subs4, subs5, subs6 : protocol_id

init State := 0
 transition

1. State = 0 /\ Rcv(start) =|>

%postDeploymentPhase
State' := 1
		/\secret({Kj},subs1,{SN,BS})
		/\secret({MKsj},subs2,{SN,BS})
		/\secret({RMui},subs3,{U,BS})
		/\secret({RMusi},sub4,{U,SN})
		/\secret({APMi,GIdx},subs5,{U,BS})
		/\secret({PWi,Pu},subs6,U)
		/\ Tj' := new()
		/\ Kj' := new()
		/\ Snd(SNj.BS.IDsj.Tj'.{Kj'.IDsj.Tj'}_MKsj)

%authenticationPhase
2. State = 1
		/\ Rcv(Ui.Sj.IDi.IDsj.M7'.Tokenij.T3) =|>

State' := 2
		/\ SKuisj' := H(IDi.IDsj.RNUsi.M1)
		/\ M8' := {RNUsi}_SKuisj'
		/\ Snd(Sj.Ui.IDi.IDsj.M8')

end role	


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%% session

role session(SN,BS,U :agent,
	%H js hash function
	MKsj : symmetric_key,
	MKui : symmetric_key,
	H : hash_func )

def= 
local US,UR,SS,SR,VS,VR :channel(dy)
composition
    sensornode(SN,BS,U,MKsj,H,US,UR)
/\  basestation(BS,U,SN,MKsj,MKui,H,SS,SR)
/\  user(U,BS,SN,MKsj,MKui,H,VS,VR)
end role

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%% environment

role environment()
def=
const sn, bs, u : agent,
	mksj : symmetric_key,
	mkui : symmetric_key,
	h : hash_func,
	
	rpwi,rui,si,zi,kui,kj,rnui,tj,t1,t2,apmi,gidi,kbs,snj,ui : text,
	
	sensornode_basestation, sensornode_user, user_basestation, user_sensornode, 
	subs1, subs2, subs3, subs4, subs5, subs6 : protocol_id 
	
intruder_knowledge = {u,bs,sn,h,ui,snj,ui}

composition
session(sn, u, bs, mksj, mkui, h)/\	
session(u, sn, bs, mksj, mkui, h)/\	
session(u, sn, bs, mksj, mkui, h)
end role

goal
secrecy_of subs1
secrecy_of subs2
secrecy_of subs3
secrecy_of subs4
secrecy_of subs5
secrecy_of subs6	
			
authentication_on sensornode_basestation
authentication_on user_basestation
authentication_on user_sensornode
authentication_on sensornode_user	
end goal		
			
environment()			
