%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfilebhy1HQ

section signature:

state_keygeneratingcenter: agent * agent * agent * agent * hash_func * nat * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * nat -> fact
state_correspondingnode: agent * agent * agent * agent * public_key * public_key * hash_func * nat * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * nat -> fact
state_homeagent: agent * agent * agent * agent * public_key * hash_func * nat * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * nat -> fact
state_mobilenode: agent * agent * agent * agent * public_key * public_key * hash_func * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * nat * nat -> fact


section types:

mn_cn_n0, cn_mn_n1: protocol_id
MGoal, start: message
Hashv, has: hash_func
Kcn, Kmn, kmn, kcn, ki: public_key
State, 11, 9, 8, 6, SID, 5, 4, 3, Dummy_State, 1, SID2, SID1, 10, 0, 7, 2: nat
MN, CN, HA, KGC, A2Goal, A1Goal, mn, cn, ha, kgc, i: agent
KGCA, Blt, N0, Msglen, Type, DcnReq, SIDCN, BU, BA, K1, N1, N2, Dummy_BA, Dummy_N1, Dummy_BU, Dummy_N0, CoA, HAA, HoA, dummy_nonce, OldCoA, CNA, RPP, Dcn: text


section inits:

initial_state init1 := 
 iknows(start).
 iknows(mn).
 iknows(ha).
 iknows(cn).
 iknows(kgc).
 iknows(kcn).
 iknows(kmn).
 iknows(ki).
 iknows(i).
 state_mobilenode(mn,cn,ha,kgc,kmn,kcn,has,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,0,3).
 state_homeagent(kgc,mn,cn,ha,kmn,has,1,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,4).
 state_correspondingnode(cn,mn,ha,kgc,kcn,kmn,has,2,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,5).
 state_keygeneratingcenter(kgc,mn,cn,ha,has,4,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,6).
 state_mobilenode(mn,i,ha,kgc,kmn,ki,has,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,0,8).
 state_homeagent(kgc,mn,i,ha,kmn,has,1,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,9).
 state_keygeneratingcenter(kgc,mn,i,ha,has,4,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,11)


section rules:

step step_0 (MN,KGC,CN,HA,Kcn,Kmn,Hashv,CoA,HAA,HoA,OldCoA,CNA,RPP,Dcn,KGCA,Blt,Dummy_N0,BA,BU,Msglen,Type,DcnReq,SIDCN,K1,N1,N2,SID,N0) :=
 state_mobilenode(MN,KGC,CN,HA,Kcn,Kmn,Hashv,CoA,HAA,HoA,OldCoA,CNA,RPP,Dcn,KGCA,Blt,Dummy_N0,BA,BU,Msglen,Type,DcnReq,SIDCN,K1,N1,N2,0,SID).
 iknows(start)
=[exists N0]=>
 state_mobilenode(MN,KGC,CN,HA,Kcn,Kmn,Hashv,CoA,HAA,HoA,OldCoA,CNA,RPP,Dcn,KGCA,Blt,N0,BA,BU,Msglen,Type,DcnReq,SIDCN,K1,N1,N2,6,SID).
 iknows(pair(CoA,pair(HAA,pair(HoA,pair(OldCoA,pair(CNA,pair(crypt(Kcn,N0),KGCA))))))).
 iknows(pair(CoA,pair(CNA,pair(OldCoA,pair(crypt(Kcn,N0),KGCA)))))

step step_1 (MN,KGC,CN,HA,Kcn,Kmn,Hashv,CoA,HAA,HoA,OldCoA,CNA,RPP,Dcn,KGCA,Blt,N0,BA,Dummy_BU,Msglen,Type,DcnReq,SIDCN,K1,Dummy_N1,N2,SID,BU,N1) :=
 state_mobilenode(MN,KGC,CN,HA,Kcn,Kmn,Hashv,CoA,HAA,HoA,OldCoA,CNA,RPP,Dcn,KGCA,Blt,N0,BA,Dummy_BU,Msglen,Type,DcnReq,SIDCN,K1,Dummy_N1,N2,6,SID).
 iknows(pair(CNA,pair(CoA,crypt(Kmn,pair(N0,N1)))))
=[exists BU]=>
 state_mobilenode(MN,KGC,CN,HA,Kcn,Kmn,Hashv,CoA,HAA,HoA,OldCoA,CNA,RPP,Dcn,KGCA,Blt,N0,BA,BU,Msglen,Type,DcnReq,SIDCN,K1,N1,N2,8,SID).
 iknows(pair(CoA,pair(CNA,pair(crypt(Kcn,N1),Dummy_BU)))).
 witness(MN,CN,cn_mn_n1,N1)

step step_2 (MN,KGC,CN,HA,Kcn,Kmn,Hashv,CoA,HAA,HoA,OldCoA,CNA,RPP,Dcn,KGCA,Blt,N0,Dummy_BA,BU,Msglen,Type,DcnReq,SIDCN,K1,N1,N2,SID,BA) :=
 state_mobilenode(MN,KGC,CN,HA,Kcn,Kmn,Hashv,CoA,HAA,HoA,OldCoA,CNA,RPP,Dcn,KGCA,Blt,N0,Dummy_BA,BU,Msglen,Type,DcnReq,SIDCN,K1,N1,N2,8,SID).
 iknows(pair(CNA,pair(CoA,BA)))
 =>
 state_mobilenode(MN,KGC,CN,HA,Kcn,Kmn,Hashv,CoA,HAA,HoA,OldCoA,CNA,RPP,Dcn,KGCA,Blt,N0,BA,BU,Msglen,Type,DcnReq,SIDCN,K1,N1,N2,10,SID).
 iknows(pair(CNA,CoA)).
 request(MN,CN,mn_cn_n0,N0,SID)

step step_3 (HA,MN,KGC,CN,Kcn,Hashv,CoA,HAA,HoA,OldCoA,CNA,RPP,KGCA,Blt,Dummy_N0,Msglen,Type,Dcn,DcnReq,SIDCN,K1,BU,BA,N1,N2,SID,N0) :=
 state_homeagent(HA,MN,KGC,CN,Kcn,Hashv,1,CoA,HAA,HoA,OldCoA,CNA,RPP,KGCA,Blt,Dummy_N0,Msglen,Type,Dcn,DcnReq,SIDCN,K1,BU,BA,N1,N2,SID).
 iknows(pair(CoA,pair(HAA,pair(HoA,pair(OldCoA,pair(CNA,pair(crypt(Kcn,N0),KGCA)))))))
 =>
 state_homeagent(HA,MN,KGC,CN,Kcn,Hashv,3,CoA,HAA,HoA,OldCoA,CNA,RPP,KGCA,Blt,N0,Msglen,Type,Dcn,DcnReq,SIDCN,K1,BU,BA,N1,N2,SID).
 iknows(pair(HoA,pair(CNA,pair(OldCoA,pair(crypt(Kcn,N0),KGCA)))))

step step_4 (CN,MN,HA,KGC,Kcn,Kmn,Hashv,CoA,HAA,HoA,OldCoA,CNA,Dcn,RPP,KGCA,Blt,Dummy_N0,Msglen,Type,DcnReq,SIDCN,BU,BA,K1,N1,N2,SID,N0) :=
 state_correspondingnode(CN,MN,HA,KGC,Kcn,Kmn,Hashv,2,CoA,HAA,HoA,OldCoA,CNA,Dcn,RPP,KGCA,Blt,Dummy_N0,Msglen,Type,DcnReq,SIDCN,BU,BA,K1,N1,N2,SID).
 iknows(pair(HoA,pair(CNA,pair(OldCoA,pair(crypt(Kcn,N0),KGCA)))))
 =>
 state_correspondingnode(CN,MN,HA,KGC,Kcn,Kmn,Hashv,3,CoA,HAA,HoA,OldCoA,CNA,Dcn,RPP,KGCA,Blt,N0,Msglen,Type,DcnReq,SIDCN,BU,BA,K1,N1,N2,SID)

step step_5 (CN,MN,HA,KGC,Kcn,Kmn,Hashv,CoA,HAA,HoA,OldCoA,CNA,Dcn,RPP,KGCA,Blt,Dummy_N0,Msglen,Type,DcnReq,SIDCN,BU,BA,K1,N1,N2,SID,N0) :=
 state_correspondingnode(CN,MN,HA,KGC,Kcn,Kmn,Hashv,3,CoA,HAA,HoA,OldCoA,CNA,Dcn,RPP,KGCA,Blt,Dummy_N0,Msglen,Type,DcnReq,SIDCN,BU,BA,K1,N1,N2,SID).
 iknows(pair(CoA,pair(CNA,pair(OldCoA,pair(crypt(Kcn,N0),KGCA)))))
 =>
 state_correspondingnode(CN,MN,HA,KGC,Kcn,Kmn,Hashv,5,CoA,HAA,HoA,OldCoA,CNA,Dcn,RPP,KGCA,Blt,N0,Msglen,Type,DcnReq,SIDCN,BU,BA,K1,N1,N2,SID).
 iknows(pair(CNA,pair(KGCA,DcnReq))).
 witness(CN,MN,mn_cn_n0,N0)

step step_6 (CN,MN,HA,KGC,Kcn,Kmn,Hashv,CoA,HAA,HoA,OldCoA,CNA,Dcn,RPP,KGCA,Blt,N0,Msglen,Type,DcnReq,SIDCN,BU,BA,K1,Dummy_N1,N2,SID,N1) :=
 state_correspondingnode(CN,MN,HA,KGC,Kcn,Kmn,Hashv,5,CoA,HAA,HoA,OldCoA,CNA,Dcn,RPP,KGCA,Blt,N0,Msglen,Type,DcnReq,SIDCN,BU,BA,K1,Dummy_N1,N2,SID).
 iknows(pair(KGCA,pair(CNA,Dcn)))
=[exists N1]=>
 state_correspondingnode(CN,MN,HA,KGC,Kcn,Kmn,Hashv,7,CoA,HAA,HoA,OldCoA,CNA,Dcn,RPP,KGCA,Blt,N0,Msglen,Type,DcnReq,SIDCN,BU,BA,K1,N1,N2,SID).
 iknows(pair(CNA,pair(CoA,crypt(Kmn,pair(N0,N1)))))

step step_7 (CN,MN,HA,KGC,Kcn,Kmn,Hashv,CoA,HAA,HoA,OldCoA,CNA,Dcn,RPP,KGCA,Blt,N0,Msglen,Type,DcnReq,SIDCN,Dummy_BU,Dummy_BA,K1,N1,N2,SID,BU,BA) :=
 state_correspondingnode(CN,MN,HA,KGC,Kcn,Kmn,Hashv,7,CoA,HAA,HoA,OldCoA,CNA,Dcn,RPP,KGCA,Blt,N0,Msglen,Type,DcnReq,SIDCN,Dummy_BU,Dummy_BA,K1,N1,N2,SID).
 iknows(pair(CoA,pair(CNA,pair(crypt(Kcn,N1),BU))))
=[exists BA]=>
 state_correspondingnode(CN,MN,HA,KGC,Kcn,Kmn,Hashv,9,CoA,HAA,HoA,OldCoA,CNA,Dcn,RPP,KGCA,Blt,N0,Msglen,Type,DcnReq,SIDCN,BU,BA,K1,N1,N2,SID).
 iknows(pair(CNA,pair(CoA,Dummy_BA))).
 request(CN,MN,cn_mn_n1,N1,SID)

step step_8 (KGC,MN,CN,HA,Hashv,CoA,HAA,HoA,OldCoA,CNA,RPP,KGCA,Blt,N0,Msglen,Type,Dcn,DcnReq,SIDCN,K1,N1,BU,BA,N2,SID) :=
 state_keygeneratingcenter(KGC,MN,CN,HA,Hashv,4,CoA,HAA,HoA,OldCoA,CNA,RPP,KGCA,Blt,N0,Msglen,Type,Dcn,DcnReq,SIDCN,K1,N1,BU,BA,N2,SID).
 iknows(pair(CNA,pair(KGCA,DcnReq)))
 =>
 state_keygeneratingcenter(KGC,MN,CN,HA,Hashv,6,CoA,HAA,HoA,OldCoA,CNA,RPP,KGCA,Blt,N0,Msglen,Type,Dcn,DcnReq,SIDCN,K1,N1,BU,BA,N2,SID).
 iknows(pair(KGCA,pair(CNA,Dcn)))


section properties:

property authentication_on_mn_cn_n0 (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,mn_cn_n0,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,mn_cn_n0,MGoal))
     /\ ((request(A1Goal,A2Goal,mn_cn_n0,MGoal,SID1)
           /\ request(A1Goal,A2Goal,mn_cn_n0,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_cn_mn_n1 (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,cn_mn_n1,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,cn_mn_n1,MGoal))
     /\ ((request(A1Goal,A2Goal,cn_mn_n1,MGoal,SID1)
           /\ request(A1Goal,A2Goal,cn_mn_n1,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state authentication_on_mn_cn_n0 (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,mn_cn_n0,MGoal,SID) &
 not(witness(A2Goal,A1Goal,mn_cn_n0,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_mn_cn_n0 (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,mn_cn_n0,MGoal,SID1).
 request(A1Goal,A2Goal,mn_cn_n0,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_cn_mn_n1 (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,cn_mn_n1,MGoal,SID) &
 not(witness(A2Goal,A1Goal,cn_mn_n1,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_cn_mn_n1 (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,cn_mn_n1,MGoal,SID1).
 request(A1Goal,A2Goal,cn_mn_n1,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

