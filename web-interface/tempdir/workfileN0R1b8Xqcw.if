%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfileN0R1b8Xqcw

section signature:

state_tag: agent * text * text * hash_func * nat * agent * text * text * message * message * message * message * set(agent) * set(agent) * nat -> fact
state_reader: agent * hash_func * nat * agent * text * text * text * text * message * message * message * message * set(agent) * nat -> fact


section types:

t2r_k, t2r_id, k_new, t_auth_r, r_auth_t: protocol_id
M1, M2, M3, M4, Dummy_M2, Dummy_M1, Dummy_M4, Dummy_M3, dummy_msg, start, MGoal: message
Nr, Nt, K, ID, Dummy_ID, Dummy_Nt, Dummy_K, Dummy_Nr, dummy_nonce, kt, ki, tid: text
H, h: hash_func
R, T, tag, dummy_agent, A2Goal, A1Goal, reader, i: agent
set_99, set_97, set_96, set_94, set_87, set_86, set_72, set_102, set_101: set
Set_48, Dummy_Set_50, Dummy_Set_48, Dummy_Set_29, Set_29, ASGoal, Set_50: set(agent)
7, 3, 6, 4, State, SID, Dummy_State, 2, SID2, 1, SID1, 0, 10, 5, 9: nat


section inits:

initial_state init1 := 
 iknows(start).
 iknows(reader).
 iknows(tag).
 iknows(h).
 iknows(ki).
 iknows(i).
 state_reader(reader,h,0,dummy_agent,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,set_72,3).
 state_tag(tag,tid,kt,h,1,dummy_agent,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,set_86,set_87,4).
 state_reader(reader,h,0,dummy_agent,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,set_94,6).
 state_tag(tag,tid,kt,h,1,dummy_agent,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,set_96,set_97,7).
 state_reader(reader,h,0,dummy_agent,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,set_99,9).
 state_tag(tag,tid,kt,h,1,dummy_agent,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,set_101,set_102,10)


section rules:

step step_0 (R,H,T,K,Dummy_Nr,Nt,ID,M1,M2,M3,M4,Set_29,SID,Nr) :=
 state_reader(R,H,0,T,K,Dummy_Nr,Nt,ID,M1,M2,M3,M4,Set_29,SID).
 iknows(start)
=[exists Nr]=>
 state_reader(R,H,2,T,K,Nr,Nt,ID,M1,M2,M3,M4,Set_29,SID).
 iknows(Nr)

step step_1 (R,H,T,Dummy_K,Dummy_Nr,Dummy_Nt,Dummy_ID,M1,M2,Dummy_M3,Dummy_M4,Dummy_Set_29,SID,Nr,Nt) :=
 state_reader(R,H,2,T,Dummy_K,Dummy_Nr,Dummy_Nt,Dummy_ID,M1,M2,Dummy_M3,Dummy_M4,Dummy_Set_29,SID).
 iknows(pair(pair(apply(H,Dummy_ID),Nr),pair(xor(Dummy_ID,Nt),apply(H,pair(Dummy_ID,pair(Dummy_K,pair(Nr,Nt)))))))
 =>
 state_reader(R,H,4,T,apply(H,xor(apply(H,Dummy_ID),Dummy_K)),Nr,Nt,apply(H,Dummy_ID),M1,M2,apply(H,pair(Dummy_ID,pair(Dummy_K,pair(Nr,Nt)))),apply(H,pair(apply(H,xor(apply(H,Dummy_ID),Dummy_K)),pair(Dummy_Nr,Dummy_Nt))),Dummy_Set_29,SID).
 request(R,T,r_auth_t,apply(H,pair(Dummy_ID,pair(Dummy_K,pair(Nr,Nt)))),SID).
 iknows(apply(H,pair(apply(H,xor(apply(H,Dummy_ID),Dummy_K)),pair(Dummy_Nr,Dummy_Nt)))).
 witness(R,T,t_auth_r,apply(H,pair(apply(H,xor(apply(H,Dummy_ID),Dummy_K)),pair(Dummy_Nr,Dummy_Nt)))).
 secret(apply(H,xor(apply(H,Dummy_ID),Dummy_K)),k_new,Dummy_Set_29).
 contains(R,Dummy_Set_29).
 contains(T,Dummy_Set_29)

step step_2 (T,ID,K,H,R,Dummy_Nr,Dummy_Nt,Dummy_M1,Dummy_M2,Dummy_M3,M4,Dummy_Set_48,Dummy_Set_50,SID,Nr,Nt) :=
 state_tag(T,ID,K,H,1,R,Dummy_Nr,Dummy_Nt,Dummy_M1,Dummy_M2,Dummy_M3,M4,Dummy_Set_48,Dummy_Set_50,SID).
 iknows(Nr)
=[exists Nt]=>
 state_tag(T,ID,K,H,3,R,Nr,Nt,pair(apply(H,ID),Nr),xor(ID,Nt),apply(H,pair(ID,pair(K,pair(Nr,Nt)))),M4,Dummy_Set_48,Dummy_Set_50,SID).
 iknows(pair(pair(apply(H,ID),Nr),pair(xor(ID,Nt),apply(H,pair(ID,pair(K,pair(Nr,Nt))))))).
 witness(T,R,r_auth_t,apply(H,pair(ID,pair(K,pair(Nr,Nt))))).
 secret(ID,t2r_id,Dummy_Set_48).
 secret(K,t2r_k,Dummy_Set_50).
 contains(R,Dummy_Set_48).
 contains(T,Dummy_Set_48).
 contains(R,Dummy_Set_50).
 contains(T,Dummy_Set_50)

step step_3 (T,ID,Dummy_K,H,R,Nr,Nt,M1,M2,M3,Dummy_M4,Set_48,Set_50,SID,K) :=
 state_tag(T,ID,Dummy_K,H,3,R,Nr,Nt,M1,M2,M3,Dummy_M4,Set_48,Set_50,SID).
 iknows(apply(H,pair(K,pair(Nr,Nt))))
 =>
 state_tag(T,ID,K,H,5,R,Nr,Nt,M1,M2,M3,apply(H,pair(K,pair(Nr,Nt))),Set_48,Set_50,SID).
 request(T,R,t_auth_r,apply(H,pair(K,pair(Nr,Nt))),SID)


section properties:

property secrecy_of_t2r_id (MGoal,ASGoal) :=
 [] ((secret(MGoal,t2r_id,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_t2r_k (MGoal,ASGoal) :=
 [] ((secret(MGoal,t2r_k,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_k_new (MGoal,ASGoal) :=
 [] ((secret(MGoal,k_new,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property authentication_on_r_auth_t (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,r_auth_t,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,r_auth_t,MGoal))
     /\ ((request(A1Goal,A2Goal,r_auth_t,MGoal,SID1)
           /\ request(A1Goal,A2Goal,r_auth_t,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_t_auth_r (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,t_auth_r,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,t_auth_r,MGoal))
     /\ ((request(A1Goal,A2Goal,t_auth_r,MGoal,SID1)
           /\ request(A1Goal,A2Goal,t_auth_r,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state secrecy_of_t2r_id (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,t2r_id,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_t2r_k (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,t2r_k,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_k_new (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,k_new,ASGoal) &
 not(contains(i,ASGoal))

attack_state authentication_on_r_auth_t (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,r_auth_t,MGoal,SID) &
 not(witness(A2Goal,A1Goal,r_auth_t,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_r_auth_t (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,r_auth_t,MGoal,SID1).
 request(A1Goal,A2Goal,r_auth_t,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_t_auth_r (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,t_auth_r,MGoal,SID) &
 not(witness(A2Goal,A1Goal,t_auth_r,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_t_auth_r (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,t_auth_r,MGoal,SID1).
 request(A1Goal,A2Goal,t_auth_r,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

