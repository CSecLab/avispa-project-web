%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfileG11463

section signature:

state_ar: agent * agent * hash_func * hash_func * hash_func * hash_func * nat * text * text * text * text * text * apply(hash_func,pair(text,text)) * message * message * message * message * text * text * set(agent) * nat -> fact
state_obu: agent * agent * hash_func * hash_func * hash_func * hash_func * hash_func * nat * text * text * text * text * text * apply(hash_func,pair(text,text)) * message * message * message * message * text * text * text * set(agent) * nat -> fact


section types:

sec_hak_ar, hak1, nar, hak2, nobu, sec_hak_obu: protocol_id
Dummy_HAK, HAK: apply(hash_func,pair(text,text))
Dummy_Nar, Dummy_Nobu, dummy_nonce, Add_obu, Add_ar, Success, Nobu, Nar, IDobu, IDar, success, MK: text
kdf, prf, f1, f2, f3, PRF, F1, F2, F3, KDF: hash_func
Dummy_State, 3, SID, SID2, SID1, State, 2, 1, 0, 12, 10, 7, 6, 4: nat
set_90, set_117, set_115, set_113, set_112, set_110, set_108, set_104: set
ASGoal, Set_66, Set_40, Dummy_Set_66, Dummy_Set_40: set(agent)
A2Goal, A1Goal, AR, OBU, ar, obu, i: agent
Dummy_HEK_mac1, Dummy_HEK, dummy_msg, MGoal, HEK, HEK_mac1, HEK_mac2, HAK_mac1, start, Dummy_HAK_mac1, Dummy_HEK_mac2: message


section inits:

initial_state init1 := 
 iknows(start).
 iknows(obu).
 iknows(ar).
 iknows(kdf).
 iknows(prf).
 iknows(i).
 state_obu(obu,ar,f1,f2,f3,kdf,prf,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_nonce,dummy_nonce,dummy_nonce,set_90,3).
 state_ar(ar,obu,f2,f3,kdf,prf,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_nonce,dummy_nonce,set_104,4).
 state_obu(obu,ar,f1,f2,f3,kdf,prf,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_nonce,dummy_nonce,dummy_nonce,set_108,6).
 state_ar(ar,obu,f2,f3,kdf,prf,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_nonce,dummy_nonce,set_110,7).
 state_ar(ar,i,f2,f3,kdf,prf,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_nonce,dummy_nonce,set_113,10).
 state_obu(obu,i,f1,f2,f3,kdf,prf,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_nonce,dummy_nonce,dummy_nonce,set_115,12)


section rules:

step step_0 (OBU,AR,F1,F2,F3,KDF,PRF,IDobu,IDar,Dummy_Nobu,Nar,Success,HAK,Dummy_HEK,Dummy_HEK_mac1,HEK_mac2,HAK_mac1,MK,Add_obu,Add_ar,Set_40,SID,Nobu) :=
 state_obu(OBU,AR,F1,F2,F3,KDF,PRF,0,IDobu,IDar,Dummy_Nobu,Nar,Success,HAK,Dummy_HEK,Dummy_HEK_mac1,HEK_mac2,HAK_mac1,MK,Add_obu,Add_ar,Set_40,SID).
 iknows(start)
=[exists Nobu]=>
 state_obu(OBU,AR,F1,F2,F3,KDF,PRF,1,IDobu,IDar,Nobu,Nar,Success,HAK,apply(KDF,pair(MK,pair(Add_obu,Add_ar))),apply(F1,pair(IDobu,pair(IDar,Nobu))),HEK_mac2,HAK_mac1,MK,Add_obu,Add_ar,Set_40,SID).
 iknows(pair(Dummy_HEK_mac1,scrypt(apply(KDF,pair(MK,pair(Add_obu,Add_ar))),pair(IDobu,pair(IDar,Nobu))))).
 witness(OBU,AR,nobu,Nobu)

step step_1 (OBU,AR,F1,F2,F3,KDF,PRF,IDobu,IDar,Nobu,Dummy_Nar,Success,Dummy_HAK,HEK,HEK_mac1,Dummy_HAK_mac1,MK,Add_obu,Add_ar,Set_40,SID,Nar,HEK_mac2) :=
 state_obu(OBU,AR,F1,F2,F3,KDF,PRF,1,IDobu,IDar,Nobu,Dummy_Nar,Success,Dummy_HAK,HEK,HEK_mac1,apply(F2,pair(IDobu,pair(IDar,Nar))),Dummy_HAK_mac1,MK,Add_obu,Add_ar,Set_40,SID).
 iknows(pair(HEK_mac2,scrypt(HEK,pair(IDobu,pair(IDar,Nar)))))
 =>
 state_obu(OBU,AR,F1,F2,F3,KDF,PRF,2,IDobu,IDar,Nobu,Nar,Success,apply(PRF,pair(Nobu,Nar)),HEK,HEK_mac1,HEK_mac2,apply(F3,pair(apply(PRF,pair(Nobu,Nar)),HEK)),MK,Add_obu,Add_ar,Set_40,SID).
 iknows(pair(apply(F3,pair(apply(PRF,pair(Nobu,Nar)),HEK)),scrypt(HEK,apply(PRF,pair(Nobu,Nar))))).
 witness(OBU,AR,hak2,apply(PRF,pair(Nobu,Nar))).
 request(OBU,AR,nar,Nar,SID)

step step_2 (OBU,AR,F1,F2,F3,KDF,PRF,IDobu,IDar,Nobu,Nar,Success,HAK,HEK,HEK_mac1,HEK_mac2,HAK_mac1,MK,Add_obu,Add_ar,Dummy_Set_40,SID) :=
 state_obu(OBU,AR,F1,F2,F3,KDF,PRF,2,IDobu,IDar,Nobu,Nar,Success,HAK,HEK,HEK_mac1,HEK_mac2,HAK_mac1,MK,Add_obu,Add_ar,Dummy_Set_40,SID).
 iknows(success)
 =>
 state_obu(OBU,AR,F1,F2,F3,KDF,PRF,3,IDobu,IDar,Nobu,Nar,Success,HAK,HEK,HEK_mac1,HEK_mac2,HAK_mac1,MK,Add_obu,Add_ar,Dummy_Set_40,SID).
 secret(HAK,sec_hak_obu,Dummy_Set_40).
 request(AR,OBU,hak1,HAK,SID).
 contains(OBU,Dummy_Set_40).
 contains(AR,Dummy_Set_40)

step step_3 (AR,OBU,F1,F2,F3,PRF,IDobu,IDar,Dummy_Nobu,Dummy_Nar,Success,HAK,Dummy_HEK,Dummy_HEK_mac1,Dummy_HEK_mac2,HAK_mac1,Add_obu,Add_ar,Set_66,SID,Nobu,Nar,HEK) :=
 state_ar(AR,OBU,F1,F2,F3,PRF,0,IDobu,IDar,Dummy_Nobu,Dummy_Nar,Success,HAK,Dummy_HEK,Dummy_HEK_mac1,Dummy_HEK_mac2,HAK_mac1,Add_obu,Add_ar,Set_66,SID).
 iknows(pair(apply(F1,pair(IDobu,pair(IDar,Nobu))),scrypt(HEK,pair(IDobu,pair(IDar,Nobu)))))
=[exists Nar]=>
 state_ar(AR,OBU,F1,F2,F3,PRF,1,IDobu,IDar,Nobu,Nar,Success,HAK,HEK,apply(F1,pair(IDobu,pair(IDar,Nobu))),apply(F2,pair(IDobu,pair(IDar,Nar))),HAK_mac1,Add_obu,Add_ar,Set_66,SID).
 iknows(pair(apply(F2,pair(IDobu,pair(IDar,Nar))),scrypt(Dummy_HEK,pair(IDobu,pair(IDar,Nar))))).
 request(AR,OBU,nobu,Nobu,SID).
 witness(AR,OBU,nar,Nar)

step step_4 (AR,OBU,F1,F2,F3,PRF,IDobu,IDar,Nobu,Nar,Success,Dummy_HAK,HEK,HEK_mac1,HEK_mac2,Dummy_HAK_mac1,Add_obu,Add_ar,Dummy_Set_66,SID) :=
 state_ar(AR,OBU,F1,F2,F3,PRF,1,IDobu,IDar,Nobu,Nar,Success,Dummy_HAK,HEK,HEK_mac1,HEK_mac2,Dummy_HAK_mac1,Add_obu,Add_ar,Dummy_Set_66,SID).
 iknows(pair(apply(F3,pair(apply(PRF,pair(Nobu,Nar)),HEK)),scrypt(HEK,apply(PRF,pair(Nobu,Nar)))))
 =>
 state_ar(AR,OBU,F1,F2,F3,PRF,2,IDobu,IDar,Nobu,Nar,Success,apply(PRF,pair(Nobu,Nar)),HEK,HEK_mac1,HEK_mac2,apply(F3,pair(apply(PRF,pair(Nobu,Nar)),HEK)),Add_obu,Add_ar,Dummy_Set_66,SID).
 iknows(success).
 secret(apply(PRF,pair(Nobu,Nar)),sec_hak_ar,Dummy_Set_66).
 witness(AR,OBU,hak1,apply(PRF,pair(Nobu,Nar))).
 request(AR,OBU,hak2,Dummy_HAK,SID).
 contains(AR,Dummy_Set_66).
 contains(OBU,Dummy_Set_66)


section properties:

property secrecy_of_sec_hak_obu (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_hak_obu,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_sec_hak_ar (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_hak_ar,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property authentication_on_hak1 (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,hak1,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,hak1,MGoal))
     /\ ((request(A1Goal,A2Goal,hak1,MGoal,SID1)
           /\ request(A1Goal,A2Goal,hak1,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_hak2 (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,hak2,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,hak2,MGoal))
     /\ ((request(A1Goal,A2Goal,hak2,MGoal,SID1)
           /\ request(A1Goal,A2Goal,hak2,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_nar (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,nar,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,nar,MGoal))
     /\ ((request(A1Goal,A2Goal,nar,MGoal,SID1)
           /\ request(A1Goal,A2Goal,nar,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_nobu (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,nobu,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,nobu,MGoal))
     /\ ((request(A1Goal,A2Goal,nobu,MGoal,SID1)
           /\ request(A1Goal,A2Goal,nobu,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state secrecy_of_sec_hak_obu (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_hak_obu,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_sec_hak_ar (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_hak_ar,ASGoal) &
 not(contains(i,ASGoal))

attack_state authentication_on_hak1 (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,hak1,MGoal,SID) &
 not(witness(A2Goal,A1Goal,hak1,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_hak1 (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,hak1,MGoal,SID1).
 request(A1Goal,A2Goal,hak1,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_hak2 (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,hak2,MGoal,SID) &
 not(witness(A2Goal,A1Goal,hak2,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_hak2 (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,hak2,MGoal,SID1).
 request(A1Goal,A2Goal,hak2,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_nar (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,nar,MGoal,SID) &
 not(witness(A2Goal,A1Goal,nar,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_nar (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,nar,MGoal,SID1).
 request(A1Goal,A2Goal,nar,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_nobu (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,nobu,MGoal,SID) &
 not(witness(A2Goal,A1Goal,nobu,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_nobu (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,nobu,MGoal,SID1).
 request(A1Goal,A2Goal,nobu,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

