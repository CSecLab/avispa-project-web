%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfileeKkJMM

section signature:

state_device2: agent * agent * public_key * public_key * nat * text * text * text * text * nat -> fact
state_device1: agent * agent * public_key * public_key * nat * text * text * text * text * text * set(agent) * nat -> fact


section types:

alice_bob_challenge: protocol_id
set_93, set_90, set_81: set
Set_38, Dummy_Set_38, ASGoal: set(agent)
MGoal: message
Ks, Kb, Ka, ka, kb, ks, ki: public_key
A, B, A2Goal, A1Goal, a, b, s, S, i: agent
Dummy_Challenge, RequestAccess, Challenge, RunningChallenge, GetChallenge, dummy_nonce, Done, SentChallenge, Timer: text
5, 7, 6, 4, SID, Dummy_State, 3, State, SID2, SID1, 2, 1, 0: nat


section inits:

initial_state init1 := 
 iknows(a).
 iknows(b).
 iknows(s).
 iknows(ka).
 iknows(kb).
 iknows(ki).
 iknows(inv(ki)).
 iknows(i).
 state_device1(a,b,ka,ks,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_81,3).
 state_device2(a,b,ks,kb,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,4).
 state_device1(a,i,ka,ks,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_90,6).
 state_device2(a,i,ks,ki,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,7)


section rules:

step step_0 (A,B,Ka,Ks,RequestAccess,Challenge,RunningChallenge,GetChallenge,Done,Set_38,SID) :=
 state_device1(A,B,Ka,Ks,0,RequestAccess,Challenge,RunningChallenge,GetChallenge,Done,Set_38,SID).
 iknows(RequestAccess)
 =>
 state_device1(A,B,Ka,Ks,1,RequestAccess,Challenge,RunningChallenge,GetChallenge,Done,Set_38,SID)

step step_1 (A,B,Ka,Ks,RequestAccess,Dummy_Challenge,RunningChallenge,GetChallenge,Done,Dummy_Set_38,SID,Challenge) :=
 state_device1(A,B,Ka,Ks,1,RequestAccess,Dummy_Challenge,RunningChallenge,GetChallenge,Done,Dummy_Set_38,SID).
 iknows(crypt(Ka,pair(Challenge,A)))
 =>
 state_device1(A,B,Ka,Ks,2,RequestAccess,Challenge,RunningChallenge,GetChallenge,Done,Dummy_Set_38,SID).
 request(A,B,alice_bob_challenge,Challenge,SID).
 contains(A,Dummy_Set_38).
 contains(B,Dummy_Set_38)

step step_2 (A,B,Ka,Ks,RequestAccess,Challenge,RunningChallenge,GetChallenge,Done,Set_38,SID) :=
 state_device1(A,B,Ka,Ks,2,RequestAccess,Challenge,RunningChallenge,GetChallenge,Done,Set_38,SID).
 iknows(RunningChallenge)
 =>
 state_device1(A,B,Ka,Ks,3,RequestAccess,Challenge,RunningChallenge,GetChallenge,Done,Set_38,SID)

step step_3 (A,B,Ka,Ks,RequestAccess,Challenge,RunningChallenge,GetChallenge,Done,Set_38,SID) :=
 state_device1(A,B,Ka,Ks,3,RequestAccess,Challenge,RunningChallenge,GetChallenge,Done,Set_38,SID).
 iknows(GetChallenge)
 =>
 state_device1(A,B,Ka,Ks,4,RequestAccess,Challenge,RunningChallenge,GetChallenge,Done,Set_38,SID)

step step_4 (A,B,Ka,Ks,RequestAccess,Challenge,RunningChallenge,GetChallenge,Done,Set_38,SID) :=
 state_device1(A,B,Ka,Ks,4,RequestAccess,Challenge,RunningChallenge,GetChallenge,Done,Set_38,SID).
 iknows(Done)
 =>
 state_device1(A,B,Ka,Ks,5,RequestAccess,Challenge,RunningChallenge,GetChallenge,Done,Set_38,SID)

step step_5 (A,B,Ks,Kb,RunningChallenge,Challenge,GetChallenge,SentChallenge,SID) :=
 state_device2(A,B,Ks,Kb,0,RunningChallenge,Challenge,GetChallenge,SentChallenge,SID).
 iknows(RunningChallenge)
 =>
 state_device2(A,B,Ks,Kb,1,RunningChallenge,Challenge,GetChallenge,SentChallenge,SID)

step step_6 (A,B,Ks,Kb,RunningChallenge,Challenge,GetChallenge,SentChallenge,SID) :=
 state_device2(A,B,Ks,Kb,1,RunningChallenge,Challenge,GetChallenge,SentChallenge,SID).
 iknows(GetChallenge)
 =>
 state_device2(A,B,Ks,Kb,2,RunningChallenge,Challenge,GetChallenge,SentChallenge,SID)

step step_7 (A,B,Ks,Kb,RunningChallenge,Challenge,GetChallenge,SentChallenge,SID) :=
 state_device2(A,B,Ks,Kb,2,RunningChallenge,Challenge,GetChallenge,SentChallenge,SID).
 iknows(SentChallenge)
 =>
 state_device2(A,B,Ks,Kb,3,RunningChallenge,Challenge,GetChallenge,SentChallenge,SID)


section properties:

property secrecy_of_challenge (MGoal,ASGoal) :=
 [] ((secret(MGoal,challenge,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property authentication_on_alice_bob_challenge (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,alice_bob_challenge,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,alice_bob_challenge,MGoal))
     /\ ((request(A1Goal,A2Goal,alice_bob_challenge,MGoal,SID1)
           /\ request(A1Goal,A2Goal,alice_bob_challenge,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state secrecy_of_challenge (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,challenge,ASGoal) &
 not(contains(i,ASGoal))

attack_state authentication_on_alice_bob_challenge (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,alice_bob_challenge,MGoal,SID) &
 not(witness(A2Goal,A1Goal,alice_bob_challenge,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_alice_bob_challenge (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,alice_bob_challenge,MGoal,SID1).
 request(A1Goal,A2Goal,alice_bob_challenge,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

