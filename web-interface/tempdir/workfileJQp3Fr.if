%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfileJQp3Fr

section signature:

state_server: agent * agent * agent * text * text * text * text * text * text * text * hash_func * nat * text * text * text * text * text * text * text * text * text * text * text * text * text * text * set(agent) * set(agent) * nat -> fact
state_registrationCenter: agent * agent * agent * text * text * text * text * text * text * text * text * text * hash_func * nat * text * text * text * text * text * text * text * text * text * text * text * text * text * text * set(agent) * set(agent) * nat -> fact
state_user: agent * agent * agent * text * text * text * text * text * text * text * text * hash_func * nat * text * text * text * text * text * text * text * text * text * set(agent) * set(agent) * nat -> fact


section types:

ns, rc_s_beta2, nr, sk, rc_u_alpha2, nu: protocol_id
MGoal, start: message
h, H: hash_func
set_201, set_200, set_184, set_183, set_239, set_238, set_237, set_236, set_234, set_233, set_231, set_230, set_228, set_227, set_226, set_225, set_217, set_216: set
Dummy_Set_40, Dummy_Set_34, ASGoal, Set_116, Set_114, Set_77, Set_75, Set_40, Set_34, Dummy_Set_116, Dummy_Set_114, Dummy_Set_77, Dummy_Set_75: set(agent)
A2Goal, A1Goal, u, rc, s, U, S, RC, i: agent
Dummy_Betasec, Dummy_Alphasec, Dummy_Gammau, Dummy_Betau, Dummy_Alphau, Dummy_SK, Dummy_NU, Dummy_A2, Dummy_A1, dummy_nonce, id, sid, tid, n1, n2, s1, pw, pwi, h1, h2, h3, h4, h5, ner, krs, krs1, krs2, k1i, k2i, krs1i, krs2i, n1i, n2i, Beta1, Beta2, Alpha, Beta, SK, Alpha1, Alpha2, Alphau, Betau, Gammau, Ns, Alphas, Betas, Gammas, ID, Sid, TID, KRS1, KRS2, K1, K2, k2, k1, Nu, Nr, H1, H2, H3, H4, H5, KRS, A1, A2, NU, Alphasec, Betasec, Dummy_Beta, Dummy_Alpha, Dummy_TID, N1, N2, S1, Dummy_Gammas, Pw, Dummy_Betas, Dummy_Alphas, Dummy_Nr, Dummy_Ns, Dummy_Nu, Dummy_Beta2, Dummy_Beta1, Dummy_Alpha2, Dummy_Alpha1: text
SID, Dummy_State, 3, SID2, SID1, 9, 7, 5, State, 4, 13, 2, 11, 1, 0, 8: nat


section inits:

initial_state init1 := 
 iknows(start).
 iknows(u).
 iknows(rc).
 iknows(s).
 iknows(n1i).
 iknows(n2i).
 iknows(i).
 state_user(u,rc,s,id,sid,tid,n1,n2,s1,pw,h1,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_183,set_184,3).
 state_registrationCenter(s,u,rc,id,sid,tid,h1,h2,h3,h4,h5,krs,h,1,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_200,set_201,4).
 state_server(rc,u,s,id,sid,tid,krs1,krs2,k1,k2,h,5,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_216,set_217,5).
 state_registrationCenter(s,i,rc,id,sid,tid,h1,h2,h3,h4,h5,krs,h,1,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_227,set_228,8).
 state_server(rc,i,s,id,sid,tid,krs1,krs2,k1,k2,h,5,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_230,set_231,9).
 state_user(u,rc,i,id,sid,tid,n1,n2,s1,pw,h1,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_233,set_234,11).
 state_server(rc,u,i,id,sid,tid,krs1,krs2,k1,k2,h,5,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_238,set_239,13)


section rules:

step step_0 (U,S,RC,ID,Sid,TID,N1,N2,S1,Pw,H1,H,Dummy_A1,Dummy_A2,SK,Dummy_NU,Alphau,Betau,Gammau,Alphasec,Betasec,Dummy_Set_34,Set_40,SID,NU) :=
 state_user(U,S,RC,ID,Sid,TID,N1,N2,S1,Pw,H1,H,0,Dummy_A1,Dummy_A2,SK,Dummy_NU,Alphau,Betau,Gammau,Alphasec,Betasec,Dummy_Set_34,Set_40,SID).
 iknows(start)
=[exists NU]=>
 state_user(U,S,RC,ID,Sid,TID,N1,N2,S1,Pw,H1,H,2,xor(apply(H,xor(pair(ID,Pw),N1)),xor(S1,N1)),xor(H1,apply(H,xor(Dummy_NU,apply(H,xor(N1,N2))))),SK,NU,Alphau,Betau,Gammau,Alphasec,Betasec,Dummy_Set_34,Set_40,SID).
 iknows(TID).
 secret(NU,nu,Dummy_Set_34).
 witness(U,RC,rc_u_alpha2,xor(H1,apply(H,xor(Dummy_NU,apply(H,xor(N1,N2)))))).
 contains(U,Dummy_Set_34)

step step_1 (U,S,RC,ID,Sid,TID,N1,N2,S1,Pw,H1,H,A1,A2,Dummy_SK,NU,Dummy_Alphau,Dummy_Betau,Dummy_Gammau,Dummy_Alphasec,Dummy_Betasec,Set_34,Dummy_Set_40,SID,Alphau) :=
 state_user(U,S,RC,ID,Sid,TID,N1,N2,S1,Pw,H1,H,2,A1,A2,Dummy_SK,NU,Dummy_Alphau,Dummy_Betau,Dummy_Gammau,Dummy_Alphasec,Dummy_Betasec,Set_34,Dummy_Set_40,SID).
 iknows(Alphau)
 =>
 state_user(U,S,RC,ID,Sid,TID,N1,N2,S1,Pw,H1,H,4,A1,A2,apply(H,xor(xor(Dummy_Alphau,apply(H,pair(pair(ID,Pw),xor(N1,N2)))),xor(xor(Dummy_Betau,apply(H,xor(N1,N2))),NU))),NU,Alphau,Dummy_Betau,Dummy_Gammau,xor(Dummy_Alphau,apply(H,pair(pair(ID,Pw),xor(N1,N2)))),xor(Dummy_Betau,apply(H,xor(N1,N2))),Set_34,Dummy_Set_40,SID).
 secret(apply(H,xor(xor(Dummy_Alphau,apply(H,pair(pair(ID,Pw),xor(N1,N2)))),xor(xor(Dummy_Betau,apply(H,xor(N1,N2))),NU))),sk,Dummy_Set_40).
 contains(U,Dummy_Set_40).
 contains(S,Dummy_Set_40).
 contains(RC,Dummy_Set_40)

step step_2 (RC,U,S,ID,Sid,TID,H1,H2,H3,H4,H5,KRS,H,Dummy_Alpha1,Dummy_Alpha2,Dummy_Beta1,Dummy_Beta2,Dummy_Nu,Dummy_Ns,Dummy_Nr,Dummy_SK,Dummy_Alphau,Dummy_Betau,Dummy_Gammau,Dummy_Alphas,Dummy_Betas,Dummy_Gammas,Dummy_Set_75,Dummy_Set_77,SID,Alpha1,Alpha2,Beta1,Beta2,Nr) :=
 state_registrationCenter(RC,U,S,ID,Sid,TID,H1,H2,H3,H4,H5,KRS,H,1,Dummy_Alpha1,Dummy_Alpha2,Dummy_Beta1,Dummy_Beta2,Dummy_Nu,Dummy_Ns,Dummy_Nr,Dummy_SK,Dummy_Alphau,Dummy_Betau,Dummy_Gammau,Dummy_Alphas,Dummy_Betas,Dummy_Gammas,Dummy_Set_75,Dummy_Set_77,SID).
 iknows(pair(TID,pair(Alpha1,pair(Alpha2,pair(Sid,pair(Beta1,Beta2))))))
=[exists Nr]=>
 state_registrationCenter(RC,U,S,ID,Sid,TID,H1,H2,H3,H4,H5,KRS,H,3,Alpha1,Alpha2,Beta1,Beta2,xor(Alpha1,H1),xor(Beta1,H2),Nr,xor(apply(H,xor(Alpha1,H1)),xor(apply(H,Nr),apply(H,xor(Beta1,H2)))),xor(xor(apply(H,xor(Alpha1,H1)),apply(H,xor(Beta1,H2))),xor(apply(H,Dummy_Nr),H4)),xor(xor(Dummy_Nr,xor(Beta1,H2)),apply(H,H4)),xor(apply(H,xor(Dummy_SK,H3)),H4),xor(xor(apply(H,xor(Alpha1,H1)),apply(H,xor(Beta1,H2))),xor(apply(H,Dummy_Nr),xor(KRS,apply(H,xor(Beta1,H2))))),xor(xor(xor(Alpha1,H1),Nr),apply(H,xor(k1,k2))),apply(H,xor(Dummy_SK,xor(k1,k2))),Dummy_Set_75,Dummy_Set_77,SID).
 iknows(pair(xor(xor(apply(H,xor(Alpha1,H1)),apply(H,xor(Beta1,H2))),xor(apply(H,Dummy_Nr),H4)),pair(xor(xor(Dummy_Nr,xor(Beta1,H2)),apply(H,H4)),pair(xor(apply(H,xor(Dummy_SK,H3)),H4),pair(xor(xor(apply(H,xor(Alpha1,H1)),apply(H,xor(Beta1,H2))),xor(apply(H,Dummy_Nr),xor(KRS,apply(H,xor(Beta1,H2))))),pair(xor(xor(xor(Alpha1,H1),Nr),apply(H,xor(k1,k2))),apply(H,xor(Dummy_SK,xor(k1,k2))))))))).
 secret(xor(apply(H,xor(Alpha1,H1)),xor(apply(H,Nr),apply(H,xor(Beta1,H2)))),sk,Dummy_Set_75).
 secret(Nr,nr,Dummy_Set_77).
 request(RC,U,rc_u_alpha2,Alpha2,SID).
 request(RC,S,rc_s_beta2,Beta2,SID).
 contains(S,Dummy_Set_75).
 contains(U,Dummy_Set_75).
 contains(RC,Dummy_Set_75).
 contains(RC,Dummy_Set_77)

step step_3 (S,U,RC,ID,Sid,Dummy_TID,KRS1,KRS2,K1,K2,H,Dummy_Beta1,Dummy_Beta2,Alpha,Beta,SK,Dummy_Alpha1,Dummy_Alpha2,Alphau,Betau,Gammau,Dummy_Ns,Alphas,Betas,Gammas,Dummy_Set_114,Set_116,SID,TID,Alpha1,Alpha2,Ns) :=
 state_server(S,U,RC,ID,Sid,Dummy_TID,KRS1,KRS2,K1,K2,H,5,Dummy_Beta1,Dummy_Beta2,Alpha,Beta,SK,Dummy_Alpha1,Dummy_Alpha2,Alphau,Betau,Gammau,Dummy_Ns,Alphas,Betas,Gammas,Dummy_Set_114,Set_116,SID).
 iknows(pair(TID,pair(Alpha1,Alpha2)))
=[exists Ns]=>
 state_server(S,U,RC,ID,Sid,TID,KRS1,KRS2,K1,K2,H,7,xor(KRS1,Ns),xor(KRS2,apply(H,xor(Ns,xor(K1,K2)))),Alpha,Beta,SK,Alpha1,Alpha2,Alphau,Betau,Gammau,Ns,Alphas,Betas,Gammas,Dummy_Set_114,Set_116,SID).
 iknows(pair(Dummy_TID,pair(Dummy_Alpha1,pair(Dummy_Alpha2,pair(Sid,pair(xor(KRS1,Ns),xor(KRS2,apply(H,xor(Ns,xor(K1,K2)))))))))).
 witness(S,RC,rc_s_beta2,xor(KRS2,apply(H,xor(Ns,xor(K1,K2))))).
 secret(Ns,ns,Dummy_Set_114).
 contains(S,Dummy_Set_114)

step step_4 (S,U,RC,ID,Sid,TID,KRS1,KRS2,K1,K2,H,Beta1,Beta2,Dummy_Alpha,Dummy_Beta,Dummy_SK,Alpha1,Alpha2,Dummy_Alphau,Dummy_Betau,Dummy_Gammau,Ns,Dummy_Alphas,Dummy_Betas,Dummy_Gammas,Set_114,Dummy_Set_116,SID,Alphau) :=
 state_server(S,U,RC,ID,Sid,TID,KRS1,KRS2,K1,K2,H,7,Beta1,Beta2,Dummy_Alpha,Dummy_Beta,Dummy_SK,Alpha1,Alpha2,Dummy_Alphau,Dummy_Betau,Dummy_Gammau,Ns,Dummy_Alphas,Dummy_Betas,Dummy_Gammas,Set_114,Dummy_Set_116,SID).
 iknows(Alphau)
 =>
 state_server(S,U,RC,ID,Sid,TID,KRS1,KRS2,K1,K2,H,9,Beta1,Beta2,xor(Alphas,xor(apply(H,Ns),KRS1)),xor(Betas,xor(K2,K1)),xor(xor(Alphas,xor(apply(H,Ns),KRS1)),xor(Betas,Ns)),Alpha1,Alpha2,Alphau,Dummy_Betau,Dummy_Gammau,Ns,Dummy_Alphas,Dummy_Betas,Dummy_Gammas,Set_114,Dummy_Set_116,SID).
 iknows(Dummy_Alphau).
 secret(xor(xor(Alphas,xor(apply(H,Ns),KRS1)),xor(Betas,Ns)),sk,Dummy_Set_116).
 contains(S,Dummy_Set_116).
 contains(RC,Dummy_Set_116).
 contains(U,Dummy_Set_116)


section properties:

property secrecy_of_nr (MGoal,ASGoal) :=
 [] ((secret(MGoal,nr,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_ns (MGoal,ASGoal) :=
 [] ((secret(MGoal,ns,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_nu (MGoal,ASGoal) :=
 [] ((secret(MGoal,nu,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_sk (MGoal,ASGoal) :=
 [] ((secret(MGoal,sk,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property authentication_on_rc_u_alpha2 (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,rc_u_alpha2,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,rc_u_alpha2,MGoal))
     /\ ((request(A1Goal,A2Goal,rc_u_alpha2,MGoal,SID1)
           /\ request(A1Goal,A2Goal,rc_u_alpha2,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_rc_s_beta2 (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,rc_s_beta2,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,rc_s_beta2,MGoal))
     /\ ((request(A1Goal,A2Goal,rc_s_beta2,MGoal,SID1)
           /\ request(A1Goal,A2Goal,rc_s_beta2,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state secrecy_of_nr (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,nr,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_ns (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,ns,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_nu (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,nu,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_sk (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sk,ASGoal) &
 not(contains(i,ASGoal))

attack_state authentication_on_rc_u_alpha2 (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,rc_u_alpha2,MGoal,SID) &
 not(witness(A2Goal,A1Goal,rc_u_alpha2,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_rc_u_alpha2 (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,rc_u_alpha2,MGoal,SID1).
 request(A1Goal,A2Goal,rc_u_alpha2,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_rc_s_beta2 (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,rc_s_beta2,MGoal,SID) &
 not(witness(A2Goal,A1Goal,rc_s_beta2,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_rc_s_beta2 (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,rc_s_beta2,MGoal,SID1).
 request(A1Goal,A2Goal,rc_s_beta2,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

