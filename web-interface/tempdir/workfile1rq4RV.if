%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfile1rq4RV

section signature:

state_user: agent * agent * agent * symmetric_key * symmetric_key * hash_func * nat * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * set(text) * set(agent) * set(symmetric_key) * set(agent) * set(text) * set(agent) * set(text) * set(agent) * set(text) * set(text) * set(agent) * nat -> fact
state_basestation: agent * agent * agent * symmetric_key * symmetric_key * hash_func * nat * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * set(text) * set(agent) * set(symmetric_key) * set(agent) * set(text) * set(agent) * set(text) * set(agent) * set(text) * set(text) * set(agent) * nat -> fact
state_sensornode: agent * agent * agent * symmetric_key * hash_func * nat * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * set(text) * set(agent) * set(symmetric_key) * set(agent) * set(text) * set(agent) * set(text) * set(agent) * set(text) * set(text) * set(agent) * nat -> fact


section types:

MGoal, start: message
sensornode_user, sensornode_basestation, user_basestation, user_sensornode, subs1, subs2, subs3, subs4, subs5, subs6: protocol_id
Dummy_Set_135, Set_135, Set_96, Dummy_Set_50, Set_50, Dummy_Set_96: set(symmetric_key)
Dummy_State, 3, SID, SID2, SID1, 13, 12, State, 11, 9, 8, 7, 5, 2, 1, 0, 4: nat
h, H: hash_func
set_194, set_193, set_192, set_191, set_190, set_189, set_188, set_187, set_186, set_185, set_184, set_338, set_337, set_336, set_335, set_334, set_333, set_332, set_331, set_330, set_329, set_328, set_326, set_325, set_324, set_323, set_322, set_321, set_320, set_319, set_318, set_317, set_316, set_314, set_313, set_312, set_311, set_310, set_309, set_308, set_307, set_306, set_305, set_304, set_302, set_301, set_300, set_299, set_298, set_297, set_296, set_295, set_294, set_293, set_292, set_290, set_289, set_288, set_287, set_286, set_285, set_284, set_283, set_282, set_281, set_280, set_278, set_277, set_276, set_275, set_274, set_273, set_272, set_271, set_270, set_269, set_268, set_252, set_251, set_250, set_249, set_248, set_247, set_246, set_245, set_244, set_243, set_242, set_223, set_222, set_221, set_220, set_219, set_218, set_217, set_216, set_215, set_214, set_213: set
mkui, mksj, MKsj, MKui: symmetric_key
Dummy_T1, dummy_nonce, rpwi, rui, kui, kj, rnui, tj, t1, t2, apmi, gidi, kbs, snj, ui, APMi, GIdx, Wi, RNui, RNUsi, T1, T2, Rui, Keyij, Ru, PWi, KUi, M1, IDi, IDsj, Tj, Kj, Ri, S, Tokenij, GIDx, Pu, Dummy_M2, Dummy_Wi, Dummy_Tokenij, Dummy_KUi, Dummy_RNui, RNuj, M2, Dummy_Ri, Dummy_Keyij, Dummy_M1, Dummy_T2: text
A2Goal, A1Goal, sn, bs, u, SN, BS, U, i: agent
Dummy_Set_133, Set_142, Set_141, Set_139, Set_137, Set_133, Set_103, Set_102, Set_100, Set_98, Set_94, Dummy_Set_57, Dummy_Set_56, Dummy_Set_54, Dummy_Set_52, Set_57, Set_56, Set_54, Dummy_Set_47, Set_52, Set_47, Dummy_Set_103, Dummy_Set_102, Dummy_Set_100, Dummy_Set_98, Dummy_Set_94, Dummy_Set_142, Dummy_Set_141, Dummy_Set_139, Dummy_Set_137: set(text)
Dummy_Set_134, ASGoal, Set_143, Set_140, Set_138, Set_136, Set_134, Set_104, Set_101, Set_99, Set_97, Set_95, Dummy_Set_58, Dummy_Set_55, Dummy_Set_53, Set_58, Dummy_Set_51, Set_55, Dummy_Set_48, Set_53, Set_51, Set_48, Dummy_Set_104, Dummy_Set_101, Dummy_Set_99, Dummy_Set_97, Dummy_Set_95, Dummy_Set_143, Dummy_Set_140, Dummy_Set_138, Dummy_Set_136: set(agent)


section inits:

initial_state init1 := 
 iknows(start).
 iknows(u).
 iknows(bs).
 iknows(sn).
 iknows(h).
 iknows(snj).
 iknows(ui).
 iknows(i).
 state_sensornode(sn,u,bs,mksj,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_184,set_185,set_186,set_187,set_188,set_189,set_190,set_191,set_192,set_193,set_194,3).
 state_basestation(u,bs,sn,mksj,mkui,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_213,set_214,set_215,set_216,set_217,set_218,set_219,set_220,set_221,set_222,set_223,4).
 state_user(bs,u,sn,mksj,mkui,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_242,set_243,set_244,set_245,set_246,set_247,set_248,set_249,set_250,set_251,set_252,5).
 state_sensornode(u,sn,bs,mksj,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_268,set_269,set_270,set_271,set_272,set_273,set_274,set_275,set_276,set_277,set_278,7).
 state_basestation(sn,bs,u,mksj,mkui,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_280,set_281,set_282,set_283,set_284,set_285,set_286,set_287,set_288,set_289,set_290,8).
 state_user(bs,sn,u,mksj,mkui,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_292,set_293,set_294,set_295,set_296,set_297,set_298,set_299,set_300,set_301,set_302,9).
 state_sensornode(u,sn,bs,mksj,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_304,set_305,set_306,set_307,set_308,set_309,set_310,set_311,set_312,set_313,set_314,11).
 state_basestation(sn,bs,u,mksj,mkui,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_316,set_317,set_318,set_319,set_320,set_321,set_322,set_323,set_324,set_325,set_326,12).
 state_user(bs,sn,u,mksj,mkui,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_328,set_329,set_330,set_331,set_332,set_333,set_334,set_335,set_336,set_337,set_338,13)


section rules:

step step_0 (SN,BS,U,MKsj,H,IDi,IDsj,Tj,Kj,APMi,GIdx,Wi,RNui,RNUsi,Dummy_T1,T2,Rui,Keyij,Ru,PWi,KUi,M1,Dummy_Set_133,Dummy_Set_134,Dummy_Set_135,Dummy_Set_136,Dummy_Set_137,Dummy_Set_138,Dummy_Set_139,Dummy_Set_140,Dummy_Set_141,Dummy_Set_142,Dummy_Set_143,SID,T1) :=
 state_sensornode(SN,BS,U,MKsj,H,0,IDi,IDsj,Tj,Kj,APMi,GIdx,Wi,RNui,RNUsi,Dummy_T1,T2,Rui,Keyij,Ru,PWi,KUi,M1,Dummy_Set_133,Dummy_Set_134,Dummy_Set_135,Dummy_Set_136,Dummy_Set_137,Dummy_Set_138,Dummy_Set_139,Dummy_Set_140,Dummy_Set_141,Dummy_Set_142,Dummy_Set_143,SID).
 iknows(start)
=[exists T1]=>
 state_sensornode(SN,BS,U,MKsj,H,1,IDi,IDsj,Tj,Kj,APMi,GIdx,Wi,RNui,RNUsi,T1,T2,Rui,Keyij,Ru,PWi,KUi,M1,Dummy_Set_133,Dummy_Set_134,Dummy_Set_135,Dummy_Set_136,Dummy_Set_137,Dummy_Set_138,Dummy_Set_139,Dummy_Set_140,Dummy_Set_141,Dummy_Set_142,Dummy_Set_143,SID).
 secret(Dummy_Set_133,subs1,Dummy_Set_134).
 secret(Dummy_Set_135,subs2,Dummy_Set_136).
 secret(Dummy_Set_137,subs3,Dummy_Set_138).
 secret(Dummy_Set_139,subs4,Dummy_Set_140).
 secret(Dummy_Set_141,subs5,U).
 secret(Dummy_Set_142,subs6,Dummy_Set_143).
 iknows(pair(SN,pair(BS,pair(IDsj,pair(Tj,scrypt(MKsj,pair(Kj,pair(IDsj,Tj)))))))).
 witness(SN,BS,sensornode_basestation,T1).
 contains(Kj,Dummy_Set_133).
 contains(SN,Dummy_Set_134).
 contains(BS,Dummy_Set_134).
 contains(MKsj,Dummy_Set_135).
 contains(SN,Dummy_Set_136).
 contains(BS,Dummy_Set_136).
 contains(RNui,Dummy_Set_137).
 contains(U,Dummy_Set_138).
 contains(BS,Dummy_Set_138).
 contains(APMi,Dummy_Set_139).
 contains(GIdx,Dummy_Set_139).
 contains(U,Dummy_Set_140).
 contains(BS,Dummy_Set_140).
 contains(PWi,Dummy_Set_141).
 contains(Ru,Dummy_Set_141).
 contains(RNUsi,Dummy_Set_142).
 contains(U,Dummy_Set_143).
 contains(SN,Dummy_Set_143)

step step_1 (SN,BS,U,MKsj,H,IDi,IDsj,Tj,Kj,APMi,GIdx,Wi,RNui,RNUsi,Dummy_T1,Dummy_T2,Rui,Keyij,Ru,PWi,KUi,Dummy_M1,Set_133,Set_134,Set_135,Set_136,Set_137,Set_138,Set_139,Set_140,Set_141,Set_142,Set_143,SID,T1,T2,M1) :=
 state_sensornode(SN,BS,U,MKsj,H,1,IDi,IDsj,Tj,Kj,APMi,GIdx,Wi,RNui,RNUsi,Dummy_T1,Dummy_T2,Rui,Keyij,Ru,PWi,KUi,Dummy_M1,Set_133,Set_134,Set_135,Set_136,Set_137,Set_138,Set_139,Set_140,Set_141,Set_142,Set_143,SID).
 iknows(pair(U,pair(SN,pair(IDi,pair(IDsj,pair(scrypt(Keyij,pair(IDi,pair(IDsj,pair(Rui,pair(GIdx,T1))))),apply(H,pair(IDi,pair(IDsj,pair(T1,pair(T2,pair(APMi,pair(MKsj,M1)))))))))))))
 =>
 state_sensornode(SN,BS,U,MKsj,H,2,IDi,IDsj,Tj,Kj,APMi,GIdx,Wi,RNui,RNUsi,T1,T2,Rui,Keyij,Ru,PWi,KUi,M1,Set_133,Set_134,Set_135,Set_136,Set_137,Set_138,Set_139,Set_140,Set_141,Set_142,Set_143,SID).
 request(U,SN,user_sensornode,T1,SID)

step step_2 (BS,SN,U,MKsj,MKui,H,Wi,RNui,RNUsi,Rui,Dummy_Keyij,T2,APMi,GIdx,Pu,PWi,KUi,IDsj,IDi,Kj,Tj,T1,M1,Ri,Ru,S,Tokenij,GIDx,Set_94,Set_95,Set_96,Set_97,Set_98,Set_99,Set_100,Set_101,Set_102,Set_103,Set_104,SID) :=
 state_basestation(BS,SN,U,MKsj,MKui,H,0,Wi,RNui,RNUsi,Rui,Dummy_Keyij,T2,APMi,GIdx,Pu,PWi,KUi,IDsj,IDi,Kj,Tj,T1,M1,Ri,Ru,S,Tokenij,GIDx,Set_94,Set_95,Set_96,Set_97,Set_98,Set_99,Set_100,Set_101,Set_102,Set_103,Set_104,SID).
 iknows(pair(SN,pair(BS,pair(IDsj,pair(Tj,scrypt(MKsj,pair(Kj,pair(IDsj,Tj))))))))
 =>
 state_basestation(BS,SN,U,MKsj,MKui,H,1,Wi,RNui,RNUsi,Rui,apply(H,pair(IDi,pair(IDsj,pair(MKsj,Kj)))),T2,APMi,GIdx,Pu,PWi,KUi,IDsj,IDi,Kj,Tj,T1,M1,Ri,Ru,S,Tokenij,GIDx,Set_94,Set_95,Set_96,Set_97,Set_98,Set_99,Set_100,Set_101,Set_102,Set_103,Set_104,SID)

step step_3 (BS,SN,U,MKsj,MKui,H,Wi,RNui,RNUsi,Rui,Keyij,T2,APMi,GIdx,Pu,PWi,KUi,IDsj,IDi,Kj,Tj,T1,M1,Dummy_Ri,Ru,S,Tokenij,GIDx,Dummy_Set_94,Dummy_Set_95,Dummy_Set_96,Dummy_Set_97,Dummy_Set_98,Dummy_Set_99,Dummy_Set_100,Dummy_Set_101,Dummy_Set_102,Dummy_Set_103,Dummy_Set_104,SID) :=
 state_basestation(BS,SN,U,MKsj,MKui,H,1,Wi,RNui,RNUsi,Rui,Keyij,T2,APMi,GIdx,Pu,PWi,KUi,IDsj,IDi,Kj,Tj,T1,M1,Dummy_Ri,Ru,S,Tokenij,GIDx,Dummy_Set_94,Dummy_Set_95,Dummy_Set_96,Dummy_Set_97,Dummy_Set_98,Dummy_Set_99,Dummy_Set_100,Dummy_Set_101,Dummy_Set_102,Dummy_Set_103,Dummy_Set_104,SID).
 iknows(pair(U,pair(BS,scrypt(MKui,pair(IDi,apply(H,pair(IDi,pair(PWi,Ru))))))))
 =>
 state_basestation(BS,SN,U,MKsj,MKui,H,2,Wi,RNui,RNUsi,Rui,Keyij,T2,APMi,GIdx,Pu,PWi,KUi,IDsj,IDi,Kj,Tj,T1,M1,xor(apply(H,pair(IDi,pair(PWi,Ru))),apply(H,pair(IDi,S))),Ru,S,Tokenij,GIDx,Dummy_Set_94,Dummy_Set_95,Dummy_Set_96,Dummy_Set_97,Dummy_Set_98,Dummy_Set_99,Dummy_Set_100,Dummy_Set_101,Dummy_Set_102,Dummy_Set_103,Dummy_Set_104,SID).
 iknows(pair(BS,pair(U,scrypt(MKui,pair(xor(apply(H,pair(IDi,pair(PWi,Ru))),apply(H,pair(IDi,S))),H))))).
 secret(Dummy_Set_94,subs1,Dummy_Set_95).
 secret(Dummy_Set_96,subs2,Dummy_Set_97).
 secret(Dummy_Set_98,subs3,Dummy_Set_99).
 secret(Dummy_Set_100,subs4,Dummy_Set_101).
 secret(Dummy_Set_102,subs5,U).
 secret(Dummy_Set_103,subs6,Dummy_Set_104).
 request(SN,BS,sensornode_basestation,Tj,SID).
 contains(Kj,Dummy_Set_94).
 contains(SN,Dummy_Set_95).
 contains(BS,Dummy_Set_95).
 contains(MKsj,Dummy_Set_96).
 contains(SN,Dummy_Set_97).
 contains(BS,Dummy_Set_97).
 contains(RNui,Dummy_Set_98).
 contains(U,Dummy_Set_99).
 contains(BS,Dummy_Set_99).
 contains(APMi,Dummy_Set_100).
 contains(GIdx,Dummy_Set_100).
 contains(U,Dummy_Set_101).
 contains(BS,Dummy_Set_101).
 contains(PWi,Dummy_Set_102).
 contains(Ru,Dummy_Set_102).
 contains(RNUsi,Dummy_Set_103).
 contains(U,Dummy_Set_104).
 contains(SN,Dummy_Set_104)

step step_4 (BS,SN,U,MKsj,MKui,H,Wi,Dummy_RNui,RNUsi,Rui,Keyij,Dummy_T2,APMi,GIdx,Pu,PWi,Dummy_KUi,IDsj,IDi,Kj,Tj,Dummy_T1,Dummy_M1,Ri,Ru,S,Dummy_Tokenij,GIDx,Set_94,Set_95,Set_96,Set_97,Set_98,Set_99,Set_100,Set_101,Set_102,Set_103,Set_104,SID,RNui,T2,T1,M1) :=
 state_basestation(BS,SN,U,MKsj,MKui,H,2,Wi,Dummy_RNui,RNUsi,Rui,Keyij,Dummy_T2,APMi,GIdx,Pu,PWi,Dummy_KUi,IDsj,IDi,Kj,Tj,Dummy_T1,Dummy_M1,Ri,Ru,S,Dummy_Tokenij,GIDx,Set_94,Set_95,Set_96,Set_97,Set_98,Set_99,Set_100,Set_101,Set_102,Set_103,Set_104,SID).
 iknows(pair(U,pair(BS,pair(scrypt(KUi,pair(GIdx,pair(M1,pair(apply(H,pair(xor(apply(H,pair(IDi,pair(PWi,Ru))),apply(H,pair(IDi,S))),pair(RNui,pair(GIDx,T1)))),RNui)))),T1))))
=[exists T2]=>
 state_basestation(BS,SN,U,MKsj,MKui,H,3,Wi,RNui,RNUsi,Rui,Keyij,T2,APMi,GIdx,Pu,PWi,xor(pair(apply(H,pair(IDi,S)),T1)),IDsj,IDi,Kj,Tj,T1,M1,Ri,Ru,S,apply(H,pair(IDi,pair(IDsj,pair(T1,pair(T2,pair(APMi,pair(MKsj,M1))))))),GIDx,Set_94,Set_95,Set_96,Set_97,Set_98,Set_99,Set_100,Set_101,Set_102,Set_103,Set_104,SID).
 iknows(pair(BS,pair(U,pair(scrypt(Dummy_KUi,pair(IDi,pair(IDsj,pair(Keyij,pair(apply(H,pair(IDi,pair(IDsj,pair(T1,pair(T2,pair(APMi,pair(MKsj,M1))))))),pair(APMi,pair(T1,T2))))))),T2)))).
 request(U,BS,user_basestation,T1,SID)

step step_5 (U,BS,SN,MKsj,MKui,H,IDi,Dummy_Wi,APMi,RNui,RNUsi,Pu,PWi,KUi,Rui,Keyij,IDsj,Kj,GIdx,RNuj,M1,M2,GIDx,Ru,S,T1,T2,Set_47,Set_48,Set_50,Set_51,Set_52,Set_53,Set_54,Set_55,Set_56,Set_57,Set_58,SID) :=
 state_user(U,BS,SN,MKsj,MKui,H,0,IDi,Dummy_Wi,APMi,RNui,RNUsi,Pu,PWi,KUi,Rui,Keyij,IDsj,Kj,GIdx,RNuj,M1,M2,GIDx,Ru,S,T1,T2,Set_47,Set_48,Set_50,Set_51,Set_52,Set_53,Set_54,Set_55,Set_56,Set_57,Set_58,SID).
 iknows(start)
 =>
 state_user(U,BS,SN,MKsj,MKui,H,1,IDi,apply(H,pair(IDi,pair(PWi,Ru))),APMi,RNui,RNUsi,Pu,PWi,KUi,Rui,Keyij,IDsj,Kj,GIdx,RNuj,M1,M2,GIDx,Ru,S,T1,T2,Set_47,Set_48,Set_50,Set_51,Set_52,Set_53,Set_54,Set_55,Set_56,Set_57,Set_58,SID).
 iknows(pair(U,pair(BS,scrypt(MKui,pair(IDi,apply(H,pair(IDi,pair(PWi,Ru))))))))

step step_6 (U,BS,SN,MKsj,MKui,H,IDi,Wi,APMi,Dummy_RNui,RNUsi,Pu,PWi,Dummy_KUi,Rui,Keyij,IDsj,Kj,GIdx,RNuj,Dummy_M1,Dummy_M2,GIDx,Ru,S,Dummy_T1,T2,Dummy_Set_47,Dummy_Set_48,Dummy_Set_50,Dummy_Set_51,Dummy_Set_52,Dummy_Set_53,Dummy_Set_54,Dummy_Set_55,Dummy_Set_56,Dummy_Set_57,Dummy_Set_58,SID,RNui,T1) :=
 state_user(U,BS,SN,MKsj,MKui,H,1,IDi,Wi,APMi,Dummy_RNui,RNUsi,Pu,PWi,Dummy_KUi,Rui,Keyij,IDsj,Kj,GIdx,RNuj,Dummy_M1,Dummy_M2,GIDx,Ru,S,Dummy_T1,T2,Dummy_Set_47,Dummy_Set_48,Dummy_Set_50,Dummy_Set_51,Dummy_Set_52,Dummy_Set_53,Dummy_Set_54,Dummy_Set_55,Dummy_Set_56,Dummy_Set_57,Dummy_Set_58,SID).
 iknows(pair(BS,pair(U,scrypt(MKui,pair(xor(apply(H,pair(IDi,pair(PWi,Ru))),apply(H,pair(IDi,S))),H)))))
=[exists RNui,T1]=>
 state_user(U,BS,SN,MKsj,MKui,H,2,IDi,Wi,APMi,RNui,RNUsi,Pu,PWi,xor(pair(apply(H,pair(IDi,S)),T1)),Rui,Keyij,IDsj,Kj,GIdx,RNuj,xor(pair(apply(H,pair(IDi,pair(PWi,Ru))),RNui)),apply(H,pair(xor(apply(H,pair(IDi,pair(PWi,Ru))),apply(H,pair(IDi,S))),pair(RNui,pair(GIDx,T1)))),GIDx,Ru,S,T1,T2,Dummy_Set_47,Dummy_Set_48,Dummy_Set_50,Dummy_Set_51,Dummy_Set_52,Dummy_Set_53,Dummy_Set_54,Dummy_Set_55,Dummy_Set_56,Dummy_Set_57,Dummy_Set_58,SID).
 secret(Dummy_Set_47,subs1,Dummy_Set_48).
 secret(Dummy_Set_50,subs2,Dummy_Set_51).
 secret(Dummy_Set_52,subs3,Dummy_Set_53).
 secret(Dummy_Set_54,subs4,Dummy_Set_55).
 secret(Dummy_Set_56,subs5,U).
 secret(Dummy_Set_57,subs6,Dummy_Set_58).
 iknows(pair(U,pair(BS,pair(scrypt(xor(pair(apply(H,pair(IDi,S)),T1)),pair(GIdx,pair(xor(pair(apply(H,pair(IDi,pair(PWi,Ru))),RNui)),pair(apply(H,pair(xor(apply(H,pair(IDi,pair(PWi,Ru))),apply(H,pair(IDi,S))),pair(RNui,pair(GIDx,T1)))),RNui)))),T1)))).
 witness(U,BS,user_basestation,T1).
 contains(Kj,Dummy_Set_47).
 contains(SN,Dummy_Set_48).
 contains(BS,Dummy_Set_48).
 contains(MKsj,Dummy_Set_50).
 contains(SN,Dummy_Set_51).
 contains(BS,Dummy_Set_51).
 contains(RNui,Dummy_Set_52).
 contains(U,Dummy_Set_53).
 contains(BS,Dummy_Set_53).
 contains(APMi,Dummy_Set_54).
 contains(GIdx,Dummy_Set_54).
 contains(U,Dummy_Set_55).
 contains(BS,Dummy_Set_55).
 contains(PWi,Dummy_Set_56).
 contains(Ru,Dummy_Set_56).
 contains(RNUsi,Dummy_Set_57).
 contains(U,Dummy_Set_58).
 contains(SN,Dummy_Set_58)

step step_7 (U,BS,SN,MKsj,MKui,H,IDi,Wi,APMi,RNui,RNUsi,Pu,PWi,Dummy_KUi,Rui,Keyij,IDsj,Kj,GIdx,RNuj,Dummy_M1,M2,GIDx,Ru,S,Dummy_T1,Dummy_T2,Set_47,Set_48,Set_50,Set_51,Set_52,Set_53,Set_54,Set_55,Set_56,Set_57,Set_58,SID,M1,T1,T2) :=
 state_user(U,BS,SN,MKsj,MKui,H,2,IDi,Wi,APMi,RNui,RNUsi,Pu,PWi,Dummy_KUi,Rui,Keyij,IDsj,Kj,GIdx,RNuj,Dummy_M1,M2,GIDx,Ru,S,Dummy_T1,Dummy_T2,Set_47,Set_48,Set_50,Set_51,Set_52,Set_53,Set_54,Set_55,Set_56,Set_57,Set_58,SID).
 iknows(pair(BS,pair(U,pair(scrypt(Dummy_KUi,pair(IDi,pair(IDsj,pair(Keyij,pair(apply(H,pair(IDi,pair(IDsj,pair(T1,pair(T2,pair(APMi,pair(MKsj,M1))))))),pair(APMi,pair(T1,T2))))))),T2))))
 =>
 state_user(U,BS,SN,MKsj,MKui,H,3,IDi,Wi,APMi,RNui,RNUsi,Pu,PWi,xor(pair(apply(H,pair(IDi,S)),T1)),Rui,Keyij,IDsj,Kj,GIdx,RNuj,M1,M2,GIDx,Ru,S,T1,T2,Set_47,Set_48,Set_50,Set_51,Set_52,Set_53,Set_54,Set_55,Set_56,Set_57,Set_58,SID).
 iknows(pair(U,pair(SN,pair(IDi,pair(IDsj,pair(scrypt(Keyij,pair(IDi,pair(IDsj,pair(Rui,pair(GIdx,T1))))),apply(H,pair(IDi,pair(IDsj,pair(T1,pair(T2,pair(APMi,pair(MKsj,M1))))))))))))).
 witness(U,SN,user_sensornode,T1)


section properties:

property secrecy_of_subs1 (MGoal,ASGoal) :=
 [] ((secret(MGoal,subs1,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_subs2 (MGoal,ASGoal) :=
 [] ((secret(MGoal,subs2,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_subs3 (MGoal,ASGoal) :=
 [] ((secret(MGoal,subs3,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_subs4 (MGoal,ASGoal) :=
 [] ((secret(MGoal,subs4,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_subs5 (MGoal,ASGoal) :=
 [] ((secret(MGoal,subs5,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_subs6 (MGoal,ASGoal) :=
 [] ((secret(MGoal,subs6,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property authentication_on_user_basestation (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,user_basestation,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,user_basestation,MGoal))
     /\ ((request(A1Goal,A2Goal,user_basestation,MGoal,SID1)
           /\ request(A1Goal,A2Goal,user_basestation,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_sensornode_user (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,sensornode_user,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,sensornode_user,MGoal))
     /\ ((request(A1Goal,A2Goal,sensornode_user,MGoal,SID1)
           /\ request(A1Goal,A2Goal,sensornode_user,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_user_sensornode (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,user_sensornode,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,user_sensornode,MGoal))
     /\ ((request(A1Goal,A2Goal,user_sensornode,MGoal,SID1)
           /\ request(A1Goal,A2Goal,user_sensornode,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_sensornode_basestation (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,sensornode_basestation,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,sensornode_basestation,MGoal))
     /\ ((request(A1Goal,A2Goal,sensornode_basestation,MGoal,SID1)
           /\ request(A1Goal,A2Goal,sensornode_basestation,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state secrecy_of_subs1 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,subs1,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_subs2 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,subs2,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_subs3 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,subs3,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_subs4 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,subs4,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_subs5 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,subs5,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_subs6 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,subs6,ASGoal) &
 not(contains(i,ASGoal))

attack_state authentication_on_user_basestation (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,user_basestation,MGoal,SID) &
 not(witness(A2Goal,A1Goal,user_basestation,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_user_basestation (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,user_basestation,MGoal,SID1).
 request(A1Goal,A2Goal,user_basestation,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_sensornode_user (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,sensornode_user,MGoal,SID) &
 not(witness(A2Goal,A1Goal,sensornode_user,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_sensornode_user (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,sensornode_user,MGoal,SID1).
 request(A1Goal,A2Goal,sensornode_user,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_user_sensornode (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,user_sensornode,MGoal,SID) &
 not(witness(A2Goal,A1Goal,user_sensornode,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_user_sensornode (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,user_sensornode,MGoal,SID1).
 request(A1Goal,A2Goal,user_sensornode,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_sensornode_basestation (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,sensornode_basestation,MGoal,SID) &
 not(witness(A2Goal,A1Goal,sensornode_basestation,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_sensornode_basestation (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,sensornode_basestation,MGoal,SID1).
 request(A1Goal,A2Goal,sensornode_basestation,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

