%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfile87TEVP

section signature:

state_dest: agent * agent * agent * agent * symmetric_key * symmetric_key * symmetric_key * symmetric_key * symmetric_key * public_key * public_key * public_key * public_key * hash_func * nat * text * message * set(agent) * crypt(public_key,symmetric_key) * crypt(inv(public_key),pair(symmetric_key,pair(public_key,agent))) * crypt(public_key,symmetric_key) * crypt(inv(public_key),pair(symmetric_key,pair(public_key,agent))) * crypt(public_key,symmetric_key) * crypt(inv(public_key),pair(symmetric_key,pair(public_key,agent))) * crypt(public_key,symmetric_key) * crypt(inv(public_key),pair(symmetric_key,pair(public_key,agent))) * crypt(public_key,symmetric_key) * crypt(inv(public_key),pair(symmetric_key,pair(public_key,agent))) * set(agent) * nat -> fact
state_router2: agent * agent * agent * agent * symmetric_key * symmetric_key * public_key * public_key * public_key * nat * text * set(agent) * crypt(public_key,symmetric_key) * crypt(inv(public_key),pair(symmetric_key,pair(public_key,agent))) * crypt(public_key,symmetric_key) * crypt(inv(public_key),pair(symmetric_key,pair(public_key,agent))) * crypt(public_key,symmetric_key) * crypt(inv(public_key),pair(symmetric_key,pair(public_key,agent))) * crypt(public_key,symmetric_key) * crypt(inv(public_key),pair(symmetric_key,pair(public_key,agent))) * set(agent) * set(agent) * nat -> fact
state_router1: agent * agent * agent * agent * symmetric_key * symmetric_key * public_key * public_key * public_key * nat * text * set(agent) * crypt(public_key,symmetric_key) * crypt(inv(public_key),pair(symmetric_key,pair(public_key,agent))) * crypt(public_key,symmetric_key) * crypt(inv(public_key),pair(symmetric_key,pair(public_key,agent))) * set(agent) * set(agent) * nat -> fact
state_source: agent * agent * agent * agent * public_key * public_key * public_key * public_key * hash_func * symmetric_key * symmetric_key * symmetric_key * nat * text * message * message * set(agent) * crypt(public_key,symmetric_key) * crypt(inv(public_key),pair(symmetric_key,pair(public_key,agent))) * crypt(public_key,symmetric_key) * crypt(inv(public_key),pair(symmetric_key,pair(public_key,agent))) * crypt(public_key,symmetric_key) * crypt(inv(public_key),pair(symmetric_key,pair(public_key,agent))) * crypt(public_key,symmetric_key) * crypt(inv(public_key),pair(symmetric_key,pair(public_key,agent))) * crypt(public_key,symmetric_key) * crypt(inv(public_key),pair(symmetric_key,pair(public_key,agent))) * nat -> fact


section types:

a5, d_r2_kd2, a4, a3, d_r1_kd1, a2, a1, s_d_k, s_r2_ks2, s_r1_ks1: protocol_id
dummy_set: set(message)
set_202, set_244, set_235, set_234, set_223, set_222: set
SigDR2, SigSR2, SigDR1, SigSR1, SigD, Dummy_SigDR2, Dummy_SigDR1, Dummy_SigD, Dummy_SigSR2, Dummy_SigSR1: crypt(inv(public_key),pair(symmetric_key,pair(public_key,agent)))
h, H: hash_func
EncDR2, EncSR2, EncDR1, EncSR1, EncD, Dummy_EncDR2, Dummy_EncDR1, Dummy_EncD, Dummy_EncSR2, Dummy_EncSR1: crypt(public_key,symmetric_key)
ASGoal, Set_143, Path, Set_106, Set_104, Set_75, Set_72, Dummy_Set_143, Dummy_Set_106, Dummy_Set_104, Dummy_Set_75, Dummy_Set_72, Dummy_Path: set(agent)
SID2, SID1, SID, 8, State, 6, 4, 7, 5, 3, 2, 1, 0, Dummy_State: nat
k, ks1, ks2, kd1, kd2, K, Ks1, Ks2, Kd1, Kd2, Dummy_K, Dummy_Kd2, Dummy_Ks2, Dummy_Kd1, Dummy_Ks1, dummy_sk: symmetric_key
pks, pkd, ks, kd, kr1, kr2, ki, Pkd, Pks, Kd, Ks, Kr2, Kr1, Dummy_Pks, Dummy_Pkd, dummy_pk: public_key
A2Goal, A1Goal, s, r1, r2, d, S, R1, R2, D, dummy_agent, i: agent
MGoal, SessionIDd, start, SessionIDs, Dummy_SessionIDd, Dummy_SessionIDs, dummy_msg: message
T, Dummy_T, dummy_nonce: text


section inits:

initial_state init1 := 
 iknows(start).
 iknows(s).
 iknows(r1).
 iknows(r2).
 iknows(d).
 iknows(h).
 iknows(ki).
 iknows(i).
 state_source(s,r1,r2,d,pks,pkd,ks,kd,h,ks1,ks2,k,0,dummy_nonce,dummy_msg,dummy_msg,set_202,crypt(dummy_pk,dummy_sk),crypt(inv(dummy_pk),pair(dummy_sk,pair(dummy_pk,dummy_agent))),crypt(dummy_pk,dummy_sk),crypt(inv(dummy_pk),pair(dummy_sk,pair(dummy_pk,dummy_agent))),crypt(dummy_pk,dummy_sk),crypt(inv(dummy_pk),pair(dummy_sk,pair(dummy_pk,dummy_agent))),crypt(dummy_pk,dummy_sk),crypt(inv(dummy_pk),pair(dummy_sk,pair(dummy_pk,dummy_agent))),crypt(dummy_pk,dummy_sk),crypt(inv(dummy_pk),pair(dummy_sk,pair(dummy_pk,dummy_agent))),3).
 state_router1(r1,s,r2,d,ks1,kd1,kr1,pks,pkd,4,dummy_nonce,dummy_set,crypt(dummy_pk,dummy_sk),crypt(inv(dummy_pk),pair(dummy_sk,pair(dummy_pk,dummy_agent))),crypt(dummy_pk,dummy_sk),crypt(inv(dummy_pk),pair(dummy_sk,pair(dummy_pk,dummy_agent))),set_222,set_223,4).
 state_router2(r2,s,r1,d,ks2,kd2,kr2,pks,pkd,5,dummy_nonce,dummy_set,crypt(dummy_pk,dummy_sk),crypt(inv(dummy_pk),pair(dummy_sk,pair(dummy_pk,dummy_agent))),crypt(dummy_pk,dummy_sk),crypt(inv(dummy_pk),pair(dummy_sk,pair(dummy_pk,dummy_agent))),crypt(dummy_pk,dummy_sk),crypt(inv(dummy_pk),pair(dummy_sk,pair(dummy_pk,dummy_agent))),crypt(dummy_pk,dummy_sk),crypt(inv(dummy_pk),pair(dummy_sk,pair(dummy_pk,dummy_agent))),set_234,set_235,5).
 state_dest(d,s,r1,r2,k,ks1,ks2,kd1,kd2,pkd,pks,kd,ks,h,1,dummy_nonce,dummy_msg,dummy_set,crypt(dummy_pk,dummy_sk),crypt(inv(dummy_pk),pair(dummy_sk,pair(dummy_pk,dummy_agent))),crypt(dummy_pk,dummy_sk),crypt(inv(dummy_pk),pair(dummy_sk,pair(dummy_pk,dummy_agent))),crypt(dummy_pk,dummy_sk),crypt(inv(dummy_pk),pair(dummy_sk,pair(dummy_pk,dummy_agent))),crypt(dummy_pk,dummy_sk),crypt(inv(dummy_pk),pair(dummy_sk,pair(dummy_pk,dummy_agent))),crypt(dummy_pk,dummy_sk),crypt(inv(dummy_pk),pair(dummy_sk,pair(dummy_pk,dummy_agent))),set_244,6)


section rules:

step step_0 (S,R1,R2,D,Pks,Pkd,Ks,Kd,H,Ks1,Ks2,K,Dummy_T,Dummy_SessionIDs,SessionIDd,Dummy_Path,EncSR1,SigSR1,EncDR1,SigDR1,EncSR2,SigSR2,EncDR2,SigDR2,EncD,SigD,SID,T) :=
 state_source(S,R1,R2,D,Pks,Pkd,Ks,Kd,H,Ks1,Ks2,K,0,Dummy_T,Dummy_SessionIDs,SessionIDd,Dummy_Path,EncSR1,SigSR1,EncDR1,SigDR1,EncSR2,SigSR2,EncDR2,SigDR2,EncD,SigD,SID).
 iknows(start)
=[exists T]=>
 state_source(S,R1,R2,D,Pks,Pkd,Ks,Kd,H,Ks1,Ks2,K,2,T,apply(H,pair(Pks,pair(Dummy_Path,T))),SessionIDd,Dummy_Path,EncSR1,SigSR1,EncDR1,SigDR1,EncSR2,SigSR2,EncDR2,SigDR2,EncD,SigD,SID).
 iknows(pair(Pks,pair(Dummy_Path,pair(T,crypt(inv(Ks),pair(Pks,pair(Dummy_Path,T))))))).
 contains(S,Dummy_Path).
 contains(R1,Dummy_Path).
 contains(R2,Dummy_Path).
 contains(D,Dummy_Path)

step step_1 (S,R1,R2,D,Pks,Dummy_Pkd,Ks,Kd,H,Ks1,Ks2,K,Dummy_T,SessionIDs,Dummy_SessionIDd,Dummy_Path,EncSR1,SigSR1,EncDR1,SigDR1,EncSR2,SigSR2,EncDR2,SigDR2,EncD,SigD,SID,Pkd,T,SessionIDd,Path) :=
 state_source(S,R1,R2,D,Pks,Dummy_Pkd,Ks,Kd,H,Ks1,Ks2,K,3,Dummy_T,SessionIDs,Dummy_SessionIDd,Dummy_Path,EncSR1,SigSR1,EncDR1,SigDR1,EncSR2,SigSR2,EncDR2,SigDR2,EncD,SigD,SID).
 iknows(pair(Pkd,pair(Path,pair(T,pair(crypt(inv(Kd),pair(Pks,pair(Pkd,Path))),SessionIDd)))))
 =>
 state_source(S,R1,R2,D,Pks,Pkd,Ks,Kd,H,Ks1,Ks2,K,5,T,SessionIDs,SessionIDd,Path,EncSR1,SigSR1,EncDR1,SigDR1,EncSR2,SigSR2,EncDR2,SigDR2,EncD,SigD,SID).
 iknows(Pks)

step step_2 (S,R1,R2,D,Pks,Pkd,Ks,Kd,H,Ks1,Ks2,K,T,SessionIDs,SessionIDd,Path,Dummy_EncSR1,Dummy_SigSR1,EncDR1,SigDR1,Dummy_EncSR2,Dummy_SigSR2,EncDR2,SigDR2,Dummy_EncD,Dummy_SigD,SID,EncSR1,SigSR1,EncSR2,SigSR2,EncD,SigD) :=
 state_source(S,R1,R2,D,Pks,Pkd,Ks,Kd,H,Ks1,Ks2,K,7,T,SessionIDs,SessionIDd,Path,Dummy_EncSR1,Dummy_SigSR1,EncDR1,SigDR1,Dummy_EncSR2,Dummy_SigSR2,EncDR2,SigDR2,Dummy_EncD,Dummy_SigD,SID).
 iknows(pair(EncSR1,pair(SigSR1,pair(EncSR2,pair(SigSR2,pair(EncD,SigD))))))
 =>
 state_source(S,R1,R2,D,Pks,Pkd,Ks,Kd,H,Ks1,Ks2,K,7,T,SessionIDs,SessionIDd,Path,EncSR1,SigSR1,EncDR1,SigDR1,EncSR2,SigSR2,EncDR2,SigDR2,EncD,SigD,SID).
 witness(S,R1,s_r1_ks1,Ks1).
 witness(S,R2,s_r2_ks2,Ks2).
 witness(S,D,s_d_k,K)

step step_3 (R1,S,R2,D,Dummy_Ks1,Dummy_Kd1,Kr1,Dummy_Pks,Dummy_Pkd,Dummy_T,Dummy_Path,Dummy_EncSR1,Dummy_SigSR1,Dummy_EncDR1,Dummy_SigDR1,Dummy_Set_72,Dummy_Set_75,SID,Ks1,Kd1,Pks,Path) :=
 state_router1(R1,S,R2,D,Dummy_Ks1,Dummy_Kd1,Kr1,Dummy_Pks,Dummy_Pkd,4,Dummy_T,Dummy_Path,Dummy_EncSR1,Dummy_SigSR1,Dummy_EncDR1,Dummy_SigDR1,Dummy_Set_72,Dummy_Set_75,SID).
 iknows(Pks).
 contains(R1,Path)
=[exists Kd1,Ks1]=>
 state_router1(R1,S,R2,D,Ks1,Kd1,Kr1,Pks,Dummy_Pkd,6,Dummy_T,Path,crypt(Pks,Ks1),crypt(inv(Kr1),pair(Ks1,pair(Pks,S))),crypt(Pkd,Kd1),crypt(inv(Kr1),pair(Kd1,pair(Pkd,D))),Dummy_Set_72,Dummy_Set_75,SID).
 iknows(pair(Pks,pair(Pkd,pair(Path,pair(T,pair(crypt(Pks,Ks1),pair(crypt(inv(Kr1),pair(Ks1,pair(Pks,S))),pair(crypt(Pkd,Kd1),crypt(inv(Kr1),pair(Kd1,pair(Pkd,D))))))))))).
 secret(Ks1,a1,Dummy_Set_72).
 secret(Kd1,a2,Dummy_Set_75).
 request(R1,S,s_r1_ks1,Ks1,SID).
 request(R1,D,d_r1_kd1,Kd1,SID).
 contains(R1,Dummy_Set_72).
 contains(S,Dummy_Set_72).
 contains(R1,Dummy_Set_75).
 contains(D,Dummy_Set_75).
 contains(R1,Path)

step step_4 (R2,S,R1,D,Dummy_Ks2,Dummy_Kd2,Kr2,Dummy_Pks,Dummy_Pkd,Dummy_T,Dummy_Path,Dummy_EncSR1,Dummy_SigSR1,Dummy_EncDR1,Dummy_SigDR1,Dummy_EncSR2,Dummy_SigSR2,Dummy_EncDR2,Dummy_SigDR2,Dummy_Set_104,Dummy_Set_106,SID,Ks2,Kd2,Pks,Pkd,T,Path,EncSR1,SigSR1,EncDR1,SigDR1) :=
 state_router2(R2,S,R1,D,Dummy_Ks2,Dummy_Kd2,Kr2,Dummy_Pks,Dummy_Pkd,5,Dummy_T,Dummy_Path,Dummy_EncSR1,Dummy_SigSR1,Dummy_EncDR1,Dummy_SigDR1,Dummy_EncSR2,Dummy_SigSR2,Dummy_EncDR2,Dummy_SigDR2,Dummy_Set_104,Dummy_Set_106,SID).
 iknows(pair(Pks,pair(Pkd,pair(Path,pair(T,pair(EncSR1,pair(SigSR1,pair(EncDR1,SigDR1)))))))).
 contains(R2,Path)
=[exists Kd2,Ks2]=>
 state_router2(R2,S,R1,D,Ks2,Kd2,Kr2,Pks,Pkd,7,T,Path,EncSR1,SigSR1,EncDR1,SigDR1,crypt(Pks,Ks2),crypt(inv(Kr2),pair(Ks2,pair(Pks,S))),crypt(Pkd,Kd2),crypt(inv(Kr2),pair(Kd2,pair(Pkd,D))),Dummy_Set_104,Dummy_Set_106,SID).
 iknows(pair(Pks,pair(Pkd,pair(Path,pair(T,pair(EncSR1,pair(SigSR1,pair(EncDR1,pair(SigDR1,pair(crypt(Pks,Ks2),pair(crypt(inv(Kr2),pair(Ks2,pair(Pks,S))),pair(crypt(Pkd,Kd2),crypt(inv(Kr2),pair(Kd2,pair(Pkd,D))))))))))))))).
 secret(Ks2,a3,Dummy_Set_104).
 secret(Kd2,a4,Dummy_Set_106).
 request(R2,S,s_r2_ks2,Ks2,SID).
 request(R2,D,d_r2_kd2,Kd2,SID).
 contains(R2,Dummy_Set_104).
 contains(S,Dummy_Set_104).
 contains(R2,Dummy_Set_106).
 contains(D,Dummy_Set_106).
 contains(R2,Path)

step step_5 (D,S,R1,R2,K,Ks1,Ks2,Kd1,Kd2,Pkd,Pks,Kd,Ks,H,Dummy_T,Dummy_SessionIDd,Dummy_Path,EncD,SigD,EncSR1,SigSR1,EncDR1,SigDR1,EncSR2,SigSR2,EncDR2,SigDR2,Set_143,SID,T,Path) :=
 state_dest(D,S,R1,R2,K,Ks1,Ks2,Kd1,Kd2,Pkd,Pks,Kd,Ks,H,1,Dummy_T,Dummy_SessionIDd,Dummy_Path,EncD,SigD,EncSR1,SigSR1,EncDR1,SigDR1,EncSR2,SigSR2,EncDR2,SigDR2,Set_143,SID).
 iknows(pair(Pks,pair(Path,pair(T,crypt(inv(Ks),pair(Pks,pair(Path,T)))))))
 =>
 state_dest(D,S,R1,R2,K,Ks1,Ks2,Kd1,Kd2,Pkd,Pks,Kd,Ks,H,3,T,apply(H,pair(Pkd,pair(Path,T))),Path,EncD,SigD,EncSR1,SigSR1,EncDR1,SigDR1,EncSR2,SigSR2,EncDR2,SigDR2,Set_143,SID).
 iknows(pair(Pkd,pair(Path,pair(T,pair(crypt(inv(Kd),pair(Pks,pair(Pkd,Path))),apply(H,pair(Pkd,pair(Path,T))))))))

step step_6 (D,S,R1,R2,Dummy_K,Ks1,Ks2,Kd1,Kd2,Dummy_Pkd,Dummy_Pks,Kd,Ks,H,Dummy_T,SessionIDd,Dummy_Path,Dummy_EncD,Dummy_SigD,Dummy_EncSR1,Dummy_SigSR1,Dummy_EncDR1,Dummy_SigDR1,Dummy_EncSR2,Dummy_SigSR2,Dummy_EncDR2,Dummy_SigDR2,Dummy_Set_143,SID,K,Pkd,Pks,T,Path,EncSR1,SigSR1,EncDR1,SigDR1,EncSR2,SigSR2,EncDR2,SigDR2) :=
 state_dest(D,S,R1,R2,Dummy_K,Ks1,Ks2,Kd1,Kd2,Dummy_Pkd,Dummy_Pks,Kd,Ks,H,6,Dummy_T,SessionIDd,Dummy_Path,Dummy_EncD,Dummy_SigD,Dummy_EncSR1,Dummy_SigSR1,Dummy_EncDR1,Dummy_SigDR1,Dummy_EncSR2,Dummy_SigSR2,Dummy_EncDR2,Dummy_SigDR2,Dummy_Set_143,SID).
 iknows(pair(Pks,pair(Pkd,pair(Path,pair(T,pair(EncSR1,pair(SigSR1,pair(EncDR1,pair(SigDR1,pair(EncSR2,pair(SigSR2,pair(EncDR2,SigDR2)))))))))))).
 contains(D,Path)
=[exists K]=>
 state_dest(D,S,R1,R2,K,Ks1,Ks2,Kd1,Kd2,Pkd,Pks,Kd,Ks,H,8,T,SessionIDd,Path,crypt(Pks,K),crypt(inv(Kd),pair(K,pair(Pks,S))),EncSR1,SigSR1,EncDR1,SigDR1,EncSR2,SigSR2,EncDR2,SigDR2,Dummy_Set_143,SID).
 iknows(pair(EncSR1,pair(SigSR1,pair(EncSR2,pair(SigSR2,pair(crypt(Pks,K),crypt(inv(Kd),pair(K,pair(Pks,S))))))))).
 secret(K,a5,Dummy_Set_143).
 request(D,S,s_d_k,K,SID).
 witness(D,R1,d_r1_kd1,Kd1).
 witness(D,R2,d_r2_kd2,Kd2).
 contains(D,Dummy_Set_143).
 contains(S,Dummy_Set_143).
 contains(D,Path)


section properties:

property secrecy_of_a1 (MGoal,ASGoal) :=
 [] ((secret(MGoal,a1,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_a2 (MGoal,ASGoal) :=
 [] ((secret(MGoal,a2,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_a3 (MGoal,ASGoal) :=
 [] ((secret(MGoal,a3,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_a4 (MGoal,ASGoal) :=
 [] ((secret(MGoal,a4,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_a5 (MGoal,ASGoal) :=
 [] ((secret(MGoal,a5,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property authentication_on_s_r1_ks1 (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,s_r1_ks1,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,s_r1_ks1,MGoal))
     /\ ((request(A1Goal,A2Goal,s_r1_ks1,MGoal,SID1)
           /\ request(A1Goal,A2Goal,s_r1_ks1,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_s_r2_ks2 (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,s_r2_ks2,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,s_r2_ks2,MGoal))
     /\ ((request(A1Goal,A2Goal,s_r2_ks2,MGoal,SID1)
           /\ request(A1Goal,A2Goal,s_r2_ks2,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_s_d_k (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,s_d_k,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,s_d_k,MGoal))
     /\ ((request(A1Goal,A2Goal,s_d_k,MGoal,SID1)
           /\ request(A1Goal,A2Goal,s_d_k,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_d_r1_kd1 (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,d_r1_kd1,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,d_r1_kd1,MGoal))
     /\ ((request(A1Goal,A2Goal,d_r1_kd1,MGoal,SID1)
           /\ request(A1Goal,A2Goal,d_r1_kd1,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_d_r2_kd2 (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,d_r2_kd2,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,d_r2_kd2,MGoal))
     /\ ((request(A1Goal,A2Goal,d_r2_kd2,MGoal,SID1)
           /\ request(A1Goal,A2Goal,d_r2_kd2,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state secrecy_of_a1 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,a1,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_a2 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,a2,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_a3 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,a3,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_a4 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,a4,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_a5 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,a5,ASGoal) &
 not(contains(i,ASGoal))

attack_state authentication_on_s_r1_ks1 (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,s_r1_ks1,MGoal,SID) &
 not(witness(A2Goal,A1Goal,s_r1_ks1,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_s_r1_ks1 (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,s_r1_ks1,MGoal,SID1).
 request(A1Goal,A2Goal,s_r1_ks1,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_s_r2_ks2 (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,s_r2_ks2,MGoal,SID) &
 not(witness(A2Goal,A1Goal,s_r2_ks2,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_s_r2_ks2 (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,s_r2_ks2,MGoal,SID1).
 request(A1Goal,A2Goal,s_r2_ks2,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_s_d_k (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,s_d_k,MGoal,SID) &
 not(witness(A2Goal,A1Goal,s_d_k,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_s_d_k (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,s_d_k,MGoal,SID1).
 request(A1Goal,A2Goal,s_d_k,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_d_r1_kd1 (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,d_r1_kd1,MGoal,SID) &
 not(witness(A2Goal,A1Goal,d_r1_kd1,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_d_r1_kd1 (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,d_r1_kd1,MGoal,SID1).
 request(A1Goal,A2Goal,d_r1_kd1,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_d_r2_kd2 (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,d_r2_kd2,MGoal,SID) &
 not(witness(A2Goal,A1Goal,d_r2_kd2,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_d_r2_kd2 (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,d_r2_kd2,MGoal,SID1).
 request(A1Goal,A2Goal,d_r2_kd2,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

