%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfileNK4CE3

section signature:

state_verifier: agent * agent * agent * hash_func * hash_func * nat * text * text * text * text * text * text * text * text * text * text * text * set(text) * nat -> fact
state_proxysigner: agent * agent * agent * hash_func * hash_func * nat * text * text * text * text * text * text * text * text * text * text * nat -> fact
state_originalsigner: agent * agent * agent * hash_func * hash_func * nat * text * text * text * text * text * text * nat -> fact


section types:

ASGoal: set(agent)
MGoal, start: message
alice_bob_na, bob_alice_nb, bob_verifier_nc, verifier_bob_nd, subs1, subs2: protocol_id
Dummy_R1, Dummy_M, Dummy_R, dummy_nonce, R, P, XA, Q, YA, Mw, M, R1, XB, Y1, Y2: text
h, f, F, H: hash_func
set_98, set_109, set_107, set_103: set
a, b, v, A, B, V, i: agent
5, SID, 4, Dummy_State, 3, State, 1, 0, 17, 15, 12, 11, 9, 8: nat
Set_67, Dummy_Set_67: set(text)


section inits:

initial_state init1 := 
 iknows(start).
 iknows(a).
 iknows(b).
 iknows(v).
 iknows(h).
 iknows(f).
 iknows(i).
 state_originalsigner(a,b,v,h,f,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,3).
 state_proxysigner(b,a,v,h,f,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,4).
 state_verifier(v,a,b,h,f,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_98,5).
 state_proxysigner(b,i,v,h,f,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,8).
 state_verifier(v,i,b,h,f,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_103,9).
 state_originalsigner(a,b,i,h,f,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,11).
 state_proxysigner(b,a,i,h,f,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,12).
 state_originalsigner(a,i,v,h,f,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,15).
 state_verifier(v,a,i,h,f,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_109,17)


section rules:

step step_0 (A,B,V,H,F,Dummy_R,P,XA,Q,YA,Mw,SID,R) :=
 state_originalsigner(A,B,V,H,F,0,Dummy_R,P,XA,Q,YA,Mw,SID).
 iknows(start)
=[exists R]=>
 state_originalsigner(A,B,V,H,F,1,R,P,XA,Q,YA,Mw,SID).
 iknows(pair(R,pair(Mw,pair(apply(F,pair(R,P)),Q))))

step step_1 (B,A,V,F,H,Dummy_R,P,XA,Q,YA,Mw,Dummy_M,Dummy_R1,XB,Y1,SID,R,M,R1) :=
 state_proxysigner(B,A,V,F,H,0,Dummy_R,P,XA,Q,YA,Mw,Dummy_M,Dummy_R1,XB,Y1,SID).
 iknows(pair(R,pair(Mw,pair(apply(F,pair(R,P)),Q))))
=[exists R1,M]=>
 state_proxysigner(B,A,V,F,H,1,R,P,XA,Q,YA,Mw,M,R1,XB,Y1,SID).
 iknows(pair(R,pair(M,pair(apply(F,pair(R1,P)),pair(R1,Q)))))

step step_2 (V,A,B,H,F,Dummy_R,P,XA,Q,YA,Mw,Dummy_M,Dummy_R1,XB,Y1,Y2,Dummy_Set_67,SID,R,M,R1) :=
 state_verifier(V,A,B,H,F,0,Dummy_R,P,XA,Q,YA,Mw,Dummy_M,Dummy_R1,XB,Y1,Y2,Dummy_Set_67,SID).
 iknows(pair(R,pair(M,pair(apply(F,pair(R1,P)),pair(R1,Q)))))
 =>
 state_verifier(V,A,B,H,F,1,R,P,XA,Q,YA,Mw,M,R1,XB,Y1,Y2,Dummy_Set_67,SID).
 secret(Dummy_Set_67,subs1,A).
 contains(R,Dummy_Set_67).
 contains(XA,Dummy_Set_67)


section properties:

property secrecy_of_subs1 (MGoal,ASGoal) :=
 [] ((secret(MGoal,subs1,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))


section attack_states:

attack_state secrecy_of_subs1 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,subs1,ASGoal) &
 not(contains(i,ASGoal))

