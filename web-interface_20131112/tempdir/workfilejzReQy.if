%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfilejzReQy

section signature:

state_verifier: agent * agent * agent * hash_func * hash_func * nat * text * text * text * text * text * text * text * text * text * text * text * set(text) * set(text) * nat -> fact
state_proxysigner: agent * agent * agent * hash_func * hash_func * nat * text * text * text * text * text * text * text * text * text * text * text * set(text) * set(text) * nat -> fact
state_originalsigner: agent * agent * agent * hash_func * hash_func * nat * text * text * text * text * text * set(text) * nat -> fact


section types:

ASGoal: set(agent)
MGoal, start: message
alice_bob_na, bob_alice_nb, bob_verifier_nc, verifier_bob_nd, subs1, subs2: protocol_id
Set_80, Set_79, Set_54, Set_53, Set_27, Dummy_Set_80, Dummy_Set_79, Dummy_Set_54, Dummy_Set_53, Dummy_Set_27: set(text)
h, f, F, H: hash_func
R, P, X0, Mw, Q, X1, X2, M, R1, Y0, Y1, Dummy_R1, Dummy_M, Dummy_R, dummy_nonce: text
set_146, set_145, set_143, set_142, set_141, set_139, set_138, set_136, set_135, set_134, set_133, set_132, set_130, set_129, set_124, set_123, set_116, set_115, set_114, set_107, set_106: set
5, 4, State, 3, 2, 12, 11, 9, 7, 1, 0, SID, Dummy_State, SID2, SID1: nat
a, b, v, A, B, V, i, A2Goal, A1Goal: agent


section inits:

initial_state init1 := 
 iknows(start).
 iknows(a).
 iknows(b).
 iknows(v).
 iknows(h).
 iknows(f).
 iknows(i).
 state_originalsigner(a,b,v,h,f,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_106,3).
 state_proxysigner(b,a,v,h,f,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_114,set_115,4).
 state_verifier(v,a,b,h,f,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_123,set_124,5).
 state_originalsigner(a,i,v,h,f,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_129,7).
 state_verifier(v,a,i,h,f,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_135,set_136,9).
 state_originalsigner(a,b,i,h,f,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_138,11).
 state_proxysigner(b,a,i,h,f,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_141,set_142,12)


section rules:

step step_0 (A,B,V,H,F,Dummy_R,P,X0,Mw,Q,Dummy_Set_27,SID,R) :=
 state_originalsigner(A,B,V,H,F,0,Dummy_R,P,X0,Mw,Q,Dummy_Set_27,SID).
 iknows(start)
=[exists R]=>
 state_originalsigner(A,B,V,H,F,1,R,P,X0,Mw,Q,Dummy_Set_27,SID).
 secret(Dummy_Set_27,subs1,A).
 iknows(pair(Set_29,Q)).
 witness(A,B,bob_alice_nb,R).
 contains(R,Dummy_Set_27).
 contains(X0,Dummy_Set_27).
 contains(pair(Mw,pair(apply(F,pair(R,P)),apply(F,pair(R,pair(X0,apply(H,pair(Mw,apply(F,pair(R,P))))))))),Set_29)

step step_1 (B,A,V,F,H,Dummy_R,P,X0,Mw,Q,X1,X2,Dummy_M,Dummy_R1,Y0,Y1,Dummy_Set_53,Dummy_Set_54,SID,R,M,R1) :=
 state_proxysigner(B,A,V,F,H,2,Dummy_R,P,X0,Mw,Q,X1,X2,Dummy_M,Dummy_R1,Y0,Y1,Dummy_Set_53,Dummy_Set_54,SID).
 iknows(pair(Mw,pair(apply(F,pair(R,P)),pair(apply(F,pair(R,pair(X0,apply(H,pair(Mw,apply(F,pair(R,P))))))),Q))))
=[exists R1,M]=>
 state_proxysigner(B,A,V,F,H,3,R,P,X0,Mw,Q,X1,X2,M,R1,Y0,Y1,Dummy_Set_53,Dummy_Set_54,SID).
 secret(Dummy_Set_53,subs1,A).
 secret(Dummy_Set_54,subs2,B).
 iknows(pair(Set_55,Q)).
 witness(B,V,verifier_bob_nd,x2).
 contains(R,Dummy_Set_53).
 contains(X0,Dummy_Set_53).
 contains(X2,Dummy_Set_54).
 contains(R1,Dummy_Set_54).
 contains(pair(apply(F,pair(R,apply(H,pair(Mw,pair(apply(F,pair(R,P)),pair(X0,X2)))))),pair(apply(H,pair(Dummy_M,Mw)),apply(F,pair(R1,pair(apply(H,pair(R,P)),apply(H,pair(Mw,pair(apply(F,pair(R,P)),pair(Y0,Y1))))))))),Set_55)

step step_2 (V,A,B,H,F,Dummy_R,P,X0,Mw,Q,X1,X2,M,Dummy_R1,Y0,Y1,Dummy_Set_79,Dummy_Set_80,SID,R,R1) :=
 state_verifier(V,A,B,H,F,4,Dummy_R,P,X0,Mw,Q,X1,X2,M,Dummy_R1,Y0,Y1,Dummy_Set_79,Dummy_Set_80,SID).
 iknows(pair(apply(F,pair(R,apply(H,pair(Mw,pair(apply(F,pair(R,P)),pair(X0,X2)))))),pair(apply(H,pair(M,Mw)),pair(apply(F,pair(R1,pair(apply(H,pair(R,P)),apply(H,pair(Mw,pair(apply(F,pair(R,P)),pair(Y0,Y1))))))),Q))))
 =>
 state_verifier(V,A,B,H,F,5,R,P,X0,Mw,Q,X1,X2,M,R1,Y0,Y1,Dummy_Set_79,Dummy_Set_80,SID).
 secret(Dummy_Set_79,subs1,A).
 secret(Dummy_Set_80,subs2,B).
 contains(R,Dummy_Set_79).
 contains(X0,Dummy_Set_79).
 contains(X2,Dummy_Set_80).
 contains(R1,Dummy_Set_80)


section properties:

property secrecy_of_subs1 (MGoal,ASGoal) :=
 [] ((secret(MGoal,subs1,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_subs2 (MGoal,ASGoal) :=
 [] ((secret(MGoal,subs2,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property authentication_on_bob_alice_nb (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,bob_alice_nb,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,bob_alice_nb,MGoal))
     /\ ((request(A1Goal,A2Goal,bob_alice_nb,MGoal,SID1)
           /\ request(A1Goal,A2Goal,bob_alice_nb,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_verifier_bob_nd (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,verifier_bob_nd,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,verifier_bob_nd,MGoal))
     /\ ((request(A1Goal,A2Goal,verifier_bob_nd,MGoal,SID1)
           /\ request(A1Goal,A2Goal,verifier_bob_nd,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state secrecy_of_subs1 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,subs1,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_subs2 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,subs2,ASGoal) &
 not(contains(i,ASGoal))

attack_state authentication_on_bob_alice_nb (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,bob_alice_nb,MGoal,SID) &
 not(witness(A2Goal,A1Goal,bob_alice_nb,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_bob_alice_nb (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,bob_alice_nb,MGoal,SID1).
 request(A1Goal,A2Goal,bob_alice_nb,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_verifier_bob_nd (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,verifier_bob_nd,MGoal,SID) &
 not(witness(A2Goal,A1Goal,verifier_bob_nd,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_verifier_bob_nd (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,verifier_bob_nd,MGoal,SID1).
 request(A1Goal,A2Goal,verifier_bob_nd,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

