
role role_A(A:agent,B:agent,S:agent,Kas:symmetric_key,SND,RCV:channel(dy))
played_by A
def=
	local
		State:nat,Na:text,Nb:text,Kbs:symmetric_key,Tb:text,Ma:text,Kab:symmetric_key,Mb:text
	init
		State := 0
	transition
		1. State=0 /\ RCV(start) =|> State':=1 /\ Na':=new() /\ witness(A,B,auth_1,Na') /\ SND(A.Na')
		3. State=1 /\ RCV({B.Na.Kab'.Tb'}_Kas.{A.Kab'.Tb'}_Kbs'.Nb') =|> State':=2 /\ secret(Kab',sec_3,{}) /\ SND({A.Kab'.Tb'}_Kbs'.{Nb'}_Kab') /\ Ma':=new() /\ SND(Ma'.{A.Kab'.Tb'}_Kbs')
		6. State=2 /\ RCV(Mb'.{Mb'}_Kab) =|> State':=3 /\ secret(Kab',sec_3,{}) /\ SND({Mb'}_Kab)
end role

role role_B(B:agent,S:agent,Kbs:symmetric_key,SND,RCV:channel(dy))
played_by B
def=
	local
		State:nat,Na:text,Nb:text,A:agent,Tb:text,Ma:text,Kab:symmetric_key,Mb:text
	init
		State := 0
	transition
		1. State=0 /\ RCV(A'.Na') =|> State':=1 /\ request(B,A,auth_1,Na') /\ Nb':=new() /\ witness(B,A,auth_2,Nb') /\ Tb':=new() /\ SND(B.{A'.Na'.Tb'.Nb'}_Kbs)
		4. State=1 /\ RCV({A.Kab'.Tb}_Kbs.{Nb}_Kab') =|> State':=2 /\ secret(Kab',sec_3,{})
		5. State=2 /\ RCV(Ma'.{A.Kab.Tb}_Kbs) =|> State':=3 /\ secret(Kab',sec_3,{}) /\ Mb':=new() /\ SND(Mb'.{Mb'}_Kab)
		7. State=3 /\ RCV({Mb}_Kab) =|> State':=4 /\ secret(Kab',sec_3,{})
end role

role role_S(S:agent,A:agent,B:agent,Kas:symmetric_key,Kbs:symmetric_key,SND,RCV:channel(dy))
played_by S
def=
	local
		State:nat,Nb:text,Na:text,Tb:text,Kab:symmetric_key
	init
		State := 0
	transition
		2. State=0 /\ RCV(B.{A.Na'.Tb'.Nb'}_Kbs) =|> State':=1 /\ Kab':=new() /\ secret(Kab',sec_3,{}) /\ SND({B.Na'.Kab'.Tb'}_Kas.{A.Kab'.Tb'}_Kbs.Nb')
end role

role session1(S:agent,A:agent,B:agent,Kas:symmetric_key,Kbs:symmetric_key)
def=
	local
		SND3,RCV3,SND2,RCV2,SND1,RCV1:channel(dy)
	composition
		role_S(S,A,B,Kas,Kbs,SND3,RCV3) /\ role_B(B,S,Kbs,SND2,RCV2) /\ role_A(A,B,S,Kas,SND1,RCV1)
end role

role environment()
def=
	const
		hash_0:function,key1as:symmetric_key,alice:agent,server:agent,bob:agent,key1bs:symmetric_key,auth_1:protocol_id,auth_2:protocol_id,sec_3:protocol_id
	intruder_knowledge = {}
	composition
		session1(server,alice,bob,key1as,key1bs)
end role

goal
	authentication_on auth_1
	authentication_on auth_2
	secrecy_of sec_3
end goal

environment()