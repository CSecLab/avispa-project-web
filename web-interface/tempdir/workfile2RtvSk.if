%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfile2RtvSk

section signature:

state_role_MN: agent * agent * agent * agent * public_key * public_key * text * nat * text * pair(text,pair(text,pair(text,pair(text,text)))) * text * text * text * text * text * text * text * message * message * message * nat -> fact
state_role_VLRVS: agent * agent * agent * agent * public_key * public_key * nat * text * pair(text,pair(text,pair(text,pair(text,text)))) * text * text * message * text * text * text * message * message * nat -> fact
state_role_RVS: agent * agent * agent * agent * public_key * public_key * nat * text * pair(text,pair(text,pair(text,pair(text,text)))) * nat -> fact
state_role_CN: agent * agent * agent * agent * public_key * public_key * text * nat * text * pair(text,pair(text,pair(text,pair(text,text)))) * text * text * text * text * text * message * message * message * nat -> fact


section types:

auth_2, auth_1: protocol_id
TOKEN, Dummy_TOKEN: pair(text,pair(text,pair(text,pair(text,text))))
State, 4, 6, SID, 5, 3, 2, 1, Dummy_State, 0, SID2, SID1: nat
KCN, KMN, kcn, kmn: public_key
RVS, VLRVS, MN, CN, A2Goal, A1Goal, rvs, mn, cn, vlrvs, i: agent
Y, X, DH, Dummy_Y, Dummy_DH, Dummy_X, start, dummy_msg, MGoal: message
N1, RAND, SPUZZLE, PUZZLE, NMN, G, N2, Dummy_N2, Dummy_TL, Dummy_TIMESTAMP, Dummy_SPUZZLE, Dummy_N1, ipcn, Dummy_PUZZLE, Dummy_NMN, i1, dummy_nonce, r1, i2, r2, ipl, iprvs, hitmn, hitcn, g, idvlrvs, ipg, TL, TIMESTAMP, idvlrvsipg: text


section inits:

initial_state init1 := 
 iknows(start).
 iknows(mn).
 iknows(vlrvs).
 iknows(rvs).
 iknows(cn).
 iknows(kmn).
 iknows(kcn).
 iknows(i).
 state_role_CN(cn,mn,vlrvs,rvs,kmn,kcn,g,0,dummy_nonce,pair(dummy_nonce,pair(dummy_nonce,pair(dummy_nonce,pair(dummy_nonce,dummy_nonce)))),dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,3).
 state_role_RVS(rvs,mn,vlrvs,cn,kmn,kcn,0,dummy_nonce,pair(dummy_nonce,pair(dummy_nonce,pair(dummy_nonce,pair(dummy_nonce,dummy_nonce)))),4).
 state_role_VLRVS(vlrvs,mn,rvs,cn,kmn,kcn,0,dummy_nonce,pair(dummy_nonce,pair(dummy_nonce,pair(dummy_nonce,pair(dummy_nonce,dummy_nonce)))),dummy_nonce,dummy_nonce,dummy_msg,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,5).
 state_role_MN(mn,vlrvs,rvs,cn,kmn,kcn,g,0,dummy_nonce,pair(dummy_nonce,pair(dummy_nonce,pair(dummy_nonce,pair(dummy_nonce,dummy_nonce)))),dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,6)


section rules:

step step_0 (CN,MN,VLRVS,RVS,KMN,KCN,G,Dummy_NMN,Dummy_TOKEN,Dummy_PUZZLE,SPUZZLE,RAND,Dummy_N1,N2,DH,Dummy_X,Y,SID,NMN,TOKEN,PUZZLE,N1) :=
 state_role_CN(CN,MN,VLRVS,RVS,KMN,KCN,G,0,Dummy_NMN,Dummy_TOKEN,Dummy_PUZZLE,SPUZZLE,RAND,Dummy_N1,N2,DH,Dummy_X,Y,SID).
 iknows(apply(i1,pair(iprvs,pair(ipcn,pair(hitmn,pair(hitcn,crypt(inv(KMN),pair(NMN,TOKEN))))))))
=[exists N1,PUZZLE]=>
 state_role_CN(CN,MN,VLRVS,RVS,KMN,KCN,G,1,NMN,TOKEN,PUZZLE,SPUZZLE,RAND,N1,N2,DH,exp(G,N1),Y,SID).
 iknows(apply(r1,pair(ipg,pair(ipcn,pair(NMN,pair(hitmn,pair(hitcn,pair(crypt(KMN,PUZZLE),crypt(inv(KCN),exp(G,N1)))))))))).
 witness(CN,MN,auth_1,PUZZLE)

step step_1 (CN,MN,VLRVS,RVS,KMN,KCN,G,NMN,TOKEN,PUZZLE,Dummy_SPUZZLE,RAND,N1,N2,Dummy_DH,X,Dummy_Y,SID,SPUZZLE,Y) :=
 state_role_CN(CN,MN,VLRVS,RVS,KMN,KCN,G,1,NMN,TOKEN,PUZZLE,Dummy_SPUZZLE,RAND,N1,N2,Dummy_DH,X,Dummy_Y,SID).
 iknows(apply(i2,pair(ipg,pair(ipcn,crypt(inv(KMN),pair(crypt(KCN,SPUZZLE),Y))))))
 =>
 state_role_CN(CN,MN,VLRVS,RVS,KMN,KCN,G,2,NMN,TOKEN,PUZZLE,SPUZZLE,RAND,N1,N2,exp(Y,N1),X,Y,SID).
 request(CN,MN,auth_2,SPUZZLE,SID).
 iknows(apply(r2,crypt(inv(KCN),pair(ipcn,ipg))))

step step_2 (RVS,MN,VLRVS,CN,KMN,KCN,Dummy_NMN,Dummy_TOKEN,SID,NMN,TOKEN) :=
 state_role_RVS(RVS,MN,VLRVS,CN,KMN,KCN,0,Dummy_NMN,Dummy_TOKEN,SID).
 iknows(apply(i1,pair(ipg,pair(iprvs,pair(hitmn,pair(hitcn,pair(ipl,crypt(inv(KMN),pair(NMN,TOKEN)))))))))
 =>
 state_role_RVS(RVS,MN,VLRVS,CN,KMN,KCN,1,NMN,TOKEN,SID).
 iknows(apply(i1,pair(iprvs,pair(ipcn,pair(hitmn,pair(hitcn,crypt(inv(KMN),pair(NMN,TOKEN))))))))

step step_3 (VLRVS,MN,RVS,CN,KMN,KCN,Dummy_NMN,Dummy_TOKEN,PUZZLE,SPUZZLE,DH,G,N1,N2,X,Y,SID,NMN,TOKEN) :=
 state_role_VLRVS(VLRVS,MN,RVS,CN,KMN,KCN,0,Dummy_NMN,Dummy_TOKEN,PUZZLE,SPUZZLE,DH,G,N1,N2,X,Y,SID).
 iknows(apply(i1,pair(ipl,pair(ipg,pair(iprvs,pair(hitmn,pair(hitcn,crypt(inv(KMN),pair(NMN,TOKEN)))))))))
 =>
 state_role_VLRVS(VLRVS,MN,RVS,CN,KMN,KCN,1,NMN,TOKEN,PUZZLE,SPUZZLE,DH,G,N1,N2,X,Y,SID).
 iknows(apply(i1,pair(ipg,pair(iprvs,pair(hitmn,pair(hitcn,pair(ipl,crypt(inv(KMN),pair(NMN,TOKEN)))))))))

step step_4 (VLRVS,MN,RVS,CN,KMN,KCN,Dummy_NMN,TOKEN,Dummy_PUZZLE,SPUZZLE,DH,G,N1,N2,Dummy_X,Y,SID,NMN,PUZZLE,X) :=
 state_role_VLRVS(VLRVS,MN,RVS,CN,KMN,KCN,1,Dummy_NMN,TOKEN,Dummy_PUZZLE,SPUZZLE,DH,G,N1,N2,Dummy_X,Y,SID).
 iknows(apply(r1,pair(ipg,pair(ipcn,pair(NMN,pair(hitmn,pair(hitcn,pair(crypt(KMN,PUZZLE),crypt(inv(KCN),X)))))))))
 =>
 state_role_VLRVS(VLRVS,MN,RVS,CN,KMN,KCN,2,NMN,TOKEN,PUZZLE,SPUZZLE,DH,G,N1,N2,X,Y,SID).
 iknows(apply(r1,pair(ipl,pair(ipcn,pair(NMN,pair(hitmn,pair(hitcn,pair(crypt(KMN,PUZZLE),crypt(inv(KCN),X)))))))))

step step_5 (VLRVS,MN,RVS,CN,KMN,KCN,NMN,TOKEN,PUZZLE,Dummy_SPUZZLE,DH,G,N1,N2,X,Dummy_Y,SID,SPUZZLE,Y) :=
 state_role_VLRVS(VLRVS,MN,RVS,CN,KMN,KCN,2,NMN,TOKEN,PUZZLE,Dummy_SPUZZLE,DH,G,N1,N2,X,Dummy_Y,SID).
 iknows(apply(i2,pair(ipl,pair(ipcn,crypt(inv(KMN),pair(crypt(KCN,SPUZZLE),Y))))))
 =>
 state_role_VLRVS(VLRVS,MN,RVS,CN,KMN,KCN,3,NMN,TOKEN,PUZZLE,SPUZZLE,DH,G,N1,N2,X,Y,SID).
 iknows(apply(i2,pair(ipg,pair(ipcn,crypt(inv(KMN),pair(crypt(KCN,SPUZZLE),Y))))))

step step_6 (VLRVS,MN,RVS,CN,KMN,KCN,NMN,TOKEN,PUZZLE,SPUZZLE,DH,G,N1,N2,X,Y,SID) :=
 state_role_VLRVS(VLRVS,MN,RVS,CN,KMN,KCN,3,NMN,TOKEN,PUZZLE,SPUZZLE,DH,G,N1,N2,X,Y,SID).
 iknows(apply(r2,crypt(inv(KCN),pair(ipcn,ipg))))
 =>
 state_role_VLRVS(VLRVS,MN,RVS,CN,KMN,KCN,4,NMN,TOKEN,PUZZLE,SPUZZLE,DH,G,N1,N2,X,Y,SID).
 iknows(apply(r2,crypt(inv(KCN),pair(ipcn,ipg))))

step step_7 (MN,VLRVS,RVS,CN,KMN,KCN,G,Dummy_NMN,Dummy_TOKEN,PUZZLE,SPUZZLE,Dummy_TIMESTAMP,Dummy_TL,RAND,N1,N2,DH,X,Y,SID,NMN,TIMESTAMP,TL) :=
 state_role_MN(MN,VLRVS,RVS,CN,KMN,KCN,G,0,Dummy_NMN,Dummy_TOKEN,PUZZLE,SPUZZLE,Dummy_TIMESTAMP,Dummy_TL,RAND,N1,N2,DH,X,Y,SID).
 iknows(start)
=[exists NMN,TL,TIMESTAMP]=>
 state_role_MN(MN,VLRVS,RVS,CN,KMN,KCN,G,1,NMN,pair(idvlrvs,pair(hitmn,pair(ipg,pair(TIMESTAMP,TL)))),PUZZLE,SPUZZLE,TIMESTAMP,TL,RAND,N1,N2,DH,X,Y,SID).
 iknows(apply(i1,pair(ipl,pair(ipg,pair(iprvs,pair(hitmn,pair(hitcn,crypt(inv(KMN),pair(NMN,pair(idvlrvs,pair(hitmn,pair(ipg,pair(TIMESTAMP,TL)))))))))))))

step step_8 (MN,VLRVS,RVS,CN,KMN,KCN,G,Dummy_NMN,TOKEN,Dummy_PUZZLE,Dummy_SPUZZLE,TIMESTAMP,TL,RAND,N1,Dummy_N2,Dummy_DH,Dummy_X,Dummy_Y,SID,NMN,PUZZLE,SPUZZLE,N2,X) :=
 state_role_MN(MN,VLRVS,RVS,CN,KMN,KCN,G,1,Dummy_NMN,TOKEN,Dummy_PUZZLE,Dummy_SPUZZLE,TIMESTAMP,TL,RAND,N1,Dummy_N2,Dummy_DH,Dummy_X,Dummy_Y,SID).
 iknows(apply(r1,pair(ipl,pair(ipcn,pair(NMN,pair(hitmn,pair(hitcn,pair(crypt(KMN,PUZZLE),crypt(inv(KCN),X)))))))))
=[exists N2,SPUZZLE]=>
 state_role_MN(MN,VLRVS,RVS,CN,KMN,KCN,G,2,NMN,TOKEN,PUZZLE,SPUZZLE,TIMESTAMP,TL,RAND,N1,N2,exp(X,N2),X,exp(G,N2),SID).
 request(MN,CN,auth_1,PUZZLE,SID).
 iknows(apply(i2,pair(ipl,pair(ipcn,crypt(inv(KMN),pair(crypt(KCN,SPUZZLE),exp(G,N2))))))).
 witness(MN,CN,auth_2,SPUZZLE)

step step_9 (MN,VLRVS,RVS,CN,KMN,KCN,G,NMN,TOKEN,PUZZLE,SPUZZLE,TIMESTAMP,TL,RAND,N1,N2,DH,X,Y,SID) :=
 state_role_MN(MN,VLRVS,RVS,CN,KMN,KCN,G,2,NMN,TOKEN,PUZZLE,SPUZZLE,TIMESTAMP,TL,RAND,N1,N2,DH,X,Y,SID).
 iknows(apply(r2,crypt(inv(KCN),pair(ipcn,ipg))))
 =>
 state_role_MN(MN,VLRVS,RVS,CN,KMN,KCN,G,3,NMN,TOKEN,PUZZLE,SPUZZLE,TIMESTAMP,TL,RAND,N1,N2,DH,X,Y,SID)


section properties:

property authentication_on_auth_1 (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,auth_1,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,auth_1,MGoal))
     /\ ((request(A1Goal,A2Goal,auth_1,MGoal,SID1)
           /\ request(A1Goal,A2Goal,auth_1,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_auth_2 (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,auth_2,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,auth_2,MGoal))
     /\ ((request(A1Goal,A2Goal,auth_2,MGoal,SID1)
           /\ request(A1Goal,A2Goal,auth_2,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state authentication_on_auth_1 (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,auth_1,MGoal,SID) &
 not(witness(A2Goal,A1Goal,auth_1,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_auth_1 (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,auth_1,MGoal,SID1).
 request(A1Goal,A2Goal,auth_1,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_auth_2 (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,auth_2,MGoal,SID) &
 not(witness(A2Goal,A1Goal,auth_2,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_auth_2 (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,auth_2,MGoal,SID1).
 request(A1Goal,A2Goal,auth_2,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

