%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfileB8k9br

section signature:

state_host: agent * agent * agent * hash_func * public_key * public_key * public_key * nat * nat * nat * nat * text * text * text * text * text * text * text * crypt(inv(public_key),hash_func) * crypt(inv(public_key),hash_func) * crypt(public_key,crypt(inv(public_key),pair(nat,text))) * pair(crypt(public_key,crypt(inv(public_key),pair(text,pair(nat,text)))),crypt(public_key,crypt(inv(public_key),pair(nat,pair(nat,text))))) * set(agent) * set(agent) * nat -> fact
state_board: agent * agent * agent * hash_func * public_key * public_key * public_key * nat * nat * nat * text * text * text * text * text * pair(crypt(public_key,pair(agent,crypt(inv(public_key),pair(text,pair(nat,text))))),crypt(public_key,crypt(inv(public_key),pair(nat,text)))) * pair(crypt(public_key,crypt(inv(public_key),pair(text,pair(nat,text)))),crypt(public_key,crypt(inv(public_key),pair(nat,pair(nat,text))))) * pair(crypt(public_key,crypt(inv(public_key),pair(text,pair(nat,text)))),crypt(public_key,crypt(inv(public_key),pair(nat,pair(nat,text))))) * crypt(inv(public_key),hash_func) * nat -> fact
state_user: agent * agent * agent * hash_func * public_key * public_key * public_key * nat * nat * nat * nat * text * text * text * text * text * text * text * text * text * crypt(inv(public_key),hash_func) * crypt(inv(public_key),hash_func) * pair(crypt(public_key,pair(agent,crypt(inv(public_key),pair(text,pair(nat,text))))),crypt(public_key,crypt(inv(public_key),pair(nat,text)))) * pair(crypt(public_key,crypt(inv(public_key),pair(text,pair(nat,text)))),crypt(public_key,crypt(inv(public_key),pair(nat,pair(nat,text))))) * crypt(public_key,crypt(inv(public_key),pair(nat,pair(nat,text)))) * set(agent) * set(agent) * set(agent) * set(agent) * nat -> fact


section types:

Dummy_REQr, REQr: crypt(public_key,crypt(inv(public_key),pair(nat,text)))
Dummy_Set_109, Dummy_Set_107, Dummy_Set_48, Dummy_Set_43, Dummy_Set_41, Dummy_Set_38, ASGoal, Set_109, Set_107, Set_48, Set_43, Set_41, Set_38: set(agent)
n, nub, nhb, m, t, r, nuh, c: protocol_id
MGoal, start: message
Dummy_RESr, RESr: crypt(public_key,crypt(inv(public_key),pair(nat,pair(nat,text))))
Dummy_RES, Dummy_TES, RES, TES: pair(crypt(public_key,crypt(inv(public_key),pair(text,pair(nat,text)))),crypt(public_key,crypt(inv(public_key),pair(nat,pair(nat,text)))))
Dummy_REQ, REQ: pair(crypt(public_key,pair(agent,crypt(inv(public_key),pair(text,pair(nat,text))))),crypt(public_key,crypt(inv(public_key),pair(nat,text))))
Dummy_Sign, Dummy_T, Sign, T: crypt(inv(public_key),hash_func)
Dummy_S6, Dummy_S2, Dummy_S5, Dummy_S4, Dummy_S3, Dummy_X, Dummy_R, Dummy_M, Dummy_S1, Dummy_C, dummy_nonce, R, M, C, S1, S2, S3, S4, S6, X, S5: text
dummy_pk, ku, kh, kb, ki, Ku, Kh, Kb: public_key
dummy_hash, d, D: hash_func
dummy_agent, u, h, b, U, H, B, i: agent
12, 9, 8, 7, 5, SID, 4, Dummy_Id, Dummy_Nuh, Dummy_Nuhb, Dummy_State, 3, dummy_nat, 6, State, Nuhb, Nuh, Id, 2, 0, 1, 21, 19, 16, 15, 13: nat
set_202, set_200, set_199, set_198, set_197, set_195, set_194, set_191, set_190, set_189, set_188, set_182, set_181, set_147, set_146, set_145, set_144, set_219, set_218, set_216, set_215, set_214, set_213, set_212, set_211, set_208, set_207, set_206, set_205, set_203: set


section inits:

initial_state init1 := 
 iknows(start).
 iknows(u).
 iknows(h).
 iknows(b).
 iknows(d).
 iknows(ku).
 iknows(kh).
 iknows(kb).
 iknows(ki).
 iknows(inv(ki)).
 iknows(i).
 state_user(u,h,b,d,ku,kh,kb,1,dummy_nat,dummy_nat,dummy_nat,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,crypt(inv(dummy_pk),dummy_hash),crypt(inv(dummy_pk),dummy_hash),pair(crypt(dummy_pk,pair(dummy_agent,crypt(inv(dummy_pk),pair(dummy_nonce,pair(dummy_nat,dummy_nonce))))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nat,dummy_nonce)))),pair(crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,pair(dummy_nat,dummy_nonce)))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nat,pair(dummy_nat,dummy_nonce))))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nat,pair(dummy_nat,dummy_nonce)))),set_144,set_145,set_146,set_147,3).
 state_board(b,u,h,d,ku,kh,kb,2,dummy_nat,dummy_nat,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,pair(crypt(dummy_pk,pair(dummy_agent,crypt(inv(dummy_pk),pair(dummy_nonce,pair(dummy_nat,dummy_nonce))))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nat,dummy_nonce)))),pair(crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,pair(dummy_nat,dummy_nonce)))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nat,pair(dummy_nat,dummy_nonce))))),pair(crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,pair(dummy_nat,dummy_nonce)))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nat,pair(dummy_nat,dummy_nonce))))),crypt(inv(dummy_pk),dummy_hash),4).
 state_host(h,u,b,d,ku,kh,kb,4,dummy_nat,dummy_nat,dummy_nat,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,crypt(inv(dummy_pk),dummy_hash),crypt(inv(dummy_pk),dummy_hash),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nat,dummy_nonce))),pair(crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,pair(dummy_nat,dummy_nonce)))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nat,pair(dummy_nat,dummy_nonce))))),set_181,set_182,5).
 state_user(u,h,b,d,ku,kh,kb,1,dummy_nat,dummy_nat,dummy_nat,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,crypt(inv(dummy_pk),dummy_hash),crypt(inv(dummy_pk),dummy_hash),pair(crypt(dummy_pk,pair(dummy_agent,crypt(inv(dummy_pk),pair(dummy_nonce,pair(dummy_nat,dummy_nonce))))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nat,dummy_nonce)))),pair(crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,pair(dummy_nat,dummy_nonce)))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nat,pair(dummy_nat,dummy_nonce))))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nat,pair(dummy_nat,dummy_nonce)))),set_188,set_189,set_190,set_191,7).
 state_board(b,u,h,d,ku,kh,kb,2,dummy_nat,dummy_nat,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,pair(crypt(dummy_pk,pair(dummy_agent,crypt(inv(dummy_pk),pair(dummy_nonce,pair(dummy_nat,dummy_nonce))))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nat,dummy_nonce)))),pair(crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,pair(dummy_nat,dummy_nonce)))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nat,pair(dummy_nat,dummy_nonce))))),pair(crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,pair(dummy_nat,dummy_nonce)))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nat,pair(dummy_nat,dummy_nonce))))),crypt(inv(dummy_pk),dummy_hash),8).
 state_host(h,u,b,d,ku,kh,kb,4,dummy_nat,dummy_nat,dummy_nat,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,crypt(inv(dummy_pk),dummy_hash),crypt(inv(dummy_pk),dummy_hash),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nat,dummy_nonce))),pair(crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,pair(dummy_nat,dummy_nonce)))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nat,pair(dummy_nat,dummy_nonce))))),set_194,set_195,9).
 state_board(b,i,h,d,ki,kh,kb,2,dummy_nat,dummy_nat,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,pair(crypt(dummy_pk,pair(dummy_agent,crypt(inv(dummy_pk),pair(dummy_nonce,pair(dummy_nat,dummy_nonce))))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nat,dummy_nonce)))),pair(crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,pair(dummy_nat,dummy_nonce)))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nat,pair(dummy_nat,dummy_nonce))))),pair(crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,pair(dummy_nat,dummy_nonce)))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nat,pair(dummy_nat,dummy_nonce))))),crypt(inv(dummy_pk),dummy_hash),12).
 state_host(h,i,b,d,ki,kh,kb,4,dummy_nat,dummy_nat,dummy_nat,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,crypt(inv(dummy_pk),dummy_hash),crypt(inv(dummy_pk),dummy_hash),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nat,dummy_nonce))),pair(crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,pair(dummy_nat,dummy_nonce)))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nat,pair(dummy_nat,dummy_nonce))))),set_202,set_203,13).
 state_user(u,i,b,d,ku,ki,kb,1,dummy_nat,dummy_nat,dummy_nat,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,crypt(inv(dummy_pk),dummy_hash),crypt(inv(dummy_pk),dummy_hash),pair(crypt(dummy_pk,pair(dummy_agent,crypt(inv(dummy_pk),pair(dummy_nonce,pair(dummy_nat,dummy_nonce))))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nat,dummy_nonce)))),pair(crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,pair(dummy_nat,dummy_nonce)))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nat,pair(dummy_nat,dummy_nonce))))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nat,pair(dummy_nat,dummy_nonce)))),set_205,set_206,set_207,set_208,15).
 state_board(b,u,i,d,ku,ki,kb,2,dummy_nat,dummy_nat,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,pair(crypt(dummy_pk,pair(dummy_agent,crypt(inv(dummy_pk),pair(dummy_nonce,pair(dummy_nat,dummy_nonce))))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nat,dummy_nonce)))),pair(crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,pair(dummy_nat,dummy_nonce)))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nat,pair(dummy_nat,dummy_nonce))))),pair(crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,pair(dummy_nat,dummy_nonce)))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nat,pair(dummy_nat,dummy_nonce))))),crypt(inv(dummy_pk),dummy_hash),16).
 state_user(u,h,i,d,ku,kh,ki,1,dummy_nat,dummy_nat,dummy_nat,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,crypt(inv(dummy_pk),dummy_hash),crypt(inv(dummy_pk),dummy_hash),pair(crypt(dummy_pk,pair(dummy_agent,crypt(inv(dummy_pk),pair(dummy_nonce,pair(dummy_nat,dummy_nonce))))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nat,dummy_nonce)))),pair(crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,pair(dummy_nat,dummy_nonce)))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nat,pair(dummy_nat,dummy_nonce))))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nat,pair(dummy_nat,dummy_nonce)))),set_213,set_214,set_215,set_216,19).
 state_host(h,u,i,d,ku,kh,ki,4,dummy_nat,dummy_nat,dummy_nat,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,crypt(inv(dummy_pk),dummy_hash),crypt(inv(dummy_pk),dummy_hash),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nat,dummy_nonce))),pair(crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,pair(dummy_nat,dummy_nonce)))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nat,pair(dummy_nat,dummy_nonce))))),set_218,set_219,21)


section rules:

step step_0 (U,H,B,D,Ku,Kh,Kb,Dummy_Nuhb,Dummy_Nuh,Id,R,M,Dummy_C,X,Dummy_S1,S3,S4,S5,S6,T,Sign,Dummy_REQ,TES,RESr,Dummy_Set_38,Dummy_Set_41,Dummy_Set_43,Set_48,SID,Nuhb,Nuh,C,S1) :=
 state_user(U,H,B,D,Ku,Kh,Kb,1,Dummy_Nuhb,Dummy_Nuh,Id,R,M,Dummy_C,X,Dummy_S1,S3,S4,S5,S6,T,Sign,Dummy_REQ,TES,RESr,Dummy_Set_38,Dummy_Set_41,Dummy_Set_43,Set_48,SID).
 iknows(start)
=[exists Nuh,Nuhb,C,S1]=>
 state_user(U,H,B,D,Ku,Kh,Kb,3,Nuhb,Nuh,Id,R,M,C,X,S1,S3,S4,S5,S6,T,Sign,pair(crypt(Kh,pair(U,crypt(inv(Ku),pair(C,pair(Nuh,S1))))),crypt(Kb,crypt(inv(Ku),pair(Nuhb,S1)))),TES,RESr,Dummy_Set_38,Dummy_Set_41,Dummy_Set_43,Set_48,SID).
 secret(C,c,Dummy_Set_38).
 secret(Nuh,nuh,Dummy_Set_41).
 secret(Nuhb,nuhb,Dummy_Set_43).
 iknows(pair(crypt(Kh,pair(U,crypt(inv(Ku),pair(C,pair(Nuh,S1))))),crypt(Kb,crypt(inv(Ku),pair(Nuhb,S1))))).
 iknows(query).
 contains(U,Dummy_Set_38).
 contains(H,Dummy_Set_38).
 contains(U,Dummy_Set_41).
 contains(H,Dummy_Set_41).
 contains(U,Dummy_Set_43).
 contains(H,Dummy_Set_43).
 contains(B,Dummy_Set_43)

step step_1 (U,H,B,D,Ku,Kh,Kb,Nuhb,Nuh,Dummy_Id,R,M,C,X,S1,S3,S4,S5,S6,T,Sign,REQ,TES,RESr,Set_38,Set_41,Set_43,Set_48,SID,Id) :=
 state_user(U,H,B,D,Ku,Kh,Kb,3,Nuhb,Nuh,Dummy_Id,R,M,C,X,S1,S3,S4,S5,S6,T,Sign,REQ,TES,RESr,Set_38,Set_41,Set_43,Set_48,SID).
 iknows(Id)
 =>
 state_user(U,H,B,D,Ku,Kh,Kb,7,Nuhb,Nuh,Id,R,M,C,X,S1,S3,S4,S5,S6,T,Sign,REQ,TES,RESr,Set_38,Set_41,Set_43,Set_48,SID).
 iknows(crypt(Kh,crypt(inv(Ku),pair(Id,pair(Nuhb,Nuh)))))

step step_2 (U,H,B,D,Ku,Kh,Kb,Nuhb,Nuh,Id,R,Dummy_M,C,X,S1,S3,S4,S5,S6,T,Sign,REQ,TES,RESr,Set_38,Set_41,Set_43,Set_48,SID,M) :=
 state_user(U,H,B,D,Ku,Kh,Kb,7,Nuhb,Nuh,Id,R,Dummy_M,C,X,S1,S3,S4,S5,S6,T,Sign,REQ,TES,RESr,Set_38,Set_41,Set_43,Set_48,SID).
 iknows(crypt(Ku,crypt(inv(Kh),pair(Id,M))))
 =>
 state_user(U,H,B,D,Ku,Kh,Kb,7,Nuhb,Nuh,Id,R,M,C,X,S1,S3,S4,S5,S6,T,Sign,REQ,TES,RESr,Set_38,Set_41,Set_43,Set_48,SID).
 iknows(Id)

step step_3 (U,H,B,D,Ku,Kh,Kb,Nuhb,Nuh,Id,Dummy_R,M,C,Dummy_X,S1,Dummy_S3,Dummy_S4,Dummy_S5,S6,Dummy_T,Dummy_Sign,REQ,Dummy_TES,Dummy_RESr,Set_38,Set_41,Set_43,Dummy_Set_48,SID,R,X,S3,S4,S5,Sign,RESr) :=
 state_user(U,H,B,D,Ku,Kh,Kb,7,Nuhb,Nuh,Id,Dummy_R,M,C,Dummy_X,S1,Dummy_S3,Dummy_S4,Dummy_S5,S6,Dummy_T,Dummy_Sign,REQ,Dummy_TES,Dummy_RESr,Set_38,Set_41,Set_43,Dummy_Set_48,SID).
 iknows(pair(Id,pair(crypt(Ku,crypt(inv(Kh),pair(X,pair(Nuh,S3)))),pair(RESr,pair(S4,Sign)))))
=[exists S5,R]=>
 state_user(U,H,B,D,Ku,Kh,Kb,9,Nuhb,Nuh,Id,R,M,C,X,S1,S3,S4,S5,S6,xor(X,M),Sign,REQ,pair(crypt(Kh,crypt(inv(Ku),pair(R,pair(Nuh,S5)))),crypt(Kb,crypt(inv(Ku),pair(Id,pair(Nuhb,S5))))),RESr,Set_38,Set_41,Set_43,Dummy_Set_48,SID).
 secret(R,r,Dummy_Set_48).
 iknows(pair(crypt(Kh,crypt(inv(Ku),pair(R,pair(Nuh,S5)))),crypt(Kb,crypt(inv(Ku),pair(Id,pair(Nuhb,S5)))))).
 iknows(Id).
 contains(U,Dummy_Set_48).
 contains(H,Dummy_Set_48)

step step_4 (U,H,B,D,Ku,Kh,Kb,Nuhb,Nuh,Id,R,M,C,X,S1,S3,S4,S5,S6,T,Sign,REQ,TES,RESr,Set_38,Set_41,Set_43,Set_48,SID) :=
 state_user(U,H,B,D,Ku,Kh,Kb,9,Nuhb,Nuh,Id,R,M,C,X,S1,S3,S4,S5,S6,T,Sign,REQ,TES,RESr,Set_38,Set_41,Set_43,Set_48,SID).
 iknows(pair(Id,pair(TES,pair(S6,Sign))))
 =>
 state_user(U,H,B,D,Ku,Kh,Kb,0,Nuhb,Nuh,Id,R,M,C,X,S1,S3,S4,S5,S6,T,Sign,REQ,TES,RESr,Set_38,Set_41,Set_43,Set_48,SID).
 iknows(crypt(Kh,crypt(inv(Ku),pair(Id,R))))

step step_5 (B,U,H,D,Ku,Kh,Kb,Nuhb,Dummy_Id,M,C,Dummy_S2,S4,S6,Dummy_REQ,RES,TES,Dummy_Sign,SID,Id,S2,REQ) :=
 state_board(B,U,H,D,Ku,Kh,Kb,2,Nuhb,Dummy_Id,M,C,Dummy_S2,S4,S6,Dummy_REQ,RES,TES,Dummy_Sign,SID).
 iknows(REQ)
=[exists S2,Id]=>
 state_board(B,U,H,D,Ku,Kh,Kb,2,Nuhb,Id,M,C,S2,S4,S6,REQ,RES,TES,crypt(inv(Kb),apply(D,pair(Id,pair(REQ,S2)))),SID)

step step_6 (B,U,H,D,Ku,Kh,Kb,Nuhb,Id,M,C,S2,S4,S6,REQ,RES,TES,Sign,SID) :=
 state_board(B,U,H,D,Ku,Kh,Kb,2,Nuhb,Id,M,C,S2,S4,S6,REQ,RES,TES,Sign,SID).
 iknows(query)
 =>
 state_board(B,U,H,D,Ku,Kh,Kb,2,Nuhb,Id,M,C,S2,S4,S6,REQ,RES,TES,Sign,SID).
 iknows(Id)

step step_7 (B,U,H,D,Ku,Kh,Kb,Nuhb,Id,M,C,S2,S4,S6,REQ,RES,TES,Sign,SID) :=
 state_board(B,U,H,D,Ku,Kh,Kb,2,Nuhb,Id,M,C,S2,S4,S6,REQ,RES,TES,Sign,SID).
 iknows(Id)
 =>
 state_board(B,U,H,D,Ku,Kh,Kb,2,Nuhb,Id,M,C,S2,S4,S6,REQ,RES,TES,Sign,SID).
 iknows(pair(Id,pair(REQ,pair(S2,Sign))))

step step_8 (B,U,H,D,Ku,Kh,Kb,Nuhb,Id,M,C,S2,S4,S6,REQ,RES,TES,Sign,SID) :=
 state_board(B,U,H,D,Ku,Kh,Kb,2,Nuhb,Id,M,C,S2,S4,S6,REQ,RES,TES,Sign,SID).
 iknows(Id)
 =>
 state_board(B,U,H,D,Ku,Kh,Kb,2,Nuhb,Id,M,C,S2,S4,S6,REQ,RES,TES,Sign,SID).
 iknows(pair(Id,pair(REQ,pair(S2,Sign))))

step step_9 (B,U,H,D,Ku,Kh,Kb,Nuhb,Id,M,C,S2,Dummy_S4,S6,REQ,Dummy_RES,TES,Dummy_Sign,SID,S4,RES) :=
 state_board(B,U,H,D,Ku,Kh,Kb,2,Nuhb,Id,M,C,S2,Dummy_S4,S6,REQ,Dummy_RES,TES,Dummy_Sign,SID).
 iknows(RES)
=[exists S4]=>
 state_board(B,U,H,D,Ku,Kh,Kb,5,Nuhb,Id,M,C,S2,S4,S6,REQ,RES,TES,crypt(inv(Kb),apply(D,pair(Id,pair(RES,S4)))),SID)

step step_10 (B,U,H,D,Ku,Kh,Kb,Nuhb,Id,M,C,S2,S4,S6,REQ,RES,TES,Sign,SID) :=
 state_board(B,U,H,D,Ku,Kh,Kb,5,Nuhb,Id,M,C,S2,S4,S6,REQ,RES,TES,Sign,SID).
 iknows(Id)
 =>
 state_board(B,U,H,D,Ku,Kh,Kb,5,Nuhb,Id,M,C,S2,S4,S6,REQ,RES,TES,Sign,SID).
 iknows(pair(Id,pair(RES,pair(S4,Sign))))

step step_11 (B,U,H,D,Ku,Kh,Kb,Nuhb,Id,M,C,S2,S4,S6,REQ,RES,TES,Sign,SID) :=
 state_board(B,U,H,D,Ku,Kh,Kb,5,Nuhb,Id,M,C,S2,S4,S6,REQ,RES,TES,Sign,SID).
 iknows(Id)
 =>
 state_board(B,U,H,D,Ku,Kh,Kb,5,Nuhb,Id,M,C,S2,S4,S6,REQ,RES,TES,Sign,SID).
 iknows(pair(Id,pair(RES,pair(S4,Sign))))

step step_12 (B,U,H,D,Ku,Kh,Kb,Nuhb,Id,M,C,S2,S4,Dummy_S6,REQ,RES,Dummy_TES,Dummy_Sign,SID,S6,TES) :=
 state_board(B,U,H,D,Ku,Kh,Kb,5,Nuhb,Id,M,C,S2,S4,Dummy_S6,REQ,RES,Dummy_TES,Dummy_Sign,SID).
 iknows(TES)
=[exists S6]=>
 state_board(B,U,H,D,Ku,Kh,Kb,8,Nuhb,Id,M,C,S2,S4,S6,REQ,RES,TES,crypt(inv(Kb),apply(D,pair(Id,pair(TES,S6)))),SID)

step step_13 (B,U,H,D,Ku,Kh,Kb,Nuhb,Id,M,C,S2,S4,S6,REQ,RES,TES,Sign,SID) :=
 state_board(B,U,H,D,Ku,Kh,Kb,8,Nuhb,Id,M,C,S2,S4,S6,REQ,RES,TES,Sign,SID).
 iknows(Id)
 =>
 state_board(B,U,H,D,Ku,Kh,Kb,8,Nuhb,Id,M,C,S2,S4,S6,REQ,RES,TES,Sign,SID).
 iknows(pair(Id,pair(TES,pair(S6,Sign))))

step step_14 (B,U,H,D,Ku,Kh,Kb,Nuhb,Id,M,C,S2,S4,S6,REQ,RES,TES,Sign,SID) :=
 state_board(B,U,H,D,Ku,Kh,Kb,8,Nuhb,Id,M,C,S2,S4,S6,REQ,RES,TES,Sign,SID).
 iknows(Id)
 =>
 state_board(B,U,H,D,Ku,Kh,Kb,8,Nuhb,Id,M,C,S2,S4,S6,REQ,RES,TES,Sign,SID).
 iknows(pair(Id,pair(TES,pair(S6,Sign))))

step step_15 (H,U,B,D,Ku,Kh,Kb,Dummy_Nuhb,Dummy_Nuh,Dummy_Id,R,M,C,S1,S2,S3,S4,T,Sign,REQr,RES,Set_107,Set_109,SID,Nuhb,Nuh,Id) :=
 state_host(H,U,B,D,Ku,Kh,Kb,4,Dummy_Nuhb,Dummy_Nuh,Dummy_Id,R,M,C,S1,S2,S3,S4,T,Sign,REQr,RES,Set_107,Set_109,SID).
 iknows(crypt(Kh,crypt(inv(Ku),pair(Id,pair(Nuhb,Nuh)))))
 =>
 state_host(H,U,B,D,Ku,Kh,Kb,4,Nuhb,Nuh,Id,R,M,C,S1,S2,S3,S4,T,Sign,REQr,RES,Set_107,Set_109,SID).
 iknows(Id)

step step_16 (H,U,B,D,Ku,Kh,Kb,Nuhb,Dummy_Nuh,Id,R,Dummy_M,Dummy_C,Dummy_S1,Dummy_S2,Dummy_S3,S4,Dummy_T,Dummy_Sign,Dummy_REQr,Dummy_RES,Dummy_Set_107,Dummy_Set_109,SID,Nuh,M,C,S1,S2,S3,Sign,REQr) :=
 state_host(H,U,B,D,Ku,Kh,Kb,4,Nuhb,Dummy_Nuh,Id,R,Dummy_M,Dummy_C,Dummy_S1,Dummy_S2,Dummy_S3,S4,Dummy_T,Dummy_Sign,Dummy_REQr,Dummy_RES,Dummy_Set_107,Dummy_Set_109,SID).
 iknows(pair(Id,pair(crypt(Kh,pair(U,crypt(inv(Ku),pair(C,pair(Nuh,S1))))),pair(REQr,pair(S2,Sign)))))
=[exists S3,M]=>
 state_host(H,U,B,D,Ku,Kh,Kb,6,Nuhb,Nuh,Id,R,M,C,S1,S2,S3,S4,crypt(inv(Kh),apply(D,pair(Dummy_C,Dummy_M))),Sign,REQr,pair(crypt(Ku,crypt(inv(Kh),pair(xor(crypt(inv(Kh),apply(D,pair(Dummy_C,Dummy_M))),M),pair(Nuh,S3)))),crypt(Kb,crypt(inv(Kh),pair(Id,pair(Nuhb,S3))))),Dummy_Set_107,Dummy_Set_109,SID).
 secret(crypt(inv(Kh),apply(D,pair(Dummy_C,Dummy_M))),t,Dummy_Set_107).
 secret(M,m,Dummy_Set_109).
 iknows(pair(crypt(Ku,crypt(inv(Kh),pair(xor(crypt(inv(Kh),apply(D,pair(Dummy_C,Dummy_M))),M),pair(Nuh,S3)))),crypt(Kb,crypt(inv(Kh),pair(Id,pair(Nuhb,S3)))))).
 iknows(Id).
 contains(U,Dummy_Set_107).
 contains(H,Dummy_Set_107).
 contains(U,Dummy_Set_109).
 contains(H,Dummy_Set_109).
 contains(B,Dummy_Set_109)

step step_17 (H,U,B,D,Ku,Kh,Kb,Nuhb,Nuh,Id,R,M,C,S1,S2,S3,S4,T,Sign,REQr,RES,Set_107,Set_109,SID) :=
 state_host(H,U,B,D,Ku,Kh,Kb,6,Nuhb,Nuh,Id,R,M,C,S1,S2,S3,S4,T,Sign,REQr,RES,Set_107,Set_109,SID).
 iknows(pair(Id,pair(RES,pair(S4,Sign))))
 =>
 state_host(H,U,B,D,Ku,Kh,Kb,0,Nuhb,Nuh,Id,R,M,C,S1,S2,S3,S4,T,Sign,REQr,RES,Set_107,Set_109,SID).
 iknows(crypt(Ku,crypt(inv(Kh),pair(Id,M))))

step step_18 (H,U,B,D,Ku,Kh,Kb,Nuhb,Nuh,Id,Dummy_R,M,C,S1,S2,S3,S4,T,Sign,REQr,RES,Set_107,Set_109,SID,R) :=
 state_host(H,U,B,D,Ku,Kh,Kb,0,Nuhb,Nuh,Id,Dummy_R,M,C,S1,S2,S3,S4,T,Sign,REQr,RES,Set_107,Set_109,SID).
 iknows(crypt(Kh,crypt(inv(Ku),pair(Id,R))))
 =>
 state_host(H,U,B,D,Ku,Kh,Kb,0,Nuhb,Nuh,Id,R,M,C,S1,S2,S3,S4,T,Sign,REQr,RES,Set_107,Set_109,SID)


section properties:

property secrecy_of_r (MGoal,ASGoal) :=
 [] ((secret(MGoal,r,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_t (MGoal,ASGoal) :=
 [] ((secret(MGoal,t,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_m (MGoal,ASGoal) :=
 [] ((secret(MGoal,m,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_nuhb (MGoal,ASGoal) :=
 [] ((secret(MGoal,nuhb,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_c (MGoal,ASGoal) :=
 [] ((secret(MGoal,c,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_nuh (MGoal,ASGoal) :=
 [] ((secret(MGoal,nuh,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))


section attack_states:

attack_state secrecy_of_r (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,r,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_t (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,t,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_m (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,m,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_nuhb (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,nuhb,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_c (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,c,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_nuh (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,nuh,ASGoal) &
 not(contains(i,ASGoal))

