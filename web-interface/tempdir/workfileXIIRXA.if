%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfileXIIRXA

section signature:

state_bob: agent * agent * agent * symmetric_key * symmetric_key * hash_func * nat * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * message * message * message * message * message * message * message * message * message * message * message * message * message * message * message * message * message * message * hash_func * set(text) * nat -> fact
state_server: agent * agent * agent * symmetric_key * symmetric_key * hash_func * nat * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * message * message * message * message * message * message * message * message * message * message * message * message * message * message * message * message * message * message * message * message * message * message * hash_func * set(text) * set(agent) * nat -> fact
state_alice: agent * agent * agent * symmetric_key * symmetric_key * hash_func * nat * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * message * message * message * message * message * message * message * message * message * message * message * message * message * message * message * message * message * message * hash_func * set(text) * nat -> fact


section types:

bob_server, bob_alice, server_bob, alice_bob, alice_server, subs1, subs2, subs3: protocol_id
Set_176, Set_124, Dummy_Set_176, Set_63, Dummy_Set_124, Dummy_Set_63: set(text)
set_286, set_284, set_283, set_281, set_279, set_277, set_276, set_274, set_263, set_243, set_242, set_220: set
Set_125, Dummy_Set_125, ASGoal: set(agent)
AuthA, AuthB, GA, PA, PB, NA, NB, GS, LS, KSA, KSB, ZA, ZB, YA, LB, GB, AuthAS, AuthBS, TrA, TrB, TloginA, TloginB, Dummy_YA, Dummy_GB, Dummy_NB, Dummy_PB, Dummy_AuthB, start, Dummy_AuthAS, Dummy_ZB, Dummy_KSB, Dummy_KSA, Dummy_LS, Dummy_GS, Dummy_TloginB, Dummy_TloginA, Dummy_TrB, Dummy_TrA, Dummy_AuthBS, Dummy_LB, Dummy_ZA, Dummy_NA, Dummy_GA, Dummy_AuthA, Dummy_PA, dummy_msg, MGoal: message
State, 13, 12, 11, 9, 8, 7, 3, 2, 5, 1, SID, 0, 4, Dummy_State: nat
h, Inc, H, dummy_hash: hash_func
skbs, skas, SKas, SKbs: symmetric_key
ua, s, ub, UB, S, UA, i: agent
cb, da, db, ra, rs, rb, A, B, IDS, PWUA, PWUB, PWA, PWB, TA, TB, FA, FB, SS, REGA, REGB, CA, CB, DA, DB, RA, RS, RB, Dummy_FB, Dummy_PWB, Dummy_RS, Dummy_DB, Dummy_CB, Dummy_REGB, Dummy_SS, Dummy_RB, Dummy_RA, Dummy_DA, Dummy_CA, Dummy_REGA, Dummy_FA, Dummy_PWA, dummy_nonce, a, b, ids, pwua, pwub, pwa, pwb, ta, tb, fa, fb, ss, rega, regb, ca: text


section inits:

initial_state init1 := 
 iknows(start).
 iknows(ua).
 iknows(s).
 iknows(ub).
 iknows(h).
 iknows(fa).
 iknows(fb).
 iknows(pwa).
 iknows(pwb).
 iknows(ca).
 iknows(cb).
 iknows(da).
 iknows(db).
 iknows(rega).
 iknows(regb).
 iknows(i).
 state_alice(ua,s,ub,skas,skbs,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_hash,set_220,3).
 state_server(ua,s,ub,skas,skbs,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_hash,set_242,set_243,4).
 state_bob(ua,s,ub,skas,skbs,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_hash,set_263,5).
 state_alice(s,ua,ub,skas,skbs,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_hash,set_274,7).
 state_server(s,ua,ub,skas,skbs,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_hash,set_276,set_277,8).
 state_bob(s,ua,ub,skas,skbs,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_hash,set_279,9).
 state_alice(ub,s,ua,skas,skbs,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_hash,set_281,11).
 state_server(ub,s,ua,skas,skbs,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_hash,set_283,set_284,12).
 state_bob(ub,s,ua,skas,skbs,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_hash,set_286,13)


section rules:

step step_0 (UA,S,UB,SKas,SKbs,H,A,B,IDS,PWUA,PWUB,Dummy_PWA,PWB,TA,TB,Dummy_FA,FB,REGA,SS,REGB,CA,CB,DA,DB,RA,RS,RB,PA,PB,AuthA,AuthB,GA,NA,NB,GS,LS,KSA,KSB,ZA,ZB,YA,LB,GB,AuthAS,AuthBS,Inc,Dummy_Set_63,SID) :=
 state_alice(UA,S,UB,SKas,SKbs,H,0,A,B,IDS,PWUA,PWUB,Dummy_PWA,PWB,TA,TB,Dummy_FA,FB,REGA,SS,REGB,CA,CB,DA,DB,RA,RS,RB,PA,PB,AuthA,AuthB,GA,NA,NB,GS,LS,KSA,KSB,ZA,ZB,YA,LB,GB,AuthAS,AuthBS,Inc,Dummy_Set_63,SID).
 iknows(start)
 =>
 state_alice(UA,S,UB,SKas,SKbs,H,1,A,B,IDS,PWUA,PWUB,apply(H,pair(PWUA,apply(H,TA))),PWB,TA,TB,apply(H,TA),FB,REGA,SS,REGB,CA,CB,DA,DB,RA,RS,RB,PA,PB,AuthA,AuthB,GA,NA,NB,GS,LS,KSA,KSB,ZA,ZB,YA,LB,GB,AuthAS,AuthBS,Inc,Dummy_Set_63,SID).
 iknows(scrypt(SKas,pair(A,pair(apply(H,pair(PWUA,apply(H,TA))),apply(H,TA))))).
 secret(Dummy_Set_63,subs2,UA).
 contains(PWUA,Dummy_Set_63).
 contains(TA,Dummy_Set_63)

step step_1 (UA,S,UB,SKas,SKbs,H,A,B,IDS,PWUA,PWUB,PWA,PWB,TA,TB,FA,FB,Dummy_REGA,SS,REGB,Dummy_CA,CB,Dummy_DA,DB,Dummy_RA,RS,RB,Dummy_PA,PB,Dummy_AuthA,AuthB,Dummy_GA,Dummy_NA,NB,GS,LS,KSA,KSB,ZA,ZB,YA,LB,GB,AuthAS,AuthBS,Inc,Set_63,SID,REGA,CA,DA,RA) :=
 state_alice(UA,S,UB,SKas,SKbs,H,1,A,B,IDS,PWUA,PWUB,PWA,PWB,TA,TB,FA,FB,Dummy_REGA,SS,REGB,Dummy_CA,CB,Dummy_DA,DB,Dummy_RA,RS,RB,Dummy_PA,PB,Dummy_AuthA,AuthB,Dummy_GA,Dummy_NA,NB,GS,LS,KSA,KSB,ZA,ZB,YA,LB,GB,AuthAS,AuthBS,Inc,Set_63,SID).
 iknows(scrypt(SKas,pair(A,pair(REGA,pair(CA,DA)))))
=[exists RA]=>
 state_alice(UA,S,UB,SKas,SKbs,H,2,A,B,IDS,PWUA,PWUB,PWA,PWB,TA,TB,FA,FB,REGA,SS,REGB,CA,CB,DA,DB,RA,RS,RB,xor(apply(H,pair(PWA,FA)),Dummy_CA),PB,apply(H,pair(A,pair(RA,xor(apply(H,pair(PWA,FA)),Dummy_CA)))),AuthB,xor(xor(PWA,DA),RA),xor(PWA,DA),NB,GS,LS,KSA,KSB,ZA,ZB,YA,LB,GB,AuthAS,AuthBS,Inc,Set_63,SID).
 iknows(pair(A,pair(apply(H,pair(A,pair(RA,xor(apply(H,pair(PWA,FA)),Dummy_CA)))),Dummy_GA)))

step step_2 (UA,S,UB,SKas,SKbs,H,A,B,IDS,PWUA,PWUB,PWA,PWB,TA,TB,FA,FB,REGA,SS,REGB,CA,CB,DA,DB,RA,RS,Dummy_RB,PA,PB,AuthA,AuthB,GA,NA,NB,GS,LS,KSA,KSB,Dummy_ZA,ZB,YA,Dummy_LB,GB,AuthAS,Dummy_AuthBS,Inc,Set_63,SID,RB,ZA,LB,AuthBS) :=
 state_alice(UA,S,UB,SKas,SKbs,H,2,A,B,IDS,PWUA,PWUB,PWA,PWB,TA,TB,FA,FB,REGA,SS,REGB,CA,CB,DA,DB,RA,RS,Dummy_RB,PA,PB,AuthA,AuthB,GA,NA,NB,GS,LS,KSA,KSB,Dummy_ZA,ZB,YA,Dummy_LB,GB,AuthAS,Dummy_AuthBS,Inc,Set_63,SID).
 iknows(pair(B,pair(LB,pair(AuthBS,ZA))))
=[exists RB]=>
 state_alice(UA,S,UB,SKas,SKbs,H,3,A,B,IDS,PWUA,PWUB,PWA,PWB,TA,TB,FA,FB,REGA,SS,REGB,CA,CB,DA,DB,RA,RS,RB,PA,PB,AuthA,AuthB,GA,NA,NB,GS,LS,KSA,KSB,ZA,ZB,YA,LB,GB,AuthAS,AuthBS,Inc,Set_63,SID)

step step_3 (S,UA,UB,SKas,SKbs,H,A,B,IDS,PWUA,PWUB,PWA,PWB,TA,TB,FA,FB,Dummy_REGA,Dummy_SS,Dummy_REGB,Dummy_CA,Dummy_CB,Dummy_DA,Dummy_DB,RA,RS,RB,AuthA,AuthB,GA,PA,PB,NA,NB,GS,LS,Dummy_TrA,Dummy_TrB,Dummy_TloginA,Dummy_TloginB,KSA,KSB,ZA,ZB,YA,LB,GB,AuthAS,AuthBS,Inc,Dummy_Set_124,Dummy_Set_125,SID,SS,TrA,TrB,TloginA,TloginB) :=
 state_server(S,UA,UB,SKas,SKbs,H,0,A,B,IDS,PWUA,PWUB,PWA,PWB,TA,TB,FA,FB,Dummy_REGA,Dummy_SS,Dummy_REGB,Dummy_CA,Dummy_CB,Dummy_DA,Dummy_DB,RA,RS,RB,AuthA,AuthB,GA,PA,PB,NA,NB,GS,LS,Dummy_TrA,Dummy_TrB,Dummy_TloginA,Dummy_TloginB,KSA,KSB,ZA,ZB,YA,LB,GB,AuthAS,AuthBS,Inc,Dummy_Set_124,Dummy_Set_125,SID).
 iknows(pair(A,pair(PWA,pair(FA,pair(B,pair(PWB,FB))))))
=[exists TloginB,TrB,SS,TloginA,TrA]=>
 state_server(S,UA,UB,SKas,SKbs,H,1,A,B,IDS,PWUA,PWUB,PWA,PWB,TA,TB,FA,FB,apply(H,pair(A,pair(PWA,apply(H,pair(TrA,SS))))),SS,apply(H,pair(B,pair(PWB,apply(H,pair(TrB,Dummy_SS))))),xor(apply(H,pair(PWA,FA)),apply(H,pair(TrA,SS))),xor(apply(H,pair(PWB,FB)),apply(H,pair(TrB,Dummy_SS))),xor(PWA,apply(H,pair(TloginA,SS))),xor(PWB,apply(H,pair(TloginB,Dummy_SS))),RA,RS,RB,AuthA,AuthB,GA,PA,PB,NA,NB,GS,LS,TrA,TrB,TloginA,TloginB,KSA,KSB,ZA,ZB,YA,LB,GB,AuthAS,AuthBS,Inc,Dummy_Set_124,Dummy_Set_125,SID).
 iknows(scrypt(SKas,pair(A,pair(apply(H,pair(A,pair(PWA,apply(H,pair(TrA,SS))))),pair(xor(apply(H,pair(PWA,FA)),apply(H,pair(TrA,SS))),xor(PWA,apply(H,pair(TloginA,SS)))))))).
 secret(Dummy_Set_124,subs1,Dummy_Set_125).
 iknows(scrypt(SKbs,pair(B,pair(Dummy_REGB,pair(Dummy_CB,Dummy_DB))))).
 contains(Dummy_SS,Dummy_Set_124).
 contains(S,Dummy_Set_125)

step step_4 (S,UA,UB,SKas,SKbs,H,A,B,IDS,PWUA,PWUB,PWA,PWB,TA,TB,FA,FB,REGA,SS,REGB,CA,CB,DA,DB,Dummy_RA,Dummy_RS,Dummy_RB,Dummy_AuthA,AuthB,GA,PA,PB,NA,NB,Dummy_GS,Dummy_LS,Dummy_TrA,Dummy_TrB,Dummy_TloginA,Dummy_TloginB,Dummy_KSA,Dummy_KSB,Dummy_ZA,Dummy_ZB,YA,LB,GB,Dummy_AuthAS,AuthBS,Inc,Set_124,Set_125,SID,RA,RS,RB,AuthA,TrA,TrB,TloginA,TloginB) :=
 state_server(S,UA,UB,SKas,SKbs,H,1,A,B,IDS,PWUA,PWUB,PWA,PWB,TA,TB,FA,FB,REGA,SS,REGB,CA,CB,DA,DB,Dummy_RA,Dummy_RS,Dummy_RB,Dummy_AuthA,AuthB,GA,PA,PB,NA,NB,Dummy_GS,Dummy_LS,Dummy_TrA,Dummy_TrB,Dummy_TloginA,Dummy_TloginB,Dummy_KSA,Dummy_KSB,Dummy_ZA,Dummy_ZB,YA,LB,GB,Dummy_AuthAS,AuthBS,Inc,Set_124,Set_125,SID).
 iknows(pair(A,pair(RA,pair(AuthA,pair(B,pair(RB,AuthB))))))
=[exists TloginB,TloginA,TrB,TrA,RS]=>
 state_server(S,UA,UB,SKas,SKbs,H,2,A,B,IDS,PWUA,PWUB,PWA,PWB,TA,TB,FA,FB,REGA,SS,REGB,CA,CB,DA,DB,RA,RS,RB,AuthA,AuthB,GA,PA,PB,NA,NB,xor(apply(H,pair(TrB,SS)),RS),xor(apply(H,RA),RB),TrA,TrB,TloginA,TloginB,apply(H,pair(TloginA,SS)),apply(H,pair(TloginB,SS)),xor(apply(H,pair(TrA,SS)),apply(H,pair(apply(H,pair(TloginA,SS)),SS))),xor(apply(H,pair(TrB,SS)),apply(H,pair(apply(H,pair(TloginB,SS)),SS))),YA,LB,GB,apply(H,pair(A,pair(IDS,pair(apply(H,pair(TloginB,SS)),RS)))),AuthBS,Inc,Set_124,Set_125,SID).
 iknows(pair(A,pair(IDS,apply(H,pair(A,pair(IDS,pair(apply(H,pair(TloginB,SS)),RS)))))))

step step_5 (UB,S,UA,SKbs,SKas,H,A,B,IDS,PWUA,PWUB,PWA,Dummy_PWB,TA,TB,FA,Dummy_FB,SS,REGA,REGB,CA,CB,DA,DB,RA,RS,RB,AuthA,AuthB,GA,PA,PB,NA,NB,GS,LS,KSA,KSB,ZA,ZB,YA,LB,GB,AuthAS,AuthBS,Inc,Dummy_Set_176,SID) :=
 state_bob(UB,S,UA,SKbs,SKas,H,0,A,B,IDS,PWUA,PWUB,PWA,Dummy_PWB,TA,TB,FA,Dummy_FB,SS,REGA,REGB,CA,CB,DA,DB,RA,RS,RB,AuthA,AuthB,GA,PA,PB,NA,NB,GS,LS,KSA,KSB,ZA,ZB,YA,LB,GB,AuthAS,AuthBS,Inc,Dummy_Set_176,SID).
 iknows(start)
 =>
 state_bob(UB,S,UA,SKbs,SKas,H,1,A,B,IDS,PWUA,PWUB,PWA,apply(H,pair(PWUB,apply(H,TB))),TA,TB,FA,apply(H,TB),SS,REGA,REGB,CA,CB,DA,DB,RA,RS,RB,AuthA,AuthB,GA,PA,PB,NA,NB,GS,LS,KSA,KSB,ZA,ZB,YA,LB,GB,AuthAS,AuthBS,Inc,Dummy_Set_176,SID).
 iknows(scrypt(SKbs,pair(B,pair(apply(H,pair(PWUB,apply(H,TB))),apply(H,TB))))).
 secret(Dummy_Set_176,subs3,UB).
 contains(PWUB,Dummy_Set_176).
 contains(TB,Dummy_Set_176)

step step_6 (UB,S,UA,SKbs,SKas,H,A,B,IDS,PWUA,PWUB,PWA,PWB,TA,TB,FA,FB,SS,REGA,Dummy_REGB,CA,Dummy_CB,DA,Dummy_DB,RA,RS,Dummy_RB,AuthA,Dummy_AuthB,GA,PA,Dummy_PB,NA,Dummy_NB,GS,LS,KSA,KSB,ZA,ZB,YA,LB,Dummy_GB,AuthAS,AuthBS,Inc,Set_176,SID,REGB,CB,DB,RB) :=
 state_bob(UB,S,UA,SKbs,SKas,H,1,A,B,IDS,PWUA,PWUB,PWA,PWB,TA,TB,FA,FB,SS,REGA,Dummy_REGB,CA,Dummy_CB,DA,Dummy_DB,RA,RS,Dummy_RB,AuthA,Dummy_AuthB,GA,PA,Dummy_PB,NA,Dummy_NB,GS,LS,KSA,KSB,ZA,ZB,YA,LB,Dummy_GB,AuthAS,AuthBS,Inc,Set_176,SID).
 iknows(scrypt(SKbs,pair(A,pair(REGB,pair(CB,DB)))))
=[exists RB]=>
 state_bob(UB,S,UA,SKbs,SKas,H,2,A,B,IDS,PWUA,PWUB,PWA,PWB,TA,TB,FA,FB,SS,REGA,REGB,CA,CB,DA,DB,RA,RS,RB,AuthA,apply(H,pair(B,pair(RB,xor(apply(H,pair(PWB,FB)),CB)))),GA,PA,xor(apply(H,pair(PWB,FB)),CB),NA,xor(PWB,DB),GS,LS,KSA,KSB,ZA,ZB,YA,LB,xor(xor(PWB,DB),RB),AuthAS,AuthBS,Inc,Set_176,SID).
 iknows(B)

step step_7 (UB,S,UA,SKbs,SKas,H,A,B,IDS,PWUA,PWUB,PWA,PWB,TA,TB,FA,FB,SS,REGA,REGB,CA,CB,DA,DB,RA,RS,Dummy_RB,AuthA,AuthB,GA,PA,PB,NA,NB,Dummy_GS,Dummy_LS,KSA,KSB,Dummy_ZA,Dummy_ZB,Dummy_YA,Dummy_LB,GB,Dummy_AuthAS,Dummy_AuthBS,Inc,Set_176,SID,RB,AuthAS) :=
 state_bob(UB,S,UA,SKbs,SKas,H,2,A,B,IDS,PWUA,PWUB,PWA,PWB,TA,TB,FA,FB,SS,REGA,REGB,CA,CB,DA,DB,RA,RS,Dummy_RB,AuthA,AuthB,GA,PA,PB,NA,NB,Dummy_GS,Dummy_LS,KSA,KSB,Dummy_ZA,Dummy_ZB,Dummy_YA,Dummy_LB,GB,Dummy_AuthAS,Dummy_AuthBS,Inc,Set_176,SID).
 iknows(pair(A,pair(IDS,AuthAS)))
=[exists RB]=>
 state_bob(UB,S,UA,SKbs,SKas,H,3,A,B,IDS,PWUA,PWUB,PWA,PWB,TA,TB,FA,FB,SS,REGA,REGB,CA,CB,DA,DB,RA,RS,RB,AuthA,AuthB,GA,PA,PB,NA,NB,Dummy_GS,Dummy_LS,KSA,KSB,Dummy_ZA,Dummy_ZB,xor(RB,LS),xor(xor(RB,LS),apply(H,RB)),GB,AuthAS,apply(H,pair(B,pair(IDS,pair(apply(H,apply(H,pair(xor(RB,LS),ZA))),apply(H,RB))))),Inc,Set_176,SID).
 iknows(pair(B,pair(xor(xor(RB,LS),apply(H,RB)),pair(apply(H,pair(B,pair(IDS,pair(apply(H,apply(H,pair(xor(RB,LS),ZA))),apply(H,RB))))),ZA))))


section properties:

property secrecy_of_subs1 (MGoal,ASGoal) :=
 [] ((secret(MGoal,subs1,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_subs2 (MGoal,ASGoal) :=
 [] ((secret(MGoal,subs2,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_subs3 (MGoal,ASGoal) :=
 [] ((secret(MGoal,subs3,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))


section attack_states:

attack_state secrecy_of_subs1 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,subs1,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_subs2 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,subs2,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_subs3 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,subs3,ASGoal) &
 not(contains(i,ASGoal))

