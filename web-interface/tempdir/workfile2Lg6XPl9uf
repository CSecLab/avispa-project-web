role alice (Ui, Sj  : agent,
	 SKsu  : symmetric_key, MKi :symmetric_key,
         H : hash_func, 
         F : hash_func, % Chebyshev function 
         Snd, Rcv: channel(dy))
played_by Ui
def=
 local State  : nat,
IDi,RPWi,T1,T2, Bi,B,R, PWi,X,D1,MK,TmkX,TuX,KA,RNu,RNs,M1,Ms,M4,U:  text
const alice_bob1, alice_bob2, bob_alice1,bob_alice2, sub1,sub2, sub3,sub4,sub5: protocol_id
init  State := 0
transition
   1.State = 0       /\ Rcv(start)=|>
     State' :=1      /\ RPWi' :=H(H(IDi.PWi).Bi)
                     /\ Snd({IDi.H(H(IDi.PWi.B).Bi)}_MKi)
                     /\ secret({PWi}, sub1, Ui)
                     /\ secret({MKi}, sub2, {Sj,Ui})
                     /\ secret({Bi}, sub3, {Ui})
                     /\ secret({MK}, sub4, {Sj}) 
                     

	  
  2. State   = 1    /\ Rcv({xor(H(xor(H(IDi.MK),R')),H(H(IDi.PWi.B).Bi)). F(MK.H(xor(H(IDi.MK),R')))}_MKi) =|>
     State' := 2    /\ D2':= xor(RPWi',B)
                    /\ Fi':= H(RPWi'.B)
                    /\ U':= new() 
                    /\ TuX':= F(U'.H(xor(H(IDi.MK),R')))
                    /\ KA' := F(U'.F(MK.H(xor(H(IDi.MK),R'))))
                    /\ RNu':= new()
                    /\ T1':= new()
                    /\ M1':= xor(xor(H(xor(H(IDi.MK),R')), RNu'),T1')
                    /\ DID':= xor(ID,H(KA'))
                    /\ Mu':= H(ID.H(xor(H(IDi.MK),R')).KA.RNu'.T1') 


                    /\ Snd(DID.TuX'.M1'.Mu'.T1')

                    /\ request(Ui,Sj,alice_bob1, T1')
                    /\ request(Ui,Sj,alice_bob2, RNu') 


  3.State   = 2     /\ Rcv(xor(xor(H(xor(H(IDi.MK),R')),RNs'),T2').H(IDi.H(IDi.X'.F(MK.F(MK.H(xor(H(IDi.MK),R')))).T1'.T2'.RNu'.RNs').RNu'.RNs'.T1'.T2')) =|>
    State' := 3     /\ SKsu':= H(IDi.X'.TmkTuX'.T1'.T2'.RNu'.RNs')
                    /\ secret({SKsu'}, sub5, {Ui,Sj})  
                    /\ witness(Sj, Ui, bob_alice1, T2') 
                    /\ witness(Sj, Ui, bob_alice2, RNs')       
 end role


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

role bob (Ui, Sj  : agent,
	SKsu  : symmetric_key, MKi :symmetric_key,
         H : hash_func, 
         F : hash_func, % Chebyshev function         
Snd, Rcv: channel(dy))
played_by Sj
def=
local State  : nat,
        IDi,RPWi,T1,T2, Bi,B,R, PWi,X,D1,MK,TmkX,TuX,KA,RNu,RNs,M1,Ms,M4,U:  text
const alice_bob1, alice_bob2, bob_alice1,bob_alice2, sub1,sub2, sub3,sub4,sub5: protocol_id
 init  State := 0
transition
1. State  = 0 /\ Rcv({IDi.H(H(IDi.PWi.B).Bi)}_MKi) =|>
   State':= 1 /\ R':= new()
              /\ X':= H(xor(H(IDi.MK),R'))            
              /\ D1':= xor(X',H(H(IDi.PWi.B).Bi))
              /\ TmkX':= F(MK.X')
              /\ Snd({D1'.TmkX'}_MKi) 
              /\ secret({PWi}, sub1, Ui)
              /\ secret({MKi}, sub2, {Sj,Ui})
              /\ secret({Bi}, sub3, {Ui})
              /\ secret({MK}, sub4, {Sj}) 

2. State  = 1 /\ Rcv(xor(IDi,H(F(U'.F(MK.H(xor(H(IDi.MK),R')))))).F(U'.F(MK.H(xor(H(IDi.MK),R')))).xor(xor(H(xor(H(IDi.MK),R')), RNu'),T1').H(ID.H(xor(H(IDi.MK),R')).KA.RNu'.T1').T1') =|>
              /\ RNs':= new()
              /\ T2':= new()
              /\ TmkTuX':= F(MK.F(MK.H(xor(H(IDi.MK),R'))))
              /\ M4':= xor(xor(H(xor(H(IDi.MK),R')),RNs),T2')
              /\ SKsu':= H(IDi.X'.TmkTuX'.T1'.T2'.RNu'.RNs')
              /\ Ms':= H(IDi.SKsu'.RNu'.RNs'.T1'.T2')
              /\ Snd(M4'.Ms'.T2')
              /\ secret({SKsu'}, sub5, {Ui,Sj})
              /\ request(Sj, Ui, bob_alice1, T2')
              /\ request(Sj, Ui, bob_alice2, RNs')
              /\ witness(Ui,Sj,alice_bob1, T1')
              /\ witness(Ui,Sj,alice_bob2, RNu')
            
          
end role


%%%%%%%%%%%%%%%%%%%%%%%%%


role session(Ui, Sj  : agent,
	SKsu  : symmetric_key, MKi :symmetric_key,
         H : hash_func, 
         F : hash_func)
def=
  local  SI, SJ, RI, RJ: channel (dy)
composition
     alice(Ui, Sj, SKsu, MKi, H, F, SI, RI) 
   /\   bob(Ui, Sj, SKsu, MKi, H, F, SJ, RJ)
end role 

%%%%%%%%%%%%%%%%%%%%%%%%%%%


role environment()
def=
  const ui,sj: agent, sksu: symmetric_key,
       mki :symmetric_key,
       h   : hash_func, 
       f   : hash_func,
      idi,rpwi,t1,t2, bi,b,r, pwi,x,d1,mk,tmkx,tux,ka,rnu,rns,m1,ms,m4,u : text,
      alice_bob1, alice_bob2, bob_alice1,bob_alice2, sub1,sub2, sub3,sub4,sub5 : protocol_id
intruder_knowledge = {ui, sj, idi, h,f}
  composition
	session(ui,sj,sksu,mki,h,f) /\
	session(ui,sj,sksu,mki,h,f) 
end role

goal
  secrecy_of sub1, sub2, sub3, sub4,sub5
  authentication_on alice_bob1
  authentication_on alice_bob2
  authentication_on bob_alice1
  authentication_on bob_alice2
end goal
environment()