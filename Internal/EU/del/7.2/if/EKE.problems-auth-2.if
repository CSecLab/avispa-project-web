%% IF specification of /home/friends/drwho/Desktop/Archivio/Work/Science/AVISPA/AVISPA-FET-EU-02/shared/testsuite/hlpsl/EKE.problems.hlpsl

section signature:

state_EKE_Resp: agent * agent * symmetric_key * nat * text * text * text * public_key * nat -> fact
state_EKE_Init: agent * agent * symmetric_key * nat * public_key * text * text * text * nat -> fact


section types:

nb, na : protocol_id
Na, Nb, K, Dummy_Nb, Dummy_K, Dummy_Na, dummy_nonce : text
Ea, Dummy_Ea, dummy_pk : public_key
kab, Kab : symmetric_key
State, 7, 6, 4, CID, 3, 2, 1, 0, CID2, CID1 : nat
MGoal, start : message
b, a, A, B, AGoal, i : agent


section inits:

initial_state init1 := 
 iknows(a).
 iknows(b).
 iknows(start).
 iknows(i).
 state_EKE_Init(a,b,kab,0,dummy_pk,dummy_nonce,dummy_nonce,dummy_nonce,3).
 state_EKE_Resp(b,a,kab,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_pk,4).
 state_EKE_Init(b,a,kab,0,dummy_pk,dummy_nonce,dummy_nonce,dummy_nonce,6).
 state_EKE_Resp(a,b,kab,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_pk,7)


section rules:

step step_0 (A,B,Kab,Dummy_Ea,Na,Nb,K,Ea,CID) :=
 state_EKE_Init(A,B,Kab,0,Dummy_Ea,Na,Nb,K,CID).
 iknows(start)
=[exists Ea]=>
 state_EKE_Init(A,B,Kab,1,Ea,Na,Nb,K,CID).
 iknows(scrypt(Kab,Ea))

step step_1 (A,B,Kab,Ea,Dummy_Na,Nb,Dummy_K,Na,K,CID) :=
 state_EKE_Init(A,B,Kab,1,Ea,Dummy_Na,Nb,Dummy_K,CID).
 iknows(scrypt(Kab,crypt(Ea,K)))
=[exists Na]=>
 state_EKE_Init(A,B,Kab,2,Ea,Na,Nb,K,CID).
 iknows(scrypt(K,Na)).
 witness(A,B,na,Na)

step step_2 (A,B,Kab,Ea,Na,Dummy_Nb,K,Nb,CID) :=
 state_EKE_Init(A,B,Kab,2,Ea,Na,Dummy_Nb,K,CID).
 iknows(scrypt(K,pair(Na,Nb)))
 =>
 state_EKE_Init(A,B,Kab,3,Ea,Na,Nb,K,CID).
 iknows(scrypt(K,Nb))

step step_3 (B,A,Kab,Nb,Dummy_K,Na,Dummy_Ea,K,Ea,CID) :=
 state_EKE_Resp(B,A,Kab,0,Nb,Dummy_K,Na,Dummy_Ea,CID).
 iknows(scrypt(Kab,Ea))
=[exists K]=>
 state_EKE_Resp(B,A,Kab,1,Nb,K,Na,Ea,CID).
 iknows(scrypt(Kab,crypt(Ea,K)))

step step_4 (B,A,Kab,Dummy_Nb,K,Dummy_Na,Ea,Nb,Na,CID) :=
 state_EKE_Resp(B,A,Kab,1,Dummy_Nb,K,Dummy_Na,Ea,CID).
 iknows(scrypt(K,Na))
=[exists Nb]=>
 state_EKE_Resp(B,A,Kab,2,Nb,K,Na,Ea,CID).
 iknows(scrypt(K,pair(Na,Nb)))

step step_5 (B,A,Kab,Nb,K,Na,Ea,CID) :=
 state_EKE_Resp(B,A,Kab,2,Nb,K,Na,Ea,CID).
 iknows(scrypt(K,Nb))
 =>
 state_EKE_Resp(B,A,Kab,3,Nb,K,Na,Ea,CID).
 request(B,A,na,Na,CID)


section goals:

goal authenticate_Na (A,B,Na,CID) :=
 request(B,A,na,Na,CID).
 not(witness(A,B,na,Na)) &
 not(equal(A,i))
goal replay_protection_Na (A,B,Na,CID1,CID2) :=
 request(B,A,na,Na,CID1).
 request(B,A,na,Na,CID2) &
 not(equal(CID1,CID2)) &
 not(equal(A,i))

