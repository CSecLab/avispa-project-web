%% Jurek & Company Protocol number 2

%% VARIANT: 

role alice (A, B: agent,             
            Ka, Kb: public_key,    
			Kab : symmetric_key,
			Hash: hash_func,
            SND, RCV: channel (dy)) 
played_by A def=

  local State : nat, 
        Na, Nb: text

  init State := 0

  transition  
   
    0.  State  = 0 /\ RCV(start) =|> 
        State':= 2 /\ Na' := new() /\ SND(Na'.A)

    2.  State  = 2 /\ RCV({{Nb'.Na'.Hash(Nb'.B.Na'.A)}_inv(Kb)}_Ka) =|> 
        State':= 4 /\ request(A,B,alice_bob_nb,Nb')

end role

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

role bob(A, B: agent,      
        Ka, Kb: public_key,      
		Kab : symmetric_key,
		Hash: hash_func,
        SND, RCV: channel (dy)) 
played_by B def=

  local State : nat, 
        Na,Nb: text

  init State := 1

  transition 

    1.  State  = 1 /\ RCV(Na'.A) =|> 
        State':= 3 /\ Nb' := new() /\ SND({{Nb'.Na'.Hash(Nb'.B.Na'.A)}_inv(Kb)}_Ka)
                   /\ secret(Nb',nb,{A,B}) 
                   /\ witness(B,A,alice_bob_nb,Nb')

end role

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

role session(A, B: agent, Ka, Kb: public_key, Kab: symmetric_key, Hash: hash_func) def=

  local SA, RA, SB, RB: channel (dy)

  composition 

        alice(A,B,Ka,Kb,Kab,Hash,SA,RA)
     /\ bob  (A,B,Ka,Kb,Kab,Hash,SB,RB)

end role

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

role environment() def=

    const a, b         : agent,
          ka, kb, ki   : public_key,
          kab          : symmetric_key,
          na,
		  h			   : hash_func,
          alice_bob_kab,
          bob_alice_na : protocol_id

    intruder_knowledge = {a, b, h, ka, kb, ki, inv(ki)}

    composition

        session(a,b,ka,kb,kab,h)
     /\ session(a,i,ka,ki,kab,h)
     /\ session(i,b,ki,kb,kab,h)

end role

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

goal

  secrecy_of kab
  authentication_on alice_bob_kab

end goal

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

environment()
