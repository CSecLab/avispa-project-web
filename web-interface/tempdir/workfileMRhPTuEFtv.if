%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfileMRhPTuEFtv

section signature:

state_bob: agent * agent * hash_func * hash_func * text * text * text * symmetric_key * nat * symmetric_key * symmetric_key * symmetric_key * symmetric_key * hash_func * text * text * text * set(agent) * nat -> fact
state_server: agent * agent * agent * symmetric_key * symmetric_key * text * nat * text * text * text * text * symmetric_key * symmetric_key * hash_func * set(agent) * nat -> fact
state_alice: agent * agent * agent * symmetric_key * hash_func * hash_func * text * text * text * text * text * text * text * text * nat * symmetric_key * symmetric_key * symmetric_key * symmetric_key * hash_func * set(agent) * nat -> fact


section types:

set_160, set_158, set_157, set_152, set_148, set_131: set
Set_86, Set_62, Dummy_Set_86, Dummy_Set_62, Dummy_Set_43, Set_43, ASGoal: set(agent)
9, 7, 5, State, 8, SID, 4, 6, 3, 2, Dummy_State, 1, 0, SID2, SID1: nat
start, MGoal: message
alice_bob_kd, ks, bob_alice_kd, kd, bob_alice_r1, alice_bob_na: protocol_id
Na, Ok, R1, AR, Na1, Ws, Lj, M, Dummy_R1, Dummy_Na, Dummy_Lj, Dummy_Ws, Dummy_Na1, Dummy_AR, dummy_nonce, id, m, ar, na1, ws: text
H, Succ, H1, Hash, dummy_hash, succ, h: hash_func
Idr, Hk, Ks, Kd, Kc, Dummy_Idr, K, Dummy_Ks, Dummy_Hk, Dummy_Kd, dummy_sk, ksi, kc, k, ka, ki: symmetric_key
A, B, S, A2Goal, A1Goal, a, s, b, i: agent


section inits:

initial_state init1 := 
 iknows(start).
 iknows(a).
 iknows(b).
 iknows(s).
 iknows(ki).
 iknows(ws).
 iknows(ar).
 iknows(na1).
 iknows(m).
 iknows(succ).
 iknows(ksi).
 iknows(i).
 state_alice(a,s,b,k,succ,h,m,ar,na1,ws,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,0,dummy_sk,dummy_sk,dummy_sk,dummy_sk,dummy_hash,set_131,3).
 state_server(s,a,b,k,kc,m,1,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_sk,dummy_sk,dummy_hash,set_148,4).
 state_bob(b,a,succ,h,ar,na1,ws,kc,5,dummy_sk,dummy_sk,dummy_sk,dummy_sk,dummy_hash,dummy_nonce,dummy_nonce,dummy_nonce,set_152,5).
 state_server(s,i,b,ki,kc,m,1,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_sk,dummy_sk,dummy_hash,set_158,8).
 state_bob(b,i,succ,h,ar,na1,ws,kc,5,dummy_sk,dummy_sk,dummy_sk,dummy_sk,dummy_hash,dummy_nonce,dummy_nonce,dummy_nonce,set_160,9)


section rules:

step step_0 (A,S,B,K,Succ,H1,M,AR,Na1,Ws,Lj,Na,Ok,R1,Idr,Ks,Kd,Hk,H,Set_43,SID) :=
 state_alice(A,S,B,K,Succ,H1,M,AR,Na1,Ws,Lj,Na,Ok,R1,0,Idr,Ks,Kd,Hk,H,Set_43,SID).
 iknows(start)
 =>
 state_alice(A,S,B,K,Succ,H1,M,AR,Na1,Ws,Lj,Na,Ok,R1,2,Idr,Ks,Kd,Hk,H,Set_43,SID).
 iknows(pair(A,pair(B,pair(id,M))))

step step_1 (A,S,B,K,Succ,H1,M,Dummy_AR,Dummy_Na1,Dummy_Ws,Dummy_Lj,Dummy_Na,Ok,R1,Idr,Ks,Dummy_Kd,Dummy_Hk,H,Set_43,SID,AR,Na1,Ws,Lj,Na,Kd,Hk) :=
 state_alice(A,S,B,K,Succ,H1,M,Dummy_AR,Dummy_Na1,Dummy_Ws,Dummy_Lj,Dummy_Na,Ok,R1,2,Idr,Ks,Dummy_Kd,Dummy_Hk,H,Set_43,SID).
 iknows(pair(A,pair(B,pair(AR,pair(Ws,pair(Na1,scrypt(K,pair(Hk,pair(Lj,Kd)))))))))
=[exists Na]=>
 state_alice(A,S,B,K,Succ,H1,M,AR,Na1,Ws,Lj,Na,Ok,R1,4,Idr,Ks,Kd,Hk,H,Set_43,SID).
 iknows(pair(A,pair(B,pair(scrypt(Hk,id),pair(AR,pair(Ws,pair(Na,Na1))))))).
 request(A,B,bob_alice_kd,Dummy_Kd,SID)

step step_2 (A,S,B,K,Succ,H1,M,AR,Na1,Ws,Lj,Na,Ok,Dummy_R1,Idr,Dummy_Ks,Dummy_Kd,Hk,H,Dummy_Set_43,SID,R1,Kd) :=
 state_alice(A,S,B,K,Succ,H1,M,AR,Na1,Ws,Lj,Na,Ok,Dummy_R1,4,Idr,Dummy_Ks,Dummy_Kd,Hk,H,Dummy_Set_43,SID).
 iknows(pair(A,pair(B,pair(scrypt(Idr,R1),pair(apply(H1,pair(Kd,R1)),apply(H1,Na))))))
 =>
 state_alice(A,S,B,K,Succ,H1,M,AR,Na1,Ws,Lj,Na,Ok,R1,6,Idr,apply(H,pair(Na,R1)),Kd,Hk,H,Dummy_Set_43,SID).
 iknows(pair(A,pair(B,apply(H1,R1)))).
 witness(A,B,bob_alice_kd,H1).
 secret(Dummy_Ks,ks,Dummy_Set_43).
 contains(A,Dummy_Set_43).
 contains(B,Dummy_Set_43)

step step_3 (S,A,B,K,Kc,M,Dummy_Na1,Dummy_Lj,Dummy_AR,Dummy_Ws,Dummy_Hk,Dummy_Kd,Hash,Dummy_Set_62,SID,Na1,Lj,AR,Ws,Hk) :=
 state_server(S,A,B,K,Kc,M,1,Dummy_Na1,Dummy_Lj,Dummy_AR,Dummy_Ws,Dummy_Hk,Dummy_Kd,Hash,Dummy_Set_62,SID).
 iknows(pair(A,scrypt(K,pair(id,M))))
=[exists Na1,Hk,Lj,AR,Ws]=>
 state_server(S,A,B,K,Kc,M,3,Na1,Lj,AR,Ws,Hk,apply(Hash,pair(Kc,pair(id,pair(AR,Ws)))),Hash,Dummy_Set_62,SID).
 iknows(pair(A,pair(AR,pair(Ws,pair(Na1,scrypt(K,pair(Hk,pair(Lj,apply(Hash,pair(Kc,pair(id,pair(AR,Ws)))))))))))).
 contains(A,Dummy_Set_62).
 contains(S,Dummy_Set_62).
 contains(B,Dummy_Set_62)

step step_4 (B,A,Succ,H1,Dummy_AR,Dummy_Na1,Dummy_Ws,Kc,Dummy_Idr,Hk,Ks,Dummy_Kd,H,Dummy_Na,Ok,Dummy_R1,Set_86,SID,AR,Na1,Ws,Na,R1) :=
 state_bob(B,A,Succ,H1,Dummy_AR,Dummy_Na1,Dummy_Ws,Kc,5,Dummy_Idr,Hk,Ks,Dummy_Kd,H,Dummy_Na,Ok,Dummy_R1,Set_86,SID).
 iknows(pair(A,pair(B,pair(scrypt(Hk,id),pair(AR,pair(Ws,pair(Na,Na1)))))))
=[exists R1]=>
 state_bob(B,A,Succ,H1,AR,Na1,Ws,Kc,7,apply(H,pair(id,Na1)),Hk,Ks,apply(H,pair(Kc,pair(id,pair(Dummy_AR,Dummy_Ws)))),H,Na,Ok,R1,Set_86,SID).
 iknows(pair(A,pair(B,pair(scrypt(Dummy_Idr,R1),pair(apply(H1,pair(apply(H,pair(Kc,pair(id,pair(Dummy_AR,Dummy_Ws)))),R1)),apply(H1,Dummy_Na)))))).
 witness(B,A,bob_alice_kd,apply(H,pair(Kc,pair(id,pair(Dummy_AR,Dummy_Ws)))))

step step_5 (B,A,Succ,H1,AR,Na1,Ws,Kc,Idr,Hk,Dummy_Ks,Kd,H,Na,Ok,Dummy_R1,Dummy_Set_86,SID,R1) :=
 state_bob(B,A,Succ,H1,AR,Na1,Ws,Kc,7,Idr,Hk,Dummy_Ks,Kd,H,Na,Ok,Dummy_R1,Dummy_Set_86,SID).
 iknows(pair(A,pair(B,apply(H1,R1))))
 =>
 state_bob(B,A,Succ,H1,AR,Na1,Ws,Kc,9,Idr,Hk,apply(H,pair(Na,Dummy_R1)),Kd,H,Na,Ok,R1,Dummy_Set_86,SID).
 secret(apply(H,pair(Na,Dummy_R1)),ks,Dummy_Set_86).
 contains(A,Dummy_Set_86).
 contains(B,Dummy_Set_86)


section properties:

property secrecy_of_ks (MGoal,ASGoal) :=
 [] ((secret(MGoal,ks,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_kd (MGoal,ASGoal) :=
 [] ((secret(MGoal,kd,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property authentication_on_bob_alice_kd (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,bob_alice_kd,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,bob_alice_kd,MGoal))
     /\ ((request(A1Goal,A2Goal,bob_alice_kd,MGoal,SID1)
           /\ request(A1Goal,A2Goal,bob_alice_kd,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_alice_bob_na (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,alice_bob_na,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,alice_bob_na,MGoal))
     /\ ((request(A1Goal,A2Goal,alice_bob_na,MGoal,SID1)
           /\ request(A1Goal,A2Goal,alice_bob_na,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state secrecy_of_ks (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,ks,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_kd (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,kd,ASGoal) &
 not(contains(i,ASGoal))

attack_state authentication_on_bob_alice_kd (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,bob_alice_kd,MGoal,SID) &
 not(witness(A2Goal,A1Goal,bob_alice_kd,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_bob_alice_kd (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,bob_alice_kd,MGoal,SID1).
 request(A1Goal,A2Goal,bob_alice_kd,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_alice_bob_na (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,alice_bob_na,MGoal,SID) &
 not(witness(A2Goal,A1Goal,alice_bob_na,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_alice_bob_na (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,alice_bob_na,MGoal,SID1).
 request(A1Goal,A2Goal,alice_bob_na,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

