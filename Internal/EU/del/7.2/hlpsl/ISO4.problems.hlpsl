%% 1-3-4  ISO4
%%%%% [ETHZ] Also known as "ISO (Public Key) Three-Pass Mutual Authentication Protocol" ClarkJacob 6.6.4

%% A-B Notation:

%% 1. B --> A : Rb, Text1

%% 2. A --> B : {PKa,A}SKc, Ra,Rb, B, Text3,{Ra,Rb,B,Text2}_SKa

%% 3. B --> A : {PKb,B}SKc, Rb,Ra, A, Text5,{Rb,Ra,B,Text4}_SKb

%% SKc is the private key of the server C.
%% {PKa,A}SKc is the certificate of agent A

%% --------------------------Nhlpsl-spec ---------------------

role ISO4_Init ( A,B: agent,  %%% Zeb: corrected this-- was "B,A : agent" which is not how it is invoked below
                 Pkb,Pks: public_key, 
                 Snd,Rec: channel(dy)) played_by B def=

  exists State: nat,
         Pka:public_key,
         Nb: text(fresh),
         Na,Text2,Text3: text
  owns Snd

  const ctext1,ctext4,ctext5: text

  init State = 0 
  knowledge(B)={A,B,Pkb,Pks,ctext1,ctext4,ctext5}

  transition

   1. State=0 /\ Rec(start) 
	=|> 
      Snd(Nb'.ctext1) 
	/\ State'=1 
	/\ witness(B,A,nb,Nb')

   2. State=1 /\ Rec(Pka'.A.{Pka'.A}inv(Pks).Na'.Nb.B.Text3'.
		     {Na'.Nb.B.Text2'}inv(Pka'))
      =|> 
      Snd(Pkb.B.{Pkb.B}inv(Pks).Nb.Na'.A.ctext5.{Nb.Na'.A.ctext4}inv(Pkb))
      	/\ State'=2
%%	/\ witness(B,A,nb,Nb)
	/\ request(B,A,na,Na')
end role


%%  (*------------------------------------------------------*)

role ISO4_Resp ( B,A: agent,
                 Pka,Pks: public_key, 
                 Snd,Rec: channel(dy)) played_by A def=

  exists State: nat,
         Pkb:public_key,
         Na: text(fresh),
         Nb,Text1,Text4,Text5: text

  owns Snd 

  const ctext2,ctext3: text

  init State = 0
  knowledge(A)={A,B,Pka,Pks,ctext2,ctext3}


  transition

   1. State=0 /\ Rec(Nb'.Text1')
 
                =|> Snd(Pka.A.{Pka.A}inv(Pks).
                        Na'.Nb'.B.ctext3.{Na'.Nb'.B.ctext2}inv(Pka))
                 /\ State'=1
		 /\ witness(A,B,na,Na')

   2. State=1
    	/\ Rec(Pkb'.B.{Pkb'.B}inv(Pks).
                     Nb.Na.A.Text5'.{Nb.Na.A.Text4'}inv(Pkb'))
	=|> 
	State'=2
	/\ request(A,B,nb,Nb)
end role

%%  (*------------------------------------------------------*)

role Session (A,B:agent,
	      Pka,Pkb,Pks: public_key,
	      SA,RA,SB,RB: channel (dy)) def=       

  composition

  %% LC: is it correct to use the same channel SA in both the
  %%     initiator and responder? I think it is not, so I have 
  %%     changed it. Please check! The old version is commented.
  %%
  %%  composition
  %%
  %%          ISO4_Init(A,B,Pkb,Pks,SA,RA)
  %%       /\ ISO4_Resp(B,A,Pka,Pks,SA,RB)

          ISO4_Init(A,B,Pkb,Pks,SA,RA)
       /\ ISO4_Resp(B,A,Pka,Pks,SB,RB)

end role




%% (*------------------------------------------------------*)

role Environment() def=

 const na,nb: protocol_id

 knowledge(i)={a,b,c,s,pks}

 composition

	Session(a,b,pka,pkb,pks,sa1,ra1,sb1,rb1)
     /\	Session(a,i,pka,pki,pks,sa2,ra2,sb2,rb2)
     /\	Session(i,b,pki,pkb,pks,sa3,ra3,sb3,rb3)
%     /\	Session(b,a,pkb,pka,pks,sa4,ra4,sb4,rb4)

end role

%% (*------------------------------------------------------*)

goal

%% init. authenticates Resp. on Na and Nb

%%   J: was "ISO4_Resp authenticates ISO4_Init on Na,Nb",
%%   but it seems to me useless that ISO4_Resp
%%   authenticates ISO4_Init also on Na, because 
%%   ISO4_Init did not generate Na! Im I wrong?
%%   Same thing for the symmetric goal below..

   ISO4_Resp authenticates ISO4_Init on Nb


%% Resp. authenticates Init. on Na and Nb

   ISO4_Init authenticates ISO4_Resp on Na

end goal

Environment()




