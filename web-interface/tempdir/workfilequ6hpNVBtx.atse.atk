
----------------
  AtSe Summary  
----------------

  Protocol file: /home/avispa/web-interface-computation/./tempdir/workfilequ6hpNVBtx.if
  Attack found : YES

  Analysed   : 4 states
  Reachable  : 1 states
  Translation: 0.02 seconds
  Computation: 0.00 seconds


---------------------------------------------
            Internal System State            
  (initial state after reading the if file)  
---------------------------------------------

Intruder state :
----------------

Intruder Knowledge :  start i ha aaah aaal fa mn 


Interpreted protocol specification :
------------------------------------

Role aaa_MIP_HA played by (ha,7):
| mn.{K_MnHa(19).K_FaHa(19)}_k_ha_aaah.KeyMnFaKeyMnHa(19).
| {mn.{K_MnHa(19).K_FaHa(19)}_k_ha_aaah.KeyMnFaKeyMnHa(19)}_k_ha_aaah
|   => KeyMnFaKeyMnHa(19).{KeyMnFaKeyMnHa(19)}_K_MnHa(19).
|      {KeyMnFaKeyMnHa(19).{KeyMnFaKeyMnHa(19)}_K_MnHa(19)}_k_ha_aaah
|    & WRequest(ha,aaah,k_mnha1,K_MnHa(19));
|    & WRequest(ha,aaah,k_faha2,K_FaHa(19));

Role aaa_MIP_AAAH played by (aaah,6):
| fa.mn.aaah.{fa.mn.aaah}_k_mn_aaah => mn.{n15(K_MnHa).n15(K_FaHa)}_k_ha_aaah.
|      {n15(K_MnFa).n15(K_MnHa)}_k_mn_aaah.
|      {mn.{n15(K_MnHa).n15(K_FaHa)}_k_ha_aaah.{n15(K_MnFa).n15(K_MnHa)}_k_mn_aaah}_k_ha_aaah
|    & Witness(aaah,ha,k_mnha1,n15(K_MnHa));
|    & Witness(aaah,mn,k_mnha2,n15(K_MnHa));
|    & Witness(aaah,mn,k_mnfa2,n15(K_MnFa));
|    & Witness(aaah,fa,k_mnfa1,n15(K_MnFa));
|    & Witness(aaah,ha,k_faha2,n15(K_FaHa));
|    & Witness(aaah,fa,k_faha1,n15(K_FaHa));
| {n15(K_MnFa).n15(K_MnHa)}_k_mn_aaah.
| {{n15(K_MnFa).n15(K_MnHa)}_k_mn_aaah}_n15(K_MnHa).
| {{n15(K_MnFa).n15(K_MnHa)}_k_mn_aaah.{{n15(K_MnFa).n15(K_MnHa)}_k_mn_aaah}_n15(K_MnHa)}_k_ha_aaah
|   => fa.{n15(K_MnFa).n15(K_FaHa)}_k_aaah_aaal.
|      {n15(K_MnFa).n15(K_MnHa)}_k_mn_aaah.
|      {{n15(K_MnFa).n15(K_MnHa)}_k_mn_aaah}_n15(K_MnHa).
|      {fa.{n15(K_MnFa).n15(K_FaHa)}_k_aaah_aaal.{n15(K_MnFa).n15(K_MnHa)}_k_mn_aaah.{{n15(K_MnFa).n15(K_MnHa)}_k_mn_aaah}_n15(K_MnHa)}_k_aaah_aaal
|    & Secret(n15(K_MnHa),set_144);  Secret(n15(K_MnFa),set_143);
|    & Secret(n15(K_FaHa),set_142);  Add fa to set_142;  Add ha to set_142;
|    & Add fa to set_143;  Add mn to set_143;  Add mn to set_144;
|    & Add ha to set_144;

Role aaa_MIP_AAAL played by (aaal,5):
| fa.mn.aaah.SignedRegReq(11) => fa.mn.aaah.SignedRegReq(11)
| fa.{K_MnFa(12).K_FaHa(12)}_k_aaah_aaal.KeyMnFaKeyMnHa(12).
| SignedKeyMnFaKeyMnHa(12).
| {fa.{K_MnFa(12).K_FaHa(12)}_k_aaah_aaal.KeyMnFaKeyMnHa(12).SignedKeyMnFaKeyMnHa(12)}_k_aaah_aaal
|   => fa.{K_MnFa(12).K_FaHa(12)}_k_fa_aaal.KeyMnFaKeyMnHa(12).
|      SignedKeyMnFaKeyMnHa(12).
|      {fa.{K_MnFa(12).K_FaHa(12)}_k_fa_aaal.KeyMnFaKeyMnHa(12).SignedKeyMnFaKeyMnHa(12)}_k_fa_aaal

Role aaa_MIP_FA played by (fa,4):
| start => fa.fa
| fa.mn.aaah.SignedRegReq(6) => fa.mn.aaah.SignedRegReq(6)
| fa.{K_MnFa(7).K_FaHa(7)}_k_fa_aaal.KeyMnHaKeyMnFa(7).SignKeyMnHaKeyMnFa(7).
| {fa.{K_MnFa(7).K_FaHa(7)}_k_fa_aaal.KeyMnHaKeyMnFa(7).SignKeyMnHaKeyMnFa(7)}_k_fa_aaal
|   => KeyMnHaKeyMnFa(7).SignKeyMnHaKeyMnFa(7)
|    & WRequest(fa,aaah,k_mnfa1,K_MnFa(7));
|    & WRequest(fa,aaah,k_faha1,K_FaHa(7));

Role aaa_MIP_MN played by (mn,3):
| fa.fa => fa.mn.aaah.{fa.mn.aaah}_k_mn_aaah
| {K_MnFa(2).K_MnHa(2)}_k_mn_aaah.{{K_MnFa(2).K_MnHa(2)}_k_mn_aaah}_K_MnHa(2)
|   => ()
|    & WRequest(mn,aaah,k_mnfa2,K_MnFa(2));
|    & WRequest(mn,aaah,k_mnha2,K_MnHa(2));


Some Remarks :
--------------

- The syntax of protocol steps is
   "Received Msg" => "Sent Msg"  [Equalities] & Inequalities & IF facts
- A Role is a tree where steps are unary nodes and choice points are n-ary nodes
- The Initial System state is the state of cl-atse at the begining of the search
  for attacks, and represents both the intruder and honest participants state.
- See the cl-atse's subsection in the user-manual for more details.


--------------------------------------------------
                Attack Description                
 (the list of protocol steps followed by cl-atse) 
--------------------------------------------------

Short attack description :
--------------------------

 Kind of attack:  Authentication on (aaah.mn.k_mnfa2.fa.mn)
   Substitution:  [ K_MnFa(2)=fa.mn  K_MnHa(2)=aaah ]
  Compact trace:  (mn,3) (mn,3) 


Detailed attack description :
-----------------------------

 i -> (mn,3):  fa.fa
 (mn,3) -> i:  fa.mn.aaah.{fa.mn.aaah}_k_mn_aaah

 i -> (mn,3):  {fa.mn.aaah}_k_mn_aaah.{{fa.mn.aaah}_k_mn_aaah}_aaah
 (mn,3) -> i:  ()
               & WRequest(mn,aaah,k_mnfa2,fa.mn);
               & WRequest(mn,aaah,k_mnha2,aaah);

