%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfilegtOyvs

section signature:

state_aaa: agent * agent * symmetric_key * hash_func * hash_func * hash_func * hash_func * nat * text * text * text * text * text * message * set(agent) * nat -> fact
state_me: agent * agent * symmetric_key * hash_func * hash_func * hash_func * hash_func * nat * text * text * text * text * text * message * set(agent) * nat -> fact


section types:

me_aaa, kma, aaa_me: protocol_id
F1, F2, F3, F4, f1, f2, f3, f4: hash_func
GK, kmeaaa, kmei, kiaaa: symmetric_key
Dummy_Set_53, Dummy_Set_29, Set_29, ASGoal, Set_53: set(agent)
6, 4, State, SID, Dummy_State, 3, SID2, SID1, 2, 1, 0, 10, 5: nat
ME, AAA, aaa, A2Goal, A1Goal, me, i: agent
Dummy_Kma, dummy_msg, MGoal, start, Kma: message
Rhss, Raaa, IDhss, Key, Dummy_Key, Dummy_IDhss, Dummy_Raaa, Dummy_Rhss, Dummy_Rme, dummy_nonce, Rme: text
set_98, set_94, set_81, set_102, set_101, set_100: set


section inits:

initial_state init1 := 
 iknows(start).
 iknows(me).
 iknows(aaa).
 iknows(kmei).
 iknows(kiaaa).
 iknows(f1).
 iknows(f2).
 iknows(f3).
 iknows(f4).
 iknows(i).
 state_me(me,aaa,kmeaaa,f1,f2,f3,f4,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,set_81,3).
 state_aaa(aaa,me,kmeaaa,f1,f2,f3,f4,1,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,set_94,4).
 state_me(me,i,kmei,f1,f2,f3,f4,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,set_98,6).
 state_aaa(aaa,i,kiaaa,f1,f2,f3,f4,1,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,set_102,10)


section rules:

step step_0 (ME,AAA,GK,F1,F2,F3,F4,Dummy_Rme,Rhss,Raaa,IDhss,Key,Kma,Set_29,SID,Rme) :=
 state_me(ME,AAA,GK,F1,F2,F3,F4,0,Dummy_Rme,Rhss,Raaa,IDhss,Key,Kma,Set_29,SID).
 iknows(start)
=[exists Rme]=>
 state_me(ME,AAA,GK,F1,F2,F3,F4,2,Rme,Rhss,Raaa,IDhss,Key,Kma,Set_29,SID).
 iknows(Rme)

step step_1 (ME,AAA,GK,F1,F2,F3,F4,Rme,Dummy_Rhss,Dummy_Raaa,Dummy_IDhss,Dummy_Key,Dummy_Kma,Dummy_Set_29,SID,Rhss,Raaa,IDhss,Key) :=
 state_me(ME,AAA,GK,F1,F2,F3,F4,2,Rme,Dummy_Rhss,Dummy_Raaa,Dummy_IDhss,Dummy_Key,Dummy_Kma,Dummy_Set_29,SID).
 iknows(pair(scrypt(scrypt(GK,apply(F3,pair(IDhss,Rhss))),apply(F2,pair(Raaa,pair(Rhss,Rme)))),pair(Raaa,Rhss))).
 witness(ME,AAA,aaa_me,Raaa,Rhss)
=[exists Key]=>
 state_me(ME,AAA,GK,F1,F2,F3,F4,4,Rme,Rhss,Raaa,IDhss,Key,scrypt(scrypt(GK,apply(F3,pair(IDhss,Rhss))),apply(F4,Key)),Dummy_Set_29,SID).
 secret(scrypt(scrypt(GK,apply(F3,pair(IDhss,Rhss))),apply(F4,Key)),kma,Dummy_Set_29).
 contains(AAA,Dummy_Set_29).
 contains(ME,Dummy_Set_29)

step step_2 (ME,AAA,GK,F1,F2,F3,F4,Rme,Rhss,Raaa,IDhss,Dummy_Key,Kma,Set_29,SID,Key) :=
 state_me(ME,AAA,GK,F1,F2,F3,F4,4,Rme,Rhss,Raaa,IDhss,Dummy_Key,Kma,Set_29,SID).
 iknows(scrypt(Kma,apply(F1,pair(Raaa,Key)))).
 wrequest(ME,AAA,me_aaa,Raaa,SID)
 =>
 state_me(ME,AAA,GK,F1,F2,F3,F4,6,Rme,Rhss,Raaa,IDhss,Key,Kma,Set_29,SID)

step step_3 (AAA,ME,GK,F1,F2,F3,F4,Dummy_Rme,Dummy_Rhss,Dummy_Raaa,Dummy_IDhss,Key,Kma,Set_53,SID,Rme,Rhss,Raaa,IDhss) :=
 state_aaa(AAA,ME,GK,F1,F2,F3,F4,1,Dummy_Rme,Dummy_Rhss,Dummy_Raaa,Dummy_IDhss,Key,Kma,Set_53,SID).
 iknows(Rme)
=[exists Rhss,IDhss,Raaa]=>
 state_aaa(AAA,ME,GK,F1,F2,F3,F4,3,Rme,Rhss,Raaa,IDhss,Key,Kma,Set_53,SID).
 iknows(pair(scrypt(scrypt(GK,apply(F3,pair(IDhss,Rhss))),apply(F2,pair(Raaa,pair(Rhss,Rme)))),pair(Raaa,Rhss)))

step step_4 (AAA,ME,GK,F1,F2,F3,F4,Rme,Dummy_Rhss,Raaa,Dummy_IDhss,Dummy_Key,Dummy_Kma,Dummy_Set_53,SID,Rhss,IDhss,Key) :=
 state_aaa(AAA,ME,GK,F1,F2,F3,F4,3,Rme,Dummy_Rhss,Raaa,Dummy_IDhss,Dummy_Key,Dummy_Kma,Dummy_Set_53,SID).
 iknows(scrypt(Kma,apply(F1,pair(Raaa,Key)))).
 witness(AAA,ME,me_aaa,Raaa)
=[exists IDhss,Rhss]=>
 state_aaa(AAA,ME,GK,F1,F2,F3,F4,5,Rme,Rhss,Raaa,IDhss,Key,scrypt(scrypt(GK,apply(F3,pair(IDhss,Rhss))),apply(F4,Key)),Dummy_Set_53,SID).
 secret(scrypt(scrypt(GK,apply(F3,pair(IDhss,Rhss))),apply(F4,Key)),kma,Dummy_Set_53).
 contains(AAA,Dummy_Set_53).
 contains(ME,Dummy_Set_53)


section properties:

property secrecy_of_kma (MGoal,ASGoal) :=
 [] ((secret(MGoal,kma,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property authentication_on_me_aaa (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,me_aaa,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,me_aaa,MGoal))
     /\ ((request(A1Goal,A2Goal,me_aaa,MGoal,SID1)
           /\ request(A1Goal,A2Goal,me_aaa,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_aaa_me (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,aaa_me,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,aaa_me,MGoal))
     /\ ((request(A1Goal,A2Goal,aaa_me,MGoal,SID1)
           /\ request(A1Goal,A2Goal,aaa_me,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state secrecy_of_kma (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,kma,ASGoal) &
 not(contains(i,ASGoal))

attack_state authentication_on_me_aaa (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,me_aaa,MGoal,SID) &
 not(witness(A2Goal,A1Goal,me_aaa,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_me_aaa (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,me_aaa,MGoal,SID1).
 request(A1Goal,A2Goal,me_aaa,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_aaa_me (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,aaa_me,MGoal,SID) &
 not(witness(A2Goal,A1Goal,aaa_me,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_aaa_me (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,aaa_me,MGoal,SID1).
 request(A1Goal,A2Goal,aaa_me,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

