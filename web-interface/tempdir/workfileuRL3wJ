role reader (R,T: agent,
	 Hello, K1, K2, K3, K4, IDen: text, SND , RCV: channel(dy)) played_by R def=

local
	IDS : text,
	A, B, C, D : message, %xor(xor(text, text), text)
	N1, N2 : message,
	State : nat
init State := 0

transition
	0. State = 0 /\ RCV(start) =|>
	    State':=2 /\ SND(Hello)

	2.State = 2 /\ RCV(IDS') =|>
	   State' := 4 /\ N1' := new() /\ N2' := new()
		 /\ A' := xor(xor(IDS', K1), N1')
		 /\ B' := xor(xor(IDS', K2), N1')
		 /\ C' := xor(xor(IDS', K3), N2')
		 /\ SND( (A').(B').(C'))
		  /\ witness(R, T, authk1, K1)

	4.State = 4 /\ RCV(xor(xor(xor(IDS, IDen), N1), N2)) =|>
	   State' := 6 /\ secret(IDen, idtag, {R, T})
		  /\ request(R, T, authid, IDen)

end role

role tag(R, T : agent, 
	Hello, K1, K2, K3, K4, IDen, IDS: text, SND, RCV: channel (dy)) played_by T def=

local
	A, B, C, D : message,
	N1, N2: message,
	State : nat

init State := 1

transition
 	1.State = 1 /\ RCV(Hello) =|>
	   State' := 3 /\ SND(IDS)

	3.State = 3 /\ RCV(xor(xor(IDS, K1), N1').xor(xor(IDS, K2), N1').xor(xor(IDS, K3), N2')) =|>
	   State' := 5 /\ SND(xor(xor(xor(IDS, IDen), xor(xor(xor(xor(IDS, K1), N1'), IDS), K1) ), 
			xor(xor(xor(xor(IDS, K3), N2'), IDS), K3)))

	5.State = 5 /\ RCV((A').(B').(C')) =|>
	   State' := 7 /\ N1' := xor(xor(A', IDS), K1)
		    /\ N2' := xor(xor(C', IDS), K3)
		    /\ SND(xor(xor(xor(IDS, IDen), N1'), N2'))

end role

role session( T,R : agent, Hello, K1, K2, K3, K4, IDS, IDen: text)
def=

local SND, RCV: channel (dy)

composition 

	tag(T, R, Hello, K1, K2, K3, K4, IDen, IDS, SND, RCV) 
	/\ reader(R, T, Hello, K1, K2, K3, K4, IDen, SND, RCV)
end role

role environment() 
def=

const hello, k1, k2, k3, k4, ids, iden : text,
	 kt1, kt2, kt3, kt4, idst, ident : text,
	 kr1, kr2, kr3, kr4, idsr, idenr : text,
	 authk1, authid, idtag : protocol_id,
	 tag, reader : agent

intruder_knowledge = {tag, reader, hello}
composition

	session(tag, reader, hello, k1, k2, k3, k4, ids, iden)
	/\ session(i, reader, hello, kr1, kr2, kr3, kr4, idsr, idenr)
	/\ session(tag, i, hello, kt1, kt2, kt3, kt4, idst, ident)
end role

goal
secrecy_of idtag
authentication_on authk1
authentication_on authid
end goal
environment()


 	
