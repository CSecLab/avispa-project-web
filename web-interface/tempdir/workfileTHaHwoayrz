%% PROTOCOL: EKE: Encrypted Key Exchange
%% VARIANT: basic
%% PURPOSE: Encrypted key exchange
%% REFERENCE:
%% url{http://citeseer.ist.psu.edu/bellovin92encrypted.html}
%% MODELER:
%% egin{itemize}
%%   item Haykal Tej, Siemens CT IC 3, 2003
%%   item Sebastian M{"o}dersheim, ETH Z{"u}rich, December 2003
%% end{itemize}
%%
%% ALICE_BOB:
%% egin{verbatim}
%% A -> B : {Ea}_Kab        |    Key exchange part
%% B -> A : {{K}_Ea}_Kab    |
%% A -> B : {Ca}_K          |
%% B -> A : {Ca,Cb}_K       |    Challenge/Response
%% A -> B : {Cb}_K          |    Authentication part
%% end{verbatim}
%%
%% LIMITATIONS: None
%%
%% PROBLEMS: 3
%%
%% CLASSIFICATION: G2 G12
%%
%% ATTACKS: 
%% egin{verbatim}
%% i -> (a,3): start
%% (a,3) -> i: {Ea(1)}_kab
%% i -> (a,6): {Ea(1)}_kab
%% (a,6) -> i: {{K(2)}_Ea(1)}_kab 
%% i -> (a,3): {{K(2)}_Ea(1)}_kab
%% (a,3) -> i: {Na(3)}_K(2) witness(a,b,na,Na(3))
%% i -> (a,6): {Na(3)}_K(2)
%% (a,6) -> i: {Na(3),Nb(4)}_K(2) witness(a,b,nb,Nb(4))
%% i -> (a,3): {Na(3),Nb(4)}_K(2)
%% (a,3) -> i: {Nb(4)}_K(2)  request(a,b,nb,Nb(4))
%% end{verbatim}
%%
%% Parallel session attack, man-in-the-middle
%% between A as initiator and A as responder, attacker
%% masquerades as B, but no secret nonces are exposed.
%%
%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%HLPSL:

role alice (Ui,Sj: agent,
               SKas: symmetric_key,
               H: hash_func,
               Snd,Rcv: channel(dy))
played_by Ui
def=

  local State   : nat,
        IDi,PWi,PWDi,NIDi,Bi,NIDii,SIDj,Xs,Rc,Ti : text
        Eii,Gi,Li,Rs,SK,Ki,Di,Fi,Ei:message,
        Inc : hash_func

  const alice_server, server_alice, subs1, subs2, subs3, subs4, subs5, subs6 : protocol_id

  init  State := 0

  transition

   1. State = 0
      / Rcv(start)
      =|> 
      State' := 1
      / PWDi' := H(IDi.PWi)
      / Snd({IDi.PWDi'.Bi}_SKas)
      / secret({IDi},subs1,{Ui,Sj}) 
      / secret ({PWi},subs2, {Ui})

   2. State = 1
      / Rcv({Fi'.Ei'.Ti'}_SKas)
      =|> 
      State' := 2
      / RC' := new()
      / NIDi':=xor(Ti,H(IDi.Fi)) 
      / Eii':=xor(Ei,H(IDi.PWi))
      / Gi':=xor(Eii',Rc')
      / NIDii':=xor(NIDi',H(Rc'))
      / Li':= H(NIDi'.Rc)
      /Snd(Fi'.Gi'.Li'.NIDii')
      / secret ({Rc'},subs3,{Ui,Sj})
      /witness (Ui,Sj,alice_server,Rc')
   3. State = 2
      / Rcv(Ki'.Di') 
      =|> 
      State' := 3
      / Rs':=xor(Eii ,Di) 
      / Ki':=H(Eii.Rs')
      /SK':=H(Rc.Rs)
      /secret ({SK'},subs4,{Ui,Sj})

end role

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

role server (Sj,Ui: agent,
               SKas: symmetric_key,
               H:hash_func,
 	       Snd,Rcv: channel(dy))
played_by Sj
def=

        IDi,PWi,PWDi,NIDi,Bi,NIDii,SIDj,Xs,Rc,Ti : text
        Eii,Gi,Li,Rs,SK,Ki,Di,Fi,Ei:message,
        Inc : hash_func

  const alice_server, server_alice, subs1, subs2, subs3, subs4, subs5, subs6 : protocol_id

  init  State := 0

  transition

   1. State = 0 / Rcv(IDi.PWDi'.Bi)
      =|> 
      State' := 1
      / NIDi' := new()
      / CIDi':=H(IDi.Bi) 
      / Fi':=H(Bi)
      /Ei':=xor(H(SIDj.Xs.Fi'),PWDi)
      /Ti':=xor(NIDi,H(IDi.Fi'))
      /Snd({Fi'.Ei'.Ti'}_SKas)
       /secret({Xs},subs5,{Sj})

   2. State = 1 / Rcv(Fi'.Gi'.Li'.NIDii')
      =|> 
      State' := 2
      / Rs' := new()
      / Ai':=H(SIDj.Xs.Fi)
      / Di':=xor(Ai',Rs')
       /Ki':=H(Ai.Rs')
      /witness(Sj,Ui,server_alice,Rs')
      /equest(Ui,Sj,server_alice,Rs')
      /secret({Rs'},subs6,{Sj})
      /Snd(Ki'.Di')

   

end role

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

role session(Ui,Sj,B: agent,
	     SKas: symmetric_key
             H:hash_func)
def=

  local SI, SJ, RI, RJ: channel (dy)

  composition
     alice(Ui,Sj,SKas,H,SI,RI)
  / server(Ui,Sj,SKas,H,SI,RI)

end role

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


role environment()
def=

  const ui , sj  : agent,
        skas    : symmetric_key,
        h , mul , add , sub : hash_func,
        idi,pwi,nidi,nidii,sidj,xs,ri,ti,rs : text,
        
        alice_server_rc,server_alice_rs,subs1,subs2,subs3,subs4,subs5,subs6 : protocol_id

  intruder_knowledge={ui,sj,h}

  composition
      session(ui,sj,skas ,h)
   / session(sj,ui,skas,h)
 
end role

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

goal

 % Confidentiality (G12)
 secrecy_of subs1
 secrecy_of subs2
secrecy_of subs3
secrecy_of subs4
secrecy_of subs5
secrecy_of subs6
 % Message authentication (G2)
 % EKE_Init authenticates EKE_Resp on nb
 authentication_on alice_server_rc

authentication_on server_alice_rs
 % Message authentication (G2)
 % EKE_Resp authenticates EKE_Init on na


end goal

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

environment()
 