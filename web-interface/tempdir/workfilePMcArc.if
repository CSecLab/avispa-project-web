%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfilePMcArc

section signature:

state_alice: agent * agent * agent * symmetric_key * hash_func * nat * text * symmetric_key * set(agent) * nat -> fact
state_bob: agent * agent * agent * agent * symmetric_key * hash_func * nat * text * text * symmetric_key * set(agent) * nat -> fact
state_server: agent * agent * agent * symmetric_key * symmetric_key * hash_func * nat * text * text * symmetric_key * nat -> fact
state_dark: agent * agent * agent * agent * hash_func * nat * text * text * text * symmetric_key * nat -> fact


section types:

skab, bob_server_nb, alice_server_na: protocol_id
MGoal, start: message
ASGoal, Set_68, Set_56, Dummy_Set_68, Dummy_Set_56: set(agent)
set_116, set_112: set
h, Hash: hash_func
kas, kbs, kis, SKab, Kas, Kbs, Dummy_SKab, dummy_sk: symmetric_key
A2Goal, A1Goal, d, s, b, a, S, B, A, D, i: agent
Na, Nb, Ra, Rb, Dummy_Nb, Dummy_Na, dummy_nonce: text
SID1, SID, State, 4, 3, 1, 2, 0, 6, 5, Dummy_State, SID2: nat


section inits:

initial_state init1 := 
 iknows(start).
 iknows(i).
 state_dark(d,s,b,a,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_sk,3).
 state_server(s,b,a,kas,kbs,h,1,dummy_nonce,dummy_nonce,dummy_sk,4).
 state_bob(b,d,s,a,kbs,h,2,dummy_nonce,dummy_nonce,dummy_sk,set_112,5).
 state_alice(a,s,b,kas,h,3,dummy_nonce,dummy_sk,set_116,6)


section rules:

step step_0 (D,S,B,A,Hash,Dummy_Na,Ra,Rb,SKab,SID,Na) :=
 state_dark(D,S,B,A,Hash,0,Dummy_Na,Ra,Rb,SKab,SID).
 iknows(start)
=[exists Na]=>
 state_dark(D,S,B,A,Hash,2,Na,Ra,Rb,SKab,SID).
 iknows(pair(Na,A))

step step_1 (S,B,A,Kas,Kbs,Hash,Dummy_Na,Dummy_Nb,Dummy_SKab,SID,Na,Nb,SKab) :=
 state_server(S,B,A,Kas,Kbs,Hash,1,Dummy_Na,Dummy_Nb,Dummy_SKab,SID).
 iknows(pair(Na,pair(Nb,pair(A,pair(B,apply(Hash,pair(Kbs,pair(Na,pair(Nb,pair(A,B))))))))))
=[exists SKab]=>
 state_server(S,B,A,Kas,Kbs,Hash,3,Na,Nb,SKab,SID).
 iknows(pair(scrypt(Kas,SKab),apply(Hash,pair(Kas,pair(Na,pair(B,scrypt(Kas,SKab))))))).
 iknows(pair(scrypt(Kbs,SKab),apply(Hash,pair(Kbs,pair(Nb,pair(A,scrypt(Kbs,SKab))))))).
 witness(S,A,alice_server_na,Na).
 witness(S,B,bob_server_nb,Nb)

step step_2 (B,D,S,A,Kbs,Hash,Dummy_Na,Dummy_Nb,SKab,Set_56,SID,Na,Nb) :=
 state_bob(B,D,S,A,Kbs,Hash,2,Dummy_Na,Dummy_Nb,SKab,Set_56,SID).
 iknows(pair(Na,A))
=[exists Nb]=>
 state_bob(B,D,S,A,Kbs,Hash,4,Na,Nb,SKab,Set_56,SID).
 iknows(pair(Na,pair(Nb,pair(A,pair(B,apply(Hash,pair(Kbs,pair(Na,pair(Nb,pair(A,B))))))))))

step step_3 (B,D,S,A,Kbs,Hash,Na,Nb,Dummy_SKab,Dummy_Set_56,SID,SKab) :=
 state_bob(B,D,S,A,Kbs,Hash,4,Na,Nb,Dummy_SKab,Dummy_Set_56,SID).
 iknows(pair(scrypt(Kbs,SKab),apply(Hash,pair(Kbs,pair(Nb,pair(A,scrypt(Kbs,SKab)))))))
 =>
 state_bob(B,D,S,A,Kbs,Hash,4,Na,Nb,SKab,Dummy_Set_56,SID).
 request(B,S,bob_server_nb,Nb,SID).
 secret(SKab,skab,Dummy_Set_56).
 contains(A,Dummy_Set_56).
 contains(S,Dummy_Set_56).
 contains(B,Dummy_Set_56)

step step_4 (A,S,B,Kas,Hash,Dummy_Na,Dummy_SKab,Dummy_Set_68,SID,Na,SKab) :=
 state_alice(A,S,B,Kas,Hash,3,Dummy_Na,Dummy_SKab,Dummy_Set_68,SID).
 iknows(pair(scrypt(Kas,SKab),apply(Hash,pair(Kas,pair(Na,pair(B,scrypt(Kas,SKab)))))))
 =>
 state_alice(A,S,B,Kas,Hash,3,Na,SKab,Dummy_Set_68,SID).
 request(A,S,alice_server_na,Na,SID).
 secret(SKab,skab,Dummy_Set_68).
 contains(A,Dummy_Set_68).
 contains(S,Dummy_Set_68).
 contains(B,Dummy_Set_68)


section properties:

property secrecy_of_skab (MGoal,ASGoal) :=
 [] ((secret(MGoal,skab,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property authentication_on_alice_server_na (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,alice_server_na,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,alice_server_na,MGoal))
     /\ ((request(A1Goal,A2Goal,alice_server_na,MGoal,SID1)
           /\ request(A1Goal,A2Goal,alice_server_na,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_bob_server_nb (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,bob_server_nb,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,bob_server_nb,MGoal))
     /\ ((request(A1Goal,A2Goal,bob_server_nb,MGoal,SID1)
           /\ request(A1Goal,A2Goal,bob_server_nb,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state secrecy_of_skab (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,skab,ASGoal) &
 not(contains(i,ASGoal))

attack_state authentication_on_alice_server_na (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,alice_server_na,MGoal,SID) &
 not(witness(A2Goal,A1Goal,alice_server_na,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_alice_server_na (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,alice_server_na,MGoal,SID1).
 request(A1Goal,A2Goal,alice_server_na,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_bob_server_nb (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,bob_server_nb,MGoal,SID) &
 not(witness(A2Goal,A1Goal,bob_server_nb,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_bob_server_nb (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,bob_server_nb,MGoal,SID1).
 request(A1Goal,A2Goal,bob_server_nb,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

