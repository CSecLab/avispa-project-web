role alice (A, B: agent,             
            Ka, Kb: public_key,      
            SND, RCV: channel (dy)) 

played_by A 
def=

local
	State  : nat,
	M : text

init
	State := 0

transition

0.	State  = 0 /\ RCV(start) =|>
	State':= 2 /\ M' := new() 
			   /\ SND({{M'}_Kb.A}_Kb)

3. 	State  = 3 /\ RCV({M'}_Ka) =|>
		State':= 4 

end role

role roley(A, B		: agent,
			Ka, Kb	: public_key, 
			SND,RCV : channel(dy))

played_by B def=

local
	State   : nat,
	M  : text

init
	State := 1

transition
	1. 	State  = 1 /\ RCV({{M'}_Kb.A}_Kb) =|>
			State':= 3 
			/\ SND({M'}_Ka)
			/\ secret(M,{A,B})

%%		State':= 5 /\ request(B,A,bob_alice_nb,Nb)

end role


role session(A,B  : agent,
Ka, Kb	: public_key)

def=

local SA, SB, RA, RB : channel (dy)

composition
	alice(A,B,Ka,Kb,SA,RA)
	/\ bob(A,B,Ka,Kb,SB,RB)

end role


role environment()
def=

const
	alice_bob_m,
	a,b         : agent,
	ka, kb, ki	: public_key

	intruder_knowledge = {a, b, ka, kb, ki}

composition
	session(a,b,ka,kb)

end role

goal
	authentication_on alice_bob_m
end goal

environment()