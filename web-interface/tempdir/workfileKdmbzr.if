%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfileKdmbzr

section signature:

state_host: agent * agent * agent * hash_func * public_key * public_key * public_key * nat * nat * nat * nat * text * text * text * text * text * text * text * text * text * crypt(inv(public_key),hash_func) * crypt(public_key,crypt(inv(public_key),pair(nat,text))) * set(agent) * set(agent) * nat -> fact
state_board: agent * agent * agent * hash_func * public_key * public_key * public_key * nat * nat * nat * nat * text * text * text * text * text * text * text * text * text * crypt(inv(public_key),hash_func) * nat -> fact
state_user: agent * agent * agent * hash_func * public_key * public_key * public_key * nat * nat * nat * nat * text * text * text * text * text * text * text * text * set(agent) * set(agent) * set(agent) * set(agent) * nat -> fact


section types:

REQr: crypt(public_key,crypt(inv(public_key),pair(nat,text)))
T, Sign, Dummy_T, Dummy_Sign: crypt(inv(public_key),hash_func)
set_176, set_175, set_172, set_171, set_170, set_169, set_163, set_162, set_135, set_134, set_133, set_132: set
m, t, r, nuhb, nuh, c: protocol_id
Set_100, Set_98, Dummy_Set_100, Dummy_Set_98, Dummy_Set_41, Dummy_Set_36, Dummy_Set_34, Dummy_Set_31, Set_41, Set_36, Set_34, Set_31, ASGoal: set(agent)
MGoal: message
R, M, C, S1, S2, S3, S4, S5, S6, Dummy_S6, Dummy_S2, Dummy_S5, Dummy_S4, Dummy_S3, Dummy_R, Dummy_M, Dummy_S1, Dummy_C, dummy_nonce: text
State, Nuhb, Nuh, Id, 8, 7, 6, 5, SID, 4, Dummy_Id, Dummy_Nuh, Dummy_Nuhb, Dummy_State, 3, 2, dummy_nat, 1, 0: nat
Ku, Kh, Kb, dummy_pk, ku, kh, kb, ki: public_key
D, dummy_hash, d: hash_func
U, H, B, u, h, b, i: agent


section inits:

initial_state init1 := 
 iknows(u).
 iknows(h).
 iknows(b).
 iknows(d).
 iknows(ku).
 iknows(kh).
 iknows(kb).
 iknows(ki).
 iknows(inv(ki)).
 iknows(i).
 state_user(u,h,b,d,ku,kh,kb,0,dummy_nat,dummy_nat,dummy_nat,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_132,set_133,set_134,set_135,3).
 state_board(b,u,h,d,ku,kh,kb,0,dummy_nat,dummy_nat,dummy_nat,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,crypt(inv(dummy_pk),dummy_hash),4).
 state_host(h,u,b,d,ku,kh,kb,0,dummy_nat,dummy_nat,dummy_nat,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,crypt(inv(dummy_pk),dummy_hash),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nat,dummy_nonce))),set_162,set_163,5).
 state_user(u,i,b,d,ku,ki,kb,0,dummy_nat,dummy_nat,dummy_nat,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_169,set_170,set_171,set_172,7).
 state_board(b,u,i,d,ku,ki,kb,0,dummy_nat,dummy_nat,dummy_nat,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,crypt(inv(dummy_pk),dummy_hash),8)


section rules:

step step_0 (U,H,B,D,Ku,Kh,Kb,Dummy_Nuhb,Dummy_Nuh,Id,R,M,Dummy_C,Dummy_S1,S3,S4,S5,S6,Dummy_Set_31,Dummy_Set_34,Dummy_Set_36,Set_41,SID,Nuhb,Nuh,C,S1) :=
 state_user(U,H,B,D,Ku,Kh,Kb,0,Dummy_Nuhb,Dummy_Nuh,Id,R,M,Dummy_C,Dummy_S1,S3,S4,S5,S6,Dummy_Set_31,Dummy_Set_34,Dummy_Set_36,Set_41,SID)
=[exists Nuh,Nuhb,C,S1]=>
 state_user(U,H,B,D,Ku,Kh,Kb,1,Nuhb,Nuh,Id,R,M,C,S1,S3,S4,S5,S6,Dummy_Set_31,Dummy_Set_34,Dummy_Set_36,Set_41,SID).
 secret(C,c,Dummy_Set_31).
 secret(Nuh,nuh,Dummy_Set_34).
 secret(Nuhb,nuhb,Dummy_Set_36).
 iknows(pair(crypt(Kh,pair(U,crypt(inv(Ku),pair(C,pair(Nuh,S1))))),crypt(Kb,crypt(inv(Ku),pair(Nuhb,S1))))).
 contains(U,Dummy_Set_31).
 contains(H,Dummy_Set_31).
 contains(U,Dummy_Set_34).
 contains(H,Dummy_Set_34).
 contains(U,Dummy_Set_36).
 contains(H,Dummy_Set_36).
 contains(B,Dummy_Set_36)

step step_1 (U,H,B,D,Ku,Kh,Kb,Nuhb,Nuh,Dummy_Id,R,M,C,S1,S3,S4,S5,S6,Set_31,Set_34,Set_36,Set_41,SID,Id) :=
 state_user(U,H,B,D,Ku,Kh,Kb,1,Nuhb,Nuh,Dummy_Id,R,M,C,S1,S3,S4,S5,S6,Set_31,Set_34,Set_36,Set_41,SID).
 iknows(crypt(Ku,crypt(inv(Kb),Id)))
 =>
 state_user(U,H,B,D,Ku,Kh,Kb,2,Nuhb,Nuh,Id,R,M,C,S1,S3,S4,S5,S6,Set_31,Set_34,Set_36,Set_41,SID).
 iknows(crypt(Kh,crypt(inv(Ku),pair(Id,pair(Nuhb,Nuh)))))

step step_2 (U,H,B,D,Ku,Kh,Kb,Nuhb,Nuh,Id,R,Dummy_M,C,S1,S3,S4,S5,S6,Set_31,Set_34,Set_36,Set_41,SID,M) :=
 state_user(U,H,B,D,Ku,Kh,Kb,2,Nuhb,Nuh,Id,R,Dummy_M,C,S1,S3,S4,S5,S6,Set_31,Set_34,Set_36,Set_41,SID).
 iknows(crypt(Ku,crypt(inv(Kh),pair(Id,M))))
 =>
 state_user(U,H,B,D,Ku,Kh,Kb,3,Nuhb,Nuh,Id,R,M,C,S1,S3,S4,S5,S6,Set_31,Set_34,Set_36,Set_41,SID).
 iknows(Id)

step step_3 (U,H,B,D,Ku,Kh,Kb,Nuhb,Nuh,Id,Dummy_R,M,C,S1,Dummy_S3,Dummy_S4,Dummy_S5,S6,Set_31,Set_34,Set_36,Dummy_Set_41,SID,R,S3,S4,S5) :=
 state_user(U,H,B,D,Ku,Kh,Kb,3,Nuhb,Nuh,Id,Dummy_R,M,C,S1,Dummy_S3,Dummy_S4,Dummy_S5,S6,Set_31,Set_34,Set_36,Dummy_Set_41,SID).
 iknows(pair(Id,pair(crypt(Ku,crypt(inv(Kh),pair(xor(crypt(inv(Kh),apply(D,pair(C,M))),M),pair(Nuh,S3)))),pair(crypt(Kb,crypt(inv(Kh),pair(Id,pair(Nuhb,S3)))),pair(S4,crypt(inv(Kb),apply(D,pair(Id,pair(crypt(Ku,crypt(inv(Kh),pair(xor(crypt(inv(Kh),apply(D,pair(C,M))),M),pair(Nuh,S3)))),pair(crypt(Kb,crypt(inv(Kh),pair(Id,pair(Nuhb,S3)))),S4))))))))))
=[exists S5,R]=>
 state_user(U,H,B,D,Ku,Kh,Kb,4,Nuhb,Nuh,Id,R,M,C,S1,S3,S4,S5,S6,Set_31,Set_34,Set_36,Dummy_Set_41,SID).
 secret(R,r,Dummy_Set_41).
 iknows(pair(crypt(Kh,crypt(inv(Ku),pair(R,pair(Nuh,S5)))),crypt(Kb,crypt(inv(Ku),pair(Id,pair(Nuhb,S5)))))).
 contains(U,Dummy_Set_41).
 contains(H,Dummy_Set_41)

step step_4 (U,H,B,D,Ku,Kh,Kb,Nuhb,Nuh,Id,R,M,C,S1,S3,S4,S5,S6,Set_31,Set_34,Set_36,Set_41,SID) :=
 state_user(U,H,B,D,Ku,Kh,Kb,4,Nuhb,Nuh,Id,R,M,C,S1,S3,S4,S5,S6,Set_31,Set_34,Set_36,Set_41,SID).
 iknows(crypt(Ku,crypt(inv(Kb),Id)))
 =>
 state_user(U,H,B,D,Ku,Kh,Kb,5,Nuhb,Nuh,Id,R,M,C,S1,S3,S4,S5,S6,Set_31,Set_34,Set_36,Set_41,SID).
 iknows(crypt(Kh,crypt(inv(Ku),pair(Id,R))))

step step_5 (B,U,H,D,Ku,Kh,Kb,Dummy_Nuh,Dummy_Nuhb,Dummy_Id,M,Dummy_C,R,Dummy_S1,Dummy_S2,S3,S4,S5,S6,Dummy_Sign,SID,Nuh,Nuhb,Id,C,S1,S2) :=
 state_board(B,U,H,D,Ku,Kh,Kb,0,Dummy_Nuh,Dummy_Nuhb,Dummy_Id,M,Dummy_C,R,Dummy_S1,Dummy_S2,S3,S4,S5,S6,Dummy_Sign,SID).
 iknows(pair(crypt(Kh,pair(U,crypt(inv(Ku),pair(C,pair(Nuh,S1))))),crypt(Kb,crypt(inv(Ku),pair(Nuhb,S1)))))
=[exists S2,Id]=>
 state_board(B,U,H,D,Ku,Kh,Kb,1,Nuh,Nuhb,Id,M,C,R,S1,S2,S3,S4,S5,S6,crypt(inv(Kb),apply(D,pair(Id,pair(crypt(Kh,pair(U,crypt(inv(Ku),pair(C,pair(Nuh,S1))))),pair(crypt(Kb,crypt(inv(Ku),pair(Nuhb,S1))),S2))))),SID).
 iknows(crypt(Ku,crypt(inv(Kb),Id)))

step step_6 (B,U,H,D,Ku,Kh,Kb,Nuh,Nuhb,Id,M,C,R,S1,S2,S3,S4,S5,S6,Sign,SID) :=
 state_board(B,U,H,D,Ku,Kh,Kb,1,Nuh,Nuhb,Id,M,C,R,S1,S2,S3,S4,S5,S6,Sign,SID).
 iknows(Id)
 =>
 state_board(B,U,H,D,Ku,Kh,Kb,2,Nuh,Nuhb,Id,M,C,R,S1,S2,S3,S4,S5,S6,Sign,SID).
 iknows(pair(Id,pair(crypt(Kh,pair(U,crypt(inv(Ku),pair(C,pair(Nuh,S1))))),pair(crypt(Kb,crypt(inv(Ku),pair(Nuhb,S1))),pair(S2,Sign)))))

step step_7 (B,U,H,D,Ku,Kh,Kb,Nuh,Nuhb,Id,Dummy_M,C,R,S1,S2,Dummy_S3,Dummy_S4,S5,S6,Dummy_Sign,SID,M,S3,S4) :=
 state_board(B,U,H,D,Ku,Kh,Kb,2,Nuh,Nuhb,Id,Dummy_M,C,R,S1,S2,Dummy_S3,Dummy_S4,S5,S6,Dummy_Sign,SID).
 iknows(pair(crypt(Ku,crypt(inv(Kh),pair(xor(crypt(inv(Kh),apply(D,pair(C,M))),M),pair(Nuh,S3)))),crypt(Kb,crypt(inv(Kh),pair(Id,pair(Nuhb,S3))))))
=[exists S4]=>
 state_board(B,U,H,D,Ku,Kh,Kb,3,Nuh,Nuhb,Id,M,C,R,S1,S2,S3,S4,S5,S6,crypt(inv(Kb),apply(D,pair(Id,pair(crypt(Ku,crypt(inv(Kh),pair(xor(crypt(inv(Kh),apply(D,pair(C,M))),M),pair(Nuh,S3)))),pair(crypt(Kb,crypt(inv(Kh),pair(Id,pair(Nuhb,S3)))),S4))))),SID).
 iknows(crypt(Kh,crypt(inv(Kb),Id)))

step step_8 (B,U,H,D,Ku,Kh,Kb,Nuh,Nuhb,Id,M,C,R,S1,S2,S3,S4,S5,S6,Sign,SID) :=
 state_board(B,U,H,D,Ku,Kh,Kb,3,Nuh,Nuhb,Id,M,C,R,S1,S2,S3,S4,S5,S6,Sign,SID).
 iknows(Id)
 =>
 state_board(B,U,H,D,Ku,Kh,Kb,4,Nuh,Nuhb,Id,M,C,R,S1,S2,S3,S4,S5,S6,Sign,SID).
 iknows(pair(Id,pair(crypt(Ku,crypt(inv(Kh),pair(xor(crypt(inv(Kh),apply(D,pair(C,M))),M),pair(Nuh,S3)))),pair(crypt(Kb,crypt(inv(Kh),pair(Id,pair(Nuhb,S3)))),pair(S4,Sign)))))

step step_9 (B,U,H,D,Ku,Kh,Kb,Nuh,Nuhb,Id,M,C,Dummy_R,S1,S2,S3,S4,Dummy_S5,Dummy_S6,Dummy_Sign,SID,R,S5,S6) :=
 state_board(B,U,H,D,Ku,Kh,Kb,4,Nuh,Nuhb,Id,M,C,Dummy_R,S1,S2,S3,S4,Dummy_S5,Dummy_S6,Dummy_Sign,SID).
 iknows(pair(crypt(Kh,crypt(inv(Ku),pair(R,pair(Nuh,S5)))),crypt(Kb,crypt(inv(Ku),pair(Id,pair(Nuhb,S5))))))
=[exists S6]=>
 state_board(B,U,H,D,Ku,Kh,Kb,5,Nuh,Nuhb,Id,M,C,R,S1,S2,S3,S4,S5,S6,crypt(inv(Kb),apply(D,pair(Id,pair(crypt(Kh,crypt(inv(Ku),pair(R,pair(Nuh,S5)))),pair(crypt(Kb,crypt(inv(Ku),pair(Id,pair(Nuhb,S5)))),S6))))),SID).
 iknows(crypt(Ku,crypt(inv(Kb),Id)))

step step_10 (B,U,H,D,Ku,Kh,Kb,Nuh,Nuhb,Id,M,C,R,S1,S2,S3,S4,S5,S6,Sign,SID) :=
 state_board(B,U,H,D,Ku,Kh,Kb,5,Nuh,Nuhb,Id,M,C,R,S1,S2,S3,S4,S5,S6,Sign,SID).
 iknows(Id)
 =>
 state_board(B,U,H,D,Ku,Kh,Kb,6,Nuh,Nuhb,Id,M,C,R,S1,S2,S3,S4,S5,S6,Sign,SID).
 iknows(pair(Id,pair(crypt(Kh,crypt(inv(Ku),pair(R,pair(Nuh,S5)))),pair(crypt(Kb,crypt(inv(Ku),pair(Id,pair(Nuhb,S5)))),pair(S6,Sign)))))

step step_11 (H,U,B,D,Ku,Kh,Kb,Dummy_Nuhb,Dummy_Nuh,Dummy_Id,R,M,C,S1,S2,S3,S4,S5,S6,T,REQr,Set_98,Set_100,SID,Nuhb,Nuh,Id) :=
 state_host(H,U,B,D,Ku,Kh,Kb,0,Dummy_Nuhb,Dummy_Nuh,Dummy_Id,R,M,C,S1,S2,S3,S4,S5,S6,T,REQr,Set_98,Set_100,SID).
 iknows(crypt(Kh,crypt(inv(Ku),pair(Id,pair(Nuhb,Nuh)))))
 =>
 state_host(H,U,B,D,Ku,Kh,Kb,1,Nuhb,Nuh,Id,R,M,C,S1,S2,S3,S4,S5,S6,T,REQr,Set_98,Set_100,SID).
 iknows(Id)

step step_12 (H,U,B,D,Ku,Kh,Kb,Nuhb,Nuh,Id,R,Dummy_M,Dummy_C,Dummy_S1,Dummy_S2,Dummy_S3,S4,S5,S6,Dummy_T,REQr,Dummy_Set_98,Dummy_Set_100,SID,M,C,S1,S2,S3) :=
 state_host(H,U,B,D,Ku,Kh,Kb,1,Nuhb,Nuh,Id,R,Dummy_M,Dummy_C,Dummy_S1,Dummy_S2,Dummy_S3,S4,S5,S6,Dummy_T,REQr,Dummy_Set_98,Dummy_Set_100,SID).
 iknows(pair(Id,pair(crypt(Kh,pair(U,crypt(inv(Ku),pair(C,pair(Nuh,S1))))),pair(crypt(Kb,crypt(inv(Ku),pair(Nuhb,S1))),pair(S2,crypt(inv(Kb),apply(D,pair(Id,pair(crypt(Kh,pair(U,crypt(inv(Ku),pair(C,pair(Nuh,S1))))),pair(crypt(Kb,crypt(inv(Ku),pair(Nuhb,S1))),S2))))))))))
=[exists S3,M]=>
 state_host(H,U,B,D,Ku,Kh,Kb,2,Nuhb,Nuh,Id,R,M,C,S1,S2,S3,S4,S5,S6,crypt(inv(Kh),apply(D,pair(C,M))),REQr,Dummy_Set_98,Dummy_Set_100,SID).
 secret(crypt(inv(Kh),apply(D,pair(C,M))),t,Dummy_Set_98).
 secret(M,m,Dummy_Set_100).
 iknows(pair(crypt(Ku,crypt(inv(Kh),pair(xor(crypt(inv(Kh),apply(D,pair(C,M))),M),pair(Nuh,S3)))),crypt(Kb,crypt(inv(Kh),pair(Id,pair(Nuhb,S3)))))).
 contains(U,Dummy_Set_98).
 contains(H,Dummy_Set_98).
 contains(U,Dummy_Set_100).
 contains(H,Dummy_Set_100).
 contains(B,Dummy_Set_100)

step step_13 (H,U,B,D,Ku,Kh,Kb,Nuhb,Nuh,Id,R,M,C,S1,S2,S3,S4,S5,S6,T,REQr,Set_98,Set_100,SID) :=
 state_host(H,U,B,D,Ku,Kh,Kb,2,Nuhb,Nuh,Id,R,M,C,S1,S2,S3,S4,S5,S6,T,REQr,Set_98,Set_100,SID).
 iknows(crypt(Kh,crypt(inv(Kb),Id)))
 =>
 state_host(H,U,B,D,Ku,Kh,Kb,3,Nuhb,Nuh,Id,R,M,C,S1,S2,S3,S4,S5,S6,T,REQr,Set_98,Set_100,SID).
 iknows(crypt(Ku,crypt(inv(Kh),pair(Id,M))))

step step_14 (H,U,B,D,Ku,Kh,Kb,Nuhb,Nuh,Id,Dummy_R,M,C,S1,S2,S3,S4,S5,S6,T,REQr,Set_98,Set_100,SID,R) :=
 state_host(H,U,B,D,Ku,Kh,Kb,3,Nuhb,Nuh,Id,Dummy_R,M,C,S1,S2,S3,S4,S5,S6,T,REQr,Set_98,Set_100,SID).
 iknows(crypt(Kh,crypt(inv(Ku),pair(Id,R))))
 =>
 state_host(H,U,B,D,Ku,Kh,Kb,4,Nuhb,Nuh,Id,R,M,C,S1,S2,S3,S4,S5,S6,T,REQr,Set_98,Set_100,SID).
 iknows(Id)

step step_15 (H,U,B,D,Ku,Kh,Kb,Nuhb,Nuh,Id,R,M,C,S1,S2,S3,S4,Dummy_S5,Dummy_S6,T,REQr,Set_98,Set_100,SID,S5,S6) :=
 state_host(H,U,B,D,Ku,Kh,Kb,4,Nuhb,Nuh,Id,R,M,C,S1,S2,S3,S4,Dummy_S5,Dummy_S6,T,REQr,Set_98,Set_100,SID).
 iknows(pair(Id,pair(crypt(Kh,crypt(inv(Ku),pair(R,pair(Nuh,S5)))),pair(crypt(Kb,crypt(inv(Ku),pair(Id,pair(Nuhb,S5)))),pair(S6,crypt(inv(Kb),apply(D,pair(Id,pair(crypt(Kh,crypt(inv(Ku),pair(R,pair(Nuh,S5)))),pair(crypt(Kb,crypt(inv(Ku),pair(Id,pair(Nuhb,S5)))),S6))))))))))
 =>
 state_host(H,U,B,D,Ku,Kh,Kb,5,Nuhb,Nuh,Id,R,M,C,S1,S2,S3,S4,S5,S6,T,REQr,Set_98,Set_100,SID)


section properties:

property secrecy_of_r (MGoal,ASGoal) :=
 [] ((secret(MGoal,r,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_t (MGoal,ASGoal) :=
 [] ((secret(MGoal,t,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_m (MGoal,ASGoal) :=
 [] ((secret(MGoal,m,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_nuhb (MGoal,ASGoal) :=
 [] ((secret(MGoal,nuhb,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_c (MGoal,ASGoal) :=
 [] ((secret(MGoal,c,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_nuh (MGoal,ASGoal) :=
 [] ((secret(MGoal,nuh,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))


section attack_states:

attack_state secrecy_of_r (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,r,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_t (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,t,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_m (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,m,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_nuhb (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,nuhb,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_c (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,c,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_nuh (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,nuh,ASGoal) &
 not(contains(i,ASGoal))

