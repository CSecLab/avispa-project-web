%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfilesYcKmr

section signature:

state_bob: agent * agent * symmetric_key * hash_func * hash_func * nat * text * text * message * message * message * message * nat -> fact
state_alice: agent * agent * symmetric_key * hash_func * hash_func * nat * text * text * message * message * message * message * nat -> fact


section types:

K1, K2, M, H, Dummy_H, Dummy_K2, Dummy_K1, dummy_msg, start, MGoal: message
Nb, Na, Dummy_Nb, Dummy_Na, dummy_nonce: text
5, State, 10, 6, 4, SID, 3, Dummy_State, 2, 1, SID2, 0, SID1: nat
Hash, Succ, h, succ: hash_func
K, kab, kai, kib: symmetric_key
bob_alice_nb, bob_alice_na, k1, k2: protocol_id
A, B, A2Goal, A1Goal, a, b, i: agent


section inits:

initial_state init1 := 
 iknows(start).
 iknows(a).
 iknows(b).
 iknows(h).
 iknows(succ).
 iknows(kai).
 iknows(kib).
 iknows(i).
 state_alice(a,b,kab,h,succ,0,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,3).
 state_bob(b,a,kab,h,succ,1,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,4).
 state_alice(a,i,kai,h,succ,0,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,6).
 state_bob(b,i,kib,h,succ,1,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,10)


section rules:

step step_0 (A,B,K,Hash,Succ,Dummy_Na,Nb,K1,K2,M,H,SID,Na) :=
 state_alice(A,B,K,Hash,Succ,0,Dummy_Na,Nb,K1,K2,M,H,SID).
 iknows(start)
=[exists Na]=>
 state_alice(A,B,K,Hash,Succ,2,Na,Nb,K1,K2,M,H,SID).
 iknows(scrypt(K,Na))

step step_1 (A,B,K,Hash,Succ,Dummy_Na,Dummy_Nb,Dummy_K1,Dummy_K2,M,H,SID,Na,Nb) :=
 state_alice(A,B,K,Hash,Succ,2,Dummy_Na,Dummy_Nb,Dummy_K1,Dummy_K2,M,H,SID).
 iknows(pair(scrypt(K,Nb),scrypt(Dummy_K1,Na)))
 =>
 state_alice(A,B,K,Hash,Succ,4,Na,Nb,apply(Hash,pair(Na,pair(Nb,K))),apply(Hash,pair(Na,Nb)),M,H,SID).
 request(B,A,bob_alice_na,Dummy_Na,SID).
 iknows(pair(scrypt(apply(Hash,pair(Na,Nb)),Nb),apply(Succ,M))).
 witness(A,B,bob_alice_nb,Nb)

step step_2 (A,B,K,Hash,Succ,Na,Nb,K1,K2,M,Dummy_H,SID,H) :=
 state_alice(A,B,K,Hash,Succ,4,Na,Nb,K1,K2,M,Dummy_H,SID).
 iknows(scrypt(K,H))
 =>
 state_alice(A,B,K,Hash,Succ,6,Na,Nb,K1,K2,M,H,SID).
 request(B,A,bob_alice_na,Na,SID)

step step_3 (B,A,K,Hash,Succ,Dummy_Nb,Dummy_Na,Dummy_K1,Dummy_K2,M,H,SID,Nb,Na) :=
 state_bob(B,A,K,Hash,Succ,1,Dummy_Nb,Dummy_Na,Dummy_K1,Dummy_K2,M,H,SID).
 iknows(scrypt(K,Na))
=[exists Nb]=>
 state_bob(B,A,K,Hash,Succ,3,Nb,Na,apply(Hash,pair(Na,pair(Nb,K))),apply(Hash,pair(Na,Nb)),M,H,SID).
 iknows(pair(scrypt(K,Nb),scrypt(Dummy_K1,Na))).
 witness(B,A,bob_alice_na,Na)

step step_4 (B,A,K,Hash,Succ,Dummy_Nb,Na,K1,Dummy_K2,M,Dummy_H,SID,Nb,K2) :=
 state_bob(B,A,K,Hash,Succ,3,Dummy_Nb,Na,K1,Dummy_K2,M,Dummy_H,SID).
 iknows(pair(scrypt(K2,Nb),apply(Succ,M)))
 =>
 state_bob(B,A,K,Hash,Succ,5,Nb,Na,K1,K2,M,apply(Succ,M),SID).
 request(B,A,bob_alice_nb,Dummy_Nb,SID).
 iknows(scrypt(K,apply(Succ,M)))


section properties:

property authentication_on_bob_alice_nb (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,bob_alice_nb,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,bob_alice_nb,MGoal))
     /\ ((request(A1Goal,A2Goal,bob_alice_nb,MGoal,SID1)
           /\ request(A1Goal,A2Goal,bob_alice_nb,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_bob_alice_na (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,bob_alice_na,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,bob_alice_na,MGoal))
     /\ ((request(A1Goal,A2Goal,bob_alice_na,MGoal,SID1)
           /\ request(A1Goal,A2Goal,bob_alice_na,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state authentication_on_bob_alice_nb (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,bob_alice_nb,MGoal,SID) &
 not(witness(A2Goal,A1Goal,bob_alice_nb,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_bob_alice_nb (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,bob_alice_nb,MGoal,SID1).
 request(A1Goal,A2Goal,bob_alice_nb,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_bob_alice_na (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,bob_alice_na,MGoal,SID) &
 not(witness(A2Goal,A1Goal,bob_alice_na,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_bob_alice_na (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,bob_alice_na,MGoal,SID1).
 request(A1Goal,A2Goal,bob_alice_na,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

