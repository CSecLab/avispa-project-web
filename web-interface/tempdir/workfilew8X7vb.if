%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfilew8X7vb

section signature:

state_server: agent * agent * symmetric_key * symmetric_key * symmetric_key * hash_func * nat * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * message * set(agent) * set(agent) * set(agent) * set(agent) * nat -> fact
state_user: agent * agent * symmetric_key * symmetric_key * hash_func * nat * text * text * text * text * text * text * text * text * text * text * text * text * text * text * message * set(agent) * set(agent) * set(agent) * set(agent) * set(agent) * set(agent) * nat -> fact


section types:

Dummy_Set_86, Dummy_Set_85, Dummy_Set_84, Dummy_Set_82, Dummy_Set_47, Dummy_Set_44, Dummy_Set_43, Dummy_Set_42, Dummy_Set_40, Dummy_Set_38, ASGoal, Set_86, Set_85, Set_84, Set_82, Set_47, Set_44, Set_43, Set_42, Set_40, Set_38: set(agent)
bob_alice_nb, k1, f_n, y_k, z_k, m_k, p_p, s_p, e_m, g_m, h_m, a_m, b_m, d_d: protocol_id
dummy_msg, MGoal, K1, start: message
Dummy_N2, Dummy_P22, Dummy_Exp_tm, Dummy_Xa, Dummy_Ai1, Dummy_Ra, Dummy_P44, Dummy_Ai, Dummy_Da, Dummy_P4, Dummy_P3, Dummy_Ti, Dummy_P2, Dummy_P1, Dummy_Ck2, Dummy_Ga, Dummy_N1, Dummy_Ck, Dummy_Pass1, Dummy_Un1, dummy_nonce, Un1, Pass1, Ra, Ai, Ai1, Xa, Ga, Ck, Exp_tm, P1, P2, P22, P3, P4, N2, Da, Ti, N1, Ck2, P44: text
h, Hash: hash_func
kab, kai, kib, k11, k12, k13, k14, k15, k16, k17, k18, k19, K, Ea, Sk: symmetric_key
12, 10, 6, 4, SID, Dummy_State, 3, 7, 5, State, 2, 1, 0, 16: nat
u, s, U, S, i: agent
set_202, set_201, set_200, set_199, set_198, set_197, set_196, set_194, set_193, set_192, set_191, set_190, set_189, set_187, set_186, set_185, set_184, set_183, set_182, set_181, set_180, set_179, set_178, set_177, set_176, set_175, set_174, set_172, set_171, set_170, set_169, set_168, set_167, set_154, set_153, set_152, set_151, set_125, set_124, set_123, set_122, set_121, set_120, set_209, set_208, set_207, set_206, set_205, set_204, set_203: set


section inits:

initial_state init1 := 
 iknows(start).
 iknows(u).
 iknows(s).
 iknows(h).
 iknows(kai).
 iknows(kib).
 iknows(i).
 state_user(u,s,kab,k13,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,set_120,set_121,set_122,set_123,set_124,set_125,3).
 state_server(s,u,kab,k11,k12,h,1,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,set_151,set_152,set_153,set_154,4).
 state_user(u,i,kai,k16,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,set_167,set_168,set_169,set_170,set_171,set_172,6).
 state_server(s,i,kib,k17,k18,h,1,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,set_184,set_185,set_186,set_187,10).
 state_user(u,i,kai,k16,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,set_189,set_190,set_191,set_192,set_193,set_194,12).
 state_server(s,i,kib,k17,k18,h,1,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,set_206,set_207,set_208,set_209,16)


section rules:

step step_0 (U,S,K,Ea,Hash,Dummy_Un1,Dummy_Pass1,Ck,N1,Ga,Ck2,P1,P2,Ti,P3,P4,Da,Ai,P44,K1,Dummy_Set_38,Dummy_Set_40,Set_42,Set_43,Set_44,Set_47,SID,Un1,Pass1) :=
 state_user(U,S,K,Ea,Hash,0,Dummy_Un1,Dummy_Pass1,Ck,N1,Ga,Ck2,P1,P2,Ti,P3,P4,Da,Ai,P44,K1,Dummy_Set_38,Dummy_Set_40,Set_42,Set_43,Set_44,Set_47,SID).
 iknows(start)
=[exists Pass1,Un1]=>
 state_user(U,S,K,Ea,Hash,2,Un1,Pass1,Ck,N1,Ga,Ck2,P1,P2,Ti,P3,P4,Da,Ai,P44,K1,Dummy_Set_38,Dummy_Set_40,Set_42,Set_43,Set_44,Set_47,SID).
 iknows(scrypt(K,pair(Un1,Pass1))).
 secret(Pass1,g_m,Dummy_Set_38).
 secret(Un1,h_m,Dummy_Set_40).
 contains(U,Dummy_Set_38).
 contains(S,Dummy_Set_38).
 contains(U,Dummy_Set_40).
 contains(S,Dummy_Set_40)

step step_1 (U,S,K,Ea,Hash,Dummy_Un1,Pass1,Dummy_Ck,Dummy_N1,Dummy_Ga,Dummy_Ck2,Dummy_P1,Dummy_P2,Ti,P3,P4,Da,Ai,P44,K1,Set_38,Set_40,Dummy_Set_42,Dummy_Set_43,Dummy_Set_44,Set_47,SID,Un1,Ck,N1,Ga) :=
 state_user(U,S,K,Ea,Hash,2,Dummy_Un1,Pass1,Dummy_Ck,Dummy_N1,Dummy_Ga,Dummy_Ck2,Dummy_P1,Dummy_P2,Ti,P3,P4,Da,Ai,P44,K1,Set_38,Set_40,Dummy_Set_42,Dummy_Set_43,Dummy_Set_44,Set_47,SID).
 iknows(scrypt(K,Ck))
=[exists Un1,Ga,N1]=>
 state_user(U,S,K,Ea,Hash,4,Un1,Pass1,Ck,N1,Ga,scrypt(K,scrypt(K,Ck)),exp(N1,Dummy_Ga),exp(Dummy_N1,scrypt(K,scrypt(K,Ck))),Ti,P3,P4,Da,Ai,P44,K1,Set_38,Set_40,Dummy_Set_42,Dummy_Set_43,Dummy_Set_44,Set_47,SID).
 iknows(scrypt(Ea,pair(Un1,pair(exp(N1,Dummy_Ga),exp(Dummy_N1,scrypt(K,scrypt(K,Ck))))))).
 secret(Un1,e_m,Dummy_Set_42).
 secret(exp(N1,Dummy_Ga),a_m,Dummy_Set_43).
 secret(exp(Dummy_N1,scrypt(K,scrypt(K,Ck))),b_m,Dummy_Set_44).
 contains(U,Dummy_Set_42).
 contains(S,Dummy_Set_42).
 contains(U,Dummy_Set_43).
 contains(S,Dummy_Set_43).
 contains(U,Dummy_Set_44).
 contains(S,Dummy_Set_44)

step step_2 (U,S,K,Ea,Hash,Un1,Dummy_Pass1,Ck,N1,Ga,Ck2,P1,P2,Dummy_Ti,Dummy_P3,Dummy_P4,Dummy_Da,Dummy_Ai,Dummy_P44,K1,Set_38,Set_40,Set_42,Set_43,Set_44,Dummy_Set_47,SID,Pass1,Ti,P3,P4,Da) :=
 state_user(U,S,K,Ea,Hash,4,Un1,Dummy_Pass1,Ck,N1,Ga,Ck2,P1,P2,Dummy_Ti,Dummy_P3,Dummy_P4,Dummy_Da,Dummy_Ai,Dummy_P44,K1,Set_38,Set_40,Set_42,Set_43,Set_44,Dummy_Set_47,SID).
 iknows(scrypt(K,pair(Ti,pair(P3,P4))))
=[exists Da,Pass1]=>
 state_user(U,S,K,Ea,Hash,6,Un1,Pass1,Ck,N1,Ga,Ck2,P1,P2,Ti,P3,P4,Da,apply(Hash,xor(Ti,Pass1)),exp(P3,apply(Hash,xor(Ti,Pass1))),K1,Set_38,Set_40,Set_42,Set_43,Set_44,Dummy_Set_47,SID).
 iknows(scrypt(K,Da)).
 contains(U,Dummy_Set_47).
 contains(S,Dummy_Set_47)

step step_3 (S,U,K,Ea,Sk,Hash,Dummy_Un1,Dummy_Pass1,Dummy_Ra,Dummy_Ai,Dummy_Ai1,Dummy_Xa,Dummy_Ga,Dummy_Ck,Dummy_Exp_tm,P1,P2,P22,P3,P4,N2,Da,Dummy_Ti,K1,Dummy_Set_82,Set_84,Set_85,Set_86,SID,Un1,Pass1,Ra,Xa,Ga,Exp_tm) :=
 state_server(S,U,K,Ea,Sk,Hash,1,Dummy_Un1,Dummy_Pass1,Dummy_Ra,Dummy_Ai,Dummy_Ai1,Dummy_Xa,Dummy_Ga,Dummy_Ck,Dummy_Exp_tm,P1,P2,P22,P3,P4,N2,Da,Dummy_Ti,K1,Dummy_Set_82,Set_84,Set_85,Set_86,SID).
 iknows(scrypt(K,pair(Un1,Pass1)))
=[exists Exp_tm,Ga,Xa,Ra]=>
 state_server(S,U,K,Ea,Sk,Hash,3,Un1,Pass1,Ra,apply(Hash,xor(xor(Ra,apply(Hash,Xa)),Pass1)),exp(apply(Hash,xor(xor(Ra,apply(Hash,Xa)),Pass1)),Ga),Xa,Ga,apply(Hash,pair(apply(Hash,pair(Ra,Xa)),apply(Hash,pair(Exp_tm,Un1)))),Exp_tm,P1,P2,P22,P3,P4,N2,Da,xor(Ra,apply(Hash,Xa)),K1,Dummy_Set_82,Set_84,Set_85,Set_86,SID).
 iknows(scrypt(K,apply(Hash,pair(apply(Hash,pair(Ra,Xa)),apply(Hash,pair(Exp_tm,Un1)))))).
 secret(apply(Hash,pair(apply(Hash,pair(Ra,Xa)),apply(Hash,pair(Exp_tm,Un1)))),f_n,Dummy_Set_82).
 contains(U,Dummy_Set_82).
 contains(S,Dummy_Set_82)

step step_4 (S,U,K,Ea,Sk,Hash,Dummy_Un1,Dummy_Pass1,Dummy_Ra,Dummy_Ai,Ai1,Dummy_Xa,Dummy_Ga,Dummy_Ck,Dummy_Exp_tm,Dummy_P1,Dummy_P2,Dummy_P22,Dummy_P3,Dummy_P4,Dummy_N2,Da,Dummy_Ti,K1,Set_82,Dummy_Set_84,Dummy_Set_85,Dummy_Set_86,SID,Un1,Pass1,Xa,Ga,Exp_tm,P1,P2,N2) :=
 state_server(S,U,K,Ea,Sk,Hash,3,Dummy_Un1,Dummy_Pass1,Dummy_Ra,Dummy_Ai,Ai1,Dummy_Xa,Dummy_Ga,Dummy_Ck,Dummy_Exp_tm,Dummy_P1,Dummy_P2,Dummy_P22,Dummy_P3,Dummy_P4,Dummy_N2,Da,Dummy_Ti,K1,Set_82,Dummy_Set_84,Dummy_Set_85,Dummy_Set_86,SID).
 iknows(scrypt(Ea,pair(Un1,pair(P1,P2))))
=[exists Pass1,N2,Ga,Exp_tm,Xa]=>
 state_server(S,U,K,Ea,Sk,Hash,5,Un1,Pass1,xor(xor(Ra,apply(Hash,Xa)),apply(Hash,Xa)),apply(Hash,xor(xor(xor(xor(Ra,apply(Hash,Xa)),apply(Hash,Xa)),apply(Hash,Xa)),Pass1)),Ai1,Xa,Ga,apply(Hash,pair(xor(xor(Ra,apply(Hash,Xa)),apply(Hash,Xa)),pair(Xa,pair(Exp_tm,Un1)))),Exp_tm,P1,P2,exp(P1,apply(Hash,pair(xor(xor(Ra,apply(Hash,Xa)),apply(Hash,Xa)),pair(Xa,pair(Exp_tm,Un1))))),exp(N2,Ga),exp(N2,apply(Hash,xor(xor(xor(xor(Ra,apply(Hash,Xa)),apply(Hash,Xa)),apply(Hash,Xa)),Pass1))),N2,Da,xor(xor(xor(Ra,apply(Hash,Xa)),apply(Hash,Xa)),apply(Hash,Xa)),K1,Set_82,Dummy_Set_84,Dummy_Set_85,Dummy_Set_86,SID).
 iknows(scrypt(K,pair(xor(xor(xor(Ra,apply(Hash,Xa)),apply(Hash,Xa)),apply(Hash,Xa)),pair(exp(N2,Ga),exp(N2,apply(Hash,xor(xor(xor(xor(Ra,apply(Hash,Xa)),apply(Hash,Xa)),apply(Hash,Xa)),Pass1))))))).
 secret(xor(xor(xor(Ra,apply(Hash,Xa)),apply(Hash,Xa)),apply(Hash,Xa)),y_k,Dummy_Set_84).
 secret(exp(N2,Ga),p_p,Dummy_Set_85).
 secret(exp(N2,apply(Hash,xor(xor(xor(xor(Ra,apply(Hash,Xa)),apply(Hash,Xa)),apply(Hash,Xa)),Pass1))),s_p,Dummy_Set_86).
 contains(U,Dummy_Set_84).
 contains(S,Dummy_Set_84).
 contains(U,Dummy_Set_85).
 contains(S,Dummy_Set_85).
 contains(U,Dummy_Set_86).
 contains(S,Dummy_Set_86)

step step_5 (S,U,K,Ea,Sk,Hash,Un1,Pass1,Ra,Ai,Ai1,Xa,Ga,Ck,Exp_tm,P1,P2,P22,P3,P4,N2,Dummy_Da,Ti,K1,Set_82,Set_84,Set_85,Set_86,SID,Da) :=
 state_server(S,U,K,Ea,Sk,Hash,5,Un1,Pass1,Ra,Ai,Ai1,Xa,Ga,Ck,Exp_tm,P1,P2,P22,P3,P4,N2,Dummy_Da,Ti,K1,Set_82,Set_84,Set_85,Set_86,SID).
 iknows(scrypt(K,Da))
 =>
 state_server(S,U,K,Ea,Sk,Hash,7,Un1,Pass1,Ra,Ai,Ai1,Xa,Ga,Ck,Exp_tm,P1,P2,P22,P3,P4,N2,Da,Ti,K1,Set_82,Set_84,Set_85,Set_86,SID)


section properties:

property secrecy_of_k1 (MGoal,ASGoal) :=
 [] ((secret(MGoal,k1,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_e_m (MGoal,ASGoal) :=
 [] ((secret(MGoal,e_m,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_g_m (MGoal,ASGoal) :=
 [] ((secret(MGoal,g_m,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_h_m (MGoal,ASGoal) :=
 [] ((secret(MGoal,h_m,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_f_n (MGoal,ASGoal) :=
 [] ((secret(MGoal,f_n,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_y_k (MGoal,ASGoal) :=
 [] ((secret(MGoal,y_k,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_z_k (MGoal,ASGoal) :=
 [] ((secret(MGoal,z_k,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_m_k (MGoal,ASGoal) :=
 [] ((secret(MGoal,m_k,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_p_p (MGoal,ASGoal) :=
 [] ((secret(MGoal,p_p,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_s_p (MGoal,ASGoal) :=
 [] ((secret(MGoal,s_p,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_a_m (MGoal,ASGoal) :=
 [] ((secret(MGoal,a_m,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_b_m (MGoal,ASGoal) :=
 [] ((secret(MGoal,b_m,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))


section attack_states:

attack_state secrecy_of_k1 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,k1,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_e_m (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,e_m,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_g_m (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,g_m,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_h_m (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,h_m,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_f_n (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,f_n,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_y_k (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,y_k,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_z_k (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,z_k,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_m_k (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,m_k,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_p_p (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,p_p,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_s_p (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,s_p,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_a_m (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,a_m,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_b_m (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,b_m,ASGoal) &
 not(contains(i,ASGoal))

