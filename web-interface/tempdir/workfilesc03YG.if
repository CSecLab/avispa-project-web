%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfilesc03YG

section signature:

state_pointRelais: agent * agent * public_key * public_key * hash_func * set(text) * set(text) * nat * message * message * text * text * text * text * nat -> fact
state_alice: agent * agent * public_key * public_key * hash_func * text * nat * message * message * text * text * text * set(agent) * nat -> fact


section types:

Dummy_Set_25, ASGoal, Set_25: set(agent)
alice_pointRelais_np, nba, pointRelais_alice_nb: protocol_id
Dummy_Y, Dummy_X, dummy_msg, MGoal, X, Y, start: message
h, H: hash_func
pKA, pKS, pKI, Ka, Kp: public_key
set_89, set_88, set_110, set_108, set_106: set
Dummy_Np, Dummy_Reponse, Dummy_Na, dummy_nonce, numIS, repIS, numAI, repAI, numAS, repAS, Rep, Num, Na, Np, Reponse, Dummy_Rep, Dummy_Num: text
set_87, set_86, KeyMapS, NonceMap, Dummy_NonceMap: set(text)
A2Goal, A1Goal, agentA, agentS, A, P, i: agent
Dummy_State, 3, SID, SID2, SID1, State, 2, 1, 0, 13, 12, 10, 6, 4: nat


section inits:

initial_state init1 := 
 iknows(start).
 iknows(agentA).
 iknows(agentS).
 iknows(pKA).
 iknows(pKS).
 iknows(pKI).
 iknows(inv(pKI)).
 iknows(i).
 state_alice(agentA,agentS,pKA,pKS,h,numAS,0,dummy_msg,dummy_msg,dummy_nonce,dummy_nonce,dummy_nonce,set_89,3).
 state_pointRelais(agentS,agentA,pKA,pKS,h,set_88,set_86,0,dummy_msg,dummy_msg,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,4).
 state_alice(agentA,i,pKA,pKI,h,numAI,0,dummy_msg,dummy_msg,dummy_nonce,dummy_nonce,dummy_nonce,set_106,6).
 state_pointRelais(agentS,i,pKI,pKS,h,set_88,set_86,0,dummy_msg,dummy_msg,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,10).
 state_alice(agentA,agentS,pKA,pKS,h,numAS,0,dummy_msg,dummy_msg,dummy_nonce,dummy_nonce,dummy_nonce,set_110,12).
 state_pointRelais(agentS,agentA,pKA,pKS,h,set_88,set_86,0,dummy_msg,dummy_msg,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,13).
 contains(numAS,set_86).
 contains(numIS,set_86)


section rules:

step step_0 (A,P,Ka,Kp,H,Num,Dummy_X,Y,Reponse,Dummy_Na,Np,Dummy_Set_25,SID,Na) :=
 state_alice(A,P,Ka,Kp,H,Num,0,Dummy_X,Y,Reponse,Dummy_Na,Np,Dummy_Set_25,SID).
 iknows(start)
=[exists Na]=>
 state_alice(A,P,Ka,Kp,H,Num,1,apply(H,pair(Num,pair(Na,pair(A,P)))),Y,Reponse,Na,Np,Dummy_Set_25,SID).
 iknows(crypt(Kp,crypt(inv(Ka),pair(Num,pair(Na,pair(A,pair(P,apply(H,pair(Num,pair(Na,pair(A,P))))))))))).
 witness(A,P,pointRelais_alice_nb,Na).
 secret(Num,nba,Dummy_Set_25).
 contains(A,Dummy_Set_25).
 contains(P,Dummy_Set_25)

step step_1 (A,P,Ka,Kp,H,Num,X,Dummy_Y,Dummy_Reponse,Na,Dummy_Np,Set_25,SID,Y,Reponse,Np) :=
 state_alice(A,P,Ka,Kp,H,Num,1,X,Dummy_Y,Dummy_Reponse,Na,Dummy_Np,Set_25,SID).
 iknows(crypt(Ka,crypt(inv(Kp),pair(Np,pair(A,pair(P,pair(Reponse,Y)))))))
 =>
 state_alice(A,P,Ka,Kp,H,Num,2,X,Y,Reponse,Na,Np,Set_25,SID).
 request(A,P,alice_pointRelais_np,Np,SID)

step step_2 (P,A,Ka,Kp,H,Dummy_NonceMap,KeyMapS,Dummy_X,Dummy_Y,Dummy_Na,Dummy_Np,Dummy_Num,Dummy_Rep,SID,X,Na,Np,Num,Rep) :=
 state_pointRelais(P,A,Ka,Kp,H,Dummy_NonceMap,KeyMapS,0,Dummy_X,Dummy_Y,Dummy_Na,Dummy_Np,Dummy_Num,Dummy_Rep,SID).
 iknows(crypt(Kp,crypt(inv(Ka),pair(Num,pair(Na,pair(A,pair(P,X))))))).
 contains(Num,KeyMapS) &
 not(contains(Na,Dummy_NonceMap))
=[exists Rep,Np]=>
 state_pointRelais(P,A,Ka,Kp,H,Dummy_NonceMap,KeyMapS,1,X,apply(H,pair(A,pair(P,pair(Rep,Np)))),Na,Np,Num,Rep,SID).
 iknows(crypt(Ka,crypt(inv(Kp),pair(A,pair(P,pair(Rep,pair(Np,apply(H,pair(A,pair(P,pair(Rep,Np))))))))))).
 request(P,A,pointRelais_alice_nb,Na,SID).
 witness(P,A,alice_pointRelais_np,Np).
 contains(Na,Dummy_NonceMap).
 contains(Num,KeyMapS)


section properties:

property authentication_on_alice_pointRelais_np (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,alice_pointRelais_np,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,alice_pointRelais_np,MGoal))
     /\ ((request(A1Goal,A2Goal,alice_pointRelais_np,MGoal,SID1)
           /\ request(A1Goal,A2Goal,alice_pointRelais_np,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_pointRelais_alice_nb (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,pointRelais_alice_nb,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,pointRelais_alice_nb,MGoal))
     /\ ((request(A1Goal,A2Goal,pointRelais_alice_nb,MGoal,SID1)
           /\ request(A1Goal,A2Goal,pointRelais_alice_nb,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property secrecy_of_nba (MGoal,ASGoal) :=
 [] ((secret(MGoal,nba,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))


section attack_states:

attack_state authentication_on_alice_pointRelais_np (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,alice_pointRelais_np,MGoal,SID) &
 not(witness(A2Goal,A1Goal,alice_pointRelais_np,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_alice_pointRelais_np (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,alice_pointRelais_np,MGoal,SID1).
 request(A1Goal,A2Goal,alice_pointRelais_np,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_pointRelais_alice_nb (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,pointRelais_alice_nb,MGoal,SID) &
 not(witness(A2Goal,A1Goal,pointRelais_alice_nb,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_pointRelais_alice_nb (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,pointRelais_alice_nb,MGoal,SID1).
 request(A1Goal,A2Goal,pointRelais_alice_nb,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state secrecy_of_nba (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,nba,ASGoal) &
 not(contains(i,ASGoal))

