%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfileXfBaru

section signature:

state_server: agent * agent * symmetric_key * hash_func * nat * text * text * text * text * text * text * text * text * text * text * text * set(agent) * set(agent) * nat -> fact
state_user: agent * agent * symmetric_key * hash_func * nat * text * text * text * text * text * text * text * text * text * text * text * set(text) * set(agent) * set(symmetric_key) * set(agent) * nat -> fact


section types:

Dummy_Set_73, Set_73: set(text)
MGoal, start: message
second_u, first_u, s1, s2: protocol_id
Dummy_State, 3, SID, SID2, SID1, 8, 6, 4, 0, State, 5, 2, 1: nat
set_94, set_93, set_92, set_91, set_112, set_111: set
dummy_hash, Hash, h: hash_func
dummy_sk, SymKey: symmetric_key
Dummy_KY, dummy_nonce, KY, DF, B, Fir, Id, As, In, Sec, DEL, DF_new, SK_new, HKY, Dummy_Sec, Dummy_A, A, Dummy_SK_new, Dummy_DF_new, Dummy_In, Dummy_As, Dummy_Id, Dummy_Fir, Dummy_B, Dummy_DF: text
A2Goal, A1Goal, User_1, Server_1, user_Agent, server_Agent, i: agent
Dummy_Set_74, ASGoal, Set_76, Set_74, Set_31, Set_29, Dummy_Set_31, Dummy_Set_29, Dummy_Set_76: set(agent)
Set_75, Dummy_Set_75: set(symmetric_key)


section inits:

initial_state init1 := 
 iknows(start).
 iknows(user_Agent).
 iknows(server_Agent).
 iknows(h).
 iknows(i).
 state_user(user_Agent,server_Agent,dummy_sk,dummy_hash,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_91,set_92,set_93,set_94,3).
 state_server(server_Agent,user_Agent,dummy_sk,dummy_hash,1,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_111,set_112,4)


section rules:

step step_0 (User_1,Server_1,SymKey,Hash,Dummy_KY,DF,B,Fir,Id,As,In,Sec,DEL,DF_new,SK_new,Dummy_Set_73,Dummy_Set_74,Dummy_Set_75,Dummy_Set_76,SID,KY) :=
 state_user(User_1,Server_1,SymKey,Hash,0,Dummy_KY,DF,B,Fir,Id,As,In,Sec,DEL,DF_new,SK_new,Dummy_Set_73,Dummy_Set_74,Dummy_Set_75,Dummy_Set_76,SID).
 iknows(start)
=[exists KY]=>
 state_user(User_1,Server_1,SymKey,Hash,2,KY,DF,B,Fir,Id,As,In,Sec,DEL,DF_new,SK_new,Dummy_Set_73,Dummy_Set_74,Dummy_Set_75,Dummy_Set_76,SID).
 iknows(scrypt(SymKey,KY)).
 secret(Dummy_Set_73,s1,Dummy_Set_74).
 secret(Dummy_Set_75,s2,Dummy_Set_76).
 contains(KY,Dummy_Set_73).
 contains(User_1,Dummy_Set_74).
 contains(Server_1,Dummy_Set_74).
 contains(SymKey,Dummy_Set_75).
 contains(User_1,Dummy_Set_76).
 contains(Server_1,Dummy_Set_76)

step step_1 (User_1,Server_1,SymKey,Hash,KY,Dummy_DF,Dummy_B,Fir,Id,As,In,Sec,DEL,DF_new,SK_new,Set_73,Set_74,Set_75,Set_76,SID,DF,B) :=
 state_user(User_1,Server_1,SymKey,Hash,2,KY,Dummy_DF,Dummy_B,Fir,Id,As,In,Sec,DEL,DF_new,SK_new,Set_73,Set_74,Set_75,Set_76,SID).
 iknows(scrypt(SymKey,pair(KY,pair(Hash,pair(DF,B)))))
 =>
 state_user(User_1,Server_1,SymKey,Hash,4,KY,DF,B,Fir,Id,As,In,Sec,DEL,DF_new,SK_new,Set_73,Set_74,Set_75,Set_76,SID)

step step_2 (User_1,Server_1,SymKey,Hash,Dummy_KY,Dummy_DF,Dummy_B,Dummy_Fir,Dummy_Id,Dummy_As,Dummy_In,Sec,DEL,DF_new,SK_new,Set_73,Set_74,Set_75,Set_76,SID,KY,DF,B,Fir) :=
 state_user(User_1,Server_1,SymKey,Hash,4,Dummy_KY,Dummy_DF,Dummy_B,Dummy_Fir,Dummy_Id,Dummy_As,Dummy_In,Sec,DEL,DF_new,SK_new,Set_73,Set_74,Set_75,Set_76,SID).
 iknows(scrypt(SymKey,pair(KY,pair(Hash,pair(DF,B)))))
=[exists Fir]=>
 state_user(User_1,Server_1,SymKey,Hash,6,KY,DF,B,Fir,xor(apply(Hash,KY),apply(Hash,xor(DF,xor(B,Fir)))),apply(Hash,xor(xor(apply(Hash,KY),apply(Hash,xor(DF,xor(B,Fir)))),apply(Hash,Dummy_KY))),apply(Hash,xor(Fir,xor(DF,xor(apply(Hash,xor(xor(apply(Hash,KY),apply(Hash,xor(DF,xor(B,Fir)))),apply(Hash,Dummy_KY))),B)))),Sec,DEL,DF_new,SK_new,Set_73,Set_74,Set_75,Set_76,SID).
 witness(User_1,Server_1,first_u,Fir).
 iknows(pair(xor(apply(Hash,KY),apply(Hash,xor(DF,xor(B,Fir)))),pair(DF,pair(apply(Hash,xor(Fir,xor(DF,xor(apply(Hash,xor(xor(apply(Hash,KY),apply(Hash,xor(DF,xor(B,Fir)))),apply(Hash,Dummy_KY))),B)))),Fir))))

step step_3 (User_1,Server_1,SymKey,Hash,KY,Dummy_DF,B,Fir,Id,As,In,Sec,DEL,Dummy_DF_new,Dummy_SK_new,Set_73,Set_74,Set_75,Set_76,SID,SK_new) :=
 state_user(User_1,Server_1,SymKey,Hash,6,KY,Dummy_DF,B,Fir,Id,As,In,Sec,DEL,Dummy_DF_new,Dummy_SK_new,Set_73,Set_74,Set_75,Set_76,SID)
=[exists SK_new]=>
 state_user(User_1,Server_1,SymKey,Hash,8,KY,xor(DF,xor(apply(Hash,KY),apply(Hash,SK_new))),B,Fir,Id,As,In,Sec,DEL,xor(xor(DF,xor(apply(Hash,KY),apply(Hash,SK_new))),xor(apply(Hash,KY),apply(Hash,SK_new))),SK_new,Set_73,Set_74,Set_75,Set_76,SID)

step step_4 (Server_1,User_1,SymKey,Hash,Dummy_KY,Sec,Fir,Id,As,HKY,DEL,Dummy_DF,Dummy_B,Dummy_A,In,Dummy_Set_29,Dummy_Set_31,SID,KY,B,A) :=
 state_server(Server_1,User_1,SymKey,Hash,1,Dummy_KY,Sec,Fir,Id,As,HKY,DEL,Dummy_DF,Dummy_B,Dummy_A,In,Dummy_Set_29,Dummy_Set_31,SID).
 iknows(scrypt(SymKey,KY))
=[exists A,B]=>
 state_server(Server_1,User_1,SymKey,Hash,3,KY,Sec,Fir,Id,As,HKY,DEL,xor(KY,A),B,A,In,Dummy_Set_29,Dummy_Set_31,SID).
 secret(B,s2,Dummy_Set_29).
 secret(A,s1,Dummy_Set_31).
 iknows(scrypt(SymKey,pair(KY,pair(Hash,pair(xor(KY,A),B))))).
 contains(User_1,Dummy_Set_29).
 contains(Server_1,Dummy_Set_29).
 contains(Server_1,Dummy_Set_31)

step step_5 (Server_1,User_1,SymKey,Hash,KY,Dummy_Sec,Dummy_Fir,Dummy_Id,As,HKY,DEL,Dummy_DF,B,A,Dummy_In,Set_29,Set_31,SID,Sec,Fir,Id,DF,In) :=
 state_server(Server_1,User_1,SymKey,Hash,3,KY,Dummy_Sec,Dummy_Fir,Dummy_Id,As,HKY,DEL,Dummy_DF,B,A,Dummy_In,Set_29,Set_31,SID).
 iknows(pair(Id,pair(DF,pair(In,Fir))))
=[exists Sec]=>
 state_server(Server_1,User_1,SymKey,Hash,5,KY,Sec,Fir,Id,As,HKY,DEL,DF,B,A,In,Set_29,Set_31,SID).
 request(Server_1,User_1,first_u,Fir,SID)


section properties:

property secrecy_of_s1 (MGoal,ASGoal) :=
 [] ((secret(MGoal,s1,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_s2 (MGoal,ASGoal) :=
 [] ((secret(MGoal,s2,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property authentication_on_first_u (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,first_u,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,first_u,MGoal))
     /\ ((request(A1Goal,A2Goal,first_u,MGoal,SID1)
           /\ request(A1Goal,A2Goal,first_u,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_second_u (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,second_u,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,second_u,MGoal))
     /\ ((request(A1Goal,A2Goal,second_u,MGoal,SID1)
           /\ request(A1Goal,A2Goal,second_u,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state secrecy_of_s1 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,s1,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_s2 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,s2,ASGoal) &
 not(contains(i,ASGoal))

attack_state authentication_on_first_u (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,first_u,MGoal,SID) &
 not(witness(A2Goal,A1Goal,first_u,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_first_u (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,first_u,MGoal,SID1).
 request(A1Goal,A2Goal,first_u,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_second_u (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,second_u,MGoal,SID) &
 not(witness(A2Goal,A1Goal,second_u,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_second_u (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,second_u,MGoal,SID1).
 request(A1Goal,A2Goal,second_u,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

