%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfiletSQPc1YcF4

section signature:

state_aaa: agent * agent * agent * message * message * message * symmetric_key * symmetric_key * hash_func * nat * message * message * message * message * message * message * message * nat -> fact
state_mag: agent * agent * agent * message * message * symmetric_key * hash_func * nat * message * message * message * message * message * message * message * message * message * message * message * message * message * message * message * nat -> fact
state_mobilenode: agent * agent * agent * symmetric_key * hash_func * nat * message * message * message * message * message * message * message * message * message * message * message * message * message * set(agent) * nat -> fact


section types:

sne: protocol_id
State, 3, 5, 2, SID, 1, 4, 0, Dummy_State: nat
set_108: set
Set_31, Dummy_Set_31, ASGoal: set(agent)
idaaa, idmag, idi, sv, C1, C2, C3, C4, C5, IDMN, PWMN, IDAAA, IDMAG, SV, AIDMN, AUTHMN, SKMG, SKGL, N1, N2, N3, N4, start, Dummy_SV, Dummy_SKMG, Dummy_N2, Dummy_IDMAG, Dummy_AUTHMN, Dummy_AIDMN, Dummy_C5, Dummy_C4, Dummy_C3, Dummy_C2, Dummy_C1, Dummy_N1, Dummy_PWMN, Dummy_IDMN, dummy_msg, MGoal: message
H, h: hash_func
m, g, a, M, G, A, i: agent
psi, KsymMA, PSK, ksymma, psk: symmetric_key


section inits:

initial_state init1 := 
 iknows(start).
 iknows(m).
 iknows(g).
 iknows(a).
 iknows(idaaa).
 iknows(idmag).
 iknows(idi).
 iknows(psi).
 iknows(h).
 iknows(snd).
 iknows(rcv).
 iknows(i).
 state_mobilenode(m,g,a,ksymma,h,0,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,set_108,3).
 state_mag(g,m,a,idaaa,idmag,psk,h,0,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,4).
 state_aaa(a,m,g,idaaa,idmag,sv,ksymma,psk,h,0,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,5)


section rules:

step step_0 (M,G,A,KsymMA,H,Dummy_IDMN,Dummy_PWMN,IDMAG,N1,N2,C1,C2,C3,C4,C5,AIDMN,AUTHMN,SKMG,Set_31,SID,IDMN,PWMN) :=
 state_mobilenode(M,G,A,KsymMA,H,0,Dummy_IDMN,Dummy_PWMN,IDMAG,N1,N2,C1,C2,C3,C4,C5,AIDMN,AUTHMN,SKMG,Set_31,SID).
 iknows(start)
=[exists PWMN,IDMN]=>
 state_mobilenode(M,G,A,KsymMA,H,1,IDMN,PWMN,IDMAG,N1,N2,C1,C2,C3,C4,C5,AIDMN,AUTHMN,SKMG,Set_31,SID).
 iknows(pair(M,pair(A,scrypt(KsymMA,pair(IDMN,PWMN)))))

step step_1 (M,G,A,KsymMA,H,IDMN,PWMN,IDMAG,Dummy_N1,N2,Dummy_C1,Dummy_C2,Dummy_C3,Dummy_C4,Dummy_C5,Dummy_AIDMN,Dummy_AUTHMN,SKMG,Dummy_Set_31,SID,N1,C1,C2,C3,C4,C5) :=
 state_mobilenode(M,G,A,KsymMA,H,1,IDMN,PWMN,IDMAG,Dummy_N1,N2,Dummy_C1,Dummy_C2,Dummy_C3,Dummy_C4,Dummy_C5,Dummy_AIDMN,Dummy_AUTHMN,SKMG,Dummy_Set_31,SID).
 iknows(pair(A,pair(M,scrypt(KsymMA,pair(IDMN,pair(C1,pair(C2,pair(C3,pair(C4,C5)))))))))
=[exists N1]=>
 state_mobilenode(M,G,A,KsymMA,H,2,IDMN,PWMN,IDMAG,N1,N2,C1,C2,C3,C4,C5,xor(IDMN,apply(H,pair(C5,Dummy_N1))),apply(H,pair(C1,Dummy_N1)),SKMG,Dummy_Set_31,SID).
 iknows(pair(M,pair(G,pair(xor(IDMN,apply(H,pair(C5,Dummy_N1))),pair(C3,scrypt(C4,pair(apply(H,pair(C1,Dummy_N1)),Dummy_N1))))))).
 secret(Dummy_N1,sne,Dummy_Set_31).
 contains(M,Dummy_Set_31).
 contains(G,Dummy_Set_31)

step step_2 (M,G,A,KsymMA,H,IDMN,PWMN,Dummy_IDMAG,N1,Dummy_N2,C1,C2,C3,C4,C5,AIDMN,AUTHMN,Dummy_SKMG,Set_31,SID,IDMAG,N2) :=
 state_mobilenode(M,G,A,KsymMA,H,2,IDMN,PWMN,Dummy_IDMAG,N1,Dummy_N2,C1,C2,C3,C4,C5,AIDMN,AUTHMN,Dummy_SKMG,Set_31,SID).
 iknows(pair(G,pair(M,pair(IDMAG,scrypt(C4,pair(xor(N1,1),pair(N2,apply(H,pair(IDMAG,N2)))))))))
 =>
 state_mobilenode(M,G,A,KsymMA,H,3,IDMN,PWMN,IDMAG,N1,N2,C1,C2,C3,C4,C5,AIDMN,AUTHMN,apply(H,pair(N1,N2)),Set_31,SID).
 iknows(pair(M,pair(G,scrypt(apply(H,pair(N1,N2)),xor(N2,1)))))

step step_3 (G,M,A,IDAAA,IDMAG,PSK,H,IDMN,Dummy_SV,Dummy_N1,Dummy_N2,N3,N4,C1,C2,C3,Dummy_C4,C5,Dummy_AIDMN,Dummy_AUTHMN,Dummy_SKMG,SKGL,SID,SV,N1,N2,AIDMN,AUTHMN) :=
 state_mag(G,M,A,IDAAA,IDMAG,PSK,H,0,IDMN,Dummy_SV,Dummy_N1,Dummy_N2,N3,N4,C1,C2,C3,Dummy_C4,C5,Dummy_AIDMN,Dummy_AUTHMN,Dummy_SKMG,SKGL,SID).
 iknows(pair(M,pair(G,pair(AIDMN,pair(scrypt(PSK,pair(IDAAA,SV)),scrypt(apply(H,pair(IDAAA,SV)),pair(AUTHMN,N1)))))))
=[exists N2]=>
 state_mag(G,M,A,IDAAA,IDMAG,PSK,H,1,IDMN,SV,N1,N2,N3,N4,C1,C2,C3,apply(H,pair(IDAAA,SV)),C5,AIDMN,AUTHMN,apply(H,pair(N1,N2)),SKGL,SID).
 iknows(pair(G,pair(M,pair(IDMAG,scrypt(apply(H,pair(IDAAA,SV)),pair(xor(N1,1),pair(N2,apply(H,pair(IDMAG,N2)))))))))

step step_4 (G,M,A,IDAAA,IDMAG,PSK,H,IDMN,SV,N1,Dummy_N2,N3,N4,C1,C2,C3,C4,C5,AIDMN,AUTHMN,SKMG,SKGL,SID,N2) :=
 state_mag(G,M,A,IDAAA,IDMAG,PSK,H,1,IDMN,SV,N1,Dummy_N2,N3,N4,C1,C2,C3,C4,C5,AIDMN,AUTHMN,SKMG,SKGL,SID).
 iknows(pair(M,pair(G,scrypt(SKMG,xor(Dummy_N2,1)))))
=[exists N2]=>
 state_mag(G,M,A,IDAAA,IDMAG,PSK,H,2,IDMN,SV,N1,N2,N3,N4,C1,C2,C3,C4,C5,AIDMN,AUTHMN,SKMG,SKGL,SID)

step step_5 (A,M,G,IDAAA,IDMAG,SV,KsymMA,PSK,H,Dummy_IDMN,Dummy_PWMN,Dummy_C1,Dummy_C2,Dummy_C3,Dummy_C4,Dummy_C5,SID,IDMN,PWMN) :=
 state_aaa(A,M,G,IDAAA,IDMAG,SV,KsymMA,PSK,H,0,Dummy_IDMN,Dummy_PWMN,Dummy_C1,Dummy_C2,Dummy_C3,Dummy_C4,Dummy_C5,SID).
 iknows(pair(M,pair(A,scrypt(KsymMA,pair(IDMN,PWMN)))))
 =>
 state_aaa(A,M,G,IDAAA,IDMAG,SV,KsymMA,PSK,H,1,IDMN,PWMN,apply(H,pair(IDMN,SV)),xor(apply(H,PWMN),apply(H,pair(IDMN,SV))),scrypt(PSK,pair(IDAAA,SV)),apply(H,pair(IDAAA,SV)),apply(H,SV),SID).
 iknows(pair(A,pair(M,scrypt(KsymMA,pair(IDMN,pair(apply(H,pair(IDMN,SV)),pair(xor(apply(H,PWMN),apply(H,pair(IDMN,SV))),pair(scrypt(PSK,pair(IDAAA,SV)),pair(apply(H,pair(IDAAA,SV)),apply(H,SV))))))))))


section properties:

property secrecy_of_sne (MGoal,ASGoal) :=
 [] ((secret(MGoal,sne,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))


section attack_states:

attack_state secrecy_of_sne (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sne,ASGoal) &
 not(contains(i,ASGoal))

