%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfileNAyOAu

section signature:

state_bob: agent * agent * hash_func * nat * nat * nat * nat * nat * text * text * symmetric_key * symmetric_key * symmetric_key * nat -> fact
state_alice: agent * agent * hash_func * nat * nat * nat * nat * nat * text * text * symmetric_key * symmetric_key * symmetric_key * set(agent) * nat -> fact


section types:

set_97, set_95, set_76: set
alice_bob_nb, k, bob_alice_na: protocol_id
Dummy_Set_28, Set_28, ASGoal: set(agent)
start, MGoal: message
Eab, Kb, K, Dummy_K, Dummy_Kb, Dummy_Eab, dummy_sk: symmetric_key
Na, Nb, Dummy_Nb, Dummy_Na, dummy_nonce: text
Hash, h: hash_func
A, B, A2Goal, A1Goal, a, b, i: agent
1, 10, 6, Dummy_Rb, State, 4, Rb, SID, Ea, Eb, Cs, Dummy_Eb, Dummy_Ea, Dummy_Ra, Dummy_State, 3, 8, dummy_nat, SID2, SID1, 2, 0, csab, csai, csib, Ra, 7, 5: nat


section inits:

initial_state init1 := 
 iknows(start).
 iknows(a).
 iknows(b).
 iknows(h).
 iknows(csab).
 iknows(csai).
 iknows(csib).
 iknows(i).
 state_alice(a,b,h,csab,0,dummy_nat,dummy_nat,dummy_nat,dummy_nonce,dummy_nonce,dummy_sk,dummy_sk,dummy_sk,set_76,3).
 state_bob(b,a,h,csab,1,dummy_nat,dummy_nat,dummy_nat,dummy_nonce,dummy_nonce,dummy_sk,dummy_sk,dummy_sk,4).
 state_alice(a,i,h,csai,0,dummy_nat,dummy_nat,dummy_nat,dummy_nonce,dummy_nonce,dummy_sk,dummy_sk,dummy_sk,set_95,6).
 state_bob(b,i,h,csib,1,dummy_nat,dummy_nat,dummy_nat,dummy_nonce,dummy_nonce,dummy_sk,dummy_sk,dummy_sk,10)


section rules:

step step_0 (A,B,Hash,Cs,Dummy_Ra,Dummy_Ea,Eb,Na,Nb,Eab,Kb,K,Set_28,SID,Ra) :=
 state_alice(A,B,Hash,Cs,0,Dummy_Ra,Dummy_Ea,Eb,Na,Nb,Eab,Kb,K,Set_28,SID).
 iknows(start)
=[exists Ra]=>
 state_alice(A,B,Hash,Cs,2,Ra,exp(Cs,Ra),Eb,Na,Nb,Eab,Kb,K,Set_28,SID).
 iknows(exp(Cs,Ra))

step step_1 (A,B,Hash,Cs,Ra,Ea,Dummy_Eb,Dummy_Na,Nb,Dummy_Eab,Kb,K,Set_28,SID,Eb,Na) :=
 state_alice(A,B,Hash,Cs,2,Ra,Ea,Dummy_Eb,Dummy_Na,Nb,Dummy_Eab,Kb,K,Set_28,SID).
 iknows(Eb)
=[exists Na]=>
 state_alice(A,B,Hash,Cs,4,Ra,Ea,Eb,Na,Nb,exp(Eb,Ra),Kb,K,Set_28,SID).
 iknows(scrypt(exp(Eb,Ra),pair(Na,A))).
 witness(A,B,bob_alice_na,Na)

step step_2 (A,B,Hash,Cs,Ra,Ea,Eb,Na,Dummy_Nb,Eab,Dummy_Kb,Dummy_K,Dummy_Set_28,SID,Nb,K) :=
 state_alice(A,B,Hash,Cs,4,Ra,Ea,Eb,Na,Dummy_Nb,Eab,Dummy_Kb,Dummy_K,Dummy_Set_28,SID).
 iknows(scrypt(Eab,pair(Na,pair(Nb,B))))
=[exists K]=>
 state_alice(A,B,Hash,Cs,6,Ra,Ea,Eb,Na,Nb,Eab,pair(Nb,Na),K,Dummy_Set_28,SID).
 iknows(scrypt(pair(Nb,Na),K)).
 secret(K,k,Dummy_Set_28).
 contains(A,Dummy_Set_28).
 contains(B,Dummy_Set_28)

step step_3 (A,B,Hash,Cs,Ra,Ea,Eb,Na,Nb,Eab,Kb,K,Set_28,SID) :=
 state_alice(A,B,Hash,Cs,6,Ra,Ea,Eb,Na,Nb,Eab,Kb,K,Set_28,SID).
 iknows(apply(Hash,K))
 =>
 state_alice(A,B,Hash,Cs,8,Ra,Ea,Eb,Na,Nb,Eab,Kb,K,Set_28,SID).
 request(A,B,alice_bob_nb,Nb,SID)

step step_4 (B,A,Hash,Cs,Dummy_Rb,Dummy_Ea,Dummy_Eb,Na,Nb,Dummy_Eab,Kb,K,SID,Rb,Ea) :=
 state_bob(B,A,Hash,Cs,1,Dummy_Rb,Dummy_Ea,Dummy_Eb,Na,Nb,Dummy_Eab,Kb,K,SID).
 iknows(Ea)
=[exists Rb]=>
 state_bob(B,A,Hash,Cs,3,Rb,Ea,exp(Cs,Rb),Na,Nb,exp(Ea,Rb),Kb,K,SID).
 iknows(exp(Cs,Rb))

step step_5 (B,A,Hash,Cs,Rb,Ea,Eb,Dummy_Na,Dummy_Nb,Eab,Dummy_Kb,K,SID,Na,Nb) :=
 state_bob(B,A,Hash,Cs,3,Rb,Ea,Eb,Dummy_Na,Dummy_Nb,Eab,Dummy_Kb,K,SID).
 iknows(scrypt(Eab,pair(Na,A)))
=[exists Nb]=>
 state_bob(B,A,Hash,Cs,5,Rb,Ea,Eb,Na,Nb,Eab,pair(Nb,Na),K,SID).
 iknows(scrypt(Eab,pair(Na,pair(Nb,B)))).
 witness(B,A,alice_bob_nb,Nb)

step step_6 (B,A,Hash,Cs,Rb,Ea,Eb,Na,Nb,Eab,Kb,Dummy_K,SID,K) :=
 state_bob(B,A,Hash,Cs,5,Rb,Ea,Eb,Na,Nb,Eab,Kb,Dummy_K,SID).
 iknows(scrypt(Kb,K))
 =>
 state_bob(B,A,Hash,Cs,7,Rb,Ea,Eb,Na,Nb,Eab,Kb,K,SID).
 iknows(apply(Hash,K)).
 request(B,A,bob_alice_na,Na,SID)


section properties:

property secrecy_of_k (MGoal,ASGoal) :=
 [] ((secret(MGoal,k,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property authentication_on_alice_bob_nb (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,alice_bob_nb,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,alice_bob_nb,MGoal))
     /\ ((request(A1Goal,A2Goal,alice_bob_nb,MGoal,SID1)
           /\ request(A1Goal,A2Goal,alice_bob_nb,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_bob_alice_na (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,bob_alice_na,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,bob_alice_na,MGoal))
     /\ ((request(A1Goal,A2Goal,bob_alice_na,MGoal,SID1)
           /\ request(A1Goal,A2Goal,bob_alice_na,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state secrecy_of_k (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,k,ASGoal) &
 not(contains(i,ASGoal))

attack_state authentication_on_alice_bob_nb (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,alice_bob_nb,MGoal,SID) &
 not(witness(A2Goal,A1Goal,alice_bob_nb,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_alice_bob_nb (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,alice_bob_nb,MGoal,SID1).
 request(A1Goal,A2Goal,alice_bob_nb,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_bob_alice_na (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,bob_alice_na,MGoal,SID) &
 not(witness(A2Goal,A1Goal,bob_alice_na,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_bob_alice_na (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,bob_alice_na,MGoal,SID1).
 request(A1Goal,A2Goal,bob_alice_na,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

