role alice(
           A,B : agent,
           K   : symmetric_key,
           SND,RCV : channel(dy))
           played_by A def=

           local
           State : nat,
           Na    : text,
           K: message

       init
       State := 0

     transition

    1. State = 0 /\ RCV(start) =|>
       State':= 2 /\ Na':= new()
                  /\ SND({Na'})

end role

role bob(

         A,B : agent,
            K : symmetric_key,
     SND,RCV : channel(dy))
     played_by B def=

     local
     State : nat,
     Na    : text,
        K   : message

     init
     State := 1

    transition

    1. State = 1 /\ RCV(start)|=>
       State':=2 /\ RCV({Na})
       State':= 3 /\ SND ( {Na}_K )
                  
end role

role session(
             A,B : agent,
               K : symmetric_key,
            )
     
            def=
            local SA, SB, RA, RB : channel (dy)

            composition
            alice(A,B,K,SA,RA)
            /\ bob (A,B,K,SB,RB)
end role

role environment()
               def=
               const
               bob_alice_nb,
               k1 : protocol_id,
               kab,kai,kib : symmetric_key,
               a,b : agent,
               h : hash_func
               intruder_knowledge = {a,b,h,kai,kib}

               composition
               session(a,b,kab,h)
               /\ session(a,i,kai,h)
               /\ session(i,b,kib,h)
end role

goal
 
             secrecy_of k1
             authentication_on bob_alice_nb
end goal

environment()
