%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfilevoKtUWWMId

section signature:

state_server: agent * agent * public_key * public_key * hash_func * nat * text * text * text * text * text * message * message * set(agent) * set(agent) * nat -> fact
state_tag: agent * agent * public_key * public_key * hash_func * nat * text * text * text * text * message * message * message * set(agent) * set(agent) * nat -> fact


section types:

Dummy_Set_53, Dummy_Set_52, Dummy_Set_28, Dummy_Set_26, ASGoal, Set_53, Set_52, Set_28, Set_26: set(agent)
sec_r, sec_k2, sec_xi2, sec_k1, sec_xi1, server_tag_QQQ, tag_server_QQQ: protocol_id
Dummy_T1, Dummy_C1, Dummy_C0, dummy_msg, MGoal, start, C0, C1, T1: message
Dummy_Xi, Dummy_R, Dummy_C3, Dummy_C2, Dummy_K, dummy_nonce, R, K, C2, Xi, C3: text
h, H: hash_func
p, y, qi, P, Y: public_key
4, SID, Dummy_State, 3, SID2, SID1, State, 2, 1, 0, 10, 6: nat
A2Goal, A1Goal, a, s, S, A, i: agent
set_94, set_93, set_79, set_78, set_109, set_108, set_107, set_106, set_105, set_104, set_102, set_101: set


section inits:

initial_state init1 := 
 iknows(start).
 iknows(a).
 iknows(s).
 iknows(h).
 iknows(p).
 iknows(y).
 iknows(qi).
 iknows(i).
 state_tag(a,s,p,y,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,set_78,set_79,3).
 state_server(s,a,p,y,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,set_93,set_94,4).
 state_tag(a,i,p,qi,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,set_101,set_102,6).
 state_server(s,i,p,y,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,set_108,set_109,10)


section rules:

step step_0 (A,S,P,Y,H,Dummy_K,Dummy_C2,Xi,C3,Dummy_C0,Dummy_C1,T1,Dummy_Set_26,Dummy_Set_28,SID,K,C0) :=
 state_tag(A,S,P,Y,H,0,Dummy_K,Dummy_C2,Xi,C3,Dummy_C0,Dummy_C1,T1,Dummy_Set_26,Dummy_Set_28,SID).
 iknows(C0)
=[exists K]=>
 state_tag(A,S,P,Y,H,1,K,xor(Xi,apply(H,K)),Xi,C3,C0,exp(K,xor(C0,Y)),T1,Dummy_Set_26,Dummy_Set_28,SID).
 iknows(exp(K,xor(C0,Y))).
 secret(K,sec_k1,Dummy_Set_26).
 secret(Xi,sec_xi1,Dummy_Set_28).
 witness(A,S,server_tag_QQQ,xor(Xi,apply(H,K))).
 contains(A,Dummy_Set_26).
 contains(S,Dummy_Set_26).
 contains(A,Dummy_Set_28).
 contains(S,Dummy_Set_28)

step step_1 (A,S,P,Y,H,K,C2,Xi,Dummy_C3,C0,C1,Dummy_T1,Set_26,Set_28,SID,C3) :=
 state_tag(A,S,P,Y,H,1,K,C2,Xi,Dummy_C3,C0,C1,Dummy_T1,Set_26,Set_28,SID).
 iknows(C3)
 =>
 state_tag(A,S,P,Y,H,2,K,C2,Xi,C3,C0,C1,apply(H,pair(Xi,K)),Set_26,Set_28,SID).
 request(A,S,tag_server_QQQ,C0,SID)

step step_2 (S,A,P,Y,H,Dummy_R,K,C2,Xi,C3,Dummy_C0,C1,Set_52,Set_53,SID,R) :=
 state_server(S,A,P,Y,H,0,Dummy_R,K,C2,Xi,C3,Dummy_C0,C1,Set_52,Set_53,SID).
 iknows(start)
=[exists R]=>
 state_server(S,A,P,Y,H,1,R,K,C2,Xi,C3,exp(R,P),C1,Set_52,Set_53,SID).
 iknows(exp(R,P)).
 secret(R,sec_r,S).
 witness(S,A,tag_server_QQQ,exp(R,P))

step step_3 (S,A,P,Y,H,R,Dummy_K,Dummy_C2,Dummy_Xi,Dummy_C3,C0,Dummy_C1,Dummy_Set_52,Dummy_Set_53,SID,C1) :=
 state_server(S,A,P,Y,H,1,R,Dummy_K,Dummy_C2,Dummy_Xi,Dummy_C3,C0,Dummy_C1,Dummy_Set_52,Dummy_Set_53,SID).
 iknows(C1)
 =>
 state_server(S,A,P,Y,H,2,R,exp(C1,inv(xor(C0,Y))),Dummy_C2,xor(C2,apply(H,exp(C1,inv(xor(C0,Y))))),apply(H,pair(xor(C2,apply(H,exp(C1,inv(xor(C0,Y))))),exp(C1,inv(xor(C0,Y))))),C0,C1,Dummy_Set_52,Dummy_Set_53,SID).
 iknows(apply(H,pair(xor(C2,apply(H,exp(C1,inv(xor(C0,Y))))),exp(C1,inv(xor(C0,Y)))))).
 secret(exp(C1,inv(xor(C0,Y))),sec_k2,Dummy_Set_52).
 secret(xor(C2,apply(H,exp(C1,inv(xor(C0,Y))))),sec_xi2,Dummy_Set_53).
 witness(S,A,server_tag_QQQ,C2).
 contains(S,Dummy_Set_52).
 contains(A,Dummy_Set_52).
 contains(S,Dummy_Set_53).
 contains(A,Dummy_Set_53)


section properties:

property secrecy_of_sec_k1 (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_k1,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_sec_xi1 (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_xi1,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_sec_r (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_r,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_sec_k2 (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_k2,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_sec_xi2 (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_xi2,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property authentication_on_server_tag_QQQ (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,server_tag_QQQ,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,server_tag_QQQ,MGoal))
     /\ ((request(A1Goal,A2Goal,server_tag_QQQ,MGoal,SID1)
           /\ request(A1Goal,A2Goal,server_tag_QQQ,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_tag_server_QQQ (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,tag_server_QQQ,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,tag_server_QQQ,MGoal))
     /\ ((request(A1Goal,A2Goal,tag_server_QQQ,MGoal,SID1)
           /\ request(A1Goal,A2Goal,tag_server_QQQ,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state secrecy_of_sec_k1 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_k1,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_sec_xi1 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_xi1,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_sec_r (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_r,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_sec_k2 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_k2,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_sec_xi2 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_xi2,ASGoal) &
 not(contains(i,ASGoal))

attack_state authentication_on_server_tag_QQQ (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,server_tag_QQQ,MGoal,SID) &
 not(witness(A2Goal,A1Goal,server_tag_QQQ,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_server_tag_QQQ (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,server_tag_QQQ,MGoal,SID1).
 request(A1Goal,A2Goal,server_tag_QQQ,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_tag_server_QQQ (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,tag_server_QQQ,MGoal,SID) &
 not(witness(A2Goal,A1Goal,tag_server_QQQ,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_tag_server_QQQ (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,tag_server_QQQ,MGoal,SID1).
 request(A1Goal,A2Goal,tag_server_QQQ,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

