
----------------
  AtSe Summary  
----------------

  Protocol file: /home/avispa/web-interface-computation/./tempdir/workfileB4rAKj.if
  Attack found : YES

  Analysed   : 8 states
  Reachable  : 8 states
  Translation: 0.07 seconds
  Computation: 0.00 seconds


---------------------------------------------
            Internal System State            
  (initial state after reading the if file)  
---------------------------------------------

Intruder state :
----------------

Intruder Knowledge :  start i kbi kai g h b a 
 Unforgeable terms :  inv(h)


Interpreted protocol specification :
------------------------------------

Role bob played by (b,10):
| Ha(31) => {exp(g,n31(Eb)).n31(Nb)}_h
| Ga(32).Na(32) => exp(g,n31(Eb)).n31(Nb)  [ Ha(31)={Ga(32).Na(32)}_h ]
| xor(Na(32),n31(Nb)).{kbi.xor(Na(32),n31(Nb))}_h => n31(Nb).Na(32).
|      {kbi.n31(Nb).Na(32)}_h
| Na(34).{exp(Ga(32),n31(Eb)).Na(34)}_h => n34(Nb).
|      {exp(Ga(32),n31(Eb)).Na(34).n34(Nb)}_h
| n34(Nb).{exp(Ga(32),n31(Eb)).n34(Nb)}_h => ()
|    & Secret(exp(Ga(32),n31(Eb)),set_117);  Add i to set_117;
|    & Add b to set_117;

Role alice played by (a,6):
| start => {exp(g,n21(Ea)).n21(Na)}_h
| Hb(22) => exp(g,n21(Ea)).n21(Na)
| Gb(23).Nb(23) => xor(Nb(23),n21(Na)).{kai.xor(Nb(23),n21(Na))}_h
|    & [ Hb(22)={Gb(23).Nb(23)}_h ]
| xor(Nb(23),n21(Na)).{kai.xor(Nb(23),n21(Na))}_h => n24(Na).
|      {exp(Gb(23),n21(Ea)).n24(Na)}_h
| Nb(25).{exp(Gb(23),n21(Ea)).n24(Na).Nb(25)}_h => Nb(25).
|      {exp(Gb(23),n21(Ea)).Nb(25)}_h
|    & Secret(exp(Gb(23),n21(Ea)),set_113);  Add a to set_113;
|    & Add i to set_113;

Role bob played by (b,4):
| Ha(11) => {exp(g,n11(Eb)).n11(Nb)}_h
| Ga(12).Na(12) => exp(g,n11(Eb)).n11(Nb)  [ Ha(11)={Ga(12).Na(12)}_h ]
| xor(Na(12),n11(Nb)).{kab.xor(Na(12),n11(Nb))}_h => n11(Nb).Na(12).
|      {kab.n11(Nb).Na(12)}_h
|    & Witness(b,a,na,xor(Na(12),n11(Nb)));
|    & Request(b,a,nb,xor(Na(12),n11(Nb)));
| Na(14).{exp(Ga(12),n11(Eb)).Na(14)}_h => n14(Nb).
|      {exp(Ga(12),n11(Eb)).Na(14).n14(Nb)}_h
| n14(Nb).{exp(Ga(12),n11(Eb)).n14(Nb)}_h => ()
|    & Secret(exp(Ga(12),n11(Eb)),set_105);  Add a to set_105;
|    & Add b to set_105;

Role alice played by (a,3):
| start => {exp(g,n1(Ea)).n1(Na)}_h
| Hb(2) => exp(g,n1(Ea)).n1(Na)
| Gb(3).Nb(3) => xor(Nb(3),n1(Na)).{kab.xor(Nb(3),n1(Na))}_h
|    & [ Hb(2)={Gb(3).Nb(3)}_h ]
|    & Witness(a,b,nb,xor(Nb(3),n1(Na)));
| xor(Nb(3),n1(Na)).{kab.xor(Nb(3),n1(Na))}_h => n4(Na).
|      {exp(Gb(3),n1(Ea)).n4(Na)}_h
|    & Request(a,b,na,xor(Nb(3),n1(Na)));
| Nb(5).{exp(Gb(3),n1(Ea)).n4(Na).Nb(5)}_h => Nb(5).{exp(Gb(3),n1(Ea)).Nb(5)}_h
|    & Secret(exp(Gb(3),n1(Ea)),set_88);  Add a to set_88;  Add b to set_88;


Some Remarks :
--------------

- The syntax of protocol steps is
   "Received Msg" => "Sent Msg"  [Equalities] & Inequalities & IF facts
- A Role is a tree where steps are unary nodes and choice points are n-ary nodes
- The Initial System state is the state of cl-atse at the begining of the search
  for attacks, and represents both the intruder and honest participants state.
- See the cl-atse's subsection in the user-manual for more details.


--------------------------------------------------
                Attack Description                
 (the list of protocol steps followed by cl-atse) 
--------------------------------------------------

Short attack description :
--------------------------

 Kind of attack:  Authentication on (a,b,na,zero_XORUNIT)
   Substitution:  [ Gb(3)=exp(g,n1(Ea))  Hb(2)={exp(g,n1(Ea)).n1(Na)}_h  Nb(3)=n1(Na) ]
  Compact trace:  (a,6) (a,3) (b,10) (a,3) (a,3) (a,3) 


Detailed attack description :
-----------------------------

 i -> (a,6):  start
 (a,6) -> i:  {exp(g,n21(Ea)).n21(Na)}_h

 i -> (a,3):  start
 (a,3) -> i:  {exp(g,n1(Ea)).n1(Na)}_h

 i -> (b,10):  Ha(31)
 (b,10) -> i:  {exp(g,n31(Eb)).n31(Nb)}_h

 i -> (a,3):  {exp(g,n1(Ea)).n1(Na)}_h
 (a,3) -> i:  exp(g,n1(Ea)).n1(Na)

 i -> (a,3):  exp(g,n1(Ea)).n1(Na)
 (a,3) -> i:  xor().{kab.xor()}_h
              & Witness(a,b,nb,xor());

 i -> (a,3):  xor().{kab.xor()}_h
 (a,3) -> i:  n4(Na).{exp(g,n1(Ea)*n1(Ea)).n4(Na)}_h
              & Request(a,b,na,xor());

