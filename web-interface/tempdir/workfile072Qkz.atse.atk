
----------------
  AtSe Summary  
----------------

  Protocol file: /home/avispa/web-interface-computation/./tempdir/workfile072Qkz.if
  Attack found : NO

  Analysed   : 16 states
  Reachable  : 0 states
  Translation: 0.08 seconds
  Computation: 0.00 seconds


---------------------------------------------
            Internal System State            
  (initial state after reading the if file)  
---------------------------------------------

Intruder state :
----------------

Intruder Knowledge :  start i ki ksm kam ku2 ku1 u2 sm am u1 
 Unforgeable terms :  inv(ki) kca inv(kca) inv(kam) inv(ku1) inv(h)


Interpreted protocol specification :
------------------------------------

Role sm played by (sm,20):
| dummy_nonce.{dummy_nat.dummy_nonce.dummy_nat.dummy_nat}_ksm
|   => {dummy_nat.dummy_nonce.dummy_sk.{{dummy_nat.dummy_nonce.dummy_sk.n47(Nonce)}_h}_(inv(ksm)).n47(Nonce)}_ku1.
|      dummy_nonce.
|      {dummy_nat.dummy_nat.dummy_sk.{{dummy_nat.dummy_sk.n47(Nonce)}_h}_(inv(ksm)).n47(Nonce)}_ki
|    & Witness(sm,u1,svcres,{dummy_nat.dummy_nonce.dummy_sk.n47(Nonce)}_h);

Role am played by (am,19):
| {dummy_nat.dummy_nat.{{dummy_nat.dummy_nat}_h}_(inv(ku1))}_kam
|   => {n45(UaT).{sm.ksm}_(inv(kca)).n45(Nonce)}_(inv(kam))
|    & Witness(am,u1,uat,n45(UaT));

Role u1 played by (u1,18):
| start => {dummy_nat.dummy_nonce.n39(Nonce).{{dummy_nat.n39(Nonce)}_h}_(inv(ku1))}_kam
|    & Secret(inv(ku1),set_166);  Add u1 to set_166;  Add am to set_166;
| {UaT(40).{sm.ksm}_(inv(kca)).Nonce(40)}_(inv(kam)) => dummy_nonce.
|      {dummy_nat.dummy_nonce.dummy_nat.n39(Nonce)}_ksm
| {dummy_nat.dummy_nonce.dummy_sk.{{dummy_nat.dummy_nonce.dummy_sk.Nonce(41)}_h}_(inv(ksm)).Nonce(41)}_ku1
|   => {dummy_nat.dummy_nonce.Nonce(41)}_(inv(ku1))
|    & Request(sm,u1,svcres,{dummy_nat.dummy_nonce.dummy_sk.Nonce(41)}_h);

Role u2 played by (u2,16):
| dummy_nonce.{dummy_nat.dummy_nat.dummy_sk.{{dummy_nat.dummy_sk.Nonce(35)}_h}_(inv(ki)).Nonce(35)}_ku2
|   => ()
| {dummy_nat.dummy_nonce.Nonce(36)}_(inv(ku1)) => ()

Role am played by (am,14):
| {dummy_nat.dummy_nat.{{dummy_nat.dummy_nat}_h}_(inv(ku1))}_kam
|   => {n33(UaT).{i.ki}_(inv(kca)).n33(Nonce)}_(inv(kam))
|    & Witness(am,u1,uat,n33(UaT));

Role u1 played by (u1,13):
| start => {dummy_nat.dummy_nonce.n27(Nonce).{{dummy_nat.n27(Nonce)}_h}_(inv(ku1))}_kam
|    & Secret(inv(ku1),set_162);  Add u1 to set_162;  Add am to set_162;
| {UaT(28).{i.ki}_(inv(kca)).Nonce(28)}_(inv(kam)) => dummy_nonce.
|      {dummy_nat.dummy_nonce.dummy_nat.n27(Nonce)}_ki
| {dummy_nat.dummy_nonce.dummy_sk.{{dummy_nat.dummy_nonce.dummy_sk.Nonce(29)}_h}_(inv(ki)).Nonce(29)}_ku1
|   => {dummy_nat.dummy_nonce.Nonce(29)}_(inv(ku1))

Role u2 played by (u2,11):
| dummy_nonce.{dummy_nat.dummy_nat.dummy_sk.{{dummy_nat.dummy_sk.Nonce(23)}_h}_(inv(ksm)).Nonce(23)}_ku2
|   => ()
| {dummy_nat.dummy_nonce.Nonce(24)}_(inv(ku1)) => ()

Role sm played by (sm,10):
| dummy_nonce.{dummy_nat.dummy_nonce.dummy_nat.dummy_nat}_ksm
|   => {dummy_nat.dummy_nonce.dummy_sk.{{dummy_nat.dummy_nonce.dummy_sk.n21(Nonce)}_h}_(inv(ksm)).n21(Nonce)}_ku1.
|      dummy_nonce.
|      {dummy_nat.dummy_nat.dummy_sk.{{dummy_nat.dummy_sk.n21(Nonce)}_h}_(inv(ksm)).n21(Nonce)}_ku2
|    & Witness(sm,u1,svcres,{dummy_nat.dummy_nonce.dummy_sk.n21(Nonce)}_h);

Role u1 played by (u1,8):
| start => {dummy_nat.dummy_nonce.n15(Nonce).{{dummy_nat.n15(Nonce)}_h}_(inv(ku1))}_ki
|    & Secret(inv(ku1),set_158);  Add u1 to set_158;  Add i to set_158;
| {UaT(16).{sm.ksm}_(inv(kca)).Nonce(16)}_(inv(ki)) => dummy_nonce.
|      {dummy_nat.dummy_nonce.dummy_nat.n15(Nonce)}_ksm
| {dummy_nat.dummy_nonce.dummy_sk.{{dummy_nat.dummy_nonce.dummy_sk.Nonce(17)}_h}_(inv(ksm)).Nonce(17)}_ku1
|   => {dummy_nat.dummy_nonce.Nonce(17)}_(inv(ku1))
|    & Request(sm,u1,svcres,{dummy_nat.dummy_nonce.dummy_sk.Nonce(17)}_h);

Role u2 played by (u2,6):
| dummy_nonce.{dummy_nat.dummy_nat.dummy_sk.{{dummy_nat.dummy_sk.Nonce(11)}_h}_(inv(ksm)).Nonce(11)}_ku2
|   => ()
| {dummy_nat.dummy_nonce.Nonce(12)}_(inv(ku1)) => ()

Role sm played by (sm,5):
| dummy_nonce.{dummy_nat.dummy_nonce.dummy_nat.dummy_nat}_ksm
|   => {dummy_nat.dummy_nonce.dummy_sk.{{dummy_nat.dummy_nonce.dummy_sk.n9(Nonce)}_h}_(inv(ksm)).n9(Nonce)}_ku1.
|      dummy_nonce.
|      {dummy_nat.dummy_nat.dummy_sk.{{dummy_nat.dummy_sk.n9(Nonce)}_h}_(inv(ksm)).n9(Nonce)}_ku2
|    & Witness(sm,u1,svcres,{dummy_nat.dummy_nonce.dummy_sk.n9(Nonce)}_h);

Role am played by (am,4):
| {dummy_nat.dummy_nat.{{dummy_nat.dummy_nat}_h}_(inv(ku1))}_kam
|   => {n7(UaT).{sm.ksm}_(inv(kca)).n7(Nonce)}_(inv(kam))
|    & Witness(am,u1,uat,n7(UaT));

Role u1 played by (u1,3):
| start => {dummy_nat.dummy_nonce.n1(Nonce).{{dummy_nat.n1(Nonce)}_h}_(inv(ku1))}_kam
|    & Secret(inv(ku1),set_142);  Add u1 to set_142;  Add am to set_142;
| {UaT(2).{sm.ksm}_(inv(kca)).Nonce(2)}_(inv(kam)) => dummy_nonce.
|      {dummy_nat.dummy_nonce.dummy_nat.n1(Nonce)}_ksm
| {dummy_nat.dummy_nonce.dummy_sk.{{dummy_nat.dummy_nonce.dummy_sk.Nonce(3)}_h}_(inv(ksm)).Nonce(3)}_ku1
|   => {dummy_nat.dummy_nonce.Nonce(3)}_(inv(ku1))
|    & Request(sm,u1,svcres,{dummy_nat.dummy_nonce.dummy_sk.Nonce(3)}_h);


Some Remarks :
--------------

- The syntax of protocol steps is
   "Received Msg" => "Sent Msg"  [Equalities] & Inequalities & IF facts
- A Role is a tree where steps are unary nodes and choice points are n-ary nodes
- The Initial System state is the state of cl-atse at the begining of the search
  for attacks, and represents both the intruder and honest participants state.
- See the cl-atse's subsection in the user-manual for more details.

