%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfilemLi9r2

section signature:

state_server: agent * agent * symmetric_key * symmetric_key * symmetric_key * hash_func * nat * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * symmetric_key * set(agent) * set(agent) * set(agent) * set(agent) * nat -> fact
state_tag: agent * agent * symmetric_key * symmetric_key * hash_func * nat * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * public_key * symmetric_key * set(agent) * set(agent) * set(agent) * set(agent) * set(agent) * nat -> fact


section types:

Dummy_Set_99, Dummy_Set_98, Dummy_Set_94, Dummy_Set_93, Dummy_Set_55, Dummy_Set_49, Dummy_Set_48, Dummy_Set_44, Dummy_Set_42, ASGoal, Set_99, Set_98, Set_94, Set_93, Set_55, Set_49, Set_48, Set_44, Set_42: set(agent)
MGoal, start: message
k1, req4, seq5, req3, seq4, f_n, y_k, z_k, m_k, p_p, t_n, req2, seq3, req1, seq2, seq1, e_m, g_m, h_m, a_m, d_d: protocol_id
Dummy_Ps, dummy_pk, Ps: public_key
Dummy_Qa, Dummy_Ai2, Dummy_Aic, Dummy_Ai, Dummy_Da, Dummy_E2, Dummy_Bi1, Dummy_Ci, Dummy_Bi, Dummy_Tc3, Dummy_Tc2, Dummy_Yi, Dummy_Vi, Dummy_Fi1, Dummy_Ei1, Dummy_Ra, Dummy_Tc1, Dummy_Fi, Dummy_Ei, Dummy_Pass1, Dummy_Un1, dummy_nonce, Da, Ti, Qa, Ga, Un1, Pass1, Yi, Ei, Fi, Ai, Ai2, Aic, Tc1, Tc2, Vi, Tc3, Bi, Ci, Ei1, Fi1, Bi1, E2, Ra: text
6, 4, SID, Dummy_State, 3, SID2, SID1, 7, 5, State, 2, 1, 0, 10: nat
h, Hash: hash_func
Dummy_Xa, dummy_sk, k15, k16, k17, k18, k19, k20, k21, k22, kab, kai, kib, kba, k11, k12, k13, k14, kia, kbi, Xa, X, Ea, Sk: symmetric_key
A2Goal, A1Goal, u, s, U, S, i: agent
set_202, set_201, set_200, set_198, set_197, set_196, set_195, set_194, set_183, set_182, set_181, set_180, set_149, set_148, set_147, set_146, set_145, set_212, set_211, set_210, set_209, set_208, set_207, set_206, set_205, set_204, set_203: set


section inits:

initial_state init1 := 
 iknows(start).
 iknows(u).
 iknows(s).
 iknows(kai).
 iknows(kia).
 iknows(kbi).
 iknows(kib).
 iknows(i).
 state_tag(u,s,kab,k13,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_pk,dummy_sk,set_145,set_146,set_147,set_148,set_149,3).
 state_server(s,u,kab,k11,k12,h,1,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_sk,set_180,set_181,set_182,set_183,4).
 state_tag(u,i,kai,k16,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_pk,dummy_sk,set_194,set_195,set_196,set_197,set_198,6).
 state_server(s,i,kib,k17,k18,h,1,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_sk,set_209,set_210,set_211,set_212,10)


section rules:

step step_0 (U,S,X,Ea,Hash,Dummy_Un1,Dummy_Pass1,Ei,Fi,Tc1,Ra,Ga,Tc3,Bi,Ei1,Fi1,Vi,Yi,Tc2,Ci,Bi1,E2,Da,Ps,Dummy_Xa,Dummy_Set_42,Dummy_Set_44,Set_48,Set_49,Set_55,SID,Un1,Pass1,Xa) :=
 state_tag(U,S,X,Ea,Hash,0,Dummy_Un1,Dummy_Pass1,Ei,Fi,Tc1,Ra,Ga,Tc3,Bi,Ei1,Fi1,Vi,Yi,Tc2,Ci,Bi1,E2,Da,Ps,Dummy_Xa,Dummy_Set_42,Dummy_Set_44,Set_48,Set_49,Set_55,SID).
 iknows(start)
=[exists Pass1,Xa,Un1]=>
 state_tag(U,S,X,Ea,Hash,2,Un1,Pass1,Ei,Fi,Tc1,Ra,Ga,Tc3,Bi,Ei1,Fi1,Vi,Yi,Tc2,Ci,Bi1,E2,Da,Ps,Xa,Dummy_Set_42,Dummy_Set_44,Set_48,Set_49,Set_55,SID).
 iknows(pair(U,pair(scrypt(X,pair(Un1,Pass1)),S))).
 secret(Pass1,g_m,Dummy_Set_42).
 secret(Un1,h_m,Dummy_Set_44).
 witness(U,S,seq1,pair(Un1,Pass1)).
 contains(U,Dummy_Set_42).
 contains(S,Dummy_Set_42).
 contains(U,Dummy_Set_44).
 contains(S,Dummy_Set_44)

step step_1 (U,S,X,Ea,Hash,Dummy_Un1,Dummy_Pass1,Dummy_Ei,Dummy_Fi,Dummy_Tc1,Dummy_Ra,Ga,Tc3,Bi,Dummy_Ei1,Dummy_Fi1,Dummy_Vi,Dummy_Yi,Dummy_Tc2,Ci,Bi1,E2,Da,Dummy_Ps,Dummy_Xa,Set_42,Set_44,Dummy_Set_48,Dummy_Set_49,Set_55,SID,Un1,Pass1,Ei,Fi,Ra,Yi,Ps,Xa) :=
 state_tag(U,S,X,Ea,Hash,2,Dummy_Un1,Dummy_Pass1,Dummy_Ei,Dummy_Fi,Dummy_Tc1,Dummy_Ra,Ga,Tc3,Bi,Dummy_Ei1,Dummy_Fi1,Dummy_Vi,Dummy_Yi,Dummy_Tc2,Ci,Bi1,E2,Da,Dummy_Ps,Dummy_Xa,Set_42,Set_44,Dummy_Set_48,Dummy_Set_49,Set_55,SID).
 iknows(scrypt(X,pair(Ei,Fi)))
=[exists Ps,Yi,Pass1,Xa,Un1,Ra]=>
 state_tag(U,S,X,Ea,Hash,4,Un1,Pass1,Ei,Fi,exp(Dummy_Ra,Ga),Ra,Ga,Tc3,Bi,xor(Ei,apply(Hash,Pass1)),xor(Fi,Pass1),xor(xor(apply(Hash,pair(Un1,pair(Xa,Yi))),Xa),Yi),Yi,scrypt(xor(xor(apply(Hash,pair(Un1,pair(Xa,Yi))),Xa),Yi),exp(Ra,Ps)),Ci,Bi1,E2,Da,Ps,Xa,Set_42,Set_44,Dummy_Set_48,Dummy_Set_49,Set_55,SID).
 iknows(scrypt(X,pair(exp(Dummy_Ra,Ga),scrypt(xor(xor(apply(Hash,pair(Un1,pair(Xa,Yi))),Xa),Yi),exp(Ra,Ps))))).
 secret(exp(Dummy_Ra,Ga),e_m,Dummy_Set_48).
 secret(scrypt(xor(xor(apply(Hash,pair(Un1,pair(Xa,Yi))),Xa),Yi),exp(Ra,Ps)),a_m,Dummy_Set_49).
 witness(U,S,seq2,pair(exp(Dummy_Ra,Ga),scrypt(xor(xor(apply(Hash,pair(Un1,pair(Xa,Yi))),Xa),Yi),exp(Ra,Ps)))).
 request(U,S,req1,pair(Ei,Fi),SID).
 contains(U,Dummy_Set_48).
 contains(S,Dummy_Set_48).
 contains(U,Dummy_Set_49).
 contains(S,Dummy_Set_49)

step step_2 (U,S,X,Ea,Hash,Dummy_Un1,Pass1,Ei,Fi,Tc1,Dummy_Ra,Ga,Dummy_Tc3,Dummy_Bi,Ei1,Fi1,Dummy_Vi,Dummy_Yi,Tc2,Dummy_Ci,Dummy_Bi1,Dummy_E2,Dummy_Da,Ps,Dummy_Xa,Set_42,Set_44,Set_48,Set_49,Dummy_Set_55,SID,Un1,Ra,Tc3,Bi,Yi,E2,Da,Xa) :=
 state_tag(U,S,X,Ea,Hash,4,Dummy_Un1,Pass1,Ei,Fi,Tc1,Dummy_Ra,Ga,Dummy_Tc3,Dummy_Bi,Ei1,Fi1,Dummy_Vi,Dummy_Yi,Tc2,Dummy_Ci,Dummy_Bi1,Dummy_E2,Dummy_Da,Ps,Dummy_Xa,Set_42,Set_44,Set_48,Set_49,Dummy_Set_55,SID).
 iknows(scrypt(X,pair(Tc3,Bi)))
=[exists Da,E2,Yi,Un1,Xa,Ra]=>
 state_tag(U,S,X,Ea,Hash,6,Un1,Pass1,Ei,Fi,Tc1,Ra,Ga,Tc3,Bi,Ei1,Fi1,xor(xor(apply(Hash,pair(Un1,pair(Xa,Yi))),Xa),Yi),Yi,Tc2,apply(Hash,exp(Ra,Tc3)),apply(Hash,scrypt(xor(xor(apply(Hash,pair(Un1,pair(Xa,Yi))),Xa),Yi),exp(Ra,E2))),E2,Da,Ps,Xa,Set_42,Set_44,Set_48,Set_49,Dummy_Set_55,SID).
 iknows(scrypt(X,Da)).
 secret(Da,d_d,Dummy_Set_55).
 witness(U,S,seq3,Da).
 request(U,S,req2,pair(Tc3,Bi),SID).
 contains(U,Dummy_Set_55).
 contains(S,Dummy_Set_55)

step step_3 (S,U,X,Ea,Sk,Hash,Dummy_Un1,Dummy_Pass1,Dummy_Yi,Dummy_Ei,Dummy_Fi,Dummy_Ai,Ai2,Dummy_Aic,Tc1,Tc2,Vi,Tc3,Bi,Ci,Da,Ti,Qa,Ga,Dummy_Xa,Dummy_Set_93,Dummy_Set_94,Set_98,Set_99,SID,Un1,Pass1,Yi,Xa) :=
 state_server(S,U,X,Ea,Sk,Hash,1,Dummy_Un1,Dummy_Pass1,Dummy_Yi,Dummy_Ei,Dummy_Fi,Dummy_Ai,Ai2,Dummy_Aic,Tc1,Tc2,Vi,Tc3,Bi,Ci,Da,Ti,Qa,Ga,Dummy_Xa,Dummy_Set_93,Dummy_Set_94,Set_98,Set_99,SID).
 iknows(pair(U,pair(scrypt(X,pair(Un1,Pass1)),S)))
=[exists Xa,Yi]=>
 state_server(S,U,X,Ea,Sk,Hash,3,Un1,Pass1,Yi,xor(apply(Hash,pair(Un1,pair(Xa,Dummy_Yi))),Pass1),xor(xor(Xa,Yi),Pass1),xor(apply(Hash,pair(Un1,pair(Xa,Yi))),Yi),Ai2,xor(Yi,Xa),Tc1,Tc2,Vi,Tc3,Bi,Ci,Da,Ti,Qa,Ga,Xa,Dummy_Set_93,Dummy_Set_94,Set_98,Set_99,SID).
 iknows(scrypt(X,pair(xor(apply(Hash,pair(Un1,pair(Xa,Dummy_Yi))),Pass1),xor(xor(Xa,Yi),Pass1)))).
 secret(xor(apply(Hash,pair(Un1,pair(Xa,Dummy_Yi))),Pass1),f_n,Dummy_Set_93).
 secret(xor(xor(Xa,Yi),Pass1),t_n,Dummy_Set_94).
 witness(S,U,seq4,pair(xor(apply(Hash,pair(Un1,pair(Xa,Dummy_Yi))),Pass1),xor(xor(Xa,Yi),Pass1))).
 request(S,U,req3,pair(Un1,Pass1),SID).
 contains(U,Dummy_Set_93).
 contains(S,Dummy_Set_93).
 contains(U,Dummy_Set_94).
 contains(S,Dummy_Set_94)

step step_4 (S,U,X,Ea,Sk,Hash,Un1,Pass1,Yi,Ei,Fi,Ai,Dummy_Ai2,Aic,Dummy_Tc1,Dummy_Tc2,Dummy_Vi,Dummy_Tc3,Dummy_Bi,Dummy_Ci,Da,Ti,Dummy_Qa,Ga,Dummy_Xa,Set_93,Set_94,Dummy_Set_98,Dummy_Set_99,SID,Tc1,Tc2,Qa,Xa) :=
 state_server(S,U,X,Ea,Sk,Hash,3,Un1,Pass1,Yi,Ei,Fi,Ai,Dummy_Ai2,Aic,Dummy_Tc1,Dummy_Tc2,Dummy_Vi,Dummy_Tc3,Dummy_Bi,Dummy_Ci,Da,Ti,Dummy_Qa,Ga,Dummy_Xa,Set_93,Set_94,Dummy_Set_98,Dummy_Set_99,SID).
 iknows(scrypt(X,pair(Tc1,Tc2)))
=[exists Qa,Xa]=>
 state_server(S,U,X,Ea,Sk,Hash,5,Un1,Pass1,Yi,Ei,Fi,Ai,xor(scrypt(Tc2,exp(Xa,Tc1)),Xa),Aic,Tc1,Tc2,scrypt(Tc2,exp(Xa,Tc1)),exp(Qa,Ga),apply(Hash,pair(Tc2,apply(Hash,pair(Qa,Tc1)))),apply(Hash,pair(Qa,Tc1)),Da,Ti,Qa,Ga,Xa,Set_93,Set_94,Dummy_Set_98,Dummy_Set_99,SID).
 iknows(scrypt(X,pair(exp(Qa,Ga),apply(Hash,pair(Tc2,apply(Hash,pair(Qa,Tc1))))))).
 secret(exp(Qa,Ga),y_k,Dummy_Set_98).
 secret(apply(Hash,pair(Tc2,apply(Hash,pair(Qa,Tc1)))),p_p,Dummy_Set_99).
 witness(S,U,seq5,pair(exp(Qa,Ga),apply(Hash,pair(Tc2,apply(Hash,pair(Qa,Tc1)))))).
 request(S,U,req4,pair(Tc1,Tc2),SID).
 contains(U,Dummy_Set_98).
 contains(S,Dummy_Set_98).
 contains(U,Dummy_Set_99).
 contains(S,Dummy_Set_99)

step step_5 (S,U,X,Ea,Sk,Hash,Un1,Pass1,Yi,Ei,Fi,Ai,Ai2,Aic,Tc1,Tc2,Vi,Tc3,Bi,Ci,Dummy_Da,Ti,Qa,Ga,Xa,Set_93,Set_94,Set_98,Set_99,SID,Da) :=
 state_server(S,U,X,Ea,Sk,Hash,5,Un1,Pass1,Yi,Ei,Fi,Ai,Ai2,Aic,Tc1,Tc2,Vi,Tc3,Bi,Ci,Dummy_Da,Ti,Qa,Ga,Xa,Set_93,Set_94,Set_98,Set_99,SID).
 iknows(scrypt(X,Da))
 =>
 state_server(S,U,X,Ea,Sk,Hash,7,Un1,Pass1,Yi,Ei,Fi,Ai,Ai2,Aic,Tc1,Tc2,Vi,Tc3,Bi,Ci,Da,Ti,Qa,Ga,Xa,Set_93,Set_94,Set_98,Set_99,SID)


section properties:

property secrecy_of_k1 (MGoal,ASGoal) :=
 [] ((secret(MGoal,k1,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_e_m (MGoal,ASGoal) :=
 [] ((secret(MGoal,e_m,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_g_m (MGoal,ASGoal) :=
 [] ((secret(MGoal,g_m,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_h_m (MGoal,ASGoal) :=
 [] ((secret(MGoal,h_m,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_f_n (MGoal,ASGoal) :=
 [] ((secret(MGoal,f_n,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_y_k (MGoal,ASGoal) :=
 [] ((secret(MGoal,y_k,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_z_k (MGoal,ASGoal) :=
 [] ((secret(MGoal,z_k,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_p_p (MGoal,ASGoal) :=
 [] ((secret(MGoal,p_p,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_t_n (MGoal,ASGoal) :=
 [] ((secret(MGoal,t_n,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_a_m (MGoal,ASGoal) :=
 [] ((secret(MGoal,a_m,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_d_d (MGoal,ASGoal) :=
 [] ((secret(MGoal,d_d,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property authentication_on_seq1 (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,seq1,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,seq1,MGoal))
     /\ ((request(A1Goal,A2Goal,seq1,MGoal,SID1)
           /\ request(A1Goal,A2Goal,seq1,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_seq2 (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,seq2,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,seq2,MGoal))
     /\ ((request(A1Goal,A2Goal,seq2,MGoal,SID1)
           /\ request(A1Goal,A2Goal,seq2,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_seq3 (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,seq3,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,seq3,MGoal))
     /\ ((request(A1Goal,A2Goal,seq3,MGoal,SID1)
           /\ request(A1Goal,A2Goal,seq3,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_seq4 (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,seq4,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,seq4,MGoal))
     /\ ((request(A1Goal,A2Goal,seq4,MGoal,SID1)
           /\ request(A1Goal,A2Goal,seq4,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_seq5 (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,seq5,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,seq5,MGoal))
     /\ ((request(A1Goal,A2Goal,seq5,MGoal,SID1)
           /\ request(A1Goal,A2Goal,seq5,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_req1 (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,req1,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,req1,MGoal))
     /\ ((request(A1Goal,A2Goal,req1,MGoal,SID1)
           /\ request(A1Goal,A2Goal,req1,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_req2 (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,req2,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,req2,MGoal))
     /\ ((request(A1Goal,A2Goal,req2,MGoal,SID1)
           /\ request(A1Goal,A2Goal,req2,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_req3 (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,req3,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,req3,MGoal))
     /\ ((request(A1Goal,A2Goal,req3,MGoal,SID1)
           /\ request(A1Goal,A2Goal,req3,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_req4 (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,req4,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,req4,MGoal))
     /\ ((request(A1Goal,A2Goal,req4,MGoal,SID1)
           /\ request(A1Goal,A2Goal,req4,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state secrecy_of_k1 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,k1,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_e_m (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,e_m,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_g_m (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,g_m,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_h_m (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,h_m,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_f_n (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,f_n,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_y_k (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,y_k,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_z_k (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,z_k,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_p_p (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,p_p,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_t_n (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,t_n,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_a_m (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,a_m,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_d_d (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,d_d,ASGoal) &
 not(contains(i,ASGoal))

attack_state authentication_on_seq1 (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,seq1,MGoal,SID) &
 not(witness(A2Goal,A1Goal,seq1,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_seq1 (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,seq1,MGoal,SID1).
 request(A1Goal,A2Goal,seq1,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_seq2 (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,seq2,MGoal,SID) &
 not(witness(A2Goal,A1Goal,seq2,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_seq2 (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,seq2,MGoal,SID1).
 request(A1Goal,A2Goal,seq2,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_seq3 (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,seq3,MGoal,SID) &
 not(witness(A2Goal,A1Goal,seq3,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_seq3 (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,seq3,MGoal,SID1).
 request(A1Goal,A2Goal,seq3,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_seq4 (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,seq4,MGoal,SID) &
 not(witness(A2Goal,A1Goal,seq4,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_seq4 (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,seq4,MGoal,SID1).
 request(A1Goal,A2Goal,seq4,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_seq5 (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,seq5,MGoal,SID) &
 not(witness(A2Goal,A1Goal,seq5,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_seq5 (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,seq5,MGoal,SID1).
 request(A1Goal,A2Goal,seq5,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_req1 (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,req1,MGoal,SID) &
 not(witness(A2Goal,A1Goal,req1,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_req1 (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,req1,MGoal,SID1).
 request(A1Goal,A2Goal,req1,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_req2 (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,req2,MGoal,SID) &
 not(witness(A2Goal,A1Goal,req2,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_req2 (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,req2,MGoal,SID1).
 request(A1Goal,A2Goal,req2,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_req3 (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,req3,MGoal,SID) &
 not(witness(A2Goal,A1Goal,req3,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_req3 (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,req3,MGoal,SID1).
 request(A1Goal,A2Goal,req3,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_req4 (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,req4,MGoal,SID) &
 not(witness(A2Goal,A1Goal,req4,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_req4 (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,req4,MGoal,SID1).
 request(A1Goal,A2Goal,req4,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

