%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfilepFG30w

section signature:

state_paymentgateway: agent * agent * agent * text * public_key * public_key * public_key * public_key * public_key * public_key * nat * text * text * text * text * message * message * message * message * message * message * symmetric_key * symmetric_key * symmetric_key * nat * text * nat -> fact
state_merchant: agent * agent * agent * public_key * public_key * public_key * public_key * symmetric_key * symmetric_key * nat * nat * nat * nat * text * hash_func * hash_func * hash_func * hash_func * hash_func * hash_func * public_key * public_key * public_key * public_key * public_key * public_key * nat * text * text * text * text * text * message * message * message * message * message * message * message * message * message * message * symmetric_key * symmetric_key * nat -> fact
state_cardholder: agent * agent * agent * nat * nat * nat * text * nat * text * hash_func * hash_func * hash_func * hash_func * hash_func * hash_func * public_key * public_key * public_key * public_key * public_key * public_key * symmetric_key * symmetric_key * public_key * public_key * public_key * public_key * public_key * public_key * nat * text * text * text * text * text * text * message * message * message * message * message * message * message * message * message * message * message * symmetric_key * set(agent) * set(agent) * set(agent) * nat -> fact


section types:

cid, payment, order, deal, mid: protocol_id
set_288, set_287, set_286, set_283, set_282, set_281, set_245, set_244, set_243: set
dummy_set: set(message)
Set_73, Set_71, Set_70, Dummy_Set_73, Dummy_Set_71, Dummy_Set_70, ASGoal: set(agent)
MResp, AuthReq, PaymentPart, OI, PI, DualSig, HPI, Paymentpart, M_RESP, YRESP, Yds, Sigma, Dummy_PaymentPart, Dummy_MResp, Dummy_AuthReq, Dummy_Paymentpart, Dummy_HPI, Dummy_Sigma, Dummy_YRESP, Dummy_M_RESP, start, Dummy_DualSig, Dummy_POMD, Dummy_PI, Dummy_OI, Dummy_Yds, Dummy_M_DS, POMD, M_DS, dummy_msg, Sa, MGoal: message
minus, union, pred, Minus, Union, Pred, H0, H1, H2, h, h0, h1, h2: hash_func
OrderDesc, XID, Chall_M, LID_M, Chall_C, AI, Y_resp, Dummy_XID, Dummy_Y_resp, Dummy_Y_ds, Dummy_LID_M, dummy_nonce, Y_ds, Y_RESP, ai_c, ai_i, od1, od2, od3, od4, od5: text
K3, K1, K2, Xa_M, Xb_M, Dummy_K3, Dummy_K2, Dummy_K1, dummy_sk, Xa_C, Xb_C, xa_I, xb_I, xa_C, xb_C, xa_M, xb_M: symmetric_key
PurchAmt, S, ID_C, ID_M, 12, ID_PG, 11, 9, 7, 5, SID, 3, dummy_nat, 4, 2, 1, 0, Dummy_S, SID2, SID1, id_i, id_c, id_m, id_pg, pa1, pa2, pa3, pa4, pa5: nat
c, m, p, C, M, P, A2Goal, A1Goal, i: agent
enc_p, sign_p, enc_i, sign_i, EncK_C, SignK_C, EncK_M, SignK_M, EncK_P, SignK_P, P_pub, Pa_M, Pb_M, Pg, pa_C, p_pub, Pa_C, Pb_C, pa_I, pb_I, pb_C, pa_M, pb_M, pg, enc_c, sign_c, enc_m, sign_m: public_key


section inits:

initial_state init1 := 
 iknows(start).
 iknows(c).
 iknows(m).
 iknows(p).
 iknows(id_c).
 iknows(id_m).
 iknows(id_pg).
 iknows(minus).
 iknows(union).
 iknows(pred).
 iknows(h0).
 iknows(h1).
 iknows(h2).
 iknows(p_pub).
 iknows(pa_C).
 iknows(pb_C).
 iknows(pa_M).
 iknows(pb_M).
 iknows(pg).
 iknows(enc_c).
 iknows(sign_c).
 iknows(enc_m).
 iknows(sign_m).
 iknows(enc_p).
 iknows(sign_p).
 iknows(enc_i).
 iknows(sign_i).
 iknows(inv(enc_i)).
 iknows(inv(sign_i)).
 iknows(ai_i).
 iknows(pa3).
 iknows(od3).
 iknows(pa4).
 iknows(od4).
 iknows(h).
 iknows(i).
 state_cardholder(c,m,p,id_c,id_m,id_pg,ai_c,pa2,od2,minus,union,pred,h0,h1,h2,p_pub,pa_M,pb_M,pa_C,pb_C,pg,xa_C,xb_C,enc_c,sign_c,enc_m,sign_m,enc_p,sign_p,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_sk,set_243,set_244,set_245,3).
 state_merchant(m,c,p,p_pub,pa_M,pb_M,pg,xa_M,xb_M,id_c,id_m,id_pg,pa2,od2,minus,union,pred,h0,h1,h2,enc_c,sign_c,enc_m,sign_m,enc_p,sign_p,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_sk,dummy_sk,4).
 state_paymentgateway(p,c,m,ai_c,enc_c,sign_c,enc_m,sign_m,enc_p,sign_p,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_sk,dummy_sk,dummy_sk,dummy_nat,dummy_nonce,5).
 state_cardholder(c,i,p,id_c,id_i,id_pg,ai_c,pa4,od4,minus,union,pred,h0,h1,h2,p_pub,pa_I,pb_I,pa_C,pb_C,pg,xa_C,xb_C,enc_c,sign_c,enc_i,sign_i,enc_p,sign_p,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_sk,set_281,set_282,set_283,7).
 state_paymentgateway(p,c,i,ai_c,enc_c,sign_c,enc_i,sign_i,enc_p,sign_p,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_sk,dummy_sk,dummy_sk,dummy_nat,dummy_nonce,9).
 state_cardholder(c,m,i,id_c,id_m,id_i,ai_c,pa5,od5,minus,union,pred,h0,h1,h2,p_pub,pa_M,pb_M,pa_C,pb_C,pg,xa_C,xb_C,enc_c,sign_c,enc_m,sign_m,enc_i,sign_i,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_sk,set_286,set_287,set_288,11).
 state_merchant(m,c,i,p_pub,pa_M,pb_M,pg,xa_M,xb_M,id_c,id_m,id_i,pa5,od5,minus,union,pred,h0,h1,h2,enc_c,sign_c,enc_m,sign_m,enc_i,sign_i,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_sk,dummy_sk,12)


section rules:

step step_0 (C,M,P,ID_C,ID_M,ID_PG,AI,PurchAmt,OrderDesc,Minus,Union,Pred,H0,H1,H2,P_pub,Pa_M,Pb_M,Pa_C,Pb_C,Pg,Xa_C,Xb_C,EncK_C,SignK_C,EncK_M,SignK_M,EncK_P,SignK_P,Dummy_LID_M,Chall_C,Y_ds,Y_RESP,XID,Chall_M,MResp,YRESP,M_RESP,M_DS,Yds,Sa,Sigma,OI,PI,POMD,DualSig,K1,Set_70,Set_71,Set_73,SID,LID_M) :=
 state_cardholder(C,M,P,ID_C,ID_M,ID_PG,AI,PurchAmt,OrderDesc,Minus,Union,Pred,H0,H1,H2,P_pub,Pa_M,Pb_M,Pa_C,Pb_C,Pg,Xa_C,Xb_C,EncK_C,SignK_C,EncK_M,SignK_M,EncK_P,SignK_P,0,Dummy_LID_M,Chall_C,Y_ds,Y_RESP,XID,Chall_M,MResp,YRESP,M_RESP,M_DS,Yds,Sa,Sigma,OI,PI,POMD,DualSig,K1,Set_70,Set_71,Set_73,SID).
 iknows(start)
=[exists LID_M]=>
 state_cardholder(C,M,P,ID_C,ID_M,ID_PG,AI,PurchAmt,OrderDesc,Minus,Union,Pred,H0,H1,H2,P_pub,Pa_M,Pb_M,Pa_C,Pb_C,Pg,Xa_C,Xb_C,EncK_C,SignK_C,EncK_M,SignK_M,EncK_P,SignK_P,1,LID_M,Chall_C,Y_ds,Y_RESP,XID,Chall_M,MResp,YRESP,M_RESP,M_DS,Yds,Sa,Sigma,OI,PI,POMD,DualSig,K1,Set_70,Set_71,Set_73,SID).
 iknows(LID_M)

step step_1 (C,M,P,ID_C,ID_M,ID_PG,AI,PurchAmt,OrderDesc,Minus,Union,Pred,H0,H1,H2,P_pub,Pa_M,Pb_M,Pa_C,Pb_C,Pg,Xa_C,Xb_C,EncK_C,SignK_C,EncK_M,SignK_M,EncK_P,SignK_P,LID_M,Chall_C,Dummy_Y_ds,Y_RESP,XID,Chall_M,MResp,YRESP,M_RESP,Dummy_M_DS,Dummy_Yds,Sigma,Dummy_OI,Dummy_PI,Dummy_POMD,Dummy_DualSig,Dummy_K1,Dummy_Set_70,Dummy_Set_71,Dummy_Set_73,SID,Y_ds,M_DS,K1) :=
 state_cardholder(C,M,P,ID_C,ID_M,ID_PG,AI,PurchAmt,OrderDesc,Minus,Union,Pred,H0,H1,H2,P_pub,Pa_M,Pb_M,Pa_C,Pb_C,Pg,Xa_C,Xb_C,EncK_C,SignK_C,EncK_M,SignK_M,EncK_P,SignK_P,1,LID_M,Chall_C,Dummy_Y_ds,Y_RESP,XID,Chall_M,MResp,YRESP,M_RESP,Dummy_M_DS,Dummy_Yds,apply(Union,pair(apply(Union,pair(apply(Minus,pair(apply(Pred,pair(Sigma,Pg)),Y_RESP)),apply(Pred,pair(apply(h2,pair(M_RESP,pair(ID_M,pair(Pa_M,Y_RESP)))),Pa_M)))),apply(Pred,pair(apply(h1,pair(M_RESP,pair(ID_M,pair(Pb_M,YRESP)))),apply(Union,pair(Pb_M,apply(Pred,pair(apply(h0,pair(ID_M,pair(Pb_M,Pa_M))),p_pub)))))))),Sigma,Dummy_OI,Dummy_PI,Dummy_POMD,Dummy_DualSig,Dummy_K1,Dummy_Set_70,Dummy_Set_71,Dummy_Set_73,SID).
 iknows(M_RESP)
=[exists K1,Y_ds,M_DS]=>
 state_cardholder(C,M,P,ID_C,ID_M,ID_PG,AI,PurchAmt,OrderDesc,Minus,Union,Pred,H0,H1,H2,P_pub,Pa_M,Pb_M,Pa_C,Pb_C,Pg,Xa_C,Xb_C,EncK_C,SignK_C,EncK_M,SignK_M,EncK_P,SignK_P,2,LID_M,Chall_C,Y_ds,Y_RESP,XID,Chall_M,MResp,YRESP,M_RESP,M_DS,apply(Pred,pair(Dummy_Y_ds,pa_C)),apply(Union,pair(apply(Union,pair(apply(Minus,pair(apply(Pred,pair(Sigma,Pg)),Y_RESP)),apply(Pred,pair(apply(h2,pair(M_RESP,pair(ID_M,pair(Pa_M,Y_RESP)))),Pa_M)))),apply(Pred,pair(apply(h1,pair(M_RESP,pair(ID_M,pair(Pb_M,YRESP)))),apply(Union,pair(Pb_M,apply(Pred,pair(apply(h0,pair(ID_M,pair(Pb_M,Pa_M))),p_pub)))))))),Sigma,pair(M_RESP,apply(h,pair(OrderDesc,PurchAmt))),pair(M_RESP,pair(apply(h,pair(OrderDesc,PurchAmt)),pair(PurchAmt,apply(h,AI)))),pair(apply(h,pair(M_RESP,apply(h,pair(OrderDesc,PurchAmt)))),pair(apply(h,pair(M_RESP,pair(apply(h,pair(OrderDesc,PurchAmt)),pair(PurchAmt,apply(h,AI))))),apply(h,pair(apply(h,pair(M_RESP,apply(h,pair(OrderDesc,PurchAmt)))),apply(h,pair(M_RESP,pair(apply(h,pair(OrderDesc,PurchAmt)),pair(PurchAmt,apply(h,AI))))))))),apply(Minus,pair(apply(Pred,pair(Xa_C,Dummy_Y_ds)),apply(Union,pair(apply(Pred,pair(apply(h2,pair(Dummy_POMD,pair(ID_C,pair(pa_C,Dummy_Yds)))),Xa_C)),apply(Pred,pair(apply(h1,pair(Dummy_POMD,pair(ID_C,pair(Pb_C,Dummy_Yds)))),Xb_C)))))),K1,Dummy_Set_70,Dummy_Set_71,Dummy_Set_73,SID).
 iknows(pair(pair(M_RESP,apply(h,pair(OrderDesc,PurchAmt))),pair(apply(Minus,pair(apply(Pred,pair(Xa_C,Dummy_Y_ds)),apply(Union,pair(apply(Pred,pair(apply(h2,pair(Dummy_POMD,pair(ID_C,pair(pa_C,Dummy_Yds)))),Xa_C)),apply(Pred,pair(apply(h1,pair(Dummy_POMD,pair(ID_C,pair(Pb_C,Dummy_Yds)))),Xb_C)))))),pair(Dummy_Yds,pair(apply(h,Dummy_PI),pair(scrypt(Dummy_K1,Dummy_PI),crypt(EncK_P,Dummy_K1))))))).
 witness(C,M,deal,pair(pair(M_RESP,apply(h,pair(OrderDesc,PurchAmt))),apply(h,pair(M_RESP,pair(apply(h,pair(OrderDesc,PurchAmt)),pair(PurchAmt,apply(h,AI))))))).
 witness(C,P,deal,pair(pair(M_RESP,apply(h,pair(OrderDesc,PurchAmt))),pair(M_RESP,pair(apply(h,pair(OrderDesc,PurchAmt)),pair(PurchAmt,apply(h,AI)))))).
 secret(OrderDesc,order,Dummy_Set_70).
 secret(PurchAmt,order,Dummy_Set_71).
 secret(Dummy_PI,payment,Dummy_Set_73).
 contains(C,Dummy_Set_70).
 contains(M,Dummy_Set_70).
 contains(C,Dummy_Set_71).
 contains(M,Dummy_Set_71).
 contains(P,Dummy_Set_71).
 contains(C,Dummy_Set_73).
 contains(P,Dummy_Set_73)

step step_2 (C,M,P,ID_C,ID_M,ID_PG,AI,PurchAmt,OrderDesc,Minus,Union,Pred,H0,H1,H2,P_pub,Pa_M,Pb_M,Pa_C,Pb_C,Pg,Xa_C,Xb_C,EncK_C,SignK_C,EncK_M,SignK_M,EncK_P,SignK_P,LID_M,Chall_C,Y_ds,Y_RESP,XID,Chall_M,MResp,YRESP,M_RESP,M_DS,Yds,Sa,Sigma,OI,PI,POMD,DualSig,K1,Set_70,Set_71,Set_73,SID) :=
 state_cardholder(C,M,P,ID_C,ID_M,ID_PG,AI,PurchAmt,OrderDesc,Minus,Union,Pred,H0,H1,H2,P_pub,Pa_M,Pb_M,Pa_C,Pb_C,Pg,Xa_C,Xb_C,EncK_C,SignK_C,EncK_M,SignK_M,EncK_P,SignK_P,2,LID_M,Chall_C,Y_ds,Y_RESP,XID,Chall_M,MResp,YRESP,M_RESP,M_DS,Yds,Sa,Sigma,OI,PI,POMD,DualSig,K1,Set_70,Set_71,Set_73,SID).
 iknows(pair(LID_M,MResp))
 =>
 state_cardholder(C,M,P,ID_C,ID_M,ID_PG,AI,PurchAmt,OrderDesc,Minus,Union,Pred,H0,H1,H2,P_pub,Pa_M,Pb_M,Pa_C,Pb_C,Pg,Xa_C,Xb_C,EncK_C,SignK_C,EncK_M,SignK_M,EncK_P,SignK_P,3,LID_M,Chall_C,Y_ds,Y_RESP,XID,Chall_M,MResp,YRESP,M_RESP,M_DS,Yds,Sa,Sigma,OI,PI,POMD,DualSig,K1,Set_70,Set_71,Set_73,SID).
 request(C,M,deal,pair(OI,apply(h,PI)),SID)

step step_3 (M,C,P,P_pub,Pa_M,Pb_M,Pg,Xa_M,Xb_M,ID_C,ID_M,ID_PG,PurchAmt,OrderDesc,Minus,Union,Pred,H0,H1,H2,EncK_C,SignK_C,EncK_M,SignK_M,EncK_P,SignK_P,Dummy_LID_M,Chall_C,Dummy_Y_resp,Dummy_XID,Chall_M,MResp,Dummy_M_RESP,Dummy_YRESP,Yds,Dummy_Sigma,OI,HPI,DualSig,Paymentpart,AuthReq,K2,K3,SID,LID_M,Y_resp,XID,M_RESP) :=
 state_merchant(M,C,P,P_pub,Pa_M,Pb_M,Pg,Xa_M,Xb_M,ID_C,ID_M,ID_PG,PurchAmt,OrderDesc,Minus,Union,Pred,H0,H1,H2,EncK_C,SignK_C,EncK_M,SignK_M,EncK_P,SignK_P,0,Dummy_LID_M,Chall_C,Dummy_Y_resp,Dummy_XID,Chall_M,MResp,Dummy_M_RESP,Dummy_YRESP,Yds,Dummy_Sigma,OI,HPI,DualSig,Paymentpart,AuthReq,K2,K3,SID).
 iknows(LID_M)
=[exists Y_resp,M_RESP,XID]=>
 state_merchant(M,C,P,P_pub,Pa_M,Pb_M,Pg,Xa_M,Xb_M,ID_C,ID_M,ID_PG,PurchAmt,OrderDesc,Minus,Union,Pred,H0,H1,H2,EncK_C,SignK_C,EncK_M,SignK_M,EncK_P,SignK_P,1,LID_M,Chall_C,Y_resp,XID,Chall_M,MResp,M_RESP,apply(Pred,pair(Dummy_Y_resp,Pa_M)),Yds,apply(Minus,pair(apply(Pred,pair(Xa_M,Dummy_Y_resp)),apply(Union,pair(apply(Pred,pair(apply(h2,pair(Dummy_M_RESP,pair(ID_M,pair(Pa_M,Dummy_YRESP)))),Xa_M)),apply(Pred,pair(apply(h1,pair(Dummy_M_RESP,pair(ID_M,pair(Pb_M,Dummy_YRESP)))),Xb_M)))))),OI,HPI,DualSig,Paymentpart,AuthReq,K2,K3,SID).
 iknows(Dummy_M_RESP)

step step_4 (M,C,P,P_pub,Pa_M,Pb_M,Pg,Xa_M,Xb_M,ID_C,ID_M,ID_PG,PurchAmt,OrderDesc,Minus,Union,Pred,H0,H1,H2,EncK_C,SignK_C,EncK_M,SignK_M,EncK_P,SignK_P,LID_M,Chall_C,Y_resp,XID,Chall_M,MResp,M_RESP,YRESP,Dummy_Yds,Sigma,Dummy_OI,Dummy_HPI,Dummy_DualSig,Dummy_Paymentpart,Dummy_AuthReq,Dummy_K2,K3,SID,Yds,HPI,DualSig,Paymentpart,K2) :=
 state_merchant(M,C,P,P_pub,Pa_M,Pb_M,Pg,Xa_M,Xb_M,ID_C,ID_M,ID_PG,PurchAmt,OrderDesc,Minus,Union,Pred,H0,H1,H2,EncK_C,SignK_C,EncK_M,SignK_M,EncK_P,SignK_P,1,LID_M,Chall_C,Y_resp,XID,Chall_M,MResp,M_RESP,YRESP,Dummy_Yds,Sigma,Dummy_OI,Dummy_HPI,Dummy_DualSig,Dummy_Paymentpart,Dummy_AuthReq,Dummy_K2,K3,SID).
 iknows(pair(M_RESP,pair(apply(h,pair(OrderDesc,PurchAmt)),pair(DualSig,pair(Yds,pair(HPI,Paymentpart))))))
=[exists K2]=>
 state_merchant(M,C,P,P_pub,Pa_M,Pb_M,Pg,Xa_M,Xb_M,ID_C,ID_M,ID_PG,PurchAmt,OrderDesc,Minus,Union,Pred,H0,H1,H2,EncK_C,SignK_C,EncK_M,SignK_M,EncK_P,SignK_P,2,LID_M,Chall_C,Y_resp,XID,Chall_M,MResp,M_RESP,YRESP,Yds,Sigma,pair(M_RESP,apply(h,pair(OrderDesc,PurchAmt))),HPI,DualSig,Paymentpart,pair(Dummy_Paymentpart,pair(MResp,pair(DualSig,apply(h,Dummy_OI)))),K2,K3,SID).
 iknows(pair(scrypt(K2,Dummy_AuthReq),crypt(EncK_P,Dummy_K2))).
 witness(M,C,deal,pair(Dummy_OI,Dummy_HPI)).
 witness(M,P,deal,pair(Dummy_OI,Dummy_HPI))

step step_5 (M,C,P,P_pub,Pa_M,Pb_M,Pg,Xa_M,Xb_M,ID_C,ID_M,ID_PG,PurchAmt,OrderDesc,Minus,Union,Pred,H0,H1,H2,EncK_C,SignK_C,EncK_M,SignK_M,EncK_P,SignK_P,LID_M,Chall_C,Y_resp,XID,Chall_M,Dummy_MResp,M_RESP,YRESP,Yds,Sigma,OI,HPI,DualSig,Paymentpart,AuthReq,K2,Dummy_K3,SID,MResp,K3) :=
 state_merchant(M,C,P,P_pub,Pa_M,Pb_M,Pg,Xa_M,Xb_M,ID_C,ID_M,ID_PG,PurchAmt,OrderDesc,Minus,Union,Pred,H0,H1,H2,EncK_C,SignK_C,EncK_M,SignK_M,EncK_P,SignK_P,2,LID_M,Chall_C,Y_resp,XID,Chall_M,Dummy_MResp,M_RESP,YRESP,Yds,Sigma,OI,HPI,DualSig,Paymentpart,AuthReq,K2,Dummy_K3,SID).
 iknows(pair(scrypt(K3,MResp),crypt(EncK_M,K3)))
 =>
 state_merchant(M,C,P,P_pub,Pa_M,Pb_M,Pg,Xa_M,Xb_M,ID_C,ID_M,ID_PG,PurchAmt,OrderDesc,Minus,Union,Pred,H0,H1,H2,EncK_C,SignK_C,EncK_M,SignK_M,EncK_P,SignK_P,3,LID_M,Chall_C,Y_resp,XID,Chall_M,MResp,M_RESP,YRESP,Yds,Sigma,OI,HPI,DualSig,Paymentpart,AuthReq,K2,K3,SID).
 iknows(pair(LID_M,Dummy_MResp)).
 request(M,C,deal,pair(OI,HPI),SID).
 request(M,P,deal,pair(OI,HPI),SID)

step step_6 (P,C,M,AI,EncK_C,SignK_C,EncK_M,SignK_M,EncK_P,SignK_P,XID,Chall_M,LID_M,Chall_C,Dummy_MResp,Dummy_AuthReq,Dummy_OI,Dummy_PI,Dummy_DualSig,Dummy_K1,Dummy_K2,Dummy_K3,PurchAmt,OrderDesc,SID,MResp,PaymentPart,OI,PI,DualSig,K1,K2,K3) :=
 state_paymentgateway(P,C,M,AI,EncK_C,SignK_C,EncK_M,SignK_M,EncK_P,SignK_P,0,XID,Chall_M,LID_M,Chall_C,Dummy_MResp,Dummy_AuthReq,pair(scrypt(K1,PI),crypt(EncK_P,K1)),Dummy_OI,Dummy_PI,Dummy_DualSig,Dummy_K1,Dummy_K2,Dummy_K3,PurchAmt,OrderDesc,SID).
 iknows(pair(scrypt(K2,pair(PaymentPart,pair(MResp,pair(DualSig,apply(h,OI))))),crypt(EncK_P,K2)))
=[exists K3]=>
 state_paymentgateway(P,C,M,AI,EncK_C,SignK_C,EncK_M,SignK_M,EncK_P,SignK_P,1,XID,Chall_M,LID_M,Chall_C,MResp,pair(PaymentPart,pair(MResp,pair(DualSig,apply(h,OI)))),PaymentPart,OI,PI,DualSig,K1,K2,K3,PurchAmt,OrderDesc,SID).
 iknows(pair(scrypt(K3,Dummy_MResp),crypt(EncK_M,K3))).
 wrequest(P,C,deal,pair(OI,PI),SID).
 wrequest(P,M,deal,pair(OI,apply(h,PI)),SID).
 witness(P,C,deal,pair(OI,PI)).
 witness(P,M,deal,pair(OI,apply(h,PI)))


section properties:

property authentication_on_deal (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,deal,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,deal,MGoal))
     /\ ((request(A1Goal,A2Goal,deal,MGoal,SID1)
           /\ request(A1Goal,A2Goal,deal,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property weak_authentication_on_deal (A1Goal,A2Goal,MGoal,SID) :=
 [] ((wrequest(A1Goal,A2Goal,deal,MGoal,SID)
      /\ ~ equal(A2Goal,i))
     => witness(A2Goal,A1Goal,deal,MGoal))

property secrecy_of_order (MGoal,ASGoal) :=
 [] ((secret(MGoal,order,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_payment (MGoal,ASGoal) :=
 [] ((secret(MGoal,payment,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))


section attack_states:

attack_state authentication_on_deal (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,deal,MGoal,SID) &
 not(witness(A2Goal,A1Goal,deal,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_deal (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,deal,MGoal,SID1).
 request(A1Goal,A2Goal,deal,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state weak_authentication_on_deal (A1Goal,A2Goal,MGoal,SID) :=
 wrequest(A1Goal,A2Goal,deal,MGoal,SID) &
 not(witness(A2Goal,A1Goal,deal,MGoal)) &
 not(equal(A2Goal,i))

attack_state secrecy_of_order (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,order,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_payment (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,payment,ASGoal) &
 not(contains(i,ASGoal))

