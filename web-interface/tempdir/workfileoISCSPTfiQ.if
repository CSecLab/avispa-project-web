%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfileoISCSPTfiQ

section signature:

state_receiver: agent * agent * symmetric_key * symmetric_key * hash_func * hash_func * hash_func * hash_func * public_key * public_key * nat * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * set(text) * set(agent) * nat -> fact
state_sender: agent * agent * symmetric_key * symmetric_key * hash_func * hash_func * hash_func * hash_func * public_key * public_key * nat * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * set(text) * set(agent) * nat -> fact


section types:

Set_84, Dummy_Set_84, Dummy_Set_46, Set_46: set(text)
sender_va, receiver_vb, subs1, subs2: protocol_id
set_176, set_175, set_173, set_172, set_161, set_160, set_138, set_137: set
Set_85, Dummy_Set_85, Dummy_Set_47, Set_47, ASGoal: set(agent)
start, MGoal: message
7, 6, State, 4, SID, 1, 0, Dummy_State, 3, SID2, SID1: nat
G, IDa, IDb, Xa, Va, Xb, Vb, R, K1, K2, Ts, C, W, M, Q, S1, Dummy_R1, E, Dummy_E1, Z, Dummy_Vb, E1, Dummy_Xb, R1, Na, Dummy_Na, Dummy_Z, Dummy_E, Dummy_S1, Dummy_Q, Dummy_W, Dummy_C, Dummy_Ts, Dummy_K2, Dummy_K1, Dummy_R, Dummy_Va, Dummy_Xa, dummy_nonce, g, ida, idb, xa, xb, r, k1, k2, ts, c, w, m, q, s1, e, z, e1, r1: text
Dummy_Pb, Pa, Pb, Dummy_Pa, pa, pb: public_key
Add, Sub, Mul, H, add, sub, mul, h: hash_func
Dummy_Yba, Yba, Yab, Dummy_Yab, yba, yab: symmetric_key
A, B, A2Goal, A1Goal, a, i, b: agent


section inits:

initial_state init1 := 
 iknows(start).
 iknows(a).
 iknows(b).
 iknows(add).
 iknows(sub).
 iknows(mul).
 iknows(h).
 iknows(pa).
 iknows(pb).
 iknows(i).
 state_sender(a,b,yba,yab,add,sub,mul,h,pa,pb,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_137,set_138,3).
 state_receiver(b,a,yba,yab,add,sub,mul,h,pa,pb,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_160,set_161,4).
 state_sender(a,b,yba,yab,add,sub,mul,h,pa,pb,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_172,set_173,6).
 state_receiver(b,a,yba,yab,add,sub,mul,h,pa,pb,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_175,set_176,7)


section rules:

step step_0 (A,B,Yba,Dummy_Yab,Add,Sub,Mul,H,Dummy_Pa,Pb,G,IDa,IDb,Dummy_Xa,Dummy_Va,Xb,Vb,Dummy_R,Dummy_K1,Dummy_K2,Dummy_Ts,Dummy_C,Dummy_W,M,Dummy_Q,Dummy_S1,Dummy_E,Dummy_Z,E1,R1,Dummy_Na,Dummy_Set_46,Dummy_Set_47,SID,Xa,Ts,W,Na) :=
 state_sender(A,B,Yba,Dummy_Yab,Add,Sub,Mul,H,Dummy_Pa,Pb,0,G,IDa,IDb,Dummy_Xa,Dummy_Va,Xb,Vb,Dummy_R,Dummy_K1,Dummy_K2,Dummy_Ts,Dummy_C,Dummy_W,M,Dummy_Q,Dummy_S1,Dummy_E,Dummy_Z,E1,R1,Dummy_Na,Dummy_Set_46,Dummy_Set_47,SID).
 iknows(start)
=[exists Ts,W,Na,Xa]=>
 state_sender(A,B,Yba,exp(Pb,Dummy_Va),Add,Sub,Mul,H,exp(G,Dummy_Va),Pb,1,G,IDa,IDb,Xa,xor(IDa,apply(H,Dummy_Xa)),Xb,Vb,apply(Mul,pair(exp(G,Dummy_E),Dummy_C)),apply(H,exp(G,Dummy_Na)),apply(Mul,pair(Dummy_K1,Dummy_Yab)),Ts,scrypt(Dummy_K2,M),W,M,apply(Sub,pair(Dummy_W,Dummy_S1)),apply(Mul,pair(Dummy_R,Dummy_Xa)),apply(Add,pair(Dummy_W,Dummy_Ts)),apply(Sub,pair(Dummy_Na,apply(Mul,pair(Dummy_Xa,Dummy_R)))),E1,R1,Na,Dummy_Set_46,Dummy_Set_47,SID).
 iknows(scrypt(Dummy_Yab,pair(Dummy_Z,pair(Dummy_Q,pair(Dummy_C,pair(Dummy_R,Dummy_Ts)))))).
 secret(Dummy_Set_46,subs1,Dummy_Set_47).
 contains(Dummy_Va,Dummy_Set_46).
 contains(A,Dummy_Set_47).
 contains(B,Dummy_Set_47)

step step_1 (B,A,Dummy_Yba,Yab,Add,Sub,Mul,H,Pa,Dummy_Pb,G,IDa,IDb,Xa,Va,Dummy_Xb,Dummy_Vb,R,Dummy_K1,Dummy_K2,Ts,C,W,M,Q,S1,E,Z,Dummy_E1,Dummy_R1,Na,Dummy_Set_84,Dummy_Set_85,SID,Xb) :=
 state_receiver(B,A,Dummy_Yba,Yab,Add,Sub,Mul,H,Pa,Dummy_Pb,0,G,IDa,IDb,Xa,Va,Dummy_Xb,Dummy_Vb,R,Dummy_K1,Dummy_K2,Ts,C,W,M,Q,S1,E,Z,Dummy_E1,Dummy_R1,Na,Dummy_Set_84,Dummy_Set_85,SID).
 iknows(scrypt(Yab,pair(Z,pair(Q,pair(C,pair(R,Ts))))))
=[exists Xb]=>
 state_receiver(B,A,exp(Pa,Dummy_Vb),Yab,Add,Sub,Mul,H,Pa,exp(G,Dummy_Vb),1,G,IDa,IDb,Xa,Va,Xb,xor(IDb,apply(H,Dummy_Xb)),R,apply(H,pair(apply(Mul,exp(G,Z)),exp(Pa,apply(Mul,pair(C,pair(apply(Mul,exp(Pa,R1)),exp(G,apply(Add,pair(Q,Ts))))))))),apply(Mul,pair(apply(H,pair(apply(Mul,exp(G,Z)),exp(Pa,apply(Mul,pair(C,pair(apply(Mul,exp(Pa,R1)),exp(G,apply(Add,pair(Q,Ts))))))))),Dummy_Yba)),Ts,C,W,M,Q,S1,E,Z,apply(Add,pair(Q,Ts)),apply(Mul,pair(C,pair(apply(Mul,exp(Pa,R1)),exp(G,apply(Add,pair(Q,Ts)))))),Na,Dummy_Set_84,Dummy_Set_85,SID).
 secret(Dummy_Set_84,subs2,Dummy_Set_85).
 contains(Dummy_Vb,Dummy_Set_84).
 contains(B,Dummy_Set_85).
 contains(A,Dummy_Set_85)


section properties:

property secrecy_of_subs1 (MGoal,ASGoal) :=
 [] ((secret(MGoal,subs1,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_subs2 (MGoal,ASGoal) :=
 [] ((secret(MGoal,subs2,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property authentication_on_sender_va (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,sender_va,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,sender_va,MGoal))
     /\ ((request(A1Goal,A2Goal,sender_va,MGoal,SID1)
           /\ request(A1Goal,A2Goal,sender_va,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_receiver_vb (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,receiver_vb,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,receiver_vb,MGoal))
     /\ ((request(A1Goal,A2Goal,receiver_vb,MGoal,SID1)
           /\ request(A1Goal,A2Goal,receiver_vb,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state secrecy_of_subs1 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,subs1,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_subs2 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,subs2,ASGoal) &
 not(contains(i,ASGoal))

attack_state authentication_on_sender_va (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,sender_va,MGoal,SID) &
 not(witness(A2Goal,A1Goal,sender_va,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_sender_va (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,sender_va,MGoal,SID1).
 request(A1Goal,A2Goal,sender_va,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_receiver_vb (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,receiver_vb,MGoal,SID) &
 not(witness(A2Goal,A1Goal,receiver_vb,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_receiver_vb (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,receiver_vb,MGoal,SID1).
 request(A1Goal,A2Goal,receiver_vb,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

