%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfilevmTq0o

section signature:

state_paymentGateway: agent * agent * agent * agent * public_key * public_key * public_key * public_key * hash_func * symmetric_key * nat * nat * nat * nat * nat * nat * nat * nat * text * text * text * text * text * symmetric_key * symmetric_key * symmetric_key * symmetric_key * symmetric_key * symmetric_key * set(agent) * nat -> fact
state_merchant: agent * agent * agent * agent * public_key * public_key * public_key * public_key * hash_func * symmetric_key * nat * nat * nat * nat * nat * nat * nat * text * text * text * text * text * text * text * symmetric_key * symmetric_key * symmetric_key * symmetric_key * symmetric_key * symmetric_key * nat -> fact
state_bank: agent * agent * agent * agent * public_key * public_key * public_key * public_key * hash_func * symmetric_key * symmetric_key * nat * nat * nat * nat * nat * nat * nat * text * text * text * text * text * symmetric_key * symmetric_key * text * symmetric_key * symmetric_key * symmetric_key * set(agent) * nat -> fact
state_client: agent * agent * agent * agent * public_key * public_key * public_key * public_key * hash_func * symmetric_key * nat * nat * nat * nat * nat * nat * nat * nat * text * text * text * text * text * text * symmetric_key * symmetric_key * symmetric_key * symmetric_key * symmetric_key * set(agent) * set(agent) * set(agent) * set(agent) * nat -> fact


section types:

MGoal, start: message
pin, purchase_order1, c_m_nonce, purchase_order, authent_request, sessioncb, sessioncp, sessioncm, otp: protocol_id
ASGoal, Set_163, Set_91, Set_58, Set_52, Set_50, Set_47, Dummy_Set_163, Dummy_Set_91, Dummy_Set_58, Dummy_Set_52, Dummy_Set_50, Dummy_Set_47: set(agent)
H, h: hash_func
sign_c, sign_m, sign_p, sign_b, sign_i, SignK_C, SignK_M, SignK_P, SignK_B: public_key
masterkeycb, masterkeymb, SessionKeyCM, SessionKeyCB, SessionKeyCP, SessionKeyMP, PIN, OTP, MasterKeyCB, MasterKeyMB, Dummy_SessionKeyMP, Dummy_OTP, Dummy_PIN, Dummy_SessionKeyCP, Dummy_SessionKeyCB, Dummy_SessionKeyCM, dummy_sk: symmetric_key
DigMoney, Password, UserID, ItemInfo, Price, N1, Conform_Msg, Dummy_DigMoney, Dummy_N1, dummy_nonce: text
SID2, SID1, SID, TOKENID, TICKETID2, TICKETID, Nonce, ItemID, ServID, TransID, S, 11, 9, 7, 6, 5, 4, 3, 2, 1, 0, Dummy_TICKETID, Dummy_TOKENID, Dummy_ItemID, Dummy_ServID, Dummy_TransID, Dummy_S, dummy_nat: nat
A2Goal, A1Goal, c, m, p, b, C, M, P, B, i: agent
set_236, set_229, set_206, set_205, set_204, set_203: set


section inits:

initial_state init1 := 
 iknows(start).
 iknows(c).
 iknows(m).
 iknows(p).
 iknows(b).
 iknows(sign_c).
 iknows(sign_m).
 iknows(sign_p).
 iknows(sign_b).
 iknows(sign_i).
 iknows(inv(sign_i)).
 iknows(i).
 state_client(c,m,p,b,sign_c,sign_m,sign_p,sign_b,h,masterkeycb,0,dummy_nat,dummy_nat,dummy_nat,dummy_nat,dummy_nat,dummy_nat,dummy_nat,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_sk,dummy_sk,dummy_sk,dummy_sk,dummy_sk,set_203,set_204,set_205,set_206,3).
 state_bank(b,c,m,p,sign_c,sign_m,sign_p,sign_b,h,masterkeycb,masterkeymb,2,dummy_nat,dummy_nat,dummy_nat,dummy_nat,dummy_nat,dummy_nat,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_sk,dummy_sk,dummy_nonce,dummy_sk,dummy_sk,dummy_sk,set_229,4).
 state_merchant(m,c,p,b,sign_c,sign_m,sign_p,sign_b,h,masterkeymb,1,dummy_nat,dummy_nat,dummy_nat,dummy_nat,dummy_nat,dummy_nat,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_sk,dummy_sk,dummy_sk,dummy_sk,dummy_sk,dummy_sk,5).
 state_paymentGateway(p,c,m,b,sign_c,sign_m,sign_p,sign_b,h,masterkeycb,3,dummy_nat,dummy_nat,dummy_nat,dummy_nat,dummy_nat,dummy_nat,dummy_nat,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_sk,dummy_sk,dummy_sk,dummy_sk,dummy_sk,dummy_sk,set_236,6)


section rules:

step step_0 (C,M,P,B,SignK_C,SignK_M,SignK_P,SignK_B,H,MasterKeyCB,Dummy_TransID,Dummy_ServID,Dummy_ItemID,Nonce,TICKETID,TICKETID2,TOKENID,Price,ItemInfo,UserID,Password,DigMoney,Dummy_N1,PIN,OTP,Dummy_SessionKeyCM,SessionKeyCB,SessionKeyCP,Dummy_Set_47,Set_50,Set_52,Set_58,SID,TransID,ServID,ItemID,N1,SessionKeyCM) :=
 state_client(C,M,P,B,SignK_C,SignK_M,SignK_P,SignK_B,H,MasterKeyCB,0,Dummy_TransID,Dummy_ServID,Dummy_ItemID,Nonce,TICKETID,TICKETID2,TOKENID,Price,ItemInfo,UserID,Password,DigMoney,Dummy_N1,PIN,OTP,Dummy_SessionKeyCM,SessionKeyCB,SessionKeyCP,Dummy_Set_47,Set_50,Set_52,Set_58,SID).
 iknows(start)
=[exists SessionKeyCM,N1,ItemID,ServID,TransID]=>
 state_client(C,M,P,B,SignK_C,SignK_M,SignK_P,SignK_B,H,MasterKeyCB,1,TransID,ServID,ItemID,Nonce,TICKETID,TICKETID2,TOKENID,Price,ItemInfo,UserID,Password,DigMoney,N1,PIN,OTP,SessionKeyCM,SessionKeyCB,SessionKeyCP,Dummy_Set_47,Set_50,Set_52,Set_58,SID).
 iknows(crypt(SignK_M,pair(TransID,pair(ServID,pair(ItemID,pair(N1,SessionKeyCM)))))).
 witness(C,M,c_m_nonce,N1).
 secret(SessionKeyCM,purchase_order,Dummy_Set_47).
 contains(C,Dummy_Set_47).
 contains(M,Dummy_Set_47)

step step_1 (C,M,P,B,SignK_C,SignK_M,SignK_P,SignK_B,H,MasterKeyCB,Dummy_TransID,ServID,ItemID,Nonce,TICKETID,TICKETID2,Dummy_TOKENID,Price,ItemInfo,UserID,Password,DigMoney,N1,PIN,OTP,Dummy_SessionKeyCM,Dummy_SessionKeyCB,SessionKeyCP,Set_47,Dummy_Set_50,Set_52,Set_58,SID,TransID,TOKENID,SessionKeyCM,SessionKeyCB) :=
 state_client(C,M,P,B,SignK_C,SignK_M,SignK_P,SignK_B,H,MasterKeyCB,1,Dummy_TransID,ServID,ItemID,Nonce,TICKETID,TICKETID2,Dummy_TOKENID,Price,ItemInfo,UserID,Password,DigMoney,N1,PIN,OTP,Dummy_SessionKeyCM,Dummy_SessionKeyCB,SessionKeyCP,Set_47,Dummy_Set_50,Set_52,Set_58,SID).
 iknows(scrypt(SessionKeyCM,pair(TransID,pair(pair(TOKENID,pair(ItemInfo,crypt(SignK_B,Price))),crypt(inv(SignK_M),apply(H,pair(TransID,pair(Price,ItemInfo))))))))
=[exists SessionKeyCB]=>
 state_client(C,M,P,B,SignK_C,SignK_M,SignK_P,SignK_B,H,MasterKeyCB,2,TransID,ServID,ItemID,Nonce,TICKETID,TICKETID2,TOKENID,Price,ItemInfo,UserID,Password,DigMoney,N1,PIN,OTP,SessionKeyCM,SessionKeyCB,SessionKeyCP,Set_47,Dummy_Set_50,Set_52,Set_58,SID).
 iknows(scrypt(MasterKeyCB,pair(UserID,pair(Password,pair(crypt(SignK_B,Price),SessionKeyCB))))).
 secret(SessionKeyCB,sessioncb,Dummy_Set_50).
 contains(C,Dummy_Set_50).
 contains(B,Dummy_Set_50)

step step_2 (C,M,P,B,SignK_C,SignK_M,SignK_P,SignK_B,H,MasterKeyCB,TransID,ServID,ItemID,Nonce,Dummy_TICKETID,TICKETID2,TOKENID,Price,ItemInfo,UserID,Password,Dummy_DigMoney,N1,PIN,OTP,SessionKeyCM,Dummy_SessionKeyCB,Dummy_SessionKeyCP,Set_47,Set_50,Dummy_Set_52,Set_58,SID,TICKETID,DigMoney,SessionKeyCB,SessionKeyCP) :=
 state_client(C,M,P,B,SignK_C,SignK_M,SignK_P,SignK_B,H,MasterKeyCB,2,TransID,ServID,ItemID,Nonce,Dummy_TICKETID,TICKETID2,TOKENID,Price,ItemInfo,UserID,Password,Dummy_DigMoney,N1,PIN,OTP,SessionKeyCM,Dummy_SessionKeyCB,Dummy_SessionKeyCP,Set_47,Set_50,Dummy_Set_52,Set_58,SID).
 iknows(scrypt(SessionKeyCB,pair(TICKETID,crypt(inv(SignK_B),DigMoney))))
=[exists SessionKeyCP]=>
 state_client(C,M,P,B,SignK_C,SignK_M,SignK_P,SignK_B,H,MasterKeyCB,3,TransID,ServID,ItemID,Nonce,TICKETID,TICKETID2,TOKENID,Price,ItemInfo,UserID,Password,DigMoney,N1,PIN,OTP,SessionKeyCM,SessionKeyCB,SessionKeyCP,Set_47,Set_50,Dummy_Set_52,Set_58,SID).
 iknows(crypt(SignK_P,pair(TICKETID,pair(crypt(inv(SignK_B),DigMoney),SessionKeyCP)))).
 secret(Dummy_SessionKeyCP,sessioncp,Dummy_Set_52).
 contains(C,Dummy_Set_52).
 contains(P,Dummy_Set_52)

step step_3 (C,M,P,B,SignK_C,SignK_M,SignK_P,SignK_B,H,MasterKeyCB,TransID,ServID,ItemID,Nonce,Dummy_TICKETID,TICKETID2,TOKENID,Price,ItemInfo,UserID,Password,Dummy_DigMoney,N1,Dummy_PIN,Dummy_OTP,SessionKeyCM,SessionKeyCB,Dummy_SessionKeyCP,Set_47,Set_50,Set_52,Set_58,SID,TICKETID,DigMoney,PIN,OTP,SessionKeyCP) :=
 state_client(C,M,P,B,SignK_C,SignK_M,SignK_P,SignK_B,H,MasterKeyCB,3,TransID,ServID,ItemID,Nonce,Dummy_TICKETID,TICKETID2,TOKENID,Price,ItemInfo,UserID,Password,Dummy_DigMoney,N1,Dummy_PIN,Dummy_OTP,SessionKeyCM,SessionKeyCB,Dummy_SessionKeyCP,Set_47,Set_50,Set_52,Set_58,SID).
 iknows(scrypt(SessionKeyCP,pair(TICKETID,pair(scrypt(OTP,scrypt(PIN,crypt(inv(SignK_B),DigMoney))),crypt(SignK_C,crypt(inv(SignK_P),PIN))))))
 =>
 state_client(C,M,P,B,SignK_C,SignK_M,SignK_P,SignK_B,H,MasterKeyCB,4,TransID,ServID,ItemID,Nonce,TICKETID,TICKETID2,TOKENID,Price,ItemInfo,UserID,Password,DigMoney,N1,PIN,OTP,SessionKeyCM,SessionKeyCB,SessionKeyCP,Set_47,Set_50,Set_52,Set_58,SID).
 iknows(scrypt(SessionKeyCM,pair(pair(TOKENID,pair(ItemInfo,Price)),pair(pair(TICKETID,scrypt(OTP,scrypt(PIN,crypt(inv(SignK_B),DigMoney)))),apply(h,Dummy_PIN)))))

step step_4 (C,M,P,B,SignK_C,SignK_M,SignK_P,SignK_B,H,MasterKeyCB,TransID,ServID,ItemID,Nonce,TICKETID,TICKETID2,TOKENID,Price,ItemInfo,UserID,Password,DigMoney,N1,PIN,OTP,SessionKeyCM,SessionKeyCB,SessionKeyCP,Set_47,Set_50,Set_52,Dummy_Set_58,SID) :=
 state_client(C,M,P,B,SignK_C,SignK_M,SignK_P,SignK_B,H,MasterKeyCB,4,TransID,ServID,ItemID,Nonce,TICKETID,TICKETID2,TOKENID,Price,ItemInfo,UserID,Password,DigMoney,N1,PIN,OTP,SessionKeyCM,SessionKeyCB,SessionKeyCP,Set_47,Set_50,Set_52,Dummy_Set_58,SID)
 =>
 state_client(C,M,P,B,SignK_C,SignK_M,SignK_P,SignK_B,H,MasterKeyCB,5,TransID,ServID,ItemID,Nonce,TICKETID,TICKETID2,TOKENID,Price,ItemInfo,UserID,Password,DigMoney,N1,PIN,OTP,SessionKeyCM,SessionKeyCB,SessionKeyCP,Set_47,Set_50,Set_52,Dummy_Set_58,SID).
 iknows(scrypt(SessionKeyCM,crypt(inv(SignK_C),PIN))).
 secret(OTP,otp,Dummy_Set_58).
 contains(C,Dummy_Set_58).
 contains(P,Dummy_Set_58)

step step_5 (B,C,M,P,SignK_C,SignK_M,SignK_P,SignK_B,H,MasterKeyCB,MasterKeyMB,TransID,ServID,ItemID,Nonce,Dummy_TICKETID,TOKENID,Price,ItemInfo,UserID,Password,Dummy_DigMoney,PIN,OTP,Conform_Msg,SessionKeyCM,Dummy_SessionKeyCB,SessionKeyCP,Dummy_Set_91,SID,TICKETID,DigMoney,SessionKeyCB) :=
 state_bank(B,C,M,P,SignK_C,SignK_M,SignK_P,SignK_B,H,MasterKeyCB,MasterKeyMB,2,TransID,ServID,ItemID,Nonce,Dummy_TICKETID,TOKENID,Price,ItemInfo,UserID,Password,Dummy_DigMoney,PIN,OTP,Conform_Msg,SessionKeyCM,Dummy_SessionKeyCB,SessionKeyCP,Dummy_Set_91,SID).
 iknows(scrypt(MasterKeyCB,pair(UserID,pair(Password,pair(crypt(SignK_B,Price),SessionKeyCB)))))
=[exists DigMoney,TICKETID]=>
 state_bank(B,C,M,P,SignK_C,SignK_M,SignK_P,SignK_B,H,MasterKeyCB,MasterKeyMB,4,TransID,ServID,ItemID,Nonce,TICKETID,TOKENID,Price,ItemInfo,UserID,Password,DigMoney,PIN,OTP,Conform_Msg,SessionKeyCM,SessionKeyCB,SessionKeyCP,Dummy_Set_91,SID).
 iknows(scrypt(SessionKeyCB,pair(TICKETID,crypt(inv(SignK_B),DigMoney)))).
 secret(SessionKeyCB,sessioncb,Dummy_Set_91).
 contains(B,Dummy_Set_91).
 contains(C,Dummy_Set_91)

step step_6 (B,C,M,P,SignK_C,SignK_M,SignK_P,SignK_B,H,MasterKeyCB,MasterKeyMB,TransID,ServID,ItemID,Nonce,TICKETID,TOKENID,Price,ItemInfo,UserID,Password,DigMoney,PIN,OTP,Conform_Msg,SessionKeyCM,SessionKeyCB,SessionKeyCP,Set_91,SID) :=
 state_bank(B,C,M,P,SignK_C,SignK_M,SignK_P,SignK_B,H,MasterKeyCB,MasterKeyMB,4,TransID,ServID,ItemID,Nonce,TICKETID,TOKENID,Price,ItemInfo,UserID,Password,DigMoney,PIN,OTP,Conform_Msg,SessionKeyCM,SessionKeyCB,SessionKeyCP,Set_91,SID).
 iknows(scrypt(MasterKeyMB,pair(TICKETID,crypt(inv(SignK_B),DigMoney))))
 =>
 state_bank(B,C,M,P,SignK_C,SignK_M,SignK_P,SignK_B,H,MasterKeyCB,MasterKeyMB,6,TransID,ServID,ItemID,Nonce,TICKETID,TOKENID,Price,ItemInfo,UserID,Password,DigMoney,PIN,OTP,Conform_Msg,SessionKeyCM,SessionKeyCB,SessionKeyCP,Set_91,SID).
 iknows(crypt(SignK_M,pair(TICKETID,Conform_Msg)))

step step_7 (M,C,P,B,SignK_C,SignK_M,SignK_P,SignK_B,H,MasterKeyMB,Dummy_TransID,Dummy_ServID,Dummy_ItemID,Nonce,TICKETID,Dummy_TOKENID,Price,ItemInfo,UserID,Password,DigMoney,Conform_Msg,Dummy_N1,PIN,OTP,Dummy_SessionKeyCM,SessionKeyCB,SessionKeyCP,SessionKeyMP,SID,TransID,ServID,ItemID,TOKENID,N1,SessionKeyCM) :=
 state_merchant(M,C,P,B,SignK_C,SignK_M,SignK_P,SignK_B,H,MasterKeyMB,1,Dummy_TransID,Dummy_ServID,Dummy_ItemID,Nonce,TICKETID,Dummy_TOKENID,Price,ItemInfo,UserID,Password,DigMoney,Conform_Msg,Dummy_N1,PIN,OTP,Dummy_SessionKeyCM,SessionKeyCB,SessionKeyCP,SessionKeyMP,SID).
 iknows(crypt(SignK_M,pair(TransID,pair(ServID,pair(ItemID,pair(N1,SessionKeyCM))))))
=[exists TOKENID]=>
 state_merchant(M,C,P,B,SignK_C,SignK_M,SignK_P,SignK_B,H,MasterKeyMB,3,TransID,ServID,ItemID,Nonce,TICKETID,TOKENID,Price,ItemInfo,UserID,Password,DigMoney,Conform_Msg,N1,PIN,OTP,SessionKeyCM,SessionKeyCB,SessionKeyCP,SessionKeyMP,SID).
 iknows(scrypt(SessionKeyCM,pair(TransID,pair(pair(TOKENID,pair(ItemInfo,crypt(SignK_B,Price))),crypt(inv(SignK_M),apply(h,pair(TransID,pair(Price,ItemInfo))))))))

step step_8 (M,C,P,B,SignK_C,SignK_M,SignK_P,SignK_B,H,MasterKeyMB,TransID,ServID,ItemID,Nonce,Dummy_TICKETID,TOKENID,Price,ItemInfo,UserID,Password,Dummy_DigMoney,Conform_Msg,N1,Dummy_PIN,Dummy_OTP,SessionKeyCM,SessionKeyCB,SessionKeyCP,Dummy_SessionKeyMP,SID,TICKETID,DigMoney,PIN,OTP,SessionKeyMP) :=
 state_merchant(M,C,P,B,SignK_C,SignK_M,SignK_P,SignK_B,H,MasterKeyMB,3,TransID,ServID,ItemID,Nonce,Dummy_TICKETID,TOKENID,Price,ItemInfo,UserID,Password,Dummy_DigMoney,Conform_Msg,N1,Dummy_PIN,Dummy_OTP,SessionKeyCM,SessionKeyCB,SessionKeyCP,Dummy_SessionKeyMP,SID).
 iknows(scrypt(SessionKeyCM,pair(pair(TOKENID,pair(ItemInfo,Price)),pair(pair(TICKETID,scrypt(OTP,scrypt(PIN,crypt(inv(SignK_B),DigMoney)))),apply(h,Dummy_PIN)))))
=[exists SessionKeyMP]=>
 state_merchant(M,C,P,B,SignK_C,SignK_M,SignK_P,SignK_B,H,MasterKeyMB,5,TransID,ServID,ItemID,Nonce,TICKETID,TOKENID,Price,ItemInfo,UserID,Password,DigMoney,Conform_Msg,N1,PIN,OTP,SessionKeyCM,SessionKeyCB,SessionKeyCP,SessionKeyMP,SID).
 iknows(crypt(SignK_P,pair(Dummy_TICKETID,SessionKeyMP)))

step step_9 (M,C,P,B,SignK_C,SignK_M,SignK_P,SignK_B,H,MasterKeyMB,TransID,ServID,ItemID,Nonce,TICKETID,TOKENID,Price,ItemInfo,UserID,Password,DigMoney,Conform_Msg,N1,PIN,OTP,SessionKeyCM,SessionKeyCB,SessionKeyCP,Dummy_SessionKeyMP,SID,SessionKeyMP) :=
 state_merchant(M,C,P,B,SignK_C,SignK_M,SignK_P,SignK_B,H,MasterKeyMB,5,TransID,ServID,ItemID,Nonce,TICKETID,TOKENID,Price,ItemInfo,UserID,Password,DigMoney,Conform_Msg,N1,PIN,OTP,SessionKeyCM,SessionKeyCB,SessionKeyCP,Dummy_SessionKeyMP,SID).
 iknows(scrypt(SessionKeyMP,pair(TICKETID,crypt(inv(SignK_P),OTP))))
 =>
 state_merchant(M,C,P,B,SignK_C,SignK_M,SignK_P,SignK_B,H,MasterKeyMB,7,TransID,ServID,ItemID,Nonce,TICKETID,TOKENID,Price,ItemInfo,UserID,Password,DigMoney,Conform_Msg,N1,PIN,OTP,SessionKeyCM,SessionKeyCB,SessionKeyCP,SessionKeyMP,SID)

step step_10 (M,C,P,B,SignK_C,SignK_M,SignK_P,SignK_B,H,MasterKeyMB,TransID,ServID,ItemID,Nonce,Dummy_TICKETID,TOKENID,Price,ItemInfo,UserID,Password,DigMoney,Conform_Msg,N1,PIN,OTP,SessionKeyCM,SessionKeyCB,SessionKeyCP,SessionKeyMP,SID,TICKETID) :=
 state_merchant(M,C,P,B,SignK_C,SignK_M,SignK_P,SignK_B,H,MasterKeyMB,7,TransID,ServID,ItemID,Nonce,Dummy_TICKETID,TOKENID,Price,ItemInfo,UserID,Password,DigMoney,Conform_Msg,N1,PIN,OTP,SessionKeyCM,SessionKeyCB,SessionKeyCP,SessionKeyMP,SID).
 iknows(scrypt(SessionKeyCM,pair(TICKETID,crypt(inv(SignK_C),PIN))))
 =>
 state_merchant(M,C,P,B,SignK_C,SignK_M,SignK_P,SignK_B,H,MasterKeyMB,9,TransID,ServID,ItemID,Nonce,TICKETID,TOKENID,Price,ItemInfo,UserID,Password,DigMoney,Conform_Msg,N1,PIN,OTP,SessionKeyCM,SessionKeyCB,SessionKeyCP,SessionKeyMP,SID).
 iknows(scrypt(MasterKeyMB,pair(Dummy_TICKETID,crypt(inv(SignK_B),DigMoney))))

step step_11 (M,C,P,B,SignK_C,SignK_M,SignK_P,SignK_B,H,MasterKeyMB,TransID,ServID,ItemID,Nonce,TICKETID,TOKENID,Price,ItemInfo,UserID,Password,DigMoney,Conform_Msg,N1,PIN,OTP,SessionKeyCM,SessionKeyCB,SessionKeyCP,SessionKeyMP,SID) :=
 state_merchant(M,C,P,B,SignK_C,SignK_M,SignK_P,SignK_B,H,MasterKeyMB,9,TransID,ServID,ItemID,Nonce,TICKETID,TOKENID,Price,ItemInfo,UserID,Password,DigMoney,Conform_Msg,N1,PIN,OTP,SessionKeyCM,SessionKeyCB,SessionKeyCP,SessionKeyMP,SID).
 iknows(crypt(SignK_M,pair(TICKETID,Conform_Msg)))
 =>
 state_merchant(M,C,P,B,SignK_C,SignK_M,SignK_P,SignK_B,H,MasterKeyMB,11,TransID,ServID,ItemID,Nonce,TICKETID,TOKENID,Price,ItemInfo,UserID,Password,DigMoney,Conform_Msg,N1,PIN,OTP,SessionKeyCM,SessionKeyCB,SessionKeyCP,SessionKeyMP,SID)

step step_12 (P,C,M,B,SignK_C,SignK_M,SignK_P,SignK_B,H,MasterKeyCB,TransID,ServID,ItemID,Nonce,Dummy_TICKETID,TICKETID2,TOKENID,Price,ItemInfo,UserID,Password,Dummy_DigMoney,Dummy_PIN,Dummy_OTP,SessionKeyCM,SessionKeyCB,Dummy_SessionKeyCP,SessionKeyMP,Dummy_Set_163,SID,TICKETID,DigMoney,PIN,OTP,SessionKeyCP) :=
 state_paymentGateway(P,C,M,B,SignK_C,SignK_M,SignK_P,SignK_B,H,MasterKeyCB,3,TransID,ServID,ItemID,Nonce,Dummy_TICKETID,TICKETID2,TOKENID,Price,ItemInfo,UserID,Password,Dummy_DigMoney,Dummy_PIN,Dummy_OTP,SessionKeyCM,SessionKeyCB,Dummy_SessionKeyCP,SessionKeyMP,Dummy_Set_163,SID).
 iknows(crypt(SignK_P,pair(TICKETID,pair(crypt(inv(SignK_B),DigMoney),SessionKeyCP))))
=[exists OTP,PIN]=>
 state_paymentGateway(P,C,M,B,SignK_C,SignK_M,SignK_P,SignK_B,H,MasterKeyCB,6,TransID,ServID,ItemID,Nonce,TICKETID,TICKETID2,TOKENID,Price,ItemInfo,UserID,Password,DigMoney,PIN,OTP,SessionKeyCM,SessionKeyCB,SessionKeyCP,SessionKeyMP,Dummy_Set_163,SID).
 iknows(scrypt(SessionKeyCP,pair(TICKETID,pair(scrypt(OTP,scrypt(PIN,crypt(inv(SignK_B),DigMoney))),crypt(SignK_C,crypt(inv(SignK_P),PIN)))))).
 secret(OTP,otp,Dummy_Set_163).
 contains(C,Dummy_Set_163).
 contains(P,Dummy_Set_163)

step step_13 (P,C,M,B,SignK_C,SignK_M,SignK_P,SignK_B,H,MasterKeyCB,TransID,ServID,ItemID,Nonce,TICKETID,TICKETID2,TOKENID,Price,ItemInfo,UserID,Password,DigMoney,PIN,OTP,SessionKeyCM,SessionKeyCB,SessionKeyCP,Dummy_SessionKeyMP,Set_163,SID,SessionKeyMP) :=
 state_paymentGateway(P,C,M,B,SignK_C,SignK_M,SignK_P,SignK_B,H,MasterKeyCB,6,TransID,ServID,ItemID,Nonce,TICKETID,TICKETID2,TOKENID,Price,ItemInfo,UserID,Password,DigMoney,PIN,OTP,SessionKeyCM,SessionKeyCB,SessionKeyCP,Dummy_SessionKeyMP,Set_163,SID).
 iknows(crypt(SignK_P,pair(TOKENID,SessionKeyMP)))
 =>
 state_paymentGateway(P,C,M,B,SignK_C,SignK_M,SignK_P,SignK_B,H,MasterKeyCB,9,TransID,ServID,ItemID,Nonce,TICKETID,TICKETID2,TOKENID,Price,ItemInfo,UserID,Password,DigMoney,PIN,OTP,SessionKeyCM,SessionKeyCB,SessionKeyCP,SessionKeyMP,Set_163,SID).
 iknows(scrypt(SessionKeyMP,pair(TICKETID,crypt(inv(SignK_P),OTP))))


section properties:

property authentication_on_c_m_nonce (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,c_m_nonce,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,c_m_nonce,MGoal))
     /\ ((request(A1Goal,A2Goal,c_m_nonce,MGoal,SID1)
           /\ request(A1Goal,A2Goal,c_m_nonce,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property secrecy_of_purchase_order (MGoal,ASGoal) :=
 [] ((secret(MGoal,purchase_order,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_purchase_order1 (MGoal,ASGoal) :=
 [] ((secret(MGoal,purchase_order1,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_sessioncb (MGoal,ASGoal) :=
 [] ((secret(MGoal,sessioncb,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_sessioncp (MGoal,ASGoal) :=
 [] ((secret(MGoal,sessioncp,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_otp (MGoal,ASGoal) :=
 [] ((secret(MGoal,otp,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))


section attack_states:

attack_state authentication_on_c_m_nonce (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,c_m_nonce,MGoal,SID) &
 not(witness(A2Goal,A1Goal,c_m_nonce,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_c_m_nonce (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,c_m_nonce,MGoal,SID1).
 request(A1Goal,A2Goal,c_m_nonce,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state secrecy_of_purchase_order (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,purchase_order,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_purchase_order1 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,purchase_order1,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_sessioncb (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sessioncb,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_sessioncp (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sessioncp,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_otp (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,otp,ASGoal) &
 not(contains(i,ASGoal))

