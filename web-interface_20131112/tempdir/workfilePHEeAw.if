%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfilePHEeAw

section signature:

state_bob: agent * agent * public_key * public_key * nat * message * text * set(agent) * nat -> fact
state_alice: agent * agent * public_key * public_key * nat * message * text * set(agent) * nat -> fact


section types:

nb, alice_bob_nb, na, bob_alice_na: protocol_id
State, 2, 6, 1, 4, 0, SID, Dummy_State, 3: nat
Nb, Dummy_Nb, dummy_nonce: text
set_69, set_67, set_63, set_54: set
Set_36, Set_20, Dummy_Set_36, Dummy_Set_20, ASGoal: set(agent)
Na, start, Dummy_Na, dummy_msg, MGoal: message
a, b, B, A, i: agent
ki, Kb, Ka, ka, kb: public_key


section inits:

initial_state init1 := 
 iknows(start).
 iknows(a).
 iknows(b).
 iknows(ka).
 iknows(kb).
 iknows(ki).
 iknows(inv(ki)).
 iknows(i).
 state_alice(a,b,ka,kb,0,dummy_msg,dummy_nonce,set_54,3).
 state_bob(b,a,kb,ka,0,dummy_msg,dummy_nonce,set_63,4).
 state_alice(a,i,ka,ki,0,dummy_msg,dummy_nonce,set_67,6)


section rules:

step step_0 (A,B,Ka,Kb,Dummy_Na,Nb,Dummy_Set_20,SID,Na) :=
 state_alice(A,B,Ka,Kb,0,Dummy_Na,Nb,Dummy_Set_20,SID).
 iknows(start)
=[exists Na]=>
 state_alice(A,B,Ka,Kb,1,Na,Nb,Dummy_Set_20,SID).
 iknows(crypt(Kb,pair(Na,A))).
 secret(Na,na,Dummy_Set_20).
 contains(A,Dummy_Set_20).
 contains(B,Dummy_Set_20)

step step_1 (A,B,Ka,Kb,Na,Dummy_Nb,Set_20,SID,Nb) :=
 state_alice(A,B,Ka,Kb,1,Na,Dummy_Nb,Set_20,SID).
 iknows(crypt(Ka,pair(Nb,xor(Na,B))))
 =>
 state_alice(A,B,Ka,Kb,2,Na,Nb,Set_20,SID).
 iknows(crypt(Kb,Nb))

step step_2 (B,A,Kb,Ka,Dummy_Na,Dummy_Nb,Dummy_Set_36,SID,Na,Nb) :=
 state_bob(B,A,Kb,Ka,0,Dummy_Na,Dummy_Nb,Dummy_Set_36,SID).
 iknows(crypt(Kb,pair(Na,A)))
=[exists Nb]=>
 state_bob(B,A,Kb,Ka,1,Na,Nb,Dummy_Set_36,SID).
 iknows(crypt(Ka,pair(Nb,xor(Na,B)))).
 contains(A,Dummy_Set_36).
 contains(B,Dummy_Set_36)

step step_3 (B,A,Kb,Ka,Na,Nb,Set_36,SID) :=
 state_bob(B,A,Kb,Ka,1,Na,Nb,Set_36,SID).
 iknows(crypt(Kb,Nb))
 =>
 state_bob(B,A,Kb,Ka,2,Na,Nb,Set_36,SID)


section properties:

property secrecy_of_na (MGoal,ASGoal) :=
 [] ((secret(MGoal,na,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))


section attack_states:

attack_state secrecy_of_na (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,na,ASGoal) &
 not(contains(i,ASGoal))

