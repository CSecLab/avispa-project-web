%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfileNTlpTlZMlk

section signature:

state_bob: agent * agent * symmetric_key * symmetric_key * hash_func * nat * text * text * set(agent) * nat -> fact
state_alice: agent * agent * symmetric_key * symmetric_key * hash_func * nat * text * text * nat -> fact


section types:

set_77, set_76, set_71: set
Na, Nb, Dummy_Nb, Dummy_Na, dummy_nonce: text
5, 3, State, 10, 6, 4, SID, 2, Dummy_State, 1, 0, SID2, SID1: nat
Set_37, Dummy_Set_37, ASGoal: set(agent)
start, MGoal: message
Hash, h: hash_func
ka, Ka, Kb, kb, ki: symmetric_key
bob_alice_nb, alice_bob_na, na: protocol_id
A, B, A2Goal, A1Goal, a, b, i: agent


section inits:

initial_state init1 := 
 iknows(start).
 iknows(a).
 iknows(b).
 iknows(ki).
 iknows(inv(na)).
 iknows(i).
 state_alice(a,b,ka,kb,h,0,dummy_nonce,dummy_nonce,3).
 state_bob(b,a,ka,kb,h,1,dummy_nonce,dummy_nonce,set_71,4).
 state_alice(a,i,ka,ki,h,0,dummy_nonce,dummy_nonce,6).
 state_bob(b,i,ki,kb,h,1,dummy_nonce,dummy_nonce,set_77,10)


section rules:

step step_0 (A,B,Ka,Kb,Hash,Dummy_Na,Dummy_Nb,SID,Na,Nb) :=
 state_alice(A,B,Ka,Kb,Hash,0,Dummy_Na,Dummy_Nb,SID).
 iknows(start)
=[exists Nb,Na]=>
 state_alice(A,B,Ka,Kb,Hash,2,Na,Nb,SID).
 iknows(scrypt(Kb,pair(Na,Nb))).
 witness(A,B,alice_bob_na,Na)

step step_1 (A,B,Ka,Kb,Hash,Na,Nb,SID) :=
 state_alice(A,B,Ka,Kb,Hash,2,Na,Nb,SID).
 iknows(scrypt(Ka,pair(xor(Na,A),Nb)))
 =>
 state_alice(A,B,Ka,Kb,Hash,4,Na,Nb,SID).
 iknows(apply(Hash,pair(A,B)))

step step_2 (B,A,Ka,Kb,Hash,Dummy_Na,Dummy_Nb,Dummy_Set_37,SID,Na,Nb) :=
 state_bob(B,A,Ka,Kb,Hash,1,Dummy_Na,Dummy_Nb,Dummy_Set_37,SID).
 iknows(scrypt(Kb,pair(Na,Nb)))
 =>
 state_bob(B,A,Ka,Kb,Hash,3,Na,Nb,Dummy_Set_37,SID).
 iknows(scrypt(Ka,pair(xor(Na,A),Nb))).
 witness(A,B,bob_alice_nb,Nb).
 secret(Ka,ka,Dummy_Set_37).
 contains(A,Dummy_Set_37).
 contains(B,Dummy_Set_37)

step step_3 (B,A,Ka,Kb,Hash,Na,Nb,Set_37,SID) :=
 state_bob(B,A,Ka,Kb,Hash,3,Na,Nb,Set_37,SID).
 iknows(apply(Hash,pair(A,B)))
 =>
 state_bob(B,A,Ka,Kb,Hash,5,Na,Nb,Set_37,SID)


section properties:

property secrecy_of_ka (MGoal,ASGoal) :=
 [] ((secret(MGoal,ka,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property authentication_on_alice_bob_na (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,alice_bob_na,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,alice_bob_na,MGoal))
     /\ ((request(A1Goal,A2Goal,alice_bob_na,MGoal,SID1)
           /\ request(A1Goal,A2Goal,alice_bob_na,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_bob_alice_nb (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,bob_alice_nb,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,bob_alice_nb,MGoal))
     /\ ((request(A1Goal,A2Goal,bob_alice_nb,MGoal,SID1)
           /\ request(A1Goal,A2Goal,bob_alice_nb,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state secrecy_of_ka (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,ka,ASGoal) &
 not(contains(i,ASGoal))

attack_state authentication_on_alice_bob_na (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,alice_bob_na,MGoal,SID) &
 not(witness(A2Goal,A1Goal,alice_bob_na,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_alice_bob_na (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,alice_bob_na,MGoal,SID1).
 request(A1Goal,A2Goal,alice_bob_na,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_bob_alice_nb (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,bob_alice_nb,MGoal,SID) &
 not(witness(A2Goal,A1Goal,bob_alice_nb,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_bob_alice_nb (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,bob_alice_nb,MGoal,SID1).
 request(A1Goal,A2Goal,bob_alice_nb,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

