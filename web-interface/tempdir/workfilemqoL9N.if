%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfilemqoL9N

section signature:

state_server: agent * agent * hash_func * hash_func * hash_func * public_key * public_key * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * nat * apply(hash_func,pair(apply(hash_func,pair(text,pair(text,text))),pair(agent,pair(agent,pair(text,pair(text,text)))))) * apply(hash_func,pair(agent,pair(text,pair(text,apply(hash_func,pair(text,pair(text,text))))))) * apply(hash_func,pair(agent,pair(text,pair(text,apply(hash_func,pair(text,pair(text,text))))))) * public_key * nat -> fact
state_peer: agent * agent * hash_func * hash_func * hash_func * public_key * public_key * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * nat * apply(hash_func,pair(apply(hash_func,pair(text,pair(text,text))),pair(agent,pair(agent,pair(text,pair(text,text)))))) * apply(hash_func,pair(agent,pair(text,pair(text,apply(hash_func,pair(text,pair(text,text))))))) * apply(hash_func,pair(agent,pair(text,pair(text,apply(hash_func,pair(text,pair(text,text))))))) * public_key * pair(text,text) * set(agent) * set(agent) * nat -> fact


section types:

sec_clientK, sec_serverK, nps1, nps2: protocol_id
Nps: pair(text,text)
ClientK, ServerK, Dummy_ServerK, Dummy_ClientK: apply(hash_func,pair(agent,pair(text,pair(text,apply(hash_func,pair(text,pair(text,text)))))))
Finished, Dummy_Finished: apply(hash_func,pair(apply(hash_func,pair(text,pair(text,text))),pair(agent,pair(agent,pair(text,pair(text,text))))))
set_153, set_152, set_125, set_124: set
11, 9, 7, 5, 3, 1, State, 8, 4, SID, 6, 2, 0, Dummy_State, SID2, SID1: nat
Set_53, Set_51, Dummy_Set_53, Dummy_Set_51, ASGoal: set(agent)
start, dummy_msg, MGoal: message
Cke, Cv, Ccs, Rcert, Shd, Np, Csus, TNo, Csu, Sh, Sc, Ske, PMS, Ns, SeID, start_tls, respond_id, Dummy_Ccs, request_id, Dummy_Shd, sid0, Dummy_Ske, Dummy_Rcert, Dummy_Csu, Dummy_Ns, Dummy_SeID, Dummy_PMS, Dummy_TNo, Dummy_Csus, Dummy_Np, dummy_nonce: text
Kp, Ks, Kca, Dummy_Kp, Dummy_Ks, dummy_pk, kp, ks, ki, kca: public_key
PRF, H, KeyGen, prf, h, keygen: hash_func
P, S, A2Goal, A1Goal, p, s, i: agent


section inits:

initial_state init1 := 
 iknows(start).
 iknows(p).
 iknows(s).
 iknows(h).
 iknows(keygen).
 iknows(prf).
 iknows(kp).
 iknows(ks).
 iknows(kca).
 iknows(ki).
 iknows(inv(ki)).
 iknows(crypt(inv(kca),pair(i,ki))).
 iknows(i).
 state_peer(p,s,h,keygen,prf,kp,kca,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,0,dummy_msg,dummy_msg,dummy_msg,dummy_pk,pair(dummy_nonce,dummy_nonce),set_124,set_125,3).
 state_server(s,p,h,keygen,prf,ks,kca,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,1,dummy_msg,dummy_msg,dummy_msg,dummy_pk,4).
 state_server(s,i,h,keygen,prf,ks,kca,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,1,dummy_msg,dummy_msg,dummy_msg,dummy_pk,7)


section rules:

step step_0 (P,S,H,KeyGen,PRF,Kp,Kca,Np,Csus,PMS,SeID,Ns,TNo,Csu,Sh,Rcert,Sc,Ske,Cke,Cv,Shd,Ccs,Finished,ClientK,ServerK,Ks,Nps,Set_51,Set_53,SID) :=
 state_peer(P,S,H,KeyGen,PRF,Kp,Kca,Np,Csus,PMS,SeID,Ns,TNo,Csu,Sh,Rcert,Sc,Ske,Cke,Cv,Shd,Ccs,0,Finished,ClientK,ServerK,Ks,Nps,Set_51,Set_53,SID).
 iknows(request_id)
 =>
 state_peer(P,S,H,KeyGen,PRF,Kp,Kca,Np,Csus,PMS,SeID,Ns,TNo,Csu,Sh,Rcert,Sc,Ske,Cke,Cv,Shd,Ccs,2,Finished,ClientK,ServerK,Ks,Nps,Set_51,Set_53,SID).
 iknows(pair(respond_id,P))

step step_1 (P,S,H,KeyGen,PRF,Kp,Kca,Dummy_Np,Dummy_Csus,PMS,SeID,Ns,Dummy_TNo,Csu,Sh,Rcert,Sc,Ske,Cke,Cv,Shd,Ccs,Finished,ClientK,ServerK,Ks,Nps,Set_51,Set_53,SID,Np,Csus,TNo) :=
 state_peer(P,S,H,KeyGen,PRF,Kp,Kca,Dummy_Np,Dummy_Csus,PMS,SeID,Ns,Dummy_TNo,Csu,Sh,Rcert,Sc,Ske,Cke,Cv,Shd,Ccs,2,Finished,ClientK,ServerK,Ks,Nps,Set_51,Set_53,SID).
 iknows(start_tls)
=[exists TNo,Csus,Np]=>
 state_peer(P,S,H,KeyGen,PRF,Kp,Kca,Np,Csus,PMS,SeID,Ns,TNo,Csu,Sh,Rcert,Sc,Ske,Cke,Cv,Shd,Ccs,4,Finished,ClientK,ServerK,Ks,Nps,Set_51,Set_53,SID).
 iknows(pair(TNo,pair(sid0,pair(Np,Csus))))

step step_2 (P,S,H,KeyGen,PRF,Kp,Kca,Np,Csus,Dummy_PMS,Dummy_SeID,Dummy_Ns,TNo,Dummy_Csu,Sh,Dummy_Rcert,Sc,Dummy_Ske,Cke,Cv,Dummy_Shd,Dummy_Ccs,Dummy_Finished,Dummy_ClientK,Dummy_ServerK,Dummy_Ks,Nps,Set_51,Set_53,SID,PMS,SeID,Ns,Csu,Rcert,Ske,Shd,Ccs,Ks) :=
 state_peer(P,S,H,KeyGen,PRF,Kp,Kca,Np,Csus,Dummy_PMS,Dummy_SeID,Dummy_Ns,TNo,Dummy_Csu,Sh,Dummy_Rcert,Sc,Dummy_Ske,Cke,Cv,Dummy_Shd,Dummy_Ccs,4,Dummy_Finished,Dummy_ClientK,Dummy_ServerK,Dummy_Ks,Nps,Set_51,Set_53,SID).
 iknows(pair(TNo,pair(SeID,pair(Ns,pair(Csu,pair(crypt(inv(Kca),pair(S,Ks)),pair(Ske,pair(Rcert,Shd))))))))
=[exists Ccs,PMS]=>
 state_peer(P,S,H,KeyGen,PRF,Kp,Kca,Np,Csus,PMS,SeID,Ns,TNo,Csu,Sh,Rcert,Sc,Ske,Cke,Cv,Shd,Ccs,6,apply(H,pair(apply(PRF,pair(PMS,pair(Np,Ns))),pair(P,pair(S,pair(Np,pair(Csu,SeID)))))),apply(KeyGen,pair(P,pair(Np,pair(Ns,apply(PRF,pair(PMS,pair(Np,Ns))))))),apply(KeyGen,pair(S,pair(Np,pair(Ns,apply(PRF,pair(PMS,pair(Np,Ns))))))),Ks,Nps,Set_51,Set_53,SID).
 iknows(pair(crypt(inv(Kca),pair(P,Kp)),pair(crypt(Ks,PMS),pair(crypt(inv(Kp),apply(H,pair(Np,pair(Ns,pair(S,PMS))))),pair(Ccs,scrypt(apply(KeyGen,pair(P,pair(Np,pair(Ns,apply(PRF,pair(PMS,pair(Np,Ns))))))),apply(H,pair(apply(PRF,pair(PMS,pair(Np,Ns))),pair(P,pair(S,pair(Np,pair(Csu,SeID)))))))))))).
 witness(P,S,nps2,pair(Np,Ns))

step step_3 (P,S,H,KeyGen,PRF,Kp,Kca,Np,Csus,Dummy_PMS,Dummy_SeID,Dummy_Ns,TNo,Dummy_Csu,Sh,Rcert,Sc,Dummy_Ske,Cke,Cv,Dummy_Shd,Dummy_Ccs,Dummy_Finished,Dummy_ClientK,Dummy_ServerK,Dummy_Ks,Nps,Set_51,Set_53,SID,PMS,SeID,Ns,Csu,Ske,Shd,Ccs,Ks) :=
 state_peer(P,S,H,KeyGen,PRF,Kp,Kca,Np,Csus,Dummy_PMS,Dummy_SeID,Dummy_Ns,TNo,Dummy_Csu,Sh,Rcert,Sc,Dummy_Ske,Cke,Cv,Dummy_Shd,Dummy_Ccs,4,Dummy_Finished,Dummy_ClientK,Dummy_ServerK,Dummy_Ks,Nps,Set_51,Set_53,SID).
 iknows(pair(TNo,pair(SeID,pair(Ns,pair(Csu,pair(crypt(inv(Kca),pair(S,Ks)),pair(Ske,Shd)))))))
=[exists Ccs,PMS]=>
 state_peer(P,S,H,KeyGen,PRF,Kp,Kca,Np,Csus,PMS,SeID,Ns,TNo,Csu,Sh,Rcert,Sc,Ske,Cke,Cv,Shd,Ccs,6,apply(H,pair(apply(PRF,pair(PMS,pair(Np,Ns))),pair(P,pair(S,pair(Np,pair(Csu,SeID)))))),apply(KeyGen,pair(P,pair(Np,pair(Ns,apply(PRF,pair(PMS,pair(Np,Ns))))))),apply(KeyGen,pair(S,pair(Np,pair(Ns,apply(PRF,pair(PMS,pair(Np,Ns))))))),Ks,Nps,Set_51,Set_53,SID).
 iknows(pair(crypt(Ks,PMS),pair(Ccs,scrypt(apply(KeyGen,pair(P,pair(Np,pair(Ns,apply(PRF,pair(PMS,pair(Np,Ns))))))),apply(H,pair(apply(PRF,pair(PMS,pair(Np,Ns))),pair(P,pair(S,pair(Np,pair(Csu,SeID)))))))))).
 witness(P,S,nps2,pair(Np,Ns))

step step_4 (P,S,H,KeyGen,PRF,Kp,Kca,Np,Csus,PMS,SeID,Ns,TNo,Csu,Sh,Rcert,Sc,Ske,Cke,Cv,Shd,Ccs,Finished,ClientK,ServerK,Ks,Nps,Dummy_Set_51,Dummy_Set_53,SID) :=
 state_peer(P,S,H,KeyGen,PRF,Kp,Kca,Np,Csus,PMS,SeID,Ns,TNo,Csu,Sh,Rcert,Sc,Ske,Cke,Cv,Shd,Ccs,6,Finished,ClientK,ServerK,Ks,Nps,Dummy_Set_51,Dummy_Set_53,SID).
 iknows(pair(Ccs,scrypt(ServerK,Finished)))
 =>
 state_peer(P,S,H,KeyGen,PRF,Kp,Kca,Np,Csus,PMS,SeID,Ns,TNo,Csu,Sh,Rcert,Sc,Ske,Cke,Cv,Shd,Ccs,8,Finished,ClientK,ServerK,Ks,Nps,Dummy_Set_51,Dummy_Set_53,SID).
 secret(ClientK,sec_clientK,Dummy_Set_51).
 secret(ServerK,sec_serverK,Dummy_Set_53).
 request(P,S,nps1,pair(Np,Ns),SID).
 contains(P,Dummy_Set_51).
 contains(S,Dummy_Set_51).
 contains(P,Dummy_Set_53).
 contains(S,Dummy_Set_53)

step step_5 (S,P,H,KeyGen,PRF,Ks,Kca,Ns,SeID,PMS,Np,Csus,TNo,Csu,Sh,Sc,Ske,Cke,Cv,Ccs,Rcert,Shd,Finished,ClientK,ServerK,Kp,SID) :=
 state_server(S,P,H,KeyGen,PRF,Ks,Kca,Ns,SeID,PMS,Np,Csus,TNo,Csu,Sh,Sc,Ske,Cke,Cv,Ccs,Rcert,Shd,1,Finished,ClientK,ServerK,Kp,SID).
 iknows(start)
 =>
 state_server(S,P,H,KeyGen,PRF,Ks,Kca,Ns,SeID,PMS,Np,Csus,TNo,Csu,Sh,Sc,Ske,Cke,Cv,Ccs,Rcert,Shd,3,Finished,ClientK,ServerK,Kp,SID).
 iknows(request_id)

step step_6 (S,P,H,KeyGen,PRF,Ks,Kca,Ns,SeID,PMS,Np,Csus,TNo,Csu,Sh,Sc,Ske,Cke,Cv,Ccs,Rcert,Shd,Finished,ClientK,ServerK,Kp,SID) :=
 state_server(S,P,H,KeyGen,PRF,Ks,Kca,Ns,SeID,PMS,Np,Csus,TNo,Csu,Sh,Sc,Ske,Cke,Cv,Ccs,Rcert,Shd,3,Finished,ClientK,ServerK,Kp,SID).
 iknows(pair(respond_id,P))
 =>
 state_server(S,P,H,KeyGen,PRF,Ks,Kca,Ns,SeID,PMS,Np,Csus,TNo,Csu,Sh,Sc,Ske,Cke,Cv,Ccs,Rcert,Shd,5,Finished,ClientK,ServerK,Kp,SID).
 iknows(start_tls)

step step_7 (S,P,H,KeyGen,PRF,Ks,Kca,Dummy_Ns,Dummy_SeID,PMS,Dummy_Np,Dummy_Csus,Dummy_TNo,Dummy_Csu,Sh,Sc,Dummy_Ske,Cke,Cv,Ccs,Dummy_Rcert,Dummy_Shd,Finished,ClientK,ServerK,Kp,SID,Ns,SeID,Np,Csus,TNo,Csu,Ske,Rcert,Shd) :=
 state_server(S,P,H,KeyGen,PRF,Ks,Kca,Dummy_Ns,Dummy_SeID,PMS,Dummy_Np,Dummy_Csus,Dummy_TNo,Dummy_Csu,Sh,Sc,Dummy_Ske,Cke,Cv,Ccs,Dummy_Rcert,Dummy_Shd,5,Finished,ClientK,ServerK,Kp,SID).
 iknows(pair(TNo,pair(sid0,pair(Np,Csus))))
=[exists Csu,Ske,Rcert,Shd,SeID,Ns]=>
 state_server(S,P,H,KeyGen,PRF,Ks,Kca,Ns,SeID,PMS,Np,Csus,TNo,Csu,Sh,Sc,Ske,Cke,Cv,Ccs,Rcert,Shd,7,Finished,ClientK,ServerK,Kp,SID).
 iknows(pair(TNo,pair(SeID,pair(Ns,pair(Csu,pair(crypt(inv(Kca),pair(S,Ks)),pair(Ske,pair(Rcert,Shd)))))))).
 witness(S,P,nps1,pair(Np,Ns))

step step_8 (S,P,H,KeyGen,PRF,Ks,Kca,Dummy_Ns,Dummy_SeID,PMS,Dummy_Np,Dummy_Csus,Dummy_TNo,Dummy_Csu,Sh,Sc,Dummy_Ske,Cke,Cv,Ccs,Rcert,Dummy_Shd,Finished,ClientK,ServerK,Kp,SID,Ns,SeID,Np,Csus,TNo,Csu,Ske,Shd) :=
 state_server(S,P,H,KeyGen,PRF,Ks,Kca,Dummy_Ns,Dummy_SeID,PMS,Dummy_Np,Dummy_Csus,Dummy_TNo,Dummy_Csu,Sh,Sc,Dummy_Ske,Cke,Cv,Ccs,Rcert,Dummy_Shd,5,Finished,ClientK,ServerK,Kp,SID).
 iknows(pair(TNo,pair(sid0,pair(Np,Csus))))
=[exists Csu,Shd,Ske,Ns,SeID]=>
 state_server(S,P,H,KeyGen,PRF,Ks,Kca,Ns,SeID,PMS,Np,Csus,TNo,Csu,Sh,Sc,Ske,Cke,Cv,Ccs,Rcert,Shd,9,Finished,ClientK,ServerK,Kp,SID).
 iknows(pair(TNo,pair(SeID,pair(Ns,pair(Csu,pair(crypt(inv(Kca),pair(S,Ks)),pair(Ske,Shd))))))).
 witness(S,P,nps1,pair(Np,Ns))

step step_9 (S,P,H,KeyGen,PRF,Ks,Kca,Ns,SeID,Dummy_PMS,Np,Csus,TNo,Csu,Sh,Sc,Ske,Cke,Cv,Dummy_Ccs,Rcert,Shd,Dummy_Finished,Dummy_ClientK,Dummy_ServerK,Dummy_Kp,SID,PMS,Ccs,Kp) :=
 state_server(S,P,H,KeyGen,PRF,Ks,Kca,Ns,SeID,Dummy_PMS,Np,Csus,TNo,Csu,Sh,Sc,Ske,Cke,Cv,Dummy_Ccs,Rcert,Shd,7,Dummy_Finished,Dummy_ClientK,Dummy_ServerK,Dummy_Kp,SID).
 iknows(pair(crypt(inv(Kca),pair(P,Kp)),pair(crypt(Ks,PMS),pair(crypt(inv(Kp),apply(H,pair(Np,pair(Ns,pair(S,PMS))))),pair(Ccs,scrypt(apply(KeyGen,pair(P,pair(Np,pair(Ns,apply(PRF,pair(PMS,pair(Np,Ns))))))),apply(H,pair(apply(PRF,pair(PMS,pair(Np,Ns))),pair(P,pair(S,pair(Np,pair(Csu,SeID))))))))))))
 =>
 state_server(S,P,H,KeyGen,PRF,Ks,Kca,Ns,SeID,PMS,Np,Csus,TNo,Csu,Sh,Sc,Ske,Cke,Cv,Ccs,Rcert,Shd,11,apply(H,pair(apply(PRF,pair(PMS,pair(Np,Ns))),pair(P,pair(S,pair(Np,pair(Csu,SeID)))))),apply(KeyGen,pair(P,pair(Np,pair(Ns,apply(PRF,pair(PMS,pair(Np,Ns))))))),apply(KeyGen,pair(S,pair(Np,pair(Ns,apply(PRF,pair(PMS,pair(Np,Ns))))))),Kp,SID).
 iknows(pair(Ccs,scrypt(apply(KeyGen,pair(S,pair(Np,pair(Ns,apply(PRF,pair(PMS,pair(Np,Ns))))))),apply(H,pair(apply(PRF,pair(PMS,pair(Np,Ns))),pair(P,pair(S,pair(Np,pair(Csu,SeID))))))))).
 request(S,P,nps2,pair(Np,Ns),SID)

step step_10 (S,P,H,KeyGen,PRF,Ks,Kca,Ns,SeID,Dummy_PMS,Np,Csus,TNo,Csu,Sh,Sc,Ske,Cke,Cv,Dummy_Ccs,Rcert,Shd,Dummy_Finished,Dummy_ClientK,Dummy_ServerK,Kp,SID,PMS,Ccs) :=
 state_server(S,P,H,KeyGen,PRF,Ks,Kca,Ns,SeID,Dummy_PMS,Np,Csus,TNo,Csu,Sh,Sc,Ske,Cke,Cv,Dummy_Ccs,Rcert,Shd,9,Dummy_Finished,Dummy_ClientK,Dummy_ServerK,Kp,SID).
 iknows(pair(crypt(Ks,PMS),pair(Ccs,scrypt(apply(KeyGen,pair(P,pair(Np,pair(Ns,apply(PRF,pair(PMS,pair(Np,Ns))))))),apply(H,pair(apply(PRF,pair(PMS,pair(Np,Ns))),pair(P,pair(S,pair(Np,pair(Csu,SeID))))))))))
 =>
 state_server(S,P,H,KeyGen,PRF,Ks,Kca,Ns,SeID,PMS,Np,Csus,TNo,Csu,Sh,Sc,Ske,Cke,Cv,Ccs,Rcert,Shd,11,apply(H,pair(apply(PRF,pair(PMS,pair(Np,Ns))),pair(P,pair(S,pair(Np,pair(Csu,SeID)))))),apply(KeyGen,pair(P,pair(Np,pair(Ns,apply(PRF,pair(PMS,pair(Np,Ns))))))),apply(KeyGen,pair(S,pair(Np,pair(Ns,apply(PRF,pair(PMS,pair(Np,Ns))))))),Kp,SID).
 iknows(pair(Ccs,scrypt(apply(KeyGen,pair(S,pair(Np,pair(Ns,apply(PRF,pair(PMS,pair(Np,Ns))))))),apply(H,pair(apply(PRF,pair(PMS,pair(Np,Ns))),pair(P,pair(S,pair(Np,pair(Csu,SeID)))))))))


section properties:

property secrecy_of_sec_clientK (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_clientK,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_sec_serverK (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_serverK,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property authentication_on_nps1 (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,nps1,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,nps1,MGoal))
     /\ ((request(A1Goal,A2Goal,nps1,MGoal,SID1)
           /\ request(A1Goal,A2Goal,nps1,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_nps2 (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,nps2,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,nps2,MGoal))
     /\ ((request(A1Goal,A2Goal,nps2,MGoal,SID1)
           /\ request(A1Goal,A2Goal,nps2,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state secrecy_of_sec_clientK (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_clientK,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_sec_serverK (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_serverK,ASGoal) &
 not(contains(i,ASGoal))

attack_state authentication_on_nps1 (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,nps1,MGoal,SID) &
 not(witness(A2Goal,A1Goal,nps1,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_nps1 (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,nps1,MGoal,SID1).
 request(A1Goal,A2Goal,nps1,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_nps2 (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,nps2,MGoal,SID) &
 not(witness(A2Goal,A1Goal,nps2,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_nps2 (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,nps2,MGoal,SID1).
 request(A1Goal,A2Goal,nps2,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

