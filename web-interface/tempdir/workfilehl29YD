role role_U (U,H,M: agent,IMSI, K, AMF, Vf1, Vf2, Vf3, Vf4, Vf5:text,
	F1, F2, F3,F4, F5:hash_func,
	SND,RCV:channel(dy))
played_by U
def=
	local
		State:nat,
		SQN ,RAND : text
	init
		State := 0
	transition
		1. State=0 / RCV(start) =|> State':=1 / SND(IMSI)
		4. State=1 / RCV(RAND'.xor(SQN',Vf5').AMF'.Vf1') =|> State':=2 /SND(F2(K.RAND'))

end role

role role_M(M:agent,H:agent,U:agent,
		SNID:text,
		F1, F2, F3,F4, F5:hash_func,
		SND,RCV:channel(dy))
played_by M
def=
	local
		State:nat,IMSI:text ,AMF:text,SQN:text,K:text,RAND, Vf1, Vf3, Vf4, Vf5:text,
		Vf2: text
	init
		State := 0
	transition
		1. State=0 / RCV(IMSI') =|> State':=1 
						/ SND(IMSI'.SNID)
		
		3. State=1 / RCV(RAND'.Vf2'.Vf3'.Vf4'.xor(SQN',Vf5').AMF'.Vf1') =|> 
						State':=2  / SND(RAND'.xor(SQN',Vf5').AMF'.Vf1')
		5. State=2 / RCV(F2(K'.RAND')) =|> State':=3 
end role

role role_H(H, M, U:agent,
	K, AMF, Vf1, Vf2, Vf3, Vf4, Vf5:text,
	F1, F2, F3, F4, F5:hash_func,
	SND,RCV:channel(dy))
played_by H
def=
	local
		State:nat, RAND, SNID:text,SQN:text,IMSI:text
	init
		State := 0
	transition
		2. State=0 / RCV(IMSI'.SNID') =|> State':=1 	
							/ SQN':=new()
							/ RAND':=new() 
							/ Vf1':=F1(K.SQN'.RAND'.AMF)
							/ Vf2':=F2(K.RAND')
							/ Vf3':=F3(K.RAND')
							/ Vf4':=F4(K.RAND')
							/ Vf5':=F5(K.RAND')
							/ SND(RAND'.Vf2'.Vf3'.Vf4'.xor(SQN',Vf5').AMF.Vf1')
							/ secret(K)
							
end role

role session1(SNID:text,IMSI:text,H:agent,M:agent,U:agent,K:text,F1:hash_func,F2:hash_func,F3:hash_func,F4:hash_func,F5:hash_func,AMF:text,RAND:text,Vf1:text,Vf2:text,Vf3:text,Vf4:text,Vf5:text)
def=
	local
		SND3,RCV3,SND2,RCV2,SND1,RCV1:channel(dy)
	composition
		role_H(H,M,U,K,AMF,Vf1,Vf2,Vf3,Vf4,Vf5,F1,F2,F3,F4,F5,SND3,RCV3) / role_M(M,H,U,SNID,F1,F2,F3,F4,F5,SND2,RCV2) / role_U(U,H,M,IMSI,K,AMF,Vf1,Vf2,Vf3,Vf4,Vf5,F1,F2,F3,F4,F5,SND1,RCV1)
end role

role environment()
def=
	const
		hash_0:hash_func,amf:text,f4:hash_func,f2:hash_func,k:text,mme:agent,imsi:text,snid:text,hss:agent,ue:agent,f1:hash_func,f3:hash_func,f5:hash_func,rand:text,const_1:text,const_1:text,const_1:text,const_1:text,const_1:text,auth_1:protocol_id,sec_2:protocol_id
	
intruder_knowledge = {ue}
	composition
		session1(snid,imsi,hss,mme,ue,k,f1,f2,f3,f4,f5,amf,rand,const_1,const_1,const_1,const_1,const_1)
end role

goal
	authentication_on auth_1
	secrecy_of sec_2
end goal

environment()

 