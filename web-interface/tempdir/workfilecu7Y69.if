%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfilecu7Y69

section signature:

state_receiver: agent * agent * agent * agent * hash_func * nat * text * text * text * text * text * text * text * message * message * message * message * message * message * hash_func * nat -> fact
state_tserver: agent * agent * agent * agent * hash_func * nat * text * text * text * text * text * text * text * message * message * message * message * message * message * hash_func * nat -> fact
state_mserver: agent * agent * agent * agent * hash_func * nat * text * text * text * text * text * text * text * text * message * message * message * message * message * message * hash_func * set(text) * set(agent) * nat -> fact
state_sender: agent * agent * agent * agent * hash_func * nat * text * text * text * text * text * text * text * message * message * message * message * message * message * message * message * hash_func * set(text) * set(agent) * nat -> fact


section types:

set_196, set_195, set_193, set_192, set_188, set_187, set_185, set_184, set_180, set_179, set_177, set_176, set_159, set_158, set_145, set_144: set
Set_68, Dummy_Set_68, Dummy_Set_41, ASGoal, Set_41: set(agent)
Set_67, Dummy_Set_67, Dummy_Set_39, Set_39: set(text)
subs1, sender_mserver, mserver_tserver, tserver_receiver, receiver_sender, sender_tserver, susb1, subs2: protocol_id
State, 21, 20, 19, 18, 16, 15, 14, 13, 11, 10, 9, 8, 6, SID, 5, 4, Dummy_State, 3, 1, 0: nat
H, Inc, dummy_hash, h: hash_func
Y, X, Z, SKnsi, SKnj, ZZ, Dummy_ZZ, Dummy_SKnj, Dummy_Z, Dummy_SKnsi, Dummy_Y, Dummy_SKni, Dummy_X, dummy_msg, MGoal, start, Skni, SKni: message
Nj, NSl, Nsh, Ni, ni, nsh, nsl, nj, i: agent
IDni, IDnj, A, B, TSni, TSms, TSnsi, Dummy_TSnsi, Dummy_TSms, Dummy_A, IDnsi, Dummy_TSni, Dummy_B, dummy_nonce, idni, idnj, a, b, tsni, tsms, tsnsi, Tsms: text


section inits:

initial_state init1 := 
 iknows(start).
 iknows(ni).
 iknows(nsh).
 iknows(nsl).
 iknows(nj).
 iknows(h).
 iknows(i).
 state_sender(ni,nsh,nsl,nj,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_hash,set_144,set_145,3).
 state_mserver(ni,nsh,nsl,nj,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_hash,set_158,set_159,4).
 state_tserver(ni,nsh,nsl,nj,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_hash,5).
 state_receiver(ni,nsh,nsl,nj,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_hash,6).
 state_sender(nsh,ni,nsl,nj,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_hash,set_176,set_177,8).
 state_mserver(nsh,ni,nsl,nj,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_hash,set_179,set_180,9).
 state_tserver(nsh,ni,nsl,nj,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_hash,10).
 state_receiver(nsh,ni,nsl,nj,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_hash,11).
 state_sender(nsl,nsh,ni,nj,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_hash,set_184,set_185,13).
 state_mserver(nsl,nsh,ni,nj,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_hash,set_187,set_188,14).
 state_tserver(nsl,nsh,ni,nj,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_hash,15).
 state_receiver(nsl,nsh,ni,nj,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_hash,16).
 state_sender(nj,nsl,nsh,ni,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_hash,set_192,set_193,18).
 state_mserver(nj,nsl,nsh,ni,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_hash,set_195,set_196,19).
 state_tserver(nj,nsl,nsh,ni,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_hash,20).
 state_receiver(nj,nsl,nsh,ni,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_hash,21)


section rules:

step step_0 (Ni,Nsh,NSl,Nj,H,IDni,IDnj,A,Dummy_B,Dummy_TSni,Tsms,TSnsi,Y,Dummy_X,Z,SKnsi,SKnj,Skni,ZZ,Dummy_SKni,Inc,Dummy_Set_39,Dummy_Set_41,SID,B,TSni) :=
 state_sender(Ni,Nsh,NSl,Nj,H,0,IDni,IDnj,A,Dummy_B,Dummy_TSni,Tsms,TSnsi,Y,Dummy_X,Z,SKnsi,SKnj,Skni,ZZ,Dummy_SKni,Inc,Dummy_Set_39,Dummy_Set_41,SID).
 iknows(start)
=[exists TSni,B]=>
 state_sender(Ni,Nsh,NSl,Nj,H,1,IDni,IDnj,A,B,TSni,Tsms,TSnsi,Y,apply(H,pair(IDni,pair(IDnj,pair(TSni,apply(H,pair(B,IDni)))))),Z,SKnsi,SKnj,Skni,ZZ,apply(H,pair(B,IDni)),Inc,Dummy_Set_39,Dummy_Set_41,SID).
 iknows(pair(IDni,pair(IDnj,pair(TSni,apply(H,pair(IDni,pair(IDnj,pair(TSni,apply(H,pair(B,IDni)))))))))).
 secret(Dummy_Set_39,subs1,Dummy_Set_41).
 contains(B,Dummy_Set_39).
 contains(Nsh,Dummy_Set_41).
 contains(NSl,Dummy_Set_41)

step step_1 (Nsh,Ni,NSl,Nj,H,IDni,IDnj,IDnsi,Dummy_A,B,Dummy_TSni,Dummy_TSms,TSnsi,Dummy_Y,Dummy_X,Z,Dummy_SKnsi,SKnj,ZZ,Inc,Dummy_Set_67,Dummy_Set_68,SID,A,TSni,TSms,X) :=
 state_mserver(Nsh,Ni,NSl,Nj,H,0,IDni,IDnj,IDnsi,Dummy_A,B,Dummy_TSni,Dummy_TSms,TSnsi,Dummy_Y,Dummy_X,Z,Dummy_SKnsi,SKnj,ZZ,Inc,Dummy_Set_67,Dummy_Set_68,SID).
 iknows(pair(IDni,pair(IDnj,pair(TSni,X))))
=[exists TSms,A]=>
 state_mserver(Nsh,Ni,NSl,Nj,H,1,IDni,IDnj,IDnsi,A,B,TSni,TSms,TSnsi,apply(H,pair(IDni,pair(IDnj,pair(TSms,apply(H,pair(A,IDnsi)))))),X,Z,apply(H,pair(A,IDnsi)),SKnj,ZZ,Inc,Dummy_Set_67,Dummy_Set_68,SID).
 iknows(pair(IDni,pair(IDnj,pair(TSms,apply(H,pair(IDni,pair(IDnj,pair(TSms,apply(H,pair(A,IDnsi)))))))))).
 secret(Dummy_Set_67,subs2,Dummy_Set_68).
 contains(A,Dummy_Set_67).
 contains(Nsh,Dummy_Set_68)

step step_2 (NSl,Nsh,Ni,Nj,H,IDni,IDnj,A,B,TSni,Dummy_TSms,Dummy_TSnsi,Dummy_Y,X,Dummy_Z,SKnsi,Dummy_SKnj,ZZ,Inc,SID,TSms,TSnsi,Y) :=
 state_tserver(NSl,Nsh,Ni,Nj,H,0,IDni,IDnj,A,B,TSni,Dummy_TSms,Dummy_TSnsi,Dummy_Y,X,Dummy_Z,SKnsi,Dummy_SKnj,ZZ,Inc,SID).
 iknows(pair(IDni,pair(IDnj,pair(TSms,Y))))
=[exists TSnsi]=>
 state_tserver(NSl,Nsh,Ni,Nj,H,1,IDni,IDnj,A,B,TSni,TSms,TSnsi,Y,X,apply(H,pair(IDni,pair(IDnj,pair(TSnsi,apply(H,pair(A,IDnj)))))),SKnsi,apply(H,pair(A,IDnj)),ZZ,Inc,SID).
 iknows(pair(IDni,pair(IDnj,pair(TSnsi,apply(H,pair(IDni,pair(IDnj,pair(TSnsi,apply(H,pair(A,IDnj))))))))))

step step_3 (Nj,NSl,Nsh,Ni,H,IDni,IDnj,A,B,TSni,Tsms,Dummy_TSnsi,Y,X,Dummy_Z,SKnsi,SKnj,Dummy_ZZ,Inc,SID,TSnsi,Z) :=
 state_receiver(Nj,NSl,Nsh,Ni,H,0,IDni,IDnj,A,B,TSni,Tsms,Dummy_TSnsi,Y,X,Dummy_Z,SKnsi,SKnj,Dummy_ZZ,Inc,SID).
 iknows(pair(IDni,pair(IDnj,pair(TSnsi,Z))))
 =>
 state_receiver(Nj,NSl,Nsh,Ni,H,1,IDni,IDnj,A,B,TSni,Tsms,TSnsi,Y,X,Z,SKnsi,SKnj,apply(H,pair(IDni,pair(IDnj,pair(TSnsi,SKnj)))),Inc,SID)


section properties:

property secrecy_of_subs1 (MGoal,ASGoal) :=
 [] ((secret(MGoal,subs1,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_subs2 (MGoal,ASGoal) :=
 [] ((secret(MGoal,subs2,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))


section attack_states:

attack_state secrecy_of_subs1 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,subs1,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_subs2 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,subs2,ASGoal) &
 not(contains(i,ASGoal))

