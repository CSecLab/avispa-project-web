role alice(
		A,B 	: agent,
		Pck 		: symmetric_key,
		Ka,Kb 		: public_key,
		Hash 	: hash_func,
		SND,RCV 	: channel(dy))
played_by A def=
		local
			State 	: nat,
			Na,Nb 	: text,
			K1 	: message
		init
			State := 0
		transition
		1. 	State  = 0 /\ RCV(start) =|>
			State':= 2 /\ Na' := new()
				  /\ SND({Na'}_Pck)
		2. State   = 2 /\ RCV({Nb'}_Pck) =|>
			State':= 4 /\ K1' := Hash(Na.Nb')
				  /\ SND({Nb'}_K1')
				  /\ witness(A,B,bob_alice_nb,Nb')
end role
%————————————————————————————————————————————————
role bob(
		A,B 	: agent,
		Pck		: symmetric_key,
		Ka,Kb 	: public_key,
		Hash 	: hash_func,
		SND,RCV 	: channel(dy))
played_by B def=
		local
			State 	: nat,
			Nb,Na 	: text,
			K1 	: message
	init
			State := 1
		transition
		1. State   = 1 /\ RCV({Na'}_Pck) =|>
			State':= 3 /\ Nb' := new()
				  /\ SND({Nb'}_Pck)
				  /\ K1':= Hash(Na'.Nb')
				  /\ secret(K1',k1,{A,B})
		2. State   = 3 /\ RCV({Nb}_K1) =|>
			State':= 5 /\ request(B,A,bob_alice_nb,Nb)
end role
%————————————————————————————————————————————————
	role session(
			A,B 	: agent,
			Pck 	: symmetric_key,
			Ka,Kb 	: public_key,
			Hash 	: hash_func)
def=
		local 
			SA, SB, RA, RB : channel (dy)
		composition
			alice(A,B,Pck,Ka,Kb,Hash,SA,RA)
		/\ 	bob (A,B,Pck,Ka,Kb,Hash,SB,RB)
end role
%————————————————————————————————————————————————
role environment()
def=
		const
			bob_alice_nb,
			k1 		: protocol_id,
			ka, kb, ki 	 	: public_key,
			kab,kai,kib 	: symmetric_key,
			a,b,i 		: agent,
			h 		: hash_func
		intruder_knowledge = {a,b,h,kai,kib,ki,inv(ki)}
		composition
			session(a,b,kab,Ka,Kb,h)
		/\ 	session(a,i,kai,Ka,Ki,h)
		/\ 	session(i,b,kib,Ki,Kb,h)
end role
%————————————————————————————————————————————————
goal
		secrecy_of k1
		authentication_on bob_alice_nb
end goal
%————————————————————————————————————————————————
environment()
