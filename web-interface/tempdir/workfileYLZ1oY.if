%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfileYLZ1oY

section signature:

state_bank: agent * agent * symmetric_key * text * text * text * text * text * text * text * text * text * text * text * hash_func * nat * text * text * text * text * text * text * text * public_key * public_key * message * message * message * set(agent) * set(text) * set(text) * set(text) * set(agent) * set(text) * set(symmetric_key) * nat -> fact
state_payer: agent * agent * symmetric_key * text * text * text * text * text * text * text * text * text * text * text * hash_func * nat * text * text * text * text * text * text * text * public_key * public_key * message * message * message * set(text) * set(text) * set(agent) * set(text) * set(text) * set(agent) * set(symmetric_key) * nat -> fact


section types:

Dummy_Set_101, Dummy_Set_54, Set_101, Set_54: set(symmetric_key)
Dummy_Set_99, Dummy_Set_92, Dummy_Set_53, Dummy_Set_47, ASGoal, Set_99, Set_92, Set_53, Set_47: set(agent)
Dummy_Set_100, Dummy_Set_97, Dummy_Set_96, Dummy_Set_94, Dummy_Set_52, Dummy_Set_49, Dummy_Set_46, Dummy_Set_45, Set_100, Set_97, Set_96, Set_94, Set_52, Set_49, Set_46, Set_45: set(text)
dummy_msg, MGoal, Amount, Payment_success, Payment_failure, start: message
dummy_pk, KB, KPr: public_key
dummy_hash, Hash: hash_func
Dummy_Beta, Dummy_NB2, Dummy_Alpha, Dummy_NPr2, Dummy_NB1, Dummy_Pe_id, Dummy_NPr1, Dummy_Bank_info, Dummy_Pr_id, dummy_nonce, prid, prph, peph, bi, paye_id, pr_mmid, pr_mpin, pe_mmid, bname, pbranch, bcode, NPr1, NB1, NPr2, NB2, DATE, Alpha, Beta, Pr_id, Pr_ph, Pe_ph, Bank_info, Pe_id, Prm_mid, Prm_pin, Pem_mid, B_name, Place_branch, B_code: text
skbb, Skb: symmetric_key
4, SID, Dummy_State, 3, SID2, SID1, 7, 5, State, 6, 2, 1, 0, 9: nat
payer_bank_NPr, payer_bank_Skb, bank_payer_NB, bank_payer_Skb, nb, nb1, bank_payer_nb, bank_payer_skb, payer_bank_npr, bank, npr1, npr2, skb, payer_bank_npr1, payer_bank_skb, payer: protocol_id
A2Goal, A1Goal, prr, ba, Pr, B, i: agent
set_202, set_201, set_200, set_199, set_198, set_197, set_196, set_186, set_185, set_184, set_183, set_182, set_181, set_180, set_157, set_156, set_155, set_154, set_153, set_152, set_151, set_225, set_224, set_223, set_222, set_221, set_220, set_219, set_217, set_216, set_215, set_214, set_213, set_212, set_211, set_209, set_208, set_207, set_206, set_205, set_204, set_203: set


section inits:

initial_state init1 := 
 iknows(start).
 iknows(prr).
 iknows(ba).
 iknows(skbb).
 iknows(prid).
 iknows(prph).
 iknows(peph).
 iknows(bi).
 iknows(paye_id).
 iknows(i).
 state_payer(prr,ba,skbb,prid,prph,peph,bi,paye_id,pr_mmid,pr_mpin,pe_mmid,bname,pbranch,bcode,dummy_hash,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_pk,dummy_pk,dummy_msg,dummy_msg,dummy_msg,set_151,set_152,set_153,set_154,set_155,set_156,set_157,3).
 state_bank(ba,prr,skbb,prid,prph,peph,bi,paye_id,pr_mmid,pr_mpin,pe_mmid,bname,pbranch,bcode,dummy_hash,1,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_pk,dummy_pk,dummy_msg,dummy_msg,dummy_msg,set_180,set_181,set_182,set_183,set_184,set_185,set_186,4).
 state_bank(prr,i,skbb,prid,prph,peph,bi,paye_id,pr_mmid,pr_mpin,pe_mmid,bname,pbranch,bcode,dummy_hash,1,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_pk,dummy_pk,dummy_msg,dummy_msg,dummy_msg,set_203,set_204,set_205,set_206,set_207,set_208,set_209,7).
 state_payer(ba,i,skbb,prid,prph,peph,bi,paye_id,pr_mmid,pr_mpin,pe_mmid,bname,pbranch,bcode,dummy_hash,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_pk,dummy_pk,dummy_msg,dummy_msg,dummy_msg,set_211,set_212,set_213,set_214,set_215,set_216,set_217,9)


section rules:

step step_0 (Pr,B,Skb,Dummy_Pr_id,Pr_ph,Pe_ph,Dummy_Bank_info,Pe_id,Prm_mid,Prm_pin,Pem_mid,B_name,Place_branch,B_code,Hash,Dummy_NPr1,NB1,NPr2,NB2,DATE,Alpha,Beta,KB,KPr,Amount,Payment_success,Payment_failure,Dummy_Set_45,Dummy_Set_46,Dummy_Set_47,Dummy_Set_49,Set_52,Set_53,Set_54,SID,NPr1) :=
 state_payer(Pr,B,Skb,Dummy_Pr_id,Pr_ph,Pe_ph,Dummy_Bank_info,Pe_id,Prm_mid,Prm_pin,Pem_mid,B_name,Place_branch,B_code,Hash,0,Dummy_NPr1,NB1,NPr2,NB2,DATE,Alpha,Beta,KB,KPr,Amount,Payment_success,Payment_failure,Dummy_Set_45,Dummy_Set_46,Dummy_Set_47,Dummy_Set_49,Set_52,Set_53,Set_54,SID).
 iknows(start)
=[exists NPr1]=>
 state_payer(Pr,B,Skb,Dummy_Set_45,Pr_ph,Pe_ph,Dummy_Set_46,Pe_id,Prm_mid,Prm_pin,Pem_mid,B_name,Place_branch,B_code,Hash,2,NPr1,NB1,NPr2,NB2,DATE,Alpha,Beta,KB,KPr,Amount,Payment_success,Payment_failure,Dummy_Set_45,Dummy_Set_46,Dummy_Set_47,Dummy_Set_49,Set_52,Set_53,Set_54,SID).
 iknows(crypt(KB,pair(Dummy_Set_45,pair(Dummy_Set_46,NPr1)))).
 contains(Pr_ph,Dummy_Set_45).
 contains(Prm_mid,Dummy_Set_45).
 contains(Prm_pin,Dummy_Set_45).
 contains(B_name,Dummy_Set_46).
 contains(Place_branch,Dummy_Set_46).
 contains(B_code,Dummy_Set_46).
 contains(Pr,Dummy_Set_47).
 contains(B,Dummy_Set_47).
 contains(Dummy_NPr1,Dummy_Set_49)

step step_1 (Pr,B,Skb,Pr_id,Pr_ph,Pe_ph,Bank_info,Dummy_Pe_id,Prm_mid,Prm_pin,Pem_mid,B_name,Place_branch,B_code,Hash,NPr1,Dummy_NB1,Dummy_NPr2,NB2,DATE,Dummy_Alpha,Beta,KB,KPr,Amount,Payment_success,Payment_failure,Set_45,Set_46,Set_47,Set_49,Dummy_Set_52,Dummy_Set_53,Dummy_Set_54,SID,NB1,NPr2) :=
 state_payer(Pr,B,Skb,Pr_id,Pr_ph,Pe_ph,Bank_info,Dummy_Pe_id,Prm_mid,Prm_pin,Pem_mid,B_name,Place_branch,B_code,Hash,2,NPr1,Dummy_NB1,Dummy_NPr2,NB2,DATE,Dummy_Alpha,Beta,KB,KPr,Amount,Payment_success,Payment_failure,Set_45,Set_46,Set_47,Set_49,Dummy_Set_52,Dummy_Set_53,Dummy_Set_54,SID).
 iknows(crypt(KPr,pair(Skb,NB1)))
=[exists NPr2]=>
 state_payer(Pr,B,Skb,Pr_id,Pr_ph,Pe_ph,Bank_info,Dummy_Set_52,Prm_mid,Prm_pin,Pem_mid,B_name,Place_branch,B_code,Hash,4,NPr1,NB1,NPr2,NB2,DATE,apply(Hash,pair(Skb,pair(Amount,pair(Dummy_Set_52,NPr2)))),Beta,KB,KPr,Amount,Payment_success,Payment_failure,Set_45,Set_46,Set_47,Set_49,Dummy_Set_52,Dummy_Set_53,Dummy_Set_54,SID).
 iknows(scrypt(Skb,pair(Amount,pair(Dummy_Pe_id,pair(NPr2,pair(DATE,apply(Hash,pair(Skb,pair(Amount,pair(Dummy_Set_52,NPr2)))))))))).
 witness(Pr,B,payer_bank_skb,Dummy_Set_54).
 contains(Pe_ph,Dummy_Set_52).
 contains(Pem_mid,Dummy_Set_52).
 contains(Pr,Dummy_Set_53).
 contains(B,Dummy_Set_53).
 contains(Skb,Dummy_Set_54)

step step_2 (Pr,B,Skb,Pr_id,Pr_ph,Pe_ph,Bank_info,Pe_id,Prm_mid,Prm_pin,Pem_mid,B_name,Place_branch,B_code,Hash,Dummy_NPr1,NB1,NPr2,Dummy_NB2,DATE,Alpha,Dummy_Beta,KB,KPr,Amount,Payment_success,Payment_failure,Set_45,Set_46,Set_47,Set_49,Set_52,Set_53,Set_54,SID,NPr1,NB2) :=
 state_payer(Pr,B,Skb,Pr_id,Pr_ph,Pe_ph,Bank_info,Pe_id,Prm_mid,Prm_pin,Pem_mid,B_name,Place_branch,B_code,Hash,4,Dummy_NPr1,NB1,NPr2,Dummy_NB2,DATE,Alpha,Dummy_Beta,KB,KPr,Amount,Payment_success,Payment_failure,Set_45,Set_46,Set_47,Set_49,Set_52,Set_53,Set_54,SID).
 iknows(scrypt(Skb,pair(Payment_success,pair(Amount,pair(Pe_id,pair(NPr1,pair(NB2,pair(DATE,Dummy_Beta))))))))
 =>
 state_payer(Pr,B,Skb,Pr_id,Pr_ph,Pe_ph,Bank_info,Pe_id,Prm_mid,Prm_pin,Pem_mid,B_name,Place_branch,B_code,Hash,6,NPr1,NB1,NPr2,NB2,DATE,Alpha,apply(Hash,pair(Skb,pair(Payment_success,pair(Amount,pair(Pe_id,pair(NPr1,NB2)))))),KB,KPr,Amount,Payment_success,Payment_failure,Set_45,Set_46,Set_47,Set_49,Set_52,Set_53,Set_54,SID)

step step_3 (B,Pr,Skb,Pr_id,Pr_ph,Pe_ph,Bank_info,Pe_id,Prm_mid,Prm_pin,Pem_mid,B_name,Place_branch,B_code,Hash,NPr1,Dummy_NB1,NPr2,NB2,DATE,Alpha,Beta,KB,KPr,Amount,Payment_success,Payment_failure,Dummy_Set_92,Dummy_Set_94,Set_96,Set_97,Set_99,Set_100,Set_101,SID,NB1) :=
 state_bank(B,Pr,Skb,Pr_id,Pr_ph,Pe_ph,Bank_info,Pe_id,Prm_mid,Prm_pin,Pem_mid,B_name,Place_branch,B_code,Hash,1,NPr1,Dummy_NB1,NPr2,NB2,DATE,Alpha,Beta,KB,KPr,Amount,Payment_success,Payment_failure,Dummy_Set_92,Dummy_Set_94,Set_96,Set_97,Set_99,Set_100,Set_101,SID).
 iknows(start)
=[exists NB1]=>
 state_bank(B,Pr,Skb,Pr_id,Pr_ph,Pe_ph,Bank_info,Pe_id,Prm_mid,Prm_pin,Pem_mid,B_name,Place_branch,B_code,Hash,3,NPr1,NB1,NPr2,NB2,DATE,Alpha,Beta,KB,KPr,Amount,Payment_success,Payment_failure,Dummy_Set_92,Dummy_Set_94,Set_96,Set_97,Set_99,Set_100,Set_101,SID).
 iknows(crypt(KPr,pair(Skb,NB1))).
 contains(Pr,Dummy_Set_92).
 contains(B,Dummy_Set_92).
 contains(Dummy_NB1,Dummy_Set_94)

step step_4 (B,Pr,Skb,Dummy_Pr_id,Pr_ph,Pe_ph,Dummy_Bank_info,Pe_id,Prm_mid,Prm_pin,Pem_mid,B_name,Place_branch,B_code,Hash,Dummy_NPr1,NB1,NPr2,Dummy_NB2,DATE,Alpha,Dummy_Beta,KB,KPr,Amount,Payment_success,Payment_failure,Set_92,Set_94,Dummy_Set_96,Dummy_Set_97,Dummy_Set_99,Dummy_Set_100,Dummy_Set_101,SID,NPr1,NB2) :=
 state_bank(B,Pr,Skb,Dummy_Pr_id,Pr_ph,Pe_ph,Dummy_Bank_info,Pe_id,Prm_mid,Prm_pin,Pem_mid,B_name,Place_branch,B_code,Hash,3,Dummy_NPr1,NB1,NPr2,Dummy_NB2,DATE,Alpha,Dummy_Beta,KB,KPr,Amount,Payment_success,Payment_failure,Set_92,Set_94,Dummy_Set_96,Dummy_Set_97,Dummy_Set_99,Dummy_Set_100,Dummy_Set_101,SID).
 iknows(crypt(KB,pair(Pr_id,pair(Bank_info,NPr1))))
=[exists NB2]=>
 state_bank(B,Pr,Skb,Dummy_Set_96,Pr_ph,Pe_ph,Dummy_Set_97,Pe_id,Prm_mid,Prm_pin,Pem_mid,B_name,Place_branch,B_code,Hash,5,NPr1,NB1,NPr2,NB2,DATE,Alpha,apply(Hash,pair(Skb,pair(Payment_success,pair(Amount,pair(Pe_id,pair(NPr1,pair(NB2,DATE))))))),KB,KPr,Amount,Payment_success,Payment_failure,Set_92,Set_94,Dummy_Set_96,Dummy_Set_97,Dummy_Set_99,Dummy_Set_100,Dummy_Set_101,SID).
 iknows(scrypt(Skb,pair(Payment_success,pair(Amount,pair(Pe_id,pair(NPr1,pair(NB2,pair(DATE,apply(Hash,pair(Skb,pair(Payment_success,pair(Amount,pair(Pe_id,pair(NPr1,pair(NB2,DATE))))))))))))))).
 witness(Pr,B,payer_bank_npr,Dummy_Set_100).
 witness(B,Pr,bank_payer_skb,Dummy_Set_101).
 contains(Pr_ph,Dummy_Set_96).
 contains(Prm_mid,Dummy_Set_96).
 contains(Prm_pin,Dummy_Set_96).
 contains(B_name,Dummy_Set_97).
 contains(Place_branch,Dummy_Set_97).
 contains(B_code,Dummy_Set_97).
 contains(Pr,Dummy_Set_99).
 contains(B,Dummy_Set_99).
 contains(NPr1,Dummy_Set_100).
 contains(Skb,Dummy_Set_101)

step step_5 (B,Pr,Skb,Pr_id,Pr_ph,Pe_ph,Bank_info,Pe_id,Prm_mid,Prm_pin,Pem_mid,B_name,Place_branch,B_code,Hash,NPr1,NB1,Dummy_NPr2,NB2,DATE,Dummy_Alpha,Beta,KB,KPr,Amount,Payment_success,Payment_failure,Set_92,Set_94,Set_96,Set_97,Set_99,Set_100,Set_101,SID,NPr2) :=
 state_bank(B,Pr,Skb,Pr_id,Pr_ph,Pe_ph,Bank_info,Pe_id,Prm_mid,Prm_pin,Pem_mid,B_name,Place_branch,B_code,Hash,5,NPr1,NB1,Dummy_NPr2,NB2,DATE,Dummy_Alpha,Beta,KB,KPr,Amount,Payment_success,Payment_failure,Set_92,Set_94,Set_96,Set_97,Set_99,Set_100,Set_101,SID).
 iknows(scrypt(Skb,pair(Amount,pair(Pe_id,pair(NPr2,pair(DATE,Dummy_Alpha))))))
 =>
 state_bank(B,Pr,Skb,Pr_id,Pr_ph,Pe_ph,Bank_info,Pe_id,Prm_mid,Prm_pin,Pem_mid,B_name,Place_branch,B_code,Hash,7,NPr1,NB1,NPr2,NB2,DATE,apply(Hash,pair(Skb,pair(Amount,pair(Pe_id,pair(DATE,NPr2))))),Beta,KB,KPr,Amount,Payment_success,Payment_failure,Set_92,Set_94,Set_96,Set_97,Set_99,Set_100,Set_101,SID)


section properties:

property secrecy_of_nb (MGoal,ASGoal) :=
 [] ((secret(MGoal,nb,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_npr (MGoal,ASGoal) :=
 [] ((secret(MGoal,npr,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_skb (MGoal,ASGoal) :=
 [] ((secret(MGoal,skb,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property authentication_on_bank_payer_nb (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,bank_payer_nb,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,bank_payer_nb,MGoal))
     /\ ((request(A1Goal,A2Goal,bank_payer_nb,MGoal,SID1)
           /\ request(A1Goal,A2Goal,bank_payer_nb,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_bank_payer_skb (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,bank_payer_skb,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,bank_payer_skb,MGoal))
     /\ ((request(A1Goal,A2Goal,bank_payer_skb,MGoal,SID1)
           /\ request(A1Goal,A2Goal,bank_payer_skb,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_payer_bank_skb (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,payer_bank_skb,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,payer_bank_skb,MGoal))
     /\ ((request(A1Goal,A2Goal,payer_bank_skb,MGoal,SID1)
           /\ request(A1Goal,A2Goal,payer_bank_skb,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_payer_bank_npr (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,payer_bank_npr,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,payer_bank_npr,MGoal))
     /\ ((request(A1Goal,A2Goal,payer_bank_npr,MGoal,SID1)
           /\ request(A1Goal,A2Goal,payer_bank_npr,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state secrecy_of_nb (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,nb,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_npr (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,npr,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_skb (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,skb,ASGoal) &
 not(contains(i,ASGoal))

attack_state authentication_on_bank_payer_nb (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,bank_payer_nb,MGoal,SID) &
 not(witness(A2Goal,A1Goal,bank_payer_nb,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_bank_payer_nb (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,bank_payer_nb,MGoal,SID1).
 request(A1Goal,A2Goal,bank_payer_nb,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_bank_payer_skb (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,bank_payer_skb,MGoal,SID) &
 not(witness(A2Goal,A1Goal,bank_payer_skb,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_bank_payer_skb (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,bank_payer_skb,MGoal,SID1).
 request(A1Goal,A2Goal,bank_payer_skb,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_payer_bank_skb (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,payer_bank_skb,MGoal,SID) &
 not(witness(A2Goal,A1Goal,payer_bank_skb,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_payer_bank_skb (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,payer_bank_skb,MGoal,SID1).
 request(A1Goal,A2Goal,payer_bank_skb,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_payer_bank_npr (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,payer_bank_npr,MGoal,SID) &
 not(witness(A2Goal,A1Goal,payer_bank_npr,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_payer_bank_npr (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,payer_bank_npr,MGoal,SID1).
 request(A1Goal,A2Goal,payer_bank_npr,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

