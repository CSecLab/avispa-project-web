%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfile0NYpd0

section signature:

state_dest: agent * agent * agent * agent * symmetric_key * symmetric_key * symmetric_key * symmetric_key * symmetric_key * symmetric_key * public_key * hash_func * nat * text * message * set(agent) * crypt(public_key,symmetric_key) * crypt(inv(public_key),pair(symmetric_key,message)) * crypt(public_key,symmetric_key) * crypt(inv(public_key),pair(symmetric_key,message)) * scrypt(symmetric_key,pair(message,inv(public_key))) * set(agent) * nat -> fact
state_router2: agent * agent * agent * agent * symmetric_key * public_key * public_key * nat * text * set(agent) * message * crypt(public_key,symmetric_key) * crypt(inv(public_key),pair(symmetric_key,message)) * crypt(public_key,symmetric_key) * crypt(inv(public_key),pair(symmetric_key,message)) * scrypt(symmetric_key,pair(message,inv(public_key))) * set(agent) * nat -> fact
state_router1: agent * agent * agent * agent * symmetric_key * public_key * public_key * nat * text * message * crypt(public_key,symmetric_key) * crypt(inv(public_key),pair(symmetric_key,message)) * set(agent) * scrypt(symmetric_key,pair(message,inv(public_key))) * set(agent) * nat -> fact
state_source: agent * agent * agent * agent * symmetric_key * symmetric_key * symmetric_key * symmetric_key * symmetric_key * symmetric_key * public_key * hash_func * nat * text * message * scrypt(symmetric_key,pair(message,inv(public_key))) * set(agent) * set(agent) * nat -> fact


section types:

dummy_set: set(message)
Dummy_SigR2, Dummy_SigR1, SigR2, SigR1: crypt(inv(public_key),pair(symmetric_key,message))
Dummy_EncR2, Dummy_EncR1, EncR2, EncR1: crypt(public_key,symmetric_key)
a4, d_r2_k2, a3, d_r1_k1, a2, s_d_kd, s_r2_k2, s_r1_k1, a1: protocol_id
Dummy_Auth, Auth: scrypt(symmetric_key,pair(message,inv(public_key)))
Dummy_SessionID, dummy_msg, MGoal, SessionID, start: message
Dummy_T, dummy_nonce, T: text
h, H: hash_func
Dummy_Pks, dummy_pk, pks, kr1, kr2, ki, Pks, Kr2, Kr1: public_key
Dummy_Kd, Dummy_K2, Dummy_K1, Dummy_KDSs, Dummy_KSDs, dummy_sk, ksd, kSDs, kDSs, k1, k2, kd, Ksd, Kd, KSDs, KDSs, K1, K2: symmetric_key
Dummy_Set_85, Dummy_Set_60, Dummy_Set_32, Dummy_Path, ASGoal, Set_115, Path, Set_85, Set_60, Set_32, Dummy_Set_115: set(agent)
A2Goal, A1Goal, s, r1, r2, d, S, R1, R2, D, i: agent
5, SID, 4, Dummy_State, 3, SID2, SID1, State, 2, 1, 0, 11, 10, 8, 6: nat
set_197, set_189, set_171, set_170, set_213, set_211, set_210, set_208, set_207, set_203: set


section inits:

initial_state init1 := 
 iknows(start).
 iknows(s).
 iknows(r1).
 iknows(r2).
 iknows(d).
 iknows(h).
 iknows(ki).
 iknows(i).
 state_source(s,r1,r2,d,ksd,kSDs,kDSs,k1,k2,kd,pks,h,0,dummy_nonce,dummy_msg,scrypt(dummy_sk,pair(dummy_msg,inv(dummy_pk))),set_170,set_171,3).
 state_router1(r1,s,r2,d,k1,kr1,pks,1,dummy_nonce,dummy_msg,crypt(dummy_pk,dummy_sk),crypt(inv(dummy_pk),pair(dummy_sk,dummy_msg)),dummy_set,scrypt(dummy_sk,pair(dummy_msg,inv(dummy_pk))),set_189,4).
 state_router2(r2,s,r1,d,k2,kr2,pks,2,dummy_nonce,dummy_set,dummy_msg,crypt(dummy_pk,dummy_sk),crypt(inv(dummy_pk),pair(dummy_sk,dummy_msg)),crypt(dummy_pk,dummy_sk),crypt(inv(dummy_pk),pair(dummy_sk,dummy_msg)),scrypt(dummy_sk,pair(dummy_msg,inv(dummy_pk))),set_197,5).
 state_dest(d,s,r1,r2,ksd,kd,kSDs,kDSs,k1,k2,pks,h,3,dummy_nonce,dummy_msg,dummy_set,crypt(dummy_pk,dummy_sk),crypt(inv(dummy_pk),pair(dummy_sk,dummy_msg)),crypt(dummy_pk,dummy_sk),crypt(inv(dummy_pk),pair(dummy_sk,dummy_msg)),scrypt(dummy_sk,pair(dummy_msg,inv(dummy_pk))),set_203,6).
 state_source(s,i,r2,d,ksd,kSDs,kDSs,k1,k2,kd,pks,h,0,dummy_nonce,dummy_msg,scrypt(dummy_sk,pair(dummy_msg,inv(dummy_pk))),set_207,set_208,8).
 state_router2(r2,s,i,d,k2,kr2,pks,2,dummy_nonce,dummy_set,dummy_msg,crypt(dummy_pk,dummy_sk),crypt(inv(dummy_pk),pair(dummy_sk,dummy_msg)),crypt(dummy_pk,dummy_sk),crypt(inv(dummy_pk),pair(dummy_sk,dummy_msg)),scrypt(dummy_sk,pair(dummy_msg,inv(dummy_pk))),set_211,10).
 state_dest(d,s,i,r2,ksd,kd,kSDs,kDSs,k1,k2,pks,h,3,dummy_nonce,dummy_msg,dummy_set,crypt(dummy_pk,dummy_sk),crypt(inv(dummy_pk),pair(dummy_sk,dummy_msg)),crypt(dummy_pk,dummy_sk),crypt(inv(dummy_pk),pair(dummy_sk,dummy_msg)),scrypt(dummy_sk,pair(dummy_msg,inv(dummy_pk))),set_213,11)


section rules:

step step_0 (S,R1,R2,D,Ksd,Dummy_KSDs,Dummy_KDSs,K1,K2,Kd,Pks,H,Dummy_T,Dummy_SessionID,Dummy_Auth,Dummy_Path,Dummy_Set_32,SID,T) :=
 state_source(S,R1,R2,D,Ksd,Dummy_KSDs,Dummy_KDSs,K1,K2,Kd,Pks,H,0,Dummy_T,Dummy_SessionID,Dummy_Auth,Dummy_Path,Dummy_Set_32,SID).
 iknows(start)
=[exists T]=>
 state_source(S,R1,R2,D,Ksd,scrypt(Ksd,apply(H,pair(S,pair(D,apply(H,pair(Pks,pair(Dummy_Path,T))))))),scrypt(Ksd,apply(H,pair(D,pair(S,apply(H,pair(Pks,pair(Dummy_Path,T))))))),K1,K2,Kd,Pks,H,2,T,apply(H,pair(Pks,pair(Dummy_Path,T))),scrypt(scrypt(Ksd,apply(H,pair(S,pair(D,apply(H,pair(Pks,pair(Dummy_Path,T))))))),pair(apply(H,pair(Pks,pair(Dummy_Path,T))),inv(Pks))),Dummy_Path,Dummy_Set_32,SID).
 iknows(pair(Pks,pair(Dummy_Path,pair(T,scrypt(scrypt(Ksd,apply(H,pair(S,pair(D,apply(H,pair(Pks,pair(Dummy_Path,T))))))),pair(apply(H,pair(Pks,pair(Dummy_Path,T))),inv(Pks))))))).
 secret(Ksd,a1,Dummy_Set_32).
 contains(S,Dummy_Path).
 contains(R1,Dummy_Path).
 contains(R2,Dummy_Path).
 contains(D,Dummy_Path).
 contains(S,Dummy_Set_32).
 contains(D,Dummy_Set_32)

step step_1 (S,R1,R2,D,Ksd,KSDs,KDSs,Dummy_K1,Dummy_K2,Dummy_Kd,Pks,H,T,SessionID,Dummy_Auth,Path,Set_32,SID,K1,K2,Kd,Auth) :=
 state_source(S,R1,R2,D,Ksd,KSDs,KDSs,Dummy_K1,Dummy_K2,Dummy_Kd,Pks,H,4,T,SessionID,Dummy_Auth,Path,Set_32,SID).
 iknows(crypt(Pks,pair(K1,pair(K2,pair(Kd,Auth)))))
 =>
 state_source(S,R1,R2,D,Ksd,KSDs,KDSs,K1,K2,Kd,Pks,H,4,T,SessionID,Auth,Path,Set_32,SID).
 witness(S,R1,s_r1_k1,K1).
 witness(S,R2,s_r2_k2,K2).
 witness(S,D,s_d_kd,Kd)

step step_2 (R1,S,R2,D,Dummy_K1,Kr1,Dummy_Pks,Dummy_T,SessionID,Dummy_EncR1,Dummy_SigR1,Dummy_Path,Dummy_Auth,Dummy_Set_60,SID,K1,Pks,T,Path,Auth) :=
 state_router1(R1,S,R2,D,Dummy_K1,Kr1,Dummy_Pks,1,Dummy_T,SessionID,Dummy_EncR1,Dummy_SigR1,Dummy_Path,Dummy_Auth,Dummy_Set_60,SID).
 iknows(pair(Pks,pair(Path,pair(T,Auth)))).
 contains(R1,Path)
=[exists K1]=>
 state_router1(R1,S,R2,D,K1,Kr1,Pks,3,T,SessionID,crypt(Dummy_Pks,Dummy_K1),crypt(inv(Kr1),pair(Dummy_K1,SessionID)),Path,Auth,Dummy_Set_60,SID).
 iknows(pair(Pks,pair(Path,pair(T,pair(Auth,pair(crypt(Dummy_Pks,Dummy_K1),crypt(inv(Kr1),pair(Dummy_K1,SessionID)))))))).
 secret(Dummy_K1,a2,Dummy_Set_60).
 request(R1,S,s_r1_k1,K1,SID).
 request(R1,D,d_r1_k1,K1,SID).
 contains(R1,Dummy_Set_60).
 contains(D,Dummy_Set_60).
 contains(R1,Path)

step step_3 (R2,S,R1,D,Dummy_K2,Kr2,Dummy_Pks,Dummy_T,Dummy_Path,SessionID,Dummy_EncR2,Dummy_SigR2,Dummy_EncR1,Dummy_SigR1,Dummy_Auth,Dummy_Set_85,SID,K2,Pks,T,Path,EncR1,SigR1,Auth) :=
 state_router2(R2,S,R1,D,Dummy_K2,Kr2,Dummy_Pks,2,Dummy_T,Dummy_Path,SessionID,Dummy_EncR2,Dummy_SigR2,Dummy_EncR1,Dummy_SigR1,Dummy_Auth,Dummy_Set_85,SID).
 iknows(pair(Pks,pair(Path,pair(T,pair(Auth,pair(EncR1,SigR1)))))).
 contains(R2,Path)
=[exists K2]=>
 state_router2(R2,S,R1,D,K2,Kr2,Pks,4,T,Path,SessionID,crypt(Dummy_Pks,Dummy_K2),crypt(inv(Kr2),pair(Dummy_K2,SessionID)),EncR1,SigR1,Auth,Dummy_Set_85,SID).
 iknows(pair(Pks,pair(Path,pair(T,pair(Auth,pair(EncR1,pair(SigR1,pair(crypt(Dummy_Pks,Dummy_K2),crypt(inv(Kr2),pair(Dummy_K2,SessionID)))))))))).
 secret(Dummy_K2,a3,Dummy_Set_85).
 request(R2,S,s_r2_k2,K2,SID).
 request(R2,D,d_r2_k2,K2,SID).
 contains(R2,Dummy_Set_85).
 contains(D,Dummy_Set_85).
 contains(R2,Path)

step step_4 (D,S,R1,R2,Ksd,Dummy_Kd,Dummy_KSDs,Dummy_KDSs,K1,K2,Dummy_Pks,H,Dummy_T,SessionID,Dummy_Path,Dummy_EncR1,Dummy_SigR1,Dummy_EncR2,Dummy_SigR2,Dummy_Auth,Dummy_Set_115,SID,Kd,Pks,T,Path,EncR1,SigR1,EncR2,SigR2,Auth) :=
 state_dest(D,S,R1,R2,Ksd,Dummy_Kd,Dummy_KSDs,Dummy_KDSs,K1,K2,Dummy_Pks,H,3,Dummy_T,SessionID,Dummy_Path,Dummy_EncR1,Dummy_SigR1,Dummy_EncR2,Dummy_SigR2,Dummy_Auth,Dummy_Set_115,SID).
 iknows(pair(Pks,pair(Path,pair(T,pair(Auth,pair(EncR1,pair(SigR1,pair(EncR2,SigR2)))))))).
 contains(D,Path)
=[exists Kd]=>
 state_dest(D,S,R1,R2,Ksd,Kd,scrypt(Ksd,apply(H,pair(S,pair(D,SessionID)))),scrypt(Ksd,apply(H,pair(D,pair(S,SessionID)))),K1,K2,Pks,H,5,T,SessionID,Path,EncR1,SigR1,EncR2,SigR2,Auth,Dummy_Set_115,SID).
 iknows(crypt(Dummy_Pks,pair(K1,pair(K2,pair(Dummy_Kd,Auth))))).
 secret(Dummy_Kd,a4,Dummy_Set_115).
 request(D,S,s_d_kd,Kd,SID).
 witness(D,R1,d_r1_k1,K1).
 witness(D,R2,d_r2_k2,K2).
 contains(D,Dummy_Set_115).
 contains(S,Dummy_Set_115).
 contains(D,Path)


section properties:

property secrecy_of_a1 (MGoal,ASGoal) :=
 [] ((secret(MGoal,a1,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_a2 (MGoal,ASGoal) :=
 [] ((secret(MGoal,a2,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_a3 (MGoal,ASGoal) :=
 [] ((secret(MGoal,a3,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_a4 (MGoal,ASGoal) :=
 [] ((secret(MGoal,a4,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property authentication_on_s_r1_k1 (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,s_r1_k1,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,s_r1_k1,MGoal))
     /\ ((request(A1Goal,A2Goal,s_r1_k1,MGoal,SID1)
           /\ request(A1Goal,A2Goal,s_r1_k1,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_s_r2_k2 (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,s_r2_k2,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,s_r2_k2,MGoal))
     /\ ((request(A1Goal,A2Goal,s_r2_k2,MGoal,SID1)
           /\ request(A1Goal,A2Goal,s_r2_k2,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_s_d_kd (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,s_d_kd,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,s_d_kd,MGoal))
     /\ ((request(A1Goal,A2Goal,s_d_kd,MGoal,SID1)
           /\ request(A1Goal,A2Goal,s_d_kd,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_d_r1_k1 (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,d_r1_k1,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,d_r1_k1,MGoal))
     /\ ((request(A1Goal,A2Goal,d_r1_k1,MGoal,SID1)
           /\ request(A1Goal,A2Goal,d_r1_k1,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_d_r2_k2 (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,d_r2_k2,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,d_r2_k2,MGoal))
     /\ ((request(A1Goal,A2Goal,d_r2_k2,MGoal,SID1)
           /\ request(A1Goal,A2Goal,d_r2_k2,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state secrecy_of_a1 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,a1,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_a2 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,a2,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_a3 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,a3,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_a4 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,a4,ASGoal) &
 not(contains(i,ASGoal))

attack_state authentication_on_s_r1_k1 (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,s_r1_k1,MGoal,SID) &
 not(witness(A2Goal,A1Goal,s_r1_k1,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_s_r1_k1 (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,s_r1_k1,MGoal,SID1).
 request(A1Goal,A2Goal,s_r1_k1,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_s_r2_k2 (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,s_r2_k2,MGoal,SID) &
 not(witness(A2Goal,A1Goal,s_r2_k2,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_s_r2_k2 (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,s_r2_k2,MGoal,SID1).
 request(A1Goal,A2Goal,s_r2_k2,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_s_d_kd (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,s_d_kd,MGoal,SID) &
 not(witness(A2Goal,A1Goal,s_d_kd,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_s_d_kd (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,s_d_kd,MGoal,SID1).
 request(A1Goal,A2Goal,s_d_kd,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_d_r1_k1 (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,d_r1_k1,MGoal,SID) &
 not(witness(A2Goal,A1Goal,d_r1_k1,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_d_r1_k1 (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,d_r1_k1,MGoal,SID1).
 request(A1Goal,A2Goal,d_r1_k1,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_d_r2_k2 (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,d_r2_k2,MGoal,SID) &
 not(witness(A2Goal,A1Goal,d_r2_k2,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_d_r2_k2 (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,d_r2_k2,MGoal,SID1).
 request(A1Goal,A2Goal,d_r2_k2,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

