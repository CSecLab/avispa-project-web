%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfile8DIvOO

section signature:

state_bob: agent * agent * symmetric_key * hash_func * nat * text * text * text * text * text * text * message * public_key * public_key * hash_func * nat -> fact
state_alice: agent * agent * symmetric_key * hash_func * nat * text * text * text * text * text * text * message * public_key * public_key * hash_func * nat -> fact


section types:

Ya, Yb, dummy_pk: public_key
ASGoal: set(agent)
M, Dummy_M, start, dummy_msg, MGoal: message
alice_bob_na, bob_alice_nb, k: protocol_id
G, K, C, R1, R2, S, Dummy_S, Dummy_C, Dummy_K, Dummy_R2, Dummy_R1, dummy_nonce: text
3, 10, 6, State, 4, SID, Dummy_State, 2, 1, 0, SID2, SID1: nat
MUL, H, dummy_hash, h: hash_func
Kab, kab, kai, kib: symmetric_key
A, B, A2Goal, A1Goal, a, b, i: agent


section inits:

initial_state init1 := 
 iknows(start).
 iknows(a).
 iknows(b).
 iknows(h).
 iknows(kai).
 iknows(kib).
 iknows(i).
 state_alice(a,b,kab,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_pk,dummy_pk,dummy_hash,3).
 state_bob(b,a,kab,h,1,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_pk,dummy_pk,dummy_hash,4).
 state_alice(a,i,kai,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_pk,dummy_pk,dummy_hash,6).
 state_bob(b,i,kib,h,1,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_pk,dummy_pk,dummy_hash,10)


section rules:

step step_0 (A,B,Kab,H,Dummy_R1,Dummy_R2,Dummy_K,Dummy_C,Dummy_S,G,M,Ya,Yb,MUL,SID,K) :=
 state_alice(A,B,Kab,H,0,Dummy_R1,Dummy_R2,Dummy_K,Dummy_C,Dummy_S,G,M,Ya,Yb,MUL,SID).
 iknows(start)
=[exists K]=>
 state_alice(A,B,Kab,H,2,apply(MUL,pair(M,apply(H,exp(apply(MUL,pair(exp(apply(H,pair(Ya,Yb)),apply(H,pair(Yb,B))),pair(apply(H,B),Yb))),K)))),apply(H,pair(M,apply(H,pair(exp(G,K),exp(apply(MUL,pair(exp(apply(H,pair(Ya,Yb)),apply(H,pair(Yb,B))),pair(apply(H,B),Yb))),K))))),K,exp(apply(MUL,pair(exp(apply(H,pair(Ya,Yb)),apply(H,pair(Yb,B))),pair(apply(H,B),Yb))),K),apply(MUL,pair(K,pair(inv(Ya),apply(H,pair(M,apply(H,pair(exp(G,K),exp(apply(MUL,pair(exp(apply(H,pair(Ya,Yb)),apply(H,pair(Yb,B))),pair(apply(H,B),Yb))),K)))))))),G,M,Ya,Yb,MUL,SID).
 iknows(scrypt(Kab,pair(apply(MUL,pair(M,apply(H,exp(apply(MUL,pair(exp(apply(H,pair(Ya,Yb)),apply(H,pair(Yb,B))),pair(apply(H,B),Yb))),K)))),pair(apply(H,pair(M,apply(H,pair(exp(G,K),exp(apply(MUL,pair(exp(apply(H,pair(Ya,Yb)),apply(H,pair(Yb,B))),pair(apply(H,B),Yb))),K))))),apply(MUL,pair(K,pair(inv(Ya),apply(H,pair(M,apply(H,pair(exp(G,K),exp(apply(MUL,pair(exp(apply(H,pair(Ya,Yb)),apply(H,pair(Yb,B))),pair(apply(H,B),Yb))),K)))))))))))).
 witness(A,B,bob_alice_nb,apply(H,pair(M,apply(H,pair(exp(G,K),exp(apply(MUL,pair(exp(apply(H,pair(Ya,Yb)),apply(H,pair(Yb,B))),pair(apply(H,B),Yb))),K))))))

step step_1 (B,A,Kab,H,Dummy_R1,Dummy_R2,Dummy_S,Dummy_K,Dummy_C,G,Dummy_M,Ya,Yb,MUL,SID,R1,S) :=
 state_bob(B,A,Kab,H,1,Dummy_R1,Dummy_R2,Dummy_S,Dummy_K,Dummy_C,G,Dummy_M,Ya,Yb,MUL,SID).
 iknows(scrypt(Kab,pair(R1,pair(R2,S))))
 =>
 state_bob(B,A,Kab,H,3,R1,apply(H,pair(apply(MUL,pair(apply(H,exp(apply(MUL,pair(exp(G,S),exp(apply(MUL,pair(exp(apply(H,pair(Ya,Yb)),apply(H,pair(Ya,A))),pair(apply(H,A),Ya))),apply(MUL,pair(S,R2))))),inv(Yb))),R1)),pair(apply(H,apply(MUL,pair(exp(G,S),exp(apply(MUL,pair(exp(apply(H,pair(Ya,Yb)),apply(H,pair(Ya,A))),pair(apply(H,A),Ya))),apply(MUL,pair(S,R2)))))),exp(apply(MUL,pair(exp(G,S),exp(apply(MUL,pair(exp(apply(H,pair(Ya,Yb)),apply(H,pair(Ya,A))),pair(apply(H,A),Ya))),apply(MUL,pair(S,R2))))),inv(Yb))))),S,apply(MUL,pair(exp(G,S),exp(apply(MUL,pair(exp(apply(H,pair(Ya,Yb)),apply(H,pair(Ya,A))),pair(apply(H,A),Ya))),apply(MUL,pair(S,apply(H,pair(apply(MUL,pair(apply(H,exp(apply(MUL,pair(exp(G,S),exp(apply(MUL,pair(exp(apply(H,pair(Ya,Yb)),apply(H,pair(Ya,A))),pair(apply(H,A),Ya))),apply(MUL,pair(S,R2))))),inv(Yb))),R1)),pair(apply(H,apply(MUL,pair(exp(G,S),exp(apply(MUL,pair(exp(apply(H,pair(Ya,Yb)),apply(H,pair(Ya,A))),pair(apply(H,A),Ya))),apply(MUL,pair(S,R2)))))),exp(apply(MUL,pair(exp(G,S),exp(apply(MUL,pair(exp(apply(H,pair(Ya,Yb)),apply(H,pair(Ya,A))),pair(apply(H,A),Ya))),apply(MUL,pair(S,R2))))),inv(Yb)))))))))),exp(apply(MUL,pair(exp(G,S),exp(apply(MUL,pair(exp(apply(H,pair(Ya,Yb)),apply(H,pair(Ya,A))),pair(apply(H,A),Ya))),apply(MUL,pair(S,apply(H,pair(apply(MUL,pair(apply(H,exp(apply(MUL,pair(exp(G,S),exp(apply(MUL,pair(exp(apply(H,pair(Ya,Yb)),apply(H,pair(Ya,A))),pair(apply(H,A),Ya))),apply(MUL,pair(S,R2))))),inv(Yb))),R1)),pair(apply(H,apply(MUL,pair(exp(G,S),exp(apply(MUL,pair(exp(apply(H,pair(Ya,Yb)),apply(H,pair(Ya,A))),pair(apply(H,A),Ya))),apply(MUL,pair(S,R2)))))),exp(apply(MUL,pair(exp(G,S),exp(apply(MUL,pair(exp(apply(H,pair(Ya,Yb)),apply(H,pair(Ya,A))),pair(apply(H,A),Ya))),apply(MUL,pair(S,R2))))),inv(Yb)))))))))),inv(Yb)),G,apply(MUL,pair(apply(H,exp(apply(MUL,pair(exp(G,S),exp(apply(MUL,pair(exp(apply(H,pair(Ya,Yb)),apply(H,pair(Ya,A))),pair(apply(H,A),Ya))),apply(MUL,pair(S,apply(H,pair(apply(MUL,pair(apply(H,exp(apply(MUL,pair(exp(G,S),exp(apply(MUL,pair(exp(apply(H,pair(Ya,Yb)),apply(H,pair(Ya,A))),pair(apply(H,A),Ya))),apply(MUL,pair(S,R2))))),inv(Yb))),R1)),pair(apply(H,apply(MUL,pair(exp(G,S),exp(apply(MUL,pair(exp(apply(H,pair(Ya,Yb)),apply(H,pair(Ya,A))),pair(apply(H,A),Ya))),apply(MUL,pair(S,R2)))))),exp(apply(MUL,pair(exp(G,S),exp(apply(MUL,pair(exp(apply(H,pair(Ya,Yb)),apply(H,pair(Ya,A))),pair(apply(H,A),Ya))),apply(MUL,pair(S,R2))))),inv(Yb)))))))))),inv(Yb))),R1)),Ya,Yb,MUL,SID).
 request(B,A,bob_alice_nb,apply(H,pair(apply(MUL,pair(apply(H,exp(apply(MUL,pair(exp(G,S),exp(apply(MUL,pair(exp(apply(H,pair(Ya,Yb)),apply(H,pair(Ya,A))),pair(apply(H,A),Ya))),apply(MUL,pair(S,R2))))),inv(Yb))),R1)),pair(apply(H,apply(MUL,pair(exp(G,S),exp(apply(MUL,pair(exp(apply(H,pair(Ya,Yb)),apply(H,pair(Ya,A))),pair(apply(H,A),Ya))),apply(MUL,pair(S,R2)))))),exp(apply(MUL,pair(exp(G,S),exp(apply(MUL,pair(exp(apply(H,pair(Ya,Yb)),apply(H,pair(Ya,A))),pair(apply(H,A),Ya))),apply(MUL,pair(S,R2))))),inv(Yb))))),SID)


section properties:

property secrecy_of_k (MGoal,ASGoal) :=
 [] ((secret(MGoal,k,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property authentication_on_bob_alice_nb (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,bob_alice_nb,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,bob_alice_nb,MGoal))
     /\ ((request(A1Goal,A2Goal,bob_alice_nb,MGoal,SID1)
           /\ request(A1Goal,A2Goal,bob_alice_nb,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state secrecy_of_k (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,k,ASGoal) &
 not(contains(i,ASGoal))

attack_state authentication_on_bob_alice_nb (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,bob_alice_nb,MGoal,SID) &
 not(witness(A2Goal,A1Goal,bob_alice_nb,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_bob_alice_nb (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,bob_alice_nb,MGoal,SID1).
 request(A1Goal,A2Goal,bob_alice_nb,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

