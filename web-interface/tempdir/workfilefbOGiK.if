%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfilefbOGiK

section signature:

state_bob: agent * agent * public_key * public_key * nat * message * text * set(agent) * nat -> fact
state_alice: agent * agent * public_key * public_key * nat * message * text * set(agent) * nat -> fact


section types:

nb, alice_bob_nb, na, bob_alice_na: protocol_id
Nb, Dummy_Nb, dummy_nonce: text
set_74, set_73, set_72, set_70, set_66, set_57: set
Set_36, Set_20, Dummy_Set_36, Dummy_Set_20, ASGoal: set(agent)
Na, start, Dummy_Na, dummy_msg, MGoal: message
State, 10, 2, 6, 4, SID, 1, 0, Dummy_State, 3: nat
a, b, B, A, A2Goal, A1Goal, i: agent
ki, Kb, Ka, ka, kb: public_key


section inits:

initial_state init1 := 
 iknows(start).
 iknows(a).
 iknows(b).
 iknows(ka).
 iknows(kb).
 iknows(ki).
 iknows(inv(ki)).
 iknows(i).
 state_alice(a,b,ka,kb,0,dummy_msg,dummy_nonce,set_57,3).
 state_bob(b,a,kb,ka,0,dummy_msg,dummy_nonce,set_66,4).
 state_alice(a,i,ka,ki,0,dummy_msg,dummy_nonce,set_70,6).
 state_bob(b,i,kb,ki,0,dummy_msg,dummy_nonce,set_74,10)


section rules:

step step_0 (A,B,Ka,Kb,Dummy_Na,Nb,Dummy_Set_20,SID,Na) :=
 state_alice(A,B,Ka,Kb,0,Dummy_Na,Nb,Dummy_Set_20,SID).
 iknows(start)
=[exists Na]=>
 state_alice(A,B,Ka,Kb,1,Na,Nb,Dummy_Set_20,SID).
 iknows(crypt(Kb,pair(Na,A))).
 witness(A,B,bob_alice_na,Na).
 secret(Na,na,Dummy_Set_20).
 contains(A,Dummy_Set_20).
 contains(B,Dummy_Set_20)

step step_1 (A,B,Ka,Kb,Na,Dummy_Nb,Set_20,SID,Nb) :=
 state_alice(A,B,Ka,Kb,1,Na,Dummy_Nb,Set_20,SID).
 iknows(crypt(Ka,pair(Nb,xor(Na,B))))
 =>
 state_alice(A,B,Ka,Kb,2,Na,Nb,Set_20,SID).
 iknows(crypt(Kb,Nb)).
 wrequest(A,B,alice_bob_nb,Nb,SID)

step step_2 (B,A,Kb,Ka,Dummy_Na,Dummy_Nb,Dummy_Set_36,SID,Na,Nb) :=
 state_bob(B,A,Kb,Ka,0,Dummy_Na,Dummy_Nb,Dummy_Set_36,SID).
 iknows(crypt(Kb,pair(Na,A)))
=[exists Nb]=>
 state_bob(B,A,Kb,Ka,1,Na,Nb,Dummy_Set_36,SID).
 iknows(crypt(Ka,pair(Nb,xor(Na,B)))).
 witness(B,A,alice_bob_nb,Nb).
 secret(Nb,nb,Dummy_Set_36).
 contains(A,Dummy_Set_36).
 contains(B,Dummy_Set_36)

step step_3 (B,A,Kb,Ka,Na,Nb,Set_36,SID) :=
 state_bob(B,A,Kb,Ka,1,Na,Nb,Set_36,SID).
 iknows(crypt(Kb,Nb))
 =>
 state_bob(B,A,Kb,Ka,2,Na,Nb,Set_36,SID).
 wrequest(B,A,bob_alice_na,Na,SID)


section properties:

property weak_authentication_on_alice_bob_nb (A1Goal,A2Goal,MGoal,SID) :=
 [] ((wrequest(A1Goal,A2Goal,alice_bob_nb,MGoal,SID)
      /\ ~ equal(A2Goal,i))
     => witness(A2Goal,A1Goal,alice_bob_nb,MGoal))

property weak_authentication_on_bob_alice_na (A1Goal,A2Goal,MGoal,SID) :=
 [] ((wrequest(A1Goal,A2Goal,bob_alice_na,MGoal,SID)
      /\ ~ equal(A2Goal,i))
     => witness(A2Goal,A1Goal,bob_alice_na,MGoal))

property secrecy_of_na (MGoal,ASGoal) :=
 [] ((secret(MGoal,na,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_nb (MGoal,ASGoal) :=
 [] ((secret(MGoal,nb,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))


section attack_states:

attack_state weak_authentication_on_alice_bob_nb (A1Goal,A2Goal,MGoal,SID) :=
 wrequest(A1Goal,A2Goal,alice_bob_nb,MGoal,SID) &
 not(witness(A2Goal,A1Goal,alice_bob_nb,MGoal)) &
 not(equal(A2Goal,i))

attack_state weak_authentication_on_bob_alice_na (A1Goal,A2Goal,MGoal,SID) :=
 wrequest(A1Goal,A2Goal,bob_alice_na,MGoal,SID) &
 not(witness(A2Goal,A1Goal,bob_alice_na,MGoal)) &
 not(equal(A2Goal,i))

attack_state secrecy_of_na (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,na,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_nb (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,nb,ASGoal) &
 not(contains(i,ASGoal))

