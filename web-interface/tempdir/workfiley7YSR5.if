%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfiley7YSR5

section signature:

state_board: agent * agent * agent * public_key * public_key * public_key * hash_func * nat * crypt(public_key,crypt(inv(public_key),pair(agent,pair(agent,pair(text,pair(text,pair(text,text))))))) * text * text * text * text * text * pair(text,pair(text,pair(crypt(public_key,crypt(inv(public_key),pair(agent,pair(agent,pair(text,pair(text,pair(text,text))))))),crypt(public_key,crypt(inv(public_key),pair(text,pair(text,text))))))) * crypt(inv(public_key),hash_func) * nat -> fact
state_user: agent * agent * agent * public_key * public_key * public_key * hash_func * nat * crypt(public_key,crypt(inv(public_key),pair(agent,pair(agent,pair(text,pair(text,pair(text,text))))))) * crypt(public_key,crypt(inv(public_key),pair(text,pair(text,text)))) * text * text * text * text * text * text * set(agent) * set(agent) * nat -> fact


section types:

user_host_s1: protocol_id
Dummy_Set_32, Dummy_Set_29, ASGoal, Set_32, Set_29: set(agent)
MGoal, start: message
Dummy_Rqt, Rqt: crypt(public_key,crypt(inv(public_key),pair(text,pair(text,text))))
Dummy_Rqh, Rqh: crypt(public_key,crypt(inv(public_key),pair(agent,pair(agent,pair(text,pair(text,pair(text,text)))))))
dummy_hash, hf, Hash: hash_func
dummy_pk, ku, kh, kb, ki, Ku, Kh, Kb: public_key
set_83, set_82, set_115, set_114, set_112, set_111, set_108, set_107: set
Sig, Dummy_Sig: crypt(inv(public_key),hash_func)
Rq, Dummy_Rq: pair(text,pair(text,pair(crypt(public_key,crypt(inv(public_key),pair(agent,pair(agent,pair(text,pair(text,pair(text,text))))))),crypt(public_key,crypt(inv(public_key),pair(text,pair(text,text)))))))
Dummy_N3, Dummy_N2, Dummy_N1, Dummy_S1, Dummy_A, Dummy_O, dummy_nonce, ID, S1, S2, N2, N3, O, A, N1, Dummy_S2, Dummy_ID: text
dummy_agent, u, h, b, U, H, B, i: agent
Dummy_State, 3, SID, 4, 2, State, 1, 13, 9, 7, 6: nat


section inits:

initial_state init1 := 
 iknows(start).
 iknows(u).
 iknows(h).
 iknows(b).
 iknows(hf).
 iknows(ku).
 iknows(kh).
 iknows(kb).
 iknows(ki).
 iknows(i).
 state_user(u,h,b,ku,kh,kb,hf,1,crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_agent,pair(dummy_agent,pair(dummy_nonce,pair(dummy_nonce,pair(dummy_nonce,dummy_nonce))))))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,pair(dummy_nonce,dummy_nonce)))),dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_82,set_83,3).
 state_board(b,u,h,ku,kh,kb,hf,2,crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_agent,pair(dummy_agent,pair(dummy_nonce,pair(dummy_nonce,pair(dummy_nonce,dummy_nonce))))))),dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,pair(dummy_nonce,pair(dummy_nonce,pair(crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_agent,pair(dummy_agent,pair(dummy_nonce,pair(dummy_nonce,pair(dummy_nonce,dummy_nonce))))))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,pair(dummy_nonce,dummy_nonce))))))),crypt(inv(dummy_pk),dummy_hash),4).
 state_user(u,i,b,ku,ki,kb,hf,1,crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_agent,pair(dummy_agent,pair(dummy_nonce,pair(dummy_nonce,pair(dummy_nonce,dummy_nonce))))))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,pair(dummy_nonce,dummy_nonce)))),dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_107,set_108,6).
 state_board(b,u,i,ku,ki,kb,hf,2,crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_agent,pair(dummy_agent,pair(dummy_nonce,pair(dummy_nonce,pair(dummy_nonce,dummy_nonce))))))),dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,pair(dummy_nonce,pair(dummy_nonce,pair(crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_agent,pair(dummy_agent,pair(dummy_nonce,pair(dummy_nonce,pair(dummy_nonce,dummy_nonce))))))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,pair(dummy_nonce,dummy_nonce))))))),crypt(inv(dummy_pk),dummy_hash),7).
 state_user(u,h,i,ku,kh,ki,hf,1,crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_agent,pair(dummy_agent,pair(dummy_nonce,pair(dummy_nonce,pair(dummy_nonce,dummy_nonce))))))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,pair(dummy_nonce,dummy_nonce)))),dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_111,set_112,9).
 state_board(b,i,h,ki,kh,kb,hf,2,crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_agent,pair(dummy_agent,pair(dummy_nonce,pair(dummy_nonce,pair(dummy_nonce,dummy_nonce))))))),dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,pair(dummy_nonce,pair(dummy_nonce,pair(crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_agent,pair(dummy_agent,pair(dummy_nonce,pair(dummy_nonce,pair(dummy_nonce,dummy_nonce))))))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,pair(dummy_nonce,dummy_nonce))))))),crypt(inv(dummy_pk),dummy_hash),13)


section rules:

step step_0 (U,H,B,Ku,Kh,Kb,Hash,Dummy_Rqh,Dummy_Rqt,Dummy_O,Dummy_A,Dummy_S1,Dummy_N1,Dummy_N2,Dummy_N3,Dummy_Set_29,Dummy_Set_32,SID,O,A,S1,N1,N2,N3) :=
 state_user(U,H,B,Ku,Kh,Kb,Hash,1,Dummy_Rqh,Dummy_Rqt,Dummy_O,Dummy_A,Dummy_S1,Dummy_N1,Dummy_N2,Dummy_N3,Dummy_Set_29,Dummy_Set_32,SID).
 iknows(start)
=[exists N3,N2,N1,S1,A,O]=>
 state_user(U,H,B,Ku,Kh,Kb,Hash,3,crypt(Kh,crypt(inv(Ku),pair(U,pair(H,pair(O,pair(A,pair(S1,N1))))))),crypt(Kb,crypt(inv(Ku),pair(S1,pair(N2,N3)))),O,A,S1,N1,N2,N3,Dummy_Set_29,Dummy_Set_32,SID).
 iknows(pair(crypt(Kh,crypt(inv(Ku),pair(U,pair(H,pair(O,pair(A,pair(S1,N1))))))),crypt(Kb,crypt(inv(Ku),pair(S1,pair(N2,N3)))))).
 secret(N2,n2,Dummy_Set_29).
 secret(N3,n3,Dummy_Set_32).
 contains(U,Dummy_Set_29).
 contains(B,Dummy_Set_29).
 contains(U,Dummy_Set_32).
 contains(B,Dummy_Set_32)

step step_1 (B,U,H,Ku,Kh,Kb,Hash,Dummy_Rqh,Dummy_ID,Dummy_S1,Dummy_S2,Dummy_N2,Dummy_N3,Dummy_Rq,Dummy_Sig,SID,Rqh,ID,S1,S2,N2,N3) :=
 state_board(B,U,H,Ku,Kh,Kb,Hash,2,Dummy_Rqh,Dummy_ID,Dummy_S1,Dummy_S2,Dummy_N2,Dummy_N3,Dummy_Rq,Dummy_Sig,SID).
 iknows(pair(Rqh,crypt(Kb,crypt(inv(Ku),pair(S1,pair(N2,N3))))))
=[exists S2,ID]=>
 state_board(B,U,H,Ku,Kh,Kb,Hash,4,Rqh,ID,S1,S2,N2,N3,pair(ID,pair(S2,pair(Rqh,crypt(Kb,crypt(inv(Ku),pair(S1,pair(N2,N3))))))),crypt(inv(Kb),apply(Hash,pair(ID,pair(S2,pair(Rqh,crypt(Kb,crypt(inv(Ku),pair(S1,pair(N2,N3))))))))),SID).
 iknows(pair(pair(ID,pair(S2,pair(Rqh,crypt(Kb,crypt(inv(Ku),pair(S1,pair(N2,N3))))))),crypt(inv(Kb),apply(Hash,pair(ID,pair(S2,pair(Rqh,crypt(Kb,crypt(inv(Ku),pair(S1,pair(N2,N3)))))))))))


section properties:

property secrecy_of_n2 (MGoal,ASGoal) :=
 [] ((secret(MGoal,n2,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_n3 (MGoal,ASGoal) :=
 [] ((secret(MGoal,n3,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))


section attack_states:

attack_state secrecy_of_n2 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,n2,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_n3 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,n3,ASGoal) &
 not(contains(i,ASGoal))

