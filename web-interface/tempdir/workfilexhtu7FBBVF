role alice(
A,B : agent,
K    :symmetric_key,
Succ      :hash_func,
SND,RCV :channel (dy))
 played_by A def=

local 
  State : nat,
  Na    : text

init State := 0

transition

0.  State = 0  /\ RCV(start) =|>
    State':= 2 /\  Na'  := new( )
                  /\ SND( {Na'}_K)

2. State = 2 /\ RCV({Succ(Na)}_K) =|>
    State' := 4
                    
end role
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

role bob(
A,B       :agent,
K           :symmetric_key,
Succ       :hash_func,
SND,RCV:channel(dy))
played_by B def=
local
State:nat,
Na   :text
init State :=1
transition

1.   State  =1  /\ RCV({Na'}_K) =|>
      State':=3  /\ SND({Succ(Na')}_K)
end role




%----------------- session --------------------------------


role session( A,B   :agent, K :symmetric_key, Succ  :hash_func) def=
local 
     SA,SB,RA,RB  :channel  (dy)

composition 
             alice(A,B,K,Succ,SA,RA)
          /\ bob  (A,B,K,Succ,SB,RB)

end role



%----------------- environment --------------------------------

role environment( ) def= 

const 
   a,b :agent,
   k :symmetric_key,
   succ:hash_func


intruder_knowledge = {a, b}

composition 
   session(a,b,k,succ)


end role


%----------------- goal --------------------------------

goal 
    secrecy_of sec 
    authentication_on valid 
end goal

environment( )
