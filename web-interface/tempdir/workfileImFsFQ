%PBK

role alice (A,B        : agent,
            SND,RCV    : channel(dy),
            Hash       : hash_func,
            PK_A       : public_key)
played_by A
def=

  local
    State      : nat,
    Msg        : text,
    Nonce      : text,
    N1, N2     : text                                   %Changed

  init State := 0

  transition

 1. State  = 0 /\ RCV(start) =|>
    State':= 2 /\ Msg' := new()
               /\ SND({N1.Msg'}_inv(PK_A).Hash(PK_A))   %Changed
               /\ witness(A,A,msg,Msg')

 3. State  = 2 /\ RCV(Nonce') =|>
    State':= 4 /\ SND({N2.Nonce'}_inv(PK_A))            %Changed

end role



role bob (B,A        : agent,
          SND,RCV    : channel(dy),
          Hash       : hash_func,
          PK_A       : public_key)
played_by B
def=

  local
    State      : nat,
    Nonce      : text,
    Msg        : text,
    N1, N2     : text

  init State := 1

  transition

 1. State  = 1 /\ RCV({N1.Msg'}_inv(PK_A).Hash(PK_A)) =|>   %Changed
    State':= 5 /\ Nonce' := new()
               /\ SND(Nonce')

 3. State  = 5 /\ RCV({N2.Nonce}_inv(PK_A)) =|>             %Changed
    State':= 7 /\ wrequest(A,A,msg,Msg)
         
end role



role session(A,B  : agent,
             Hash : hash_func,
             PK_A : public_key,
             N1, N2     : text)                           %Changed
def=

  local SNDA,RCVA,SNDB,RCVB : channel (dy)

  composition

    alice(A,B,SNDA,RCVA,Hash,PK_A,N1,N2)
 /\ bob(B,A,SNDB,RCVB,Hash,PK_A,N1,N2)

end role



role environment()
def=

  const
    a,b            : agent,
    f              : hash_func,
    msg            : protocol_id,
    pk_a,pk_b,pk_i : public_key,
    n1, n2         : text                                 %Changed

  intruder_knowledge = {a,b,f,pk_a,pk_b,pk_i,inv(pk_i)}

  composition

     session(a,b,f,pk_a,n1,n2)
  /\ session(b,a,f,pk_b,n1,n2)
  /\ session(i,b,f,pk_i,n1,n2)
  /\ session(a,i,f,pk_a,n1,n2)

end role



goal

  % Sender Invariance (G16)
  weak_authentication_on msg

end goal



environment()