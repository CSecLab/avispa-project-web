%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfilekLAZJZ

section signature:

state_sensor: agent * agent * agent * symmetric_key * symmetric_key * hash_func * hash_func * nat * symmetric_key * symmetric_key * symmetric_key * symmetric_key * text * text * text * text * text * text * text * text * set(agent) * nat -> fact
state_basestation: agent * agent * agent * symmetric_key * symmetric_key * symmetric_key * symmetric_key * hash_func * hash_func * nat * symmetric_key * symmetric_key * symmetric_key * symmetric_key * text * text * text * set(agent) * set(agent) * set(agent) * set(agent) * set(agent) * set(agent) * nat -> fact
state_user: agent * agent * agent * symmetric_key * symmetric_key * hash_func * hash_func * nat * symmetric_key * symmetric_key * text * text * text * text * text * text * text * text * set(agent) * set(agent) * nat -> fact


section types:

Set_97, Set_95, Set_93, Set_90, Set_88, Set_86, Dummy_Set_64, Dummy_Set_97, Dummy_Set_95, Dummy_Set_93, Set_64, Dummy_Set_90, Dummy_Set_88, Dummy_Set_86, Dummy_Set_35, Dummy_Set_28, Set_35, ASGoal, Set_28: set(agent)
MGoal: message
kauth_s_a, kenc_s_a, bs_a_k_bs_a, ms_auth, ms_enc, bs_s_k_bs_s, data_s, mac_s, data_a, mac_a, a_bs_k_a_bs, s_bs_k_s_bs: protocol_id
Nbs, Tstart, Texpire, Ctr, Data_A, Data_S, MAC_A, MAC_S, Dummy_MAC_S, Dummy_Data_S, Dummy_MAC_A, Dummy_Data_A, Dummy_Texpire, Dummy_Tstart, Dummy_Nbs, Dummy_Ctr, dummy_nonce: text
Hash, Succ, kdf, succ: hash_func
KEnc_S_A, KAuth_S_A, MS_Enc, MS_Auth, K_A_BS, Dummy_MS_Auth, K_BS_A, Dummy_MS_Enc, K_BS_S, K_S_BS, Dummy_KAuth_S_A, Dummy_KEnc_S_A, dummy_sk, ki_a_bs, ki_bs_a, ki_bs_s, ki_s_bs, k_a_bs, k_bs_a, k_bs_s, k_s_bs: symmetric_key
15, 13, 9, 11, 8, St, 5, SID, 1, 4, Dummy_St, 3, 6, SID2, SID1, 2, 16: nat
A, BS, S, A2Goal, A1Goal, a, bs, s, i: agent
set_201, set_200, set_198, set_197, set_195, set_194, set_193, set_192, set_191, set_190, set_189, set_187, set_186, set_184, set_182, set_181, set_180, set_179, set_178, set_177, set_176, set_175, set_169, set_160, set_159, set_158, set_157, set_156, set_155, set_137, set_136, set_207, set_205, set_204, set_203, set_202: set


section inits:

initial_state init1 := 
 iknows(a).
 iknows(bs).
 iknows(s).
 iknows(ki_a_bs).
 iknows(ki_bs_a).
 iknows(ki_bs_s).
 iknows(ki_s_bs).
 iknows(kdf).
 iknows(succ).
 iknows(i).
 state_user(a,bs,s,k_a_bs,k_bs_a,kdf,succ,2,dummy_sk,dummy_sk,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_136,set_137,3).
 state_basestation(bs,a,s,k_a_bs,k_bs_a,k_bs_s,k_s_bs,kdf,succ,1,dummy_sk,dummy_sk,dummy_sk,dummy_sk,dummy_nonce,dummy_nonce,dummy_nonce,set_155,set_156,set_157,set_158,set_159,set_160,4).
 state_sensor(s,a,bs,k_bs_s,k_s_bs,kdf,succ,1,dummy_sk,dummy_sk,dummy_sk,dummy_sk,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_169,5).
 state_basestation(bs,i,s,ki_a_bs,k_bs_s,k_bs_s,k_s_bs,kdf,succ,1,dummy_sk,dummy_sk,dummy_sk,dummy_sk,dummy_nonce,dummy_nonce,dummy_nonce,set_177,set_178,set_179,set_180,set_181,set_182,8).
 state_sensor(s,i,bs,k_bs_s,k_s_bs,kdf,succ,1,dummy_sk,dummy_sk,dummy_sk,dummy_sk,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_184,9).
 state_user(a,i,s,k_a_bs,ki_bs_a,kdf,succ,2,dummy_sk,dummy_sk,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_186,set_187,11).
 state_sensor(s,a,i,k_bs_s,k_s_bs,kdf,succ,1,dummy_sk,dummy_sk,dummy_sk,dummy_sk,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_195,13).
 state_user(a,bs,i,k_a_bs,k_bs_a,kdf,succ,2,dummy_sk,dummy_sk,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_197,set_198,15).
 state_basestation(bs,a,i,k_a_bs,k_bs_a,k_bs_s,ki_s_bs,kdf,succ,1,dummy_sk,dummy_sk,dummy_sk,dummy_sk,dummy_nonce,dummy_nonce,dummy_nonce,set_200,set_201,set_202,set_203,set_204,set_205,16)


section rules:

step step_0 (A,BS,S,K_A_BS,K_BS_A,Hash,Succ,KEnc_S_A,KAuth_S_A,Ctr,Nbs,Tstart,Texpire,Data_A,Data_S,MAC_A,MAC_S,Dummy_Set_28,Set_35,SID) :=
 state_user(A,BS,S,K_A_BS,K_BS_A,Hash,Succ,2,KEnc_S_A,KAuth_S_A,Ctr,Nbs,Tstart,Texpire,Data_A,Data_S,MAC_A,MAC_S,Dummy_Set_28,Set_35,SID).
 iknows(scrypt(K_A_BS,pair(A,S)))
 =>
 state_user(A,BS,S,K_A_BS,K_BS_A,Hash,Succ,3,KEnc_S_A,KAuth_S_A,Ctr,Nbs,Tstart,Texpire,Data_A,Data_S,MAC_A,MAC_S,Dummy_Set_28,Set_35,SID).
 secret(K_A_BS,a_bs_k_a_bs,Dummy_Set_28).
 contains(A,Dummy_Set_28).
 contains(BS,Dummy_Set_28)

step step_1 (A,BS,S,K_A_BS,K_BS_A,Hash,Succ,Dummy_KEnc_S_A,Dummy_KAuth_S_A,Dummy_Ctr,Dummy_Nbs,Dummy_Tstart,Dummy_Texpire,Dummy_Data_A,Data_S,Dummy_MAC_A,MAC_S,Set_28,Set_35,SID,KEnc_S_A,KAuth_S_A,Ctr,Nbs,Tstart,Texpire,Data_A) :=
 state_user(A,BS,S,K_A_BS,K_BS_A,Hash,Succ,3,Dummy_KEnc_S_A,Dummy_KAuth_S_A,Dummy_Ctr,Dummy_Nbs,Dummy_Tstart,Dummy_Texpire,Dummy_Data_A,Data_S,Dummy_MAC_A,MAC_S,Set_28,Set_35,SID).
 iknows(scrypt(K_BS_A,pair(KEnc_S_A,pair(KAuth_S_A,pair(Nbs,pair(Tstart,Texpire))))))
=[exists Ctr,Data_A]=>
 state_user(A,BS,S,K_A_BS,K_BS_A,Hash,Succ,4,KEnc_S_A,KAuth_S_A,Ctr,Nbs,Tstart,Texpire,Data_A,Data_S,apply(Hash,pair(Data_A,pair(A,pair(Nbs,pair(Tstart,pair(Texpire,Ctr)))))),MAC_S,Set_28,Set_35,SID)

step step_2 (A,BS,S,K_A_BS,K_BS_A,Hash,Succ,KEnc_S_A,KAuth_S_A,Ctr,Nbs,Tstart,Texpire,Data_A,Data_S,MAC_A,MAC_S,Set_28,Dummy_Set_35,SID) :=
 state_user(A,BS,S,K_A_BS,K_BS_A,Hash,Succ,4,KEnc_S_A,KAuth_S_A,Ctr,Nbs,Tstart,Texpire,Data_A,Data_S,MAC_A,MAC_S,Set_28,Dummy_Set_35,SID).
 iknows(pair(A,pair(Nbs,pair(Tstart,pair(Texpire,pair(Ctr,pair(scrypt(KEnc_S_A,pair(Data_A,Ctr)),scrypt(KAuth_S_A,MAC_A))))))))
 =>
 state_user(A,BS,S,K_A_BS,K_BS_A,Hash,Succ,5,KEnc_S_A,KAuth_S_A,Ctr,Nbs,Tstart,Texpire,Data_A,Data_S,MAC_A,MAC_S,Set_28,Dummy_Set_35,SID).
 witness(A,S,mac_a,MAC_A).
 secret(Data_A,data_a,Dummy_Set_35).
 contains(BS,Dummy_Set_35).
 contains(A,Dummy_Set_35).
 contains(S,Dummy_Set_35)

step step_3 (A,BS,S,K_A_BS,K_BS_A,Hash,Succ,KEnc_S_A,KAuth_S_A,Dummy_Ctr,Nbs,Tstart,Texpire,Data_A,Dummy_Data_S,MAC_A,Dummy_MAC_S,Set_28,Set_35,SID,Ctr,Data_S) :=
 state_user(A,BS,S,K_A_BS,K_BS_A,Hash,Succ,5,KEnc_S_A,KAuth_S_A,Dummy_Ctr,Nbs,Tstart,Texpire,Data_A,Dummy_Data_S,MAC_A,Dummy_MAC_S,Set_28,Set_35,SID).
 iknows(pair(Ctr,pair(scrypt(KEnc_S_A,pair(Data_S,Ctr)),scrypt(KAuth_S_A,MAC_S))))
 =>
 state_user(A,BS,S,K_A_BS,K_BS_A,Hash,Succ,6,KEnc_S_A,KAuth_S_A,Ctr,Nbs,Tstart,Texpire,Data_A,Data_S,MAC_A,apply(Hash,pair(Data_S,Ctr)),Set_28,Set_35,SID).
 request(A,S,mac_s,apply(Hash,pair(Data_S,Ctr)),SID)

step step_4 (BS,A,S,K_A_BS,K_BS_A,K_BS_S,K_S_BS,Hash,Succ,KEnc_S_A,KAuth_S_A,MS_Enc,MS_Auth,Nbs,Tstart,Texpire,Dummy_Set_86,Dummy_Set_88,Dummy_Set_90,Set_93,Set_95,Set_97,SID) :=
 state_basestation(BS,A,S,K_A_BS,K_BS_A,K_BS_S,K_S_BS,Hash,Succ,1,KEnc_S_A,KAuth_S_A,MS_Enc,MS_Auth,Nbs,Tstart,Texpire,Dummy_Set_86,Dummy_Set_88,Dummy_Set_90,Set_93,Set_95,Set_97,SID).
 iknows(scrypt(K_BS_S,pair(MS_Enc,MS_Auth)))
 =>
 state_basestation(BS,A,S,K_A_BS,K_BS_A,K_BS_S,K_S_BS,Hash,Succ,2,KEnc_S_A,KAuth_S_A,MS_Enc,MS_Auth,Nbs,Tstart,Texpire,Dummy_Set_86,Dummy_Set_88,Dummy_Set_90,Set_93,Set_95,Set_97,SID).
 secret(K_BS_S,bs_s_k_bs_s,Dummy_Set_86).
 secret(MS_Enc,ms_enc,Dummy_Set_88).
 secret(MS_Auth,ms_auth,Dummy_Set_90).
 contains(BS,Dummy_Set_86).
 contains(S,Dummy_Set_86).
 contains(BS,Dummy_Set_88).
 contains(S,Dummy_Set_88).
 contains(BS,Dummy_Set_90).
 contains(S,Dummy_Set_90)

step step_5 (BS,A,S,K_A_BS,K_BS_A,K_BS_S,K_S_BS,Hash,Succ,Dummy_KEnc_S_A,Dummy_KAuth_S_A,MS_Enc,MS_Auth,Dummy_Nbs,Dummy_Tstart,Dummy_Texpire,Set_86,Set_88,Set_90,Set_93,Set_95,Set_97,SID,Nbs,Tstart,Texpire) :=
 state_basestation(BS,A,S,K_A_BS,K_BS_A,K_BS_S,K_S_BS,Hash,Succ,2,Dummy_KEnc_S_A,Dummy_KAuth_S_A,MS_Enc,MS_Auth,Dummy_Nbs,Dummy_Tstart,Dummy_Texpire,Set_86,Set_88,Set_90,Set_93,Set_95,Set_97,SID).
 iknows(scrypt(K_A_BS,pair(A,S)))
=[exists Texpire,Tstart,Nbs]=>
 state_basestation(BS,A,S,K_A_BS,K_BS_A,K_BS_S,K_S_BS,Hash,Succ,3,apply(Hash,pair(pair(MS_Enc,pair(Nbs,pair(A,Tstart))),Texpire)),apply(Hash,pair(pair(MS_Auth,pair(Nbs,pair(A,Tstart))),Texpire)),MS_Enc,MS_Auth,Nbs,Tstart,Texpire,Set_86,Set_88,Set_90,Set_93,Set_95,Set_97,SID)

step step_6 (BS,A,S,K_A_BS,K_BS_A,K_BS_S,K_S_BS,Hash,Succ,KEnc_S_A,KAuth_S_A,MS_Enc,MS_Auth,Nbs,Tstart,Texpire,Set_86,Set_88,Set_90,Dummy_Set_93,Dummy_Set_95,Dummy_Set_97,SID) :=
 state_basestation(BS,A,S,K_A_BS,K_BS_A,K_BS_S,K_S_BS,Hash,Succ,3,KEnc_S_A,KAuth_S_A,MS_Enc,MS_Auth,Nbs,Tstart,Texpire,Set_86,Set_88,Set_90,Dummy_Set_93,Dummy_Set_95,Dummy_Set_97,SID).
 iknows(scrypt(K_BS_A,pair(KEnc_S_A,pair(KAuth_S_A,pair(Nbs,pair(Tstart,Texpire))))))
 =>
 state_basestation(BS,A,S,K_A_BS,K_BS_A,K_BS_S,K_S_BS,Hash,Succ,9,KEnc_S_A,KAuth_S_A,MS_Enc,MS_Auth,Nbs,Tstart,Texpire,Set_86,Set_88,Set_90,Dummy_Set_93,Dummy_Set_95,Dummy_Set_97,SID).
 secret(K_BS_A,bs_a_k_bs_a,Dummy_Set_93).
 secret(KEnc_S_A,kenc_s_a,Dummy_Set_95).
 secret(KAuth_S_A,kauth_s_a,Dummy_Set_97).
 contains(A,Dummy_Set_93).
 contains(BS,Dummy_Set_93).
 contains(BS,Dummy_Set_95).
 contains(A,Dummy_Set_95).
 contains(S,Dummy_Set_95).
 contains(BS,Dummy_Set_97).
 contains(A,Dummy_Set_97).
 contains(S,Dummy_Set_97)

step step_7 (S,A,BS,K_BS_S,K_S_BS,Hash,Succ,Dummy_MS_Enc,Dummy_MS_Auth,KEnc_S_A,KAuth_S_A,Ctr,Nbs,Tstart,Texpire,Data_A,Data_S,MAC_A,MAC_S,Set_64,SID,MS_Enc,MS_Auth) :=
 state_sensor(S,A,BS,K_BS_S,K_S_BS,Hash,Succ,1,Dummy_MS_Enc,Dummy_MS_Auth,KEnc_S_A,KAuth_S_A,Ctr,Nbs,Tstart,Texpire,Data_A,Data_S,MAC_A,MAC_S,Set_64,SID).
 iknows(scrypt(K_BS_S,pair(MS_Enc,MS_Auth)))
 =>
 state_sensor(S,A,BS,K_BS_S,K_S_BS,Hash,Succ,4,MS_Enc,MS_Auth,KEnc_S_A,KAuth_S_A,Ctr,Nbs,Tstart,Texpire,Data_A,Data_S,MAC_A,MAC_S,Set_64,SID)

step step_8 (S,A,BS,K_BS_S,K_S_BS,Hash,Succ,MS_Enc,MS_Auth,Dummy_KEnc_S_A,Dummy_KAuth_S_A,Dummy_Ctr,Dummy_Nbs,Dummy_Tstart,Dummy_Texpire,Dummy_Data_A,Dummy_Data_S,Dummy_MAC_A,Dummy_MAC_S,Set_64,SID,Nbs,Tstart,Texpire,Data_A,Data_S) :=
 state_sensor(S,A,BS,K_BS_S,K_S_BS,Hash,Succ,4,MS_Enc,MS_Auth,Dummy_KEnc_S_A,Dummy_KAuth_S_A,Dummy_Ctr,Dummy_Nbs,Dummy_Tstart,Dummy_Texpire,Dummy_Data_A,Dummy_Data_S,Dummy_MAC_A,Dummy_MAC_S,Set_64,SID).
 iknows(pair(A,pair(Nbs,pair(Tstart,pair(Texpire,pair(Ctr,pair(scrypt(KEnc_S_A,pair(Data_A,Ctr)),scrypt(KAuth_S_A,MAC_A))))))))
=[exists Data_S]=>
 state_sensor(S,A,BS,K_BS_S,K_S_BS,Hash,Succ,5,MS_Enc,MS_Auth,apply(Hash,pair(MS_Enc,pair(Nbs,pair(A,pair(Tstart,Texpire))))),apply(Hash,pair(MS_Auth,pair(Nbs,pair(A,pair(Tstart,Texpire))))),apply(Succ,Ctr),Nbs,Tstart,Texpire,Data_A,Data_S,apply(Hash,pair(Data_A,pair(A,pair(Nbs,pair(Tstart,pair(Texpire,apply(Succ,Ctr))))))),apply(Hash,pair(Data_S,apply(Succ,Ctr))),Set_64,SID).
 request(A,S,mac_a,apply(Hash,pair(Data_A,pair(A,pair(Nbs,pair(Tstart,pair(Texpire,apply(Succ,Ctr))))))),SID)

step step_9 (S,A,BS,K_BS_S,K_S_BS,Hash,Succ,MS_Enc,MS_Auth,KEnc_S_A,KAuth_S_A,Ctr,Nbs,Tstart,Texpire,Data_A,Data_S,MAC_A,MAC_S,Dummy_Set_64,SID) :=
 state_sensor(S,A,BS,K_BS_S,K_S_BS,Hash,Succ,5,MS_Enc,MS_Auth,KEnc_S_A,KAuth_S_A,Ctr,Nbs,Tstart,Texpire,Data_A,Data_S,MAC_A,MAC_S,Dummy_Set_64,SID).
 iknows(pair(Ctr,pair(scrypt(KEnc_S_A,pair(Data_S,Ctr)),scrypt(KAuth_S_A,MAC_S))))
 =>
 state_sensor(S,A,BS,K_BS_S,K_S_BS,Hash,Succ,6,MS_Enc,MS_Auth,KEnc_S_A,KAuth_S_A,Ctr,Nbs,Tstart,Texpire,Data_A,Data_S,MAC_A,MAC_S,Dummy_Set_64,SID).
 witness(A,S,mac_s,MAC_S).
 secret(Data_S,data_s,Dummy_Set_64).
 contains(BS,Dummy_Set_64).
 contains(A,Dummy_Set_64).
 contains(S,Dummy_Set_64)


section properties:

property secrecy_of_a_bs_k_a_bs (MGoal,ASGoal) :=
 [] ((secret(MGoal,a_bs_k_a_bs,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_bs_a_k_bs_a (MGoal,ASGoal) :=
 [] ((secret(MGoal,bs_a_k_bs_a,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_bs_s_k_bs_s (MGoal,ASGoal) :=
 [] ((secret(MGoal,bs_s_k_bs_s,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_s_bs_k_s_bs (MGoal,ASGoal) :=
 [] ((secret(MGoal,s_bs_k_s_bs,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_ms_enc (MGoal,ASGoal) :=
 [] ((secret(MGoal,ms_enc,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_ms_auth (MGoal,ASGoal) :=
 [] ((secret(MGoal,ms_auth,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_kenc_s_a (MGoal,ASGoal) :=
 [] ((secret(MGoal,kenc_s_a,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_kauth_s_a (MGoal,ASGoal) :=
 [] ((secret(MGoal,kauth_s_a,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_data_a (MGoal,ASGoal) :=
 [] ((secret(MGoal,data_a,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_data_s (MGoal,ASGoal) :=
 [] ((secret(MGoal,data_s,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property authentication_on_mac_a (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,mac_a,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,mac_a,MGoal))
     /\ ((request(A1Goal,A2Goal,mac_a,MGoal,SID1)
           /\ request(A1Goal,A2Goal,mac_a,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_mac_s (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,mac_s,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,mac_s,MGoal))
     /\ ((request(A1Goal,A2Goal,mac_s,MGoal,SID1)
           /\ request(A1Goal,A2Goal,mac_s,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state secrecy_of_a_bs_k_a_bs (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,a_bs_k_a_bs,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_bs_a_k_bs_a (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,bs_a_k_bs_a,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_bs_s_k_bs_s (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,bs_s_k_bs_s,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_s_bs_k_s_bs (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,s_bs_k_s_bs,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_ms_enc (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,ms_enc,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_ms_auth (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,ms_auth,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_kenc_s_a (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,kenc_s_a,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_kauth_s_a (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,kauth_s_a,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_data_a (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,data_a,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_data_s (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,data_s,ASGoal) &
 not(contains(i,ASGoal))

attack_state authentication_on_mac_a (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,mac_a,MGoal,SID) &
 not(witness(A2Goal,A1Goal,mac_a,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_mac_a (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,mac_a,MGoal,SID1).
 request(A1Goal,A2Goal,mac_a,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_mac_s (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,mac_s,MGoal,SID) &
 not(witness(A2Goal,A1Goal,mac_s,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_mac_s (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,mac_s,MGoal,SID1).
 request(A1Goal,A2Goal,mac_s,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

