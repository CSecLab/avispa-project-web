%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfileckcWrM

section signature:

state_server: agent * agent * symmetric_key * hash_func * nat * text * text * text * text * text * text * text * text * text * text * text * set(text) * set(agent) * set(text) * nat -> fact
state_user: agent * agent * symmetric_key * hash_func * nat * text * text * text * text * text * text * text * text * text * text * text * text * set(text) * set(agent) * set(text) * nat -> fact


section types:

MGoal, start: message
server_user_beta, subs1, subs2, user_server_n1, user_server_alpha: protocol_id
h, H: hash_func
Dummy_Mi, Dummy_Beta, Dummy_Vi, Dummy_TIDi, Dummy_N1, Dummy_Alpha, dummy_nonce, p, g, SIDi, Beta, N1, Alpha, Vs, Ms, IDi, PWi, P, G, KS, TIDi, Vi, Mi, Dummy_Ms, Dummy_Vs: text
skuis, SKuis: symmetric_key
Dummy_Set_32, ASGoal, Set_60, Set_32, Dummy_Set_60: set(agent)
Dummy_Set_35, Dummy_Set_31, Set_61, Set_59, Set_35, Set_31, Dummy_Set_61, Dummy_Set_59: set(text)
Dummy_State, 3, SID, SID2, SID1, State, 2, 13, 1, 0, 9, 7, 6, 4: nat
A2Goal, A1Goal, ui, s, Ui, S, i: agent
set_87, set_86, set_85, set_131, set_130, set_129, set_128, set_127, set_126, set_125, set_124, set_123, set_121, set_120, set_119, set_117, set_116, set_115, set_113, set_112, set_111, set_103, set_102, set_101: set


section inits:

initial_state init1 := 
 iknows(start).
 iknows(ui).
 iknows(s).
 iknows(h).
 iknows(p).
 iknows(g).
 iknows(i).
 state_user(ui,s,skuis,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_85,set_86,set_87,3).
 state_server(s,ui,skuis,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_101,set_102,set_103,4).
 state_user(ui,s,skuis,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_111,set_112,set_113,6).
 state_server(s,ui,skuis,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_115,set_116,set_117,7).
 state_user(ui,i,skuis,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_119,set_120,set_121,9).
 state_server(ui,i,skuis,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_129,set_130,set_131,13)


section rules:

step step_0 (Ui,S,SKuis,H,IDi,PWi,P,G,KS,Beta,SIDi,Alpha,N1,TIDi,Vi,Mi,Dummy_Set_31,Dummy_Set_32,Set_35,SID) :=
 state_user(Ui,S,SKuis,H,0,IDi,PWi,P,G,KS,Beta,SIDi,Alpha,N1,TIDi,Vi,Mi,Dummy_Set_31,Dummy_Set_32,Set_35,SID).
 iknows(start)
 =>
 state_user(Ui,S,SKuis,H,1,IDi,PWi,P,G,KS,Beta,SIDi,Alpha,N1,TIDi,Vi,Mi,Dummy_Set_31,Dummy_Set_32,Set_35,SID).
 secret(Dummy_Set_31,subs1,Dummy_Set_32).
 iknows(scrypt(SKuis,IDi)).
 contains(IDi,Dummy_Set_31).
 contains(Ui,Dummy_Set_32).
 contains(S,Dummy_Set_32)

step step_1 (Ui,S,SKuis,H,IDi,PWi,P,G,KS,Beta,SIDi,Dummy_Alpha,Dummy_N1,Dummy_TIDi,Dummy_Vi,Mi,Set_31,Set_32,Dummy_Set_35,SID,Alpha,N1) :=
 state_user(Ui,S,SKuis,H,1,IDi,PWi,P,G,KS,Beta,SIDi,Dummy_Alpha,Dummy_N1,Dummy_TIDi,Dummy_Vi,Mi,Set_31,Set_32,Dummy_Set_35,SID).
 iknows(scrypt(SKuis,pair(apply(H,pair(IDi,pair(KS,SIDi))),pair(exp(G,KS),pair(G,pair(P,H))))))
=[exists N1,Alpha]=>
 state_user(Ui,S,SKuis,H,2,IDi,PWi,P,G,KS,Beta,SIDi,Alpha,N1,xor(pair(IDi,N1),apply(H,exp(G,pair(KS,apply(H,pair(Alpha,apply(H,pair(IDi,pair(KS,SIDi))))))))),exp(G,apply(H,pair(Alpha,apply(H,pair(IDi,pair(KS,SIDi)))))),Mi,Set_31,Set_32,Dummy_Set_35,SID).
 secret(Dummy_Set_35,subs2,S).
 iknows(pair(xor(pair(IDi,N1),apply(H,exp(G,pair(KS,apply(H,pair(Alpha,apply(H,pair(IDi,pair(KS,SIDi))))))))),exp(G,apply(H,pair(Alpha,apply(H,pair(IDi,pair(KS,SIDi)))))))).
 witness(Ui,S,user_server_n1,N1).
 witness(Ui,S,user_server_alpha,Alpha).
 contains(SIDi,Dummy_Set_35).
 contains(KS,Dummy_Set_35)

step step_2 (Ui,S,SKuis,H,IDi,PWi,P,G,KS,Dummy_Beta,SIDi,Dummy_Alpha,Dummy_N1,TIDi,Vi,Dummy_Mi,Set_31,Set_32,Set_35,SID,Beta,Alpha,N1) :=
 state_user(Ui,S,SKuis,H,2,IDi,PWi,P,G,KS,Dummy_Beta,SIDi,Dummy_Alpha,Dummy_N1,TIDi,Vi,Dummy_Mi,Set_31,Set_32,Set_35,SID).
 iknows(pair(exp(G,apply(H,pair(KS,Beta))),apply(H,pair(exp(G,apply(H,pair(Alpha,apply(H,pair(IDi,pair(KS,SIDi)))))),pair(apply(H,pair(IDi,pair(KS,SIDi))),pair(exp(G,apply(H,pair(KS,Beta))),exp(G,pair(apply(H,pair(KS,pair(Beta,apply(H,pair(Alpha,apply(H,pair(IDi,pair(KS,SIDi)))))))),N1))))))))
 =>
 state_user(Ui,S,SKuis,H,3,IDi,PWi,P,G,KS,Beta,SIDi,Alpha,N1,TIDi,Vi,apply(H,pair(exp(G,apply(H,pair(KS,pair(Beta,apply(H,pair(Alpha,apply(H,pair(IDi,pair(KS,SIDi))))))))),pair(exp(G,apply(H,pair(KS,Beta))),pair(apply(H,pair(IDi,pair(KS,SIDi))),N1)))),Set_31,Set_32,Set_35,SID).
 iknows(apply(H,pair(exp(G,apply(H,pair(KS,pair(Beta,apply(H,pair(Alpha,apply(H,pair(IDi,pair(KS,SIDi))))))))),pair(exp(G,apply(H,pair(KS,Beta))),pair(apply(H,pair(IDi,pair(KS,SIDi))),N1))))).
 request(S,Ui,server_user_beta,Beta,SID)

step step_3 (S,Ui,SKuis,H,IDi,PWi,P,G,KS,SIDi,Beta,N1,Alpha,Vs,Ms,Dummy_Set_59,Dummy_Set_60,Dummy_Set_61,SID) :=
 state_server(S,Ui,SKuis,H,0,IDi,PWi,P,G,KS,SIDi,Beta,N1,Alpha,Vs,Ms,Dummy_Set_59,Dummy_Set_60,Dummy_Set_61,SID).
 iknows(scrypt(SKuis,IDi))
 =>
 state_server(S,Ui,SKuis,H,1,IDi,PWi,P,G,KS,SIDi,Beta,N1,Alpha,Vs,Ms,Dummy_Set_59,Dummy_Set_60,Dummy_Set_61,SID).
 secret(Dummy_Set_59,subs1,Dummy_Set_60).
 secret(Dummy_Set_61,subs2,S).
 iknows(scrypt(SKuis,pair(apply(H,pair(IDi,pair(KS,SIDi))),pair(exp(G,KS),pair(G,pair(P,H)))))).
 contains(IDi,Dummy_Set_59).
 contains(Ui,Dummy_Set_60).
 contains(S,Dummy_Set_60).
 contains(SIDi,Dummy_Set_61).
 contains(KS,Dummy_Set_61)

step step_4 (S,Ui,SKuis,H,IDi,PWi,P,G,KS,SIDi,Dummy_Beta,Dummy_N1,Dummy_Alpha,Dummy_Vs,Dummy_Ms,Set_59,Set_60,Set_61,SID,Beta,N1,Alpha) :=
 state_server(S,Ui,SKuis,H,1,IDi,PWi,P,G,KS,SIDi,Dummy_Beta,Dummy_N1,Dummy_Alpha,Dummy_Vs,Dummy_Ms,Set_59,Set_60,Set_61,SID).
 iknows(xor(pair(IDi,N1),pair(apply(H,exp(G,pair(KS,apply(H,pair(Alpha,apply(H,pair(IDi,pair(KS,SIDi)))))))),exp(G,apply(H,pair(Alpha,apply(H,pair(IDi,pair(KS,SIDi)))))))))
=[exists Beta]=>
 state_server(S,Ui,SKuis,H,2,IDi,PWi,P,G,KS,SIDi,Beta,N1,Alpha,exp(G,apply(H,pair(KS,Beta))),apply(H,pair(exp(G,apply(H,pair(Alpha,apply(H,pair(IDi,pair(KS,SIDi)))))),pair(apply(H,pair(IDi,pair(KS,SIDi))),pair(exp(G,apply(H,pair(KS,Beta))),pair(exp(G,apply(H,pair(KS,pair(Beta,apply(H,pair(Alpha,apply(H,pair(IDi,pair(KS,SIDi))))))))),N1))))),Set_59,Set_60,Set_61,SID).
 iknows(pair(exp(G,apply(H,pair(KS,Beta))),apply(H,pair(exp(G,apply(H,pair(Alpha,apply(H,pair(IDi,pair(KS,SIDi)))))),pair(apply(H,pair(IDi,pair(KS,SIDi))),pair(exp(G,apply(H,pair(KS,Beta))),pair(exp(G,apply(H,pair(KS,pair(Beta,apply(H,pair(Alpha,apply(H,pair(IDi,pair(KS,SIDi))))))))),N1))))))).
 witness(S,Ui,server_user_beta,Beta)

step step_5 (S,Ui,SKuis,H,IDi,PWi,P,G,KS,SIDi,Dummy_Beta,Dummy_N1,Dummy_Alpha,Vs,Ms,Set_59,Set_60,Set_61,SID,Beta,N1,Alpha) :=
 state_server(S,Ui,SKuis,H,2,IDi,PWi,P,G,KS,SIDi,Dummy_Beta,Dummy_N1,Dummy_Alpha,Vs,Ms,Set_59,Set_60,Set_61,SID).
 iknows(apply(H,pair(exp(G,apply(H,pair(KS,pair(Beta,apply(H,pair(Alpha,apply(H,pair(IDi,pair(KS,SIDi))))))))),pair(exp(G,apply(H,pair(KS,Beta))),pair(apply(H,pair(IDi,pair(KS,SIDi))),N1)))))
 =>
 state_server(S,Ui,SKuis,H,3,IDi,PWi,P,G,KS,SIDi,Beta,N1,Alpha,Vs,Ms,Set_59,Set_60,Set_61,SID).
 request(Ui,S,user_server_n1,N1,SID).
 request(Ui,S,user_server_alpha,Alpha,SID)


section properties:

property secrecy_of_subs1 (MGoal,ASGoal) :=
 [] ((secret(MGoal,subs1,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_subs2 (MGoal,ASGoal) :=
 [] ((secret(MGoal,subs2,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property authentication_on_user_server_n1 (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,user_server_n1,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,user_server_n1,MGoal))
     /\ ((request(A1Goal,A2Goal,user_server_n1,MGoal,SID1)
           /\ request(A1Goal,A2Goal,user_server_n1,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_user_server_alpha (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,user_server_alpha,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,user_server_alpha,MGoal))
     /\ ((request(A1Goal,A2Goal,user_server_alpha,MGoal,SID1)
           /\ request(A1Goal,A2Goal,user_server_alpha,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_server_user_beta (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,server_user_beta,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,server_user_beta,MGoal))
     /\ ((request(A1Goal,A2Goal,server_user_beta,MGoal,SID1)
           /\ request(A1Goal,A2Goal,server_user_beta,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state secrecy_of_subs1 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,subs1,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_subs2 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,subs2,ASGoal) &
 not(contains(i,ASGoal))

attack_state authentication_on_user_server_n1 (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,user_server_n1,MGoal,SID) &
 not(witness(A2Goal,A1Goal,user_server_n1,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_user_server_n1 (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,user_server_n1,MGoal,SID1).
 request(A1Goal,A2Goal,user_server_n1,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_user_server_alpha (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,user_server_alpha,MGoal,SID) &
 not(witness(A2Goal,A1Goal,user_server_alpha,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_user_server_alpha (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,user_server_alpha,MGoal,SID1).
 request(A1Goal,A2Goal,user_server_alpha,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_server_user_beta (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,server_user_beta,MGoal,SID) &
 not(witness(A2Goal,A1Goal,server_user_beta,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_server_user_beta (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,server_user_beta,MGoal,SID1).
 request(A1Goal,A2Goal,server_user_beta,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

