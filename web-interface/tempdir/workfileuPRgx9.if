%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfileuPRgx9

section signature:

state_chap_Resp: agent * agent * symmetric_key * symmetric_key * symmetric_key * symmetric_key * symmetric_key * symmetric_key * hash_func * nat * text * text * text * text * text * text * text * text * text * text * text * text * text * text * nat -> fact
state_chap_Init: agent * agent * symmetric_key * symmetric_key * symmetric_key * symmetric_key * symmetric_key * symmetric_key * symmetric_key * hash_func * nat * text * text * text * text * text * text * text * text * text * text * text * text * text * nat -> fact


section types:

ASGoal: set(agent)
MGoal, start: message
na, ns, sec_kas2, sec_kas1: protocol_id
h, H: hash_func
bi, x, y, idi, ai, sid, hoy, X, Y, Idi, Ai, Sid, Hoy, Bi: symmetric_key
A2Goal, A1Goal, a, s, S, A, i: agent
SID2, SID1, SID, 4, State, 3, 2, 1, 0, 9, 6, Dummy_State: nat
Bsi, Cid, A1i, Fi, Ei, Di, Pi, Ni, Nk, Nj, M1, M2, M3, M4, Dummy_Nj, Dummy_Bsi, Dummy_M4, Dummy_M3, Dummy_M2, Dummy_M1, Dummy_Nk, Dummy_Ni, Dummy_Pi, Dummy_Di, Dummy_Ei, Dummy_Fi, Dummy_A1i, Dummy_Cid, dummy_nonce: text


section inits:

initial_state init1 := 
 iknows(start).
 iknows(a).
 iknows(s).
 iknows(idi).
 iknows(sid).
 iknows(hoy).
 iknows(i).
 state_chap_Init(a,s,bi,x,y,idi,ai,sid,hoy,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,3).
 state_chap_Resp(s,a,x,y,idi,ai,sid,hoy,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,4).
 state_chap_Init(a,i,bi,x,y,idi,ai,sid,hoy,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,6).
 state_chap_Init(s,i,bi,x,y,idi,ai,sid,hoy,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,9)


section rules:

step step_0 (A,S,Bi,X,Y,Idi,Ai,Sid,Hoy,H,Dummy_Cid,Dummy_A1i,Dummy_Fi,Dummy_Ei,Dummy_Di,Dummy_Pi,Dummy_Ni,Dummy_Nk,Nj,Dummy_M1,M2,M3,M4,SID,Ni,Nk) :=
 state_chap_Init(A,S,Bi,X,Y,Idi,Ai,Sid,Hoy,H,0,Dummy_Cid,Dummy_A1i,Dummy_Fi,Dummy_Ei,Dummy_Di,Dummy_Pi,Dummy_Ni,Dummy_Nk,Nj,Dummy_M1,M2,M3,M4,SID).
 iknows(start)
=[exists Nk,Ni]=>
 state_chap_Init(A,S,Bi,X,Y,Idi,Ai,Sid,Hoy,H,1,xor(pair(Dummy_A1i,apply(H,pair(Dummy_Fi,pair(Sid,Dummy_Ni))))),apply(H,pair(Ai,Dummy_Nk)),xor(pair(Dummy_Di,Ai)),xor(pair(Bi,apply(H,pair(X,Y)))),xor(pair(apply(H,pair(Bi,apply(H,pair(X,Y)))),Ai)),xor(pair(Dummy_Ei,apply(H,pair(apply(H,pair(Sid,Hoy)),Dummy_Ni)))),Ni,Nk,Nj,apply(H,pair(Dummy_Pi,pair(Dummy_Cid,pair(Dummy_Fi,Dummy_Ni)))),M2,M3,M4,SID).
 iknows(Dummy_Pi)

step step_1 (A,S,Bi,X,Y,Idi,Ai,Sid,Hoy,H,Cid,A1i,Fi,Ei,Di,Pi,Ni,Nk,Nj,M1,Dummy_M2,Dummy_M3,Dummy_M4,SID,M2) :=
 state_chap_Init(A,S,Bi,X,Y,Idi,Ai,Sid,Hoy,H,2,Cid,A1i,Fi,Ei,Di,Pi,Ni,Nk,Nj,M1,Dummy_M2,Dummy_M3,Dummy_M4,SID).
 iknows(M2)
 =>
 state_chap_Init(A,S,Bi,X,Y,Idi,Ai,Sid,Hoy,H,3,Cid,A1i,Fi,Ei,Di,Pi,Ni,Nk,Nj,M1,M2,Dummy_M3,apply(H,pair(Fi,pair(A1i,pair(Ni,Sid)))),SID).
 iknows(apply(H,pair(Fi,pair(A1i,pair(Ni,Sid)))))

step step_2 (S,A,X,Y,Idi,Ai,Sid,Hoy,H,Dummy_Bsi,Cid,Dummy_A1i,Dummy_Fi,Dummy_Ei,Di,Pi,Ni,Nk,Dummy_Nj,M1,Dummy_M2,Dummy_M3,M4,SID,Nj) :=
 state_chap_Resp(S,A,X,Y,Idi,Ai,Sid,Hoy,H,1,Dummy_Bsi,Cid,Dummy_A1i,Dummy_Fi,Dummy_Ei,Di,Pi,Ni,Nk,Dummy_Nj,M1,Dummy_M2,Dummy_M3,M4,SID).
 iknows(Pi)
=[exists Nj]=>
 state_chap_Resp(S,A,X,Y,Idi,Ai,Sid,Hoy,H,2,xor(pair(Dummy_Ei,apply(H,pair(X,Y)))),Cid,xor(pair(Cid,apply(H,pair(Dummy_Fi,pair(Sid,Ni))))),apply(H,pair(Dummy_Bsi,apply(H,pair(X,Y)))),xor(pair(Pi,apply(H,pair(apply(H,pair(Sid,Hoy)),Ni)))),Di,Pi,Ni,Nk,Nj,M1,apply(H,pair(Dummy_Fi,pair(Dummy_A1i,pair(Ni,Sid)))),xor(pair(Dummy_A1i,pair(Ni,Dummy_Nj))),M4,SID).
 iknows(Dummy_M2)

step step_3 (S,A,X,Y,Idi,Ai,Sid,Hoy,H,Bsi,Cid,A1i,Fi,Ei,Di,Pi,Ni,Nk,Nj,M1,M2,M3,M4,SID) :=
 state_chap_Resp(S,A,X,Y,Idi,Ai,Sid,Hoy,H,3,Bsi,Cid,A1i,Fi,Ei,Di,Pi,Ni,Nk,Nj,M1,M2,M3,M4,SID).
 iknows(M4)
 =>
 state_chap_Resp(S,A,X,Y,Idi,Ai,Sid,Hoy,H,4,Bsi,Cid,A1i,Fi,Ei,Di,Pi,Ni,Nk,Nj,M1,M2,M3,M4,SID).
 iknows(M4)


section properties:

property secrecy_of_sec_kas1 (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_kas1,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_sec_kas2 (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_kas2,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property authentication_on_ns (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,ns,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,ns,MGoal))
     /\ ((request(A1Goal,A2Goal,ns,MGoal,SID1)
           /\ request(A1Goal,A2Goal,ns,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_na (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,na,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,na,MGoal))
     /\ ((request(A1Goal,A2Goal,na,MGoal,SID1)
           /\ request(A1Goal,A2Goal,na,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state secrecy_of_sec_kas1 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_kas1,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_sec_kas2 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_kas2,ASGoal) &
 not(contains(i,ASGoal))

attack_state authentication_on_ns (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,ns,MGoal,SID) &
 not(witness(A2Goal,A1Goal,ns,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_ns (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,ns,MGoal,SID1).
 request(A1Goal,A2Goal,ns,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_na (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,na,MGoal,SID) &
 not(witness(A2Goal,A1Goal,na,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_na (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,na,MGoal,SID1).
 request(A1Goal,A2Goal,na,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

