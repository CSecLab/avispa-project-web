%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfilegTdcqh

section signature:

state_role_T: agent * agent * text * text * text * nat * text * text * hash_func * text * nat -> fact
state_role_R: agent * agent * text * text * text * nat * text * text * hash_func * text * nat -> fact


section types:

H, dummy_hash: hash_func
const_1, Ns, Nt, Nr, TID, Ks, K, Dummy_Ns, Dummy_Nt, Dummy_Nr, dummy_nonce: text
start, MGoal: message
State, 2, 1, 0, 4, SID, Dummy_State, 3, SID2, SID1: nat
bob, alice, R, T, A2Goal, i, A1Goal: agent
auth_2, auth_1: protocol_id


section inits:

initial_state init1 := 
 iknows(start).
 iknows(i).
 state_role_R(bob,alice,const_1,const_1,const_1,0,dummy_nonce,dummy_nonce,dummy_hash,dummy_nonce,3).
 state_role_T(alice,bob,const_1,const_1,const_1,0,dummy_nonce,dummy_nonce,dummy_hash,dummy_nonce,4)


section rules:

step step_0 (R,T,K,Ks,TID,Dummy_Nr,Nt,H,Ns,SID,Nr) :=
 state_role_R(R,T,K,Ks,TID,0,Dummy_Nr,Nt,H,Ns,SID).
 iknows(start)
=[exists Nr]=>
 state_role_R(R,T,K,Ks,TID,1,Nr,Nt,H,Ns,SID).
 iknows(Nr)

step step_1 (R,T,K,Ks,TID,Nr,Dummy_Nt,H,Dummy_Ns,SID,Nt,Ns) :=
 state_role_R(R,T,K,Ks,TID,1,Nr,Dummy_Nt,H,Dummy_Ns,SID).
 iknows(xor(xor(xor(TID,Nt),apply(H,pair(K,Nt))),apply(H,pair(Ks,Nr))))
=[exists Ns]=>
 state_role_R(R,T,K,Ks,TID,2,Nr,Nt,H,Ns,SID).
 witness(R,T,auth_2,Nt).
 iknows(xor(xor(Ns,apply(H,pair(K,pair(Nt,Ns)))),apply(H,pair(Ks,Nt))))

step step_2 (T,R,K,Ks,TID,Dummy_Nr,Dummy_Nt,H,Ns,SID,Nr,Nt) :=
 state_role_T(T,R,K,Ks,TID,0,Dummy_Nr,Dummy_Nt,H,Ns,SID).
 iknows(Nr)
=[exists Nt]=>
 state_role_T(T,R,K,Ks,TID,1,Nr,Nt,H,Ns,SID).
 iknows(xor(xor(xor(TID,Nt),apply(H,pair(K,Nt))),apply(H,pair(Ks,Nr))))

step step_3 (T,R,K,Ks,TID,Nr,Nt,H,Dummy_Ns,SID,Ns) :=
 state_role_T(T,R,K,Ks,TID,1,Nr,Nt,H,Dummy_Ns,SID).
 iknows(xor(xor(Ns,apply(H,pair(K,pair(Nt,Ns)))),apply(H,pair(Ks,Nt))))
 =>
 state_role_T(T,R,K,Ks,TID,2,Nr,Nt,H,Ns,SID)


section properties:

property authentication_on_auth_1 (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,auth_1,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,auth_1,MGoal))
     /\ ((request(A1Goal,A2Goal,auth_1,MGoal,SID1)
           /\ request(A1Goal,A2Goal,auth_1,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_auth_2 (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,auth_2,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,auth_2,MGoal))
     /\ ((request(A1Goal,A2Goal,auth_2,MGoal,SID1)
           /\ request(A1Goal,A2Goal,auth_2,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state authentication_on_auth_1 (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,auth_1,MGoal,SID) &
 not(witness(A2Goal,A1Goal,auth_1,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_auth_1 (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,auth_1,MGoal,SID1).
 request(A1Goal,A2Goal,auth_1,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_auth_2 (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,auth_2,MGoal,SID) &
 not(witness(A2Goal,A1Goal,auth_2,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_auth_2 (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,auth_2,MGoal,SID1).
 request(A1Goal,A2Goal,auth_2,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

