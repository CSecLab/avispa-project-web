%% IF specification of /home/friends/drwho/Desktop/Archivio/Work/Science/AVISPA/AVISPA-FET-EU-02/shared/testsuite/hlpsl/ISO2.problems.hlpsl

section signature:

state_ISO2_Resp: agent * agent * public_key * public_key * nat * text * text * text * nat -> fact
state_ISO2_Init: agent * agent * public_key * nat * public_key * text * text * text * nat -> fact


section types:

rb, ra : protocol_id
ctext2, Rb, Text1, Ra, Dummy_Text1, Dummy_Text2, Dummy_Ra, Dummy_Rb, ctext1, dummy_nonce, Text2 : text
State, 10, 6, 4, CID, 2, 3, 1, 0, CID2, CID1 : nat
pkb, pki, pks, Pks, Pka, Dummy_Pka, dummy_pk : public_key
start : message
b, a, B, A, i : agent


section inits:

initial_state init1 := 
 iknows(ctext1).
 iknows(ctext2).
 iknows(a).
 iknows(b).
 iknows(pks).
 iknows(pki).
 iknows(inv(pki)).
 iknows(start).
 iknows(i).
 state_ISO2_Init(a,b,pks,0,dummy_pk,dummy_nonce,dummy_nonce,dummy_nonce,3).
 state_ISO2_Resp(b,a,pkb,pks,0,dummy_nonce,dummy_nonce,dummy_nonce,4).
 state_ISO2_Init(a,i,pks,0,dummy_pk,dummy_nonce,dummy_nonce,dummy_nonce,6).
 state_ISO2_Resp(b,i,pkb,pks,0,dummy_nonce,dummy_nonce,dummy_nonce,10)


section rules:

step step_0 (B,A,Pks,Pka,Dummy_Rb,Ra,Text2,Rb,CID) :=
 state_ISO2_Init(B,A,Pks,0,Pka,Dummy_Rb,Ra,Text2,CID).
 iknows(start)
=[exists Rb]=>
 state_ISO2_Init(B,A,Pks,1,Pka,Rb,Ra,Text2,CID).
 iknows(pair(Rb,ctext1))

step step_1 (B,A,Pks,Dummy_Pka,Rb,Dummy_Ra,Dummy_Text2,Pka,Ra,Text2,CID) :=
 state_ISO2_Init(B,A,Pks,1,Dummy_Pka,Rb,Dummy_Ra,Dummy_Text2,CID).
 iknows(pair(pair(pair(pair(pair(pair(pair(Pka,A),crypt(inv(Pks),pair(Pka,A))),Ra),Rb),B),Text2),crypt(inv(Pka),pair(pair(pair(Ra,Rb),B),ctext1))))
 =>
 state_ISO2_Init(B,A,Pks,2,Pka,Rb,Ra,Text2,CID).
 request(B,A,ra,Ra,CID)

step step_2 (A,B,Pka,Pks,Dummy_Ra,Dummy_Rb,Dummy_Text1,Ra,Rb,Text1,CID) :=
 state_ISO2_Resp(A,B,Pka,Pks,0,Dummy_Ra,Dummy_Rb,Dummy_Text1,CID).
 iknows(pair(Rb,Text1))
=[exists Ra]=>
 state_ISO2_Resp(A,B,Pka,Pks,2,Ra,Rb,Text1,CID).
 iknows(pair(pair(pair(pair(pair(pair(pair(Pka,A),crypt(inv(Pks),pair(Pka,A))),Ra),Rb),B),ctext2),crypt(inv(Pka),pair(pair(pair(Ra,Rb),B),Text1)))).
 witness(A,B,ra,Ra)


section goals:

goal authenticate_Ra (A,B,Ra,CID) :=
 request(B,A,ra,Ra,CID).
 not(witness(A,B,ra,Ra)) &
 not(equal(A,i))
goal replay_protection_Ra (A,B,Ra,CID1,CID2) :=
 request(B,A,ra,Ra,CID1).
 request(B,A,ra,Ra,CID2) &
 not(equal(CID1,CID2)) &
 not(equal(A,i))

