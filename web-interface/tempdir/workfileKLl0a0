role alice(
	A, B	:	agent,
	Ka, Kb	:	public_key,
	Sn, Rc	:	channel(dy)
	)
	played_by A def=
	
	local
	State	:	nat,
	Msg	:	message
	
	init
	State := 0
	
	transition
	1.	State   = 0 /\ Rc(start) =|>
		State' := 2 	/\ Msg' := new()
				/\ Sn({Msg'}_Kb)
				/\ secret(Msg', msg, {A, B})
end role

role bob(
	A, B	:	agent,
	Ka, Kb	:	public_key,
	Sn, Rc	:	channel(dy)
	)
	played_by B def=
	
	local
	State	:	nat
	
	init
	State := 1
	
	transition
	2.	State   = 1	/\ Rc({Msg'}_Kb) =|>
		State' := 3
		
end role

role session(
	A, B	:	agent,
	Ka, Kb	:	public_key
	)
	def=
	
	local
	SA, RA, SB, RB:	channel(dy)
	
	composition
	alice(A, B, Ka, Kb, SA, RA)	/\
	bob(B, A, Kb, Ka, SB, RB)
end role

role environment() def=

	const
	a, b, i		:	agent,
	ka, kb, ki	:	public_key
	
	intruder_knowledge = {a, b, i, ka, kb, ki}
	
	composition
	session(a, b, ka, kb)	/\
	session(a, i, ka, ki)
end role

goal
	secrecy_of msg
end goal

environment()
	