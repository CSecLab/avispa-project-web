%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfileVtoenk

section signature:

state_bob: agent * agent * symmetric_key * hash_func * nat * text * text * text * symmetric_key * nat -> fact
state_server: agent * agent * agent * symmetric_key * symmetric_key * nat * text * text * symmetric_key * set(agent) * nat -> fact
state_alice: agent * agent * agent * symmetric_key * symmetric_key * hash_func * nat * text * text * text * symmetric_key * scrypt(symmetric_key,pair(symmetric_key,agent)) * nat -> fact


section types:

kab, bob_alice_nb: protocol_id
MGoal, start: message
X: scrypt(symmetric_key,pair(symmetric_key,agent))
succ, Succ: hash_func
Dummy_Kab, dummy_sk, kas, kbs, kis, Kab, Kbs, Kas: symmetric_key
ASGoal, Set_46, Dummy_Set_46: set(agent)
Dummy_State, 3, SID, SID2, SID1, 9, State, 8, 7, 6, 5, 4, 2, 1, 0, 17, 16, 12, 11: nat
dummy_agent, A2Goal, A1Goal, a, s, b, A, B, S, i: agent
set_115, set_113, set_109, set_102: set
Dummy_Nb, Dummy_Na, dummy_nonce, Nb, Nbb, Na, Dummy_Nbb: text


section inits:

initial_state init1 := 
 iknows(start).
 iknows(a).
 iknows(s).
 iknows(b).
 iknows(kis).
 iknows(i).
 state_alice(a,s,b,kas,kbs,succ,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_sk,scrypt(dummy_sk,pair(dummy_sk,dummy_agent)),3).
 state_server(s,a,b,kas,kbs,3,dummy_nonce,dummy_nonce,dummy_sk,set_102,4).
 state_bob(b,a,kbs,succ,1,dummy_nonce,dummy_nonce,dummy_nonce,dummy_sk,5).
 state_alice(a,s,b,kas,kbs,succ,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_sk,scrypt(dummy_sk,pair(dummy_sk,dummy_agent)),7).
 state_server(s,a,b,kas,kbs,3,dummy_nonce,dummy_nonce,dummy_sk,set_109,8).
 state_bob(b,a,kbs,succ,1,dummy_nonce,dummy_nonce,dummy_nonce,dummy_sk,9).
 state_alice(a,s,i,kas,kis,succ,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_sk,scrypt(dummy_sk,pair(dummy_sk,dummy_agent)),11).
 state_server(s,a,i,kas,kis,3,dummy_nonce,dummy_nonce,dummy_sk,set_113,12).
 state_server(s,i,b,kis,kbs,3,dummy_nonce,dummy_nonce,dummy_sk,set_115,16).
 state_bob(b,i,kbs,succ,1,dummy_nonce,dummy_nonce,dummy_nonce,dummy_sk,17)


section rules:

step step_0 (A,S,B,Kas,Kbs,Succ,Na,Nb,Nbb,Kab,X,SID) :=
 state_alice(A,S,B,Kas,Kbs,Succ,0,Na,Nb,Nbb,Kab,X,SID).
 iknows(start)
 =>
 state_alice(A,S,B,Kas,Kbs,Succ,2,Na,Nb,Nbb,Kab,X,SID).
 iknows(A)

step step_1 (A,S,B,Kas,Kbs,Succ,Dummy_Na,Dummy_Nb,Nbb,Kab,X,SID,Na,Nb) :=
 state_alice(A,S,B,Kas,Kbs,Succ,2,Dummy_Na,Dummy_Nb,Nbb,Kab,X,SID).
 iknows(scrypt(Kbs,pair(A,Nb)))
=[exists Na]=>
 state_alice(A,S,B,Kas,Kbs,Succ,4,Na,Nb,Nbb,Kab,X,SID).
 iknows(pair(A,pair(B,pair(Na,scrypt(Kbs,pair(A,Nb))))))

step step_2 (A,S,B,Kas,Kbs,Succ,Na,Dummy_Nb,Nbb,Dummy_Kab,X,SID,Nb,Kab) :=
 state_alice(A,S,B,Kas,Kbs,Succ,4,Na,Dummy_Nb,Nbb,Dummy_Kab,X,SID).
 iknows(scrypt(Kas,pair(Na,pair(Kab,pair(B,scrypt(Kbs,pair(Kab,pair(A,Nb))))))))
 =>
 state_alice(A,S,B,Kas,Kbs,Succ,6,Na,Nb,Nbb,Kab,X,SID).
 iknows(scrypt(Kbs,pair(Kab,pair(A,Nb))))

step step_3 (A,S,B,Kas,Kbs,Succ,Na,Nb,Dummy_Nbb,Kab,X,SID,Nbb) :=
 state_alice(A,S,B,Kas,Kbs,Succ,6,Na,Nb,Dummy_Nbb,Kab,X,SID).
 iknows(scrypt(Kab,Nbb))
 =>
 state_alice(A,S,B,Kas,Kbs,Succ,8,Na,Nb,Nbb,Kab,X,SID).
 iknows(scrypt(Kab,apply(Succ,Nbb))).
 witness(A,B,bob_alice_nb,Nbb)

step step_4 (S,A,B,Kas,Kbs,Dummy_Na,Dummy_Nb,Dummy_Kab,Dummy_Set_46,SID,Na,Nb,Kab) :=
 state_server(S,A,B,Kas,Kbs,3,Dummy_Na,Dummy_Nb,Dummy_Kab,Dummy_Set_46,SID).
 iknows(pair(A,pair(B,pair(Na,scrypt(Kbs,pair(A,Nb))))))
=[exists Kab]=>
 state_server(S,A,B,Kas,Kbs,5,Na,Nb,Kab,Dummy_Set_46,SID).
 iknows(scrypt(Kas,pair(Na,pair(Kab,pair(B,scrypt(Kbs,pair(Kab,pair(A,Nb)))))))).
 secret(Kab,kab,Dummy_Set_46).
 contains(A,Dummy_Set_46).
 contains(S,Dummy_Set_46).
 contains(B,Dummy_Set_46)

step step_5 (B,A,Kbs,Succ,Dummy_Nb,Nbb,Na,Kab,SID,Nb) :=
 state_bob(B,A,Kbs,Succ,1,Dummy_Nb,Nbb,Na,Kab,SID).
 iknows(A)
=[exists Nb]=>
 state_bob(B,A,Kbs,Succ,3,Nb,Nbb,Na,Kab,SID).
 iknows(scrypt(Kbs,pair(A,Nb)))

step step_6 (B,A,Kbs,Succ,Dummy_Nb,Dummy_Nbb,Na,Dummy_Kab,SID,Nb,Nbb,Kab) :=
 state_bob(B,A,Kbs,Succ,3,Dummy_Nb,Dummy_Nbb,Na,Dummy_Kab,SID).
 iknows(scrypt(Kbs,pair(Kab,pair(A,Nb))))
=[exists Nbb]=>
 state_bob(B,A,Kbs,Succ,7,Nb,Nbb,Na,Kab,SID).
 iknows(scrypt(Kab,Nbb))

step step_7 (B,A,Kbs,Succ,Nb,Nbb,Na,Kab,SID) :=
 state_bob(B,A,Kbs,Succ,7,Nb,Nbb,Na,Kab,SID).
 iknows(scrypt(Kab,apply(Succ,Nbb)))
 =>
 state_bob(B,A,Kbs,Succ,9,Nb,Nbb,Na,Kab,SID).
 request(B,A,bob_alice_nb,Nbb,SID)


section properties:

property secrecy_of_kab (MGoal,ASGoal) :=
 [] ((secret(MGoal,kab,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property authentication_on_bob_alice_nb (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,bob_alice_nb,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,bob_alice_nb,MGoal))
     /\ ((request(A1Goal,A2Goal,bob_alice_nb,MGoal,SID1)
           /\ request(A1Goal,A2Goal,bob_alice_nb,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state secrecy_of_kab (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,kab,ASGoal) &
 not(contains(i,ASGoal))

attack_state authentication_on_bob_alice_nb (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,bob_alice_nb,MGoal,SID) &
 not(witness(A2Goal,A1Goal,bob_alice_nb,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_bob_alice_nb (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,bob_alice_nb,MGoal,SID1).
 request(A1Goal,A2Goal,bob_alice_nb,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

