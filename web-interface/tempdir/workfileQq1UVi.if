%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfileQq1UVi

section signature:

state_server: agent * agent * hash_func * public_key * public_key * nat * symmetric_key * text * text * text * text * text * text * text * text * text * text * text * text * text * message * message * set(agent) * nat -> fact
state_client: agent * agent * hash_func * public_key * public_key * nat * symmetric_key * text * text * text * text * text * text * text * text * text * text * text * text * text * message * message * set(agent) * nat -> fact


section types:

sec_kas2, sec_rs, sec_pw1, ns, na, sec_kas1, sec_sku, sec_ra, sec_pw: protocol_id
set_98, set_124, set_123, set_122, set_120, set_115: set
dummy_sk, PW: symmetric_key
ASGoal, Set_73, Set_41, Dummy_Set_73, Dummy_Set_41: set(agent)
p, qs, qi, P, Qs: public_key
h, H: hash_func
dummy_nonce, Ra, Rs, Sigma, SKs, Ta, Ts, F, Kas, M1, M2, M3, M4, M5, SKu, Dummy_Sigma, Dummy_F, Dummy_Rs, Dummy_Kas, Dummy_M5, Dummy_M4, Dummy_M3, Dummy_M2, Dummy_M1, Dummy_Ra: text
A2Goal, A1Goal, a, s, S, A, i: agent
SID2, SID1, SID, 3, State, 2, 1, 0, 10, 6, 4, Dummy_State: nat
MGoal, Username, Realm, start, dummy_msg: message


section inits:

initial_state init1 := 
 iknows(start).
 iknows(a).
 iknows(s).
 iknows(h).
 iknows(p).
 iknows(qs).
 iknows(qi).
 iknows(i).
 state_client(a,s,h,p,qs,0,dummy_sk,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,set_98,3).
 state_server(s,a,h,p,qs,0,dummy_sk,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,set_115,4).
 state_client(a,i,h,p,qi,0,dummy_sk,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,set_120,6).
 state_server(s,i,h,qs,qi,0,dummy_sk,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,set_124,10)


section rules:

step step_0 (A,S,H,P,Qs,PW,Kas,Rs,Dummy_Ra,Sigma,SKu,Ta,Ts,F,Dummy_M1,Dummy_M2,Dummy_M3,Dummy_M4,Dummy_M5,Username,Realm,Set_41,SID,Ra,M1,M2,M3,M4,M5) :=
 state_client(A,S,H,P,Qs,0,PW,Kas,Rs,Dummy_Ra,Sigma,SKu,Ta,Ts,F,Dummy_M1,Dummy_M2,Dummy_M3,Dummy_M4,Dummy_M5,Username,Realm,Set_41,SID).
 iknows(start)
=[exists M5,M4,M3,M2,M1,Ra]=>
 state_client(A,S,H,P,Qs,1,PW,Kas,Rs,Ra,Sigma,SKu,Ta,Ts,F,M1,M2,M3,M4,M5,Username,Realm,Set_41,SID).
 iknows(crypt(P,Ra)).
 witness(A,S,na,Ra).
 secret(Ra,sec_ra,A)

step step_1 (A,S,H,P,Qs,PW,Dummy_Kas,Dummy_Rs,Dummy_Ra,Sigma,SKu,Ta,Ts,Dummy_F,M1,M2,M3,M4,M5,Username,Realm,Dummy_Set_41,SID,Rs,Ra) :=
 state_client(A,S,H,P,Qs,1,PW,Dummy_Kas,Dummy_Rs,Dummy_Ra,Sigma,SKu,Ta,Ts,Dummy_F,M1,M2,M3,M4,M5,Username,Realm,Dummy_Set_41,SID).
 iknows(pair(crypt(P,Rs),apply(H,pair(pair(crypt(P,pair(Dummy_Ra,Rs)),pair(crypt(Qs,Ra),crypt(P,Rs))),crypt(P,Ra)))))
 =>
 state_client(A,S,H,P,Qs,2,PW,apply(H,pair(crypt(P,pair(M1,pair(Dummy_Ra,Dummy_Rs))),pair(crypt(P,Dummy_Ra),crypt(P,Dummy_Rs)))),Rs,Ra,Sigma,SKu,Ta,Ts,apply(H,crypt(P,pair(M1,pair(Dummy_Ra,Dummy_Rs)))),M1,M2,M3,M4,M5,Username,Realm,Dummy_Set_41,SID).
 iknows(pair(Dummy_F,pair(apply(xor2,pair(M1,M2)),pair(apply(xor2,pair(M2,M3)),pair(apply(xor2,pair(M3,M4)),apply(xor2,pair(M4,M5))))))).
 secret(apply(H,pair(crypt(P,pair(M1,pair(Dummy_Ra,Dummy_Rs))),pair(crypt(P,Dummy_Ra),crypt(P,Dummy_Rs)))),sec_kas1,Dummy_Set_41).
 request(A,S,ns,Dummy_Ra,SID).
 contains(A,Dummy_Set_41).
 contains(S,Dummy_Set_41)

step step_2 (S,A,H,P,Qs,PW,Dummy_Ra,Dummy_Rs,Dummy_Sigma,SKs,Ta,Ts,F,Kas,M1,M2,M3,M4,M5,Username,Realm,Set_73,SID,Ra,Rs) :=
 state_server(S,A,H,P,Qs,0,PW,Dummy_Ra,Dummy_Rs,Dummy_Sigma,SKs,Ta,Ts,F,Kas,M1,M2,M3,M4,M5,Username,Realm,Set_73,SID).
 iknows(crypt(P,Ra))
=[exists Rs]=>
 state_server(S,A,H,P,Qs,1,PW,Ra,Rs,apply(H,pair(pair(crypt(P,pair(Rs,Dummy_Ra)),pair(crypt(inv(Qs),crypt(P,Dummy_Ra)),crypt(P,Rs))),crypt(P,Dummy_Ra))),SKs,Ta,Ts,F,Kas,M1,M2,M3,M4,M5,Username,Realm,Set_73,SID).
 iknows(pair(crypt(P,Rs),apply(H,pair(pair(crypt(P,pair(Rs,Dummy_Ra)),pair(crypt(inv(Qs),crypt(P,Dummy_Ra)),crypt(P,Rs))),crypt(P,Dummy_Ra))))).
 witness(S,A,ns,Rs).
 secret(Rs,sec_rs,S)

step step_3 (S,A,H,P,Qs,PW,Ra,Rs,Sigma,SKs,Ta,Ts,Dummy_F,Dummy_Kas,M1,M2,M3,M4,M5,Username,Realm,Dummy_Set_73,SID) :=
 state_server(S,A,H,P,Qs,2,PW,Ra,Rs,Sigma,SKs,Ta,Ts,Dummy_F,Dummy_Kas,M1,M2,M3,M4,M5,Username,Realm,Dummy_Set_73,SID).
 iknows(pair(F,pair(apply(xor2,pair(M1,M2)),pair(apply(xor2,pair(M2,M3)),pair(apply(xor2,pair(M3,M4)),apply(xor2,pair(M4,M5)))))))
 =>
 state_server(S,A,H,P,Qs,3,PW,Ra,Rs,Sigma,SKs,Ta,Ts,apply(H,crypt(P,pair(Rs,pair(Ra,M1)))),apply(H,pair(crypt(P,pair(Rs,pair(Ra,M1))),pair(crypt(P,Ra),crypt(P,Rs)))),M1,M2,M3,M4,M5,Username,Realm,Dummy_Set_73,SID).
 secret(apply(H,pair(crypt(P,pair(Rs,pair(Ra,M1))),pair(crypt(P,Ra),crypt(P,Rs)))),sec_kas2,Dummy_Set_73).
 request(S,A,na,Rs,SID).
 contains(A,Dummy_Set_73).
 contains(S,Dummy_Set_73)


section properties:

property secrecy_of_sec_kas1 (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_kas1,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_sec_kas2 (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_kas2,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_sec_ra (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_ra,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_sec_rs (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_rs,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_sec_pw (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_pw,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_sec_pw1 (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_pw1,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property authentication_on_na (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,na,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,na,MGoal))
     /\ ((request(A1Goal,A2Goal,na,MGoal,SID1)
           /\ request(A1Goal,A2Goal,na,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_ns (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,ns,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,ns,MGoal))
     /\ ((request(A1Goal,A2Goal,ns,MGoal,SID1)
           /\ request(A1Goal,A2Goal,ns,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state secrecy_of_sec_kas1 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_kas1,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_sec_kas2 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_kas2,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_sec_ra (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_ra,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_sec_rs (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_rs,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_sec_pw (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_pw,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_sec_pw1 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_pw1,ASGoal) &
 not(contains(i,ASGoal))

attack_state authentication_on_na (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,na,MGoal,SID) &
 not(witness(A2Goal,A1Goal,na,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_na (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,na,MGoal,SID1).
 request(A1Goal,A2Goal,na,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_ns (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,ns,MGoal,SID) &
 not(witness(A2Goal,A1Goal,ns,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_ns (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,ns,MGoal,SID1).
 request(A1Goal,A2Goal,ns,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

