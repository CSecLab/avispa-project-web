%% IF specification of /home/friends/drwho/Desktop/Archivio/Work/Science/AVISPA/AVISPA-FET-EU-02/shared/testsuite/hlpsl/CHAPv2.problems.hlpsl

section signature:

state_CHAP_Resp: agent * agent * symmetric_key * function * nat * text * text * nat -> fact
state_CHAP_Init: agent * agent * symmetric_key * function * nat * text * text * nat -> fact


section types:

nb, na : protocol_id
Na, Nb, Dummy_Nb, Dummy_Na, dummy_nonce : text
State, 9, 6, 4, CID, 3, 2, 1, 0, CID2, CID1 : nat
h, H : function
kab, kbi, kai, Kab : symmetric_key
MGoal, start : message
b, a, A, B, AGoal, i : agent


section inits:

initial_state init1 := 
 iknows(dummy_nonce).
 iknows(a).
 iknows(b).
 iknows(h).
 iknows(kai).
 iknows(kbi).
 iknows(start).
 iknows(i).
 state_CHAP_Init(a,b,kab,h,0,dummy_nonce,dummy_nonce,3).
 state_CHAP_Resp(b,a,kab,h,0,dummy_nonce,dummy_nonce,4).
 state_CHAP_Init(a,i,kai,h,0,dummy_nonce,dummy_nonce,6).
 state_CHAP_Init(b,i,kbi,h,0,dummy_nonce,dummy_nonce,9)


section rules:

step step_0 (A,B,Kab,H,Na,Nb,CID) :=
 state_CHAP_Init(A,B,Kab,H,0,Na,Nb,CID).
 iknows(start)
 =>
 state_CHAP_Init(A,B,Kab,H,1,Na,Nb,CID).
 iknows(A)

step step_1 (A,B,Kab,H,Dummy_Na,Dummy_Nb,Na,Nb,CID) :=
 state_CHAP_Init(A,B,Kab,H,1,Dummy_Na,Dummy_Nb,CID).
 iknows(Nb)
=[exists Na]=>
 state_CHAP_Init(A,B,Kab,H,2,Na,Nb,CID).
 iknows(pair(Na,apply(H,pair(pair(pair(Kab,Na),Nb),A))))

step step_2 (A,B,Kab,H,Na,Nb,CID) :=
 state_CHAP_Init(A,B,Kab,H,2,Na,Nb,CID).
 iknows(apply(H,pair(Kab,Na)))
 =>
 state_CHAP_Init(A,B,Kab,H,3,Na,Nb,CID).
 request(A,B,nb,Nb,CID)

step step_3 (B,A,Kab,H,Dummy_Nb,Na,Nb,CID) :=
 state_CHAP_Resp(B,A,Kab,H,0,Dummy_Nb,Na,CID).
 iknows(A)
=[exists Nb]=>
 state_CHAP_Resp(B,A,Kab,H,1,Nb,Na,CID).
 iknows(Nb).
 witness(B,A,nb,Nb)

step step_4 (B,A,Kab,H,Nb,Dummy_Na,Na,CID) :=
 state_CHAP_Resp(B,A,Kab,H,1,Nb,Dummy_Na,CID).
 iknows(pair(Na,apply(H,pair(pair(pair(Kab,Na),Nb),A))))
 =>
 state_CHAP_Resp(B,A,Kab,H,2,Nb,Na,CID).
 iknows(apply(H,pair(Kab,Na)))


section goals:

goal authenticate_Nb (B,A,Nb,CID) :=
 request(A,B,nb,Nb,CID).
 not(witness(B,A,nb,Nb)) &
 not(equal(B,i))
goal replay_protection_Nb (B,A,Nb,CID1,CID2) :=
 request(A,B,nb,Nb,CID1).
 request(A,B,nb,Nb,CID2) &
 not(equal(CID1,CID2)) &
 not(equal(B,i))

