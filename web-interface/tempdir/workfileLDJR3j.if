%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfileLDJR3j

section signature:

state_cn: agent * agent * agent * agent * agent * public_key * symmetric_key * hash_func * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * nat * nat -> fact
state_cnmag: agent * agent * agent * agent * agent * public_key * symmetric_key * hash_func * nat * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * nat -> fact
state_mag: agent * agent * agent * agent * agent * public_key * symmetric_key * hash_func * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * nat * nat -> fact
state_mnmag: agent * agent * agent * agent * agent * public_key * symmetric_key * hash_func * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * nat * nat -> fact
state_mn: agent * agent * agent * agent * agent * public_key * symmetric_key * hash_func * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * nat * nat -> fact


section types:

start: message
hashe, HASHE: hash_func
sk, SK: symmetric_key
kcn, KCN: public_key
4, SID, Dummy_State, 3, 14, State, 15, 10, 8, 9, 7, 2, 16, 12, 11, 6, 1, 17, 13, 5, 0: nat
mn1, mnmag1, mag1, cnmag1, cn1, MN, MNMAG, MAG, CNMAG, CN, i: agent
Dummy_NMNMAG, Dummy_PCOAMN, Dummy_HOA, Dummy_MAGDEST, Dummy_MNMAGADDR, Dummy_CONN, dummy_nonce, BDATA, CONN, DATA1, MNMAGADDR, N1MN, MAGDEST, HOA, PCOAMN, NMNMAG, NMN, R0, MSG, MNMAGREQ, PCOAMNREQ, CNMAGADDR, NCNMAG, Dummy_MSG, Dummy_DATA1, Dummy_NCNMAG, Dummy_CNMAGADDR, Dummy_PCOAMNREQ, Dummy_MNMAGREQ, Dummy_BDATA, Dummy_R0, Dummy_NMN: text


section inits:

initial_state init1 := 
 iknows(start).
 iknows(i).
 state_mn(mn1,mnmag1,mag1,cnmag1,cn1,kcn,sk,hashe,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,0,3).
 state_mnmag(mnmag1,mn1,mag1,cnmag1,cn1,kcn,sk,hashe,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,1,4).
 state_mag(mag1,mn1,mnmag1,cnmag1,cn1,kcn,sk,hashe,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,2,5).
 state_cnmag(mnmag1,cnmag1,mag1,mn1,cn1,kcn,sk,hashe,4,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,6).
 state_cn(cn1,mn1,mnmag1,mag1,cnmag1,kcn,sk,hashe,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,3,7)


section rules:

step step_0 (MN,MNMAG,MAG,CNMAG,CN,KCN,SK,HASHE,BDATA,Dummy_CONN,DATA1,MNMAGADDR,N1MN,MAGDEST,HOA,PCOAMN,NMNMAG,NMN,R0,MSG,MNMAGREQ,PCOAMNREQ,CNMAGADDR,NCNMAG,SID,CONN) :=
 state_mn(MN,MNMAG,MAG,CNMAG,CN,KCN,SK,HASHE,BDATA,Dummy_CONN,DATA1,MNMAGADDR,N1MN,MAGDEST,HOA,PCOAMN,NMNMAG,NMN,R0,MSG,MNMAGREQ,PCOAMNREQ,CNMAGADDR,NCNMAG,0,SID).
 iknows(start)
=[exists CONN]=>
 state_mn(MN,MNMAG,MAG,CNMAG,CN,KCN,SK,HASHE,BDATA,CONN,DATA1,MNMAGADDR,N1MN,MAGDEST,HOA,PCOAMN,NMNMAG,NMN,R0,MSG,MNMAGREQ,PCOAMNREQ,CNMAGADDR,NCNMAG,5,SID).
 iknows(CONN)

step step_1 (MN,MNMAG,MAG,CNMAG,CN,KCN,SK,HASHE,BDATA,CONN,DATA1,MNMAGADDR,N1MN,MAGDEST,HOA,PCOAMN,NMNMAG,NMN,R0,MSG,MNMAGREQ,PCOAMNREQ,CNMAGADDR,NCNMAG,SID) :=
 state_mn(MN,MNMAG,MAG,CNMAG,CN,KCN,SK,HASHE,BDATA,CONN,DATA1,MNMAGADDR,N1MN,MAGDEST,HOA,PCOAMN,NMNMAG,NMN,R0,MSG,MNMAGREQ,PCOAMNREQ,CNMAGADDR,NCNMAG,5,SID).
 iknows(BDATA)
 =>
 state_mn(MN,MNMAG,MAG,CNMAG,CN,KCN,SK,HASHE,BDATA,CONN,DATA1,MNMAGADDR,N1MN,MAGDEST,HOA,PCOAMN,NMNMAG,NMN,R0,MSG,MNMAGREQ,PCOAMNREQ,CNMAGADDR,NCNMAG,13,SID)

step step_2 (MN,MNMAG,MAG,CNMAG,CN,KCN,SK,HASHE,BDATA,CONN,DATA1,MNMAGADDR,N1MN,MAGDEST,HOA,PCOAMN,NMNMAG,NMN,R0,MSG,MNMAGREQ,PCOAMNREQ,CNMAGADDR,NCNMAG,SID) :=
 state_mn(MN,MNMAG,MAG,CNMAG,CN,KCN,SK,HASHE,BDATA,CONN,DATA1,MNMAGADDR,N1MN,MAGDEST,HOA,PCOAMN,NMNMAG,NMN,R0,MSG,MNMAGREQ,PCOAMNREQ,CNMAGADDR,NCNMAG,13,SID).
 iknows(pair(apply(HASHE,scrypt(SK,crypt(KCN,MSG))),scrypt(SK,crypt(KCN,MSG))))
 =>
 state_mn(MN,MNMAG,MAG,CNMAG,CN,KCN,SK,HASHE,BDATA,CONN,DATA1,MNMAGADDR,N1MN,MAGDEST,HOA,PCOAMN,NMNMAG,NMN,R0,MSG,MNMAGREQ,PCOAMNREQ,CNMAGADDR,NCNMAG,17,SID)

step step_3 (MNMAG,MN,MAG,CNMAG,CN,KCN,SK,HASHE,BDATA,Dummy_CONN,DATA1,Dummy_MNMAGADDR,N1MN,Dummy_MAGDEST,Dummy_HOA,Dummy_PCOAMN,Dummy_NMNMAG,Dummy_NMN,R0,MSG,MNMAGREQ,PCOAMNREQ,CNMAGADDR,NCNMAG,SID,CONN,MNMAGADDR,MAGDEST,HOA,PCOAMN,NMNMAG,NMN) :=
 state_mnmag(MNMAG,MN,MAG,CNMAG,CN,KCN,SK,HASHE,BDATA,Dummy_CONN,DATA1,Dummy_MNMAGADDR,N1MN,Dummy_MAGDEST,Dummy_HOA,Dummy_PCOAMN,Dummy_NMNMAG,Dummy_NMN,R0,MSG,MNMAGREQ,PCOAMNREQ,CNMAGADDR,NCNMAG,1,SID).
 iknows(CONN)
=[exists NMN,NMNMAG,PCOAMN,HOA,MAGDEST,MNMAGADDR]=>
 state_mnmag(MNMAG,MN,MAG,CNMAG,CN,KCN,SK,HASHE,BDATA,CONN,DATA1,MNMAGADDR,N1MN,MAGDEST,HOA,PCOAMN,NMNMAG,NMN,R0,MSG,MNMAGREQ,PCOAMNREQ,CNMAGADDR,NCNMAG,6,SID).
 iknows(pair(MNMAGADDR,pair(MAGDEST,pair(NMNMAG,pair(crypt(KCN,pair(HOA,pair(PCOAMN,NMN))),apply(HASHE,pair(crypt(KCN,pair(HOA,pair(PCOAMN,pair(NMN,KCN)))),pair(NMNMAG,NMN))))))))

step step_4 (MNMAG,MN,MAG,CNMAG,CN,KCN,SK,HASHE,BDATA,CONN,DATA1,MNMAGADDR,N1MN,MAGDEST,HOA,PCOAMN,NMNMAG,NMN,Dummy_R0,MSG,MNMAGREQ,PCOAMNREQ,CNMAGADDR,NCNMAG,SID,R0) :=
 state_mnmag(MNMAG,MN,MAG,CNMAG,CN,KCN,SK,HASHE,BDATA,CONN,DATA1,MNMAGADDR,N1MN,MAGDEST,HOA,PCOAMN,NMNMAG,NMN,Dummy_R0,MSG,MNMAGREQ,PCOAMNREQ,CNMAGADDR,NCNMAG,6,SID).
 iknows(pair(MNMAGADDR,pair(MAGDEST,pair(NMNMAG,pair(crypt(KCN,N1MN),xor(NMNMAG,R0))))))
 =>
 state_mnmag(MNMAG,MN,MAG,CNMAG,CN,KCN,SK,HASHE,BDATA,CONN,DATA1,MNMAGADDR,N1MN,MAGDEST,HOA,PCOAMN,NMNMAG,NMN,R0,MSG,MNMAGREQ,PCOAMNREQ,CNMAGADDR,NCNMAG,11,SID)

step step_5 (MNMAG,MN,MAG,CNMAG,CN,KCN,SK,HASHE,Dummy_BDATA,CONN,DATA1,MNMAGADDR,N1MN,MAGDEST,HOA,PCOAMN,NMNMAG,NMN,R0,MSG,MNMAGREQ,PCOAMNREQ,CNMAGADDR,NCNMAG,SID,BDATA) :=
 state_mnmag(MNMAG,MN,MAG,CNMAG,CN,KCN,SK,HASHE,Dummy_BDATA,CONN,DATA1,MNMAGADDR,N1MN,MAGDEST,HOA,PCOAMN,NMNMAG,NMN,R0,MSG,MNMAGREQ,PCOAMNREQ,CNMAGADDR,NCNMAG,11,SID).
 iknows(BDATA)
 =>
 state_mnmag(MNMAG,MN,MAG,CNMAG,CN,KCN,SK,HASHE,BDATA,CONN,DATA1,MNMAGADDR,N1MN,MAGDEST,HOA,PCOAMN,NMNMAG,NMN,R0,MSG,MNMAGREQ,PCOAMNREQ,CNMAGADDR,NCNMAG,12,SID).
 iknows(Dummy_BDATA)

step step_6 (MNMAG,MN,MAG,CNMAG,CN,KCN,SK,HASHE,BDATA,CONN,DATA1,MNMAGADDR,N1MN,MAGDEST,HOA,PCOAMN,NMNMAG,NMN,R0,MSG,MNMAGREQ,PCOAMNREQ,CNMAGADDR,NCNMAG,SID) :=
 state_mnmag(MNMAG,MN,MAG,CNMAG,CN,KCN,SK,HASHE,BDATA,CONN,DATA1,MNMAGADDR,N1MN,MAGDEST,HOA,PCOAMN,NMNMAG,NMN,R0,MSG,MNMAGREQ,PCOAMNREQ,CNMAGADDR,NCNMAG,12,SID).
 iknows(pair(apply(HASHE,scrypt(SK,crypt(KCN,MSG))),scrypt(SK,crypt(KCN,MSG))))
 =>
 state_mnmag(MNMAG,MN,MAG,CNMAG,CN,KCN,SK,HASHE,BDATA,CONN,DATA1,MNMAGADDR,N1MN,MAGDEST,HOA,PCOAMN,NMNMAG,NMN,R0,MSG,MNMAGREQ,PCOAMNREQ,CNMAGADDR,NCNMAG,16,SID).
 iknows(pair(apply(HASHE,scrypt(SK,crypt(KCN,MSG))),scrypt(SK,crypt(KCN,MSG))))

step step_7 (MAG,MN,MNMAG,CNMAG,CN,KCN,SK,HASHE,BDATA,CONN,DATA1,Dummy_MNMAGADDR,Dummy_MAGDEST,Dummy_HOA,Dummy_PCOAMN,Dummy_NMNMAG,Dummy_NMN,Dummy_R0,MSG,MNMAGREQ,PCOAMNREQ,CNMAGADDR,NCNMAG,N1MN,SID,MNMAGADDR,MAGDEST,HOA,PCOAMN,NMNMAG,NMN,R0) :=
 state_mag(MAG,MN,MNMAG,CNMAG,CN,KCN,SK,HASHE,BDATA,CONN,DATA1,Dummy_MNMAGADDR,Dummy_MAGDEST,Dummy_HOA,Dummy_PCOAMN,Dummy_NMNMAG,Dummy_NMN,Dummy_R0,MSG,MNMAGREQ,PCOAMNREQ,CNMAGADDR,NCNMAG,N1MN,2,SID).
 iknows(pair(MNMAGADDR,pair(MAGDEST,pair(NMNMAG,pair(crypt(KCN,pair(HOA,pair(PCOAMN,NMN))),apply(HASHE,pair(crypt(KCN,pair(HOA,pair(PCOAMN,pair(NMN,KCN)))),pair(NMNMAG,NMN))))))))
=[exists R0]=>
 state_mag(MAG,MN,MNMAG,CNMAG,CN,KCN,SK,HASHE,BDATA,CONN,DATA1,MNMAGADDR,MAGDEST,HOA,PCOAMN,NMNMAG,NMN,R0,MSG,MNMAGREQ,PCOAMNREQ,CNMAGADDR,NCNMAG,N1MN,7,SID).
 iknows(pair(Dummy_MNMAGADDR,pair(Dummy_MAGDEST,pair(Dummy_NMNMAG,pair(crypt(KCN,N1MN),xor(Dummy_NMNMAG,R0))))))

step step_8 (MAG,MN,MNMAG,CNMAG,CN,KCN,SK,HASHE,BDATA,CONN,DATA1,MNMAGADDR,Dummy_MAGDEST,HOA,Dummy_PCOAMN,NMNMAG,NMN,R0,MSG,Dummy_MNMAGREQ,Dummy_PCOAMNREQ,Dummy_CNMAGADDR,Dummy_NCNMAG,N1MN,SID,MAGDEST,PCOAMN,MNMAGREQ,PCOAMNREQ,CNMAGADDR,NCNMAG) :=
 state_mag(MAG,MN,MNMAG,CNMAG,CN,KCN,SK,HASHE,BDATA,CONN,DATA1,MNMAGADDR,Dummy_MAGDEST,HOA,Dummy_PCOAMN,NMNMAG,NMN,R0,MSG,Dummy_MNMAGREQ,Dummy_PCOAMNREQ,Dummy_CNMAGADDR,Dummy_NCNMAG,N1MN,7,SID).
 iknows(pair(CNMAGADDR,pair(MAGDEST,pair(NCNMAG,pair(MNMAGREQ,pair(PCOAMNREQ,apply(HASHE,NCNMAG)))))))
=[exists PCOAMN]=>
 state_mag(MAG,MN,MNMAG,CNMAG,CN,KCN,SK,HASHE,BDATA,CONN,DATA1,MNMAGADDR,MAGDEST,HOA,PCOAMN,NMNMAG,NMN,R0,MSG,MNMAGREQ,PCOAMNREQ,CNMAGADDR,NCNMAG,N1MN,9,SID).
 iknows(pair(Dummy_CNMAGADDR,pair(Dummy_MAGDEST,pair(Dummy_NCNMAG,pair(crypt(KCN,pair(MNMAGADDR,PCOAMN)),apply(HASHE,pair(MNMAGADDR,PCOAMN)))))))

step step_9 (CNMAG,MN,MNMAG,MAG,CN,KCN,SK,HASHE,BDATA,CONN,Dummy_DATA1,MNMAGADDR,N1MN,Dummy_MAGDEST,HOA,PCOAMN,NMNMAG,NMN,R0,MSG,Dummy_MNMAGREQ,Dummy_PCOAMNREQ,Dummy_CNMAGADDR,Dummy_NCNMAG,SID,DATA1,MAGDEST,MNMAGREQ,PCOAMNREQ,CNMAGADDR,NCNMAG) :=
 state_cnmag(CNMAG,MN,MNMAG,MAG,CN,KCN,SK,HASHE,4,BDATA,CONN,Dummy_DATA1,MNMAGADDR,N1MN,Dummy_MAGDEST,HOA,PCOAMN,NMNMAG,NMN,R0,MSG,Dummy_MNMAGREQ,Dummy_PCOAMNREQ,Dummy_CNMAGADDR,Dummy_NCNMAG,SID).
 iknows(DATA1)
=[exists PCOAMNREQ,MNMAGREQ,NCNMAG,MAGDEST,CNMAGADDR]=>
 state_cnmag(CNMAG,MN,MNMAG,MAG,CN,KCN,SK,HASHE,8,BDATA,CONN,DATA1,MNMAGADDR,N1MN,MAGDEST,HOA,PCOAMN,NMNMAG,NMN,R0,MSG,MNMAGREQ,PCOAMNREQ,CNMAGADDR,NCNMAG,SID).
 iknows(pair(CNMAGADDR,pair(MAGDEST,pair(NCNMAG,pair(MNMAGREQ,pair(PCOAMNREQ,apply(HASHE,NCNMAG)))))))

step step_10 (CNMAG,MN,MNMAG,MAG,CN,KCN,SK,HASHE,Dummy_BDATA,CONN,DATA1,MNMAGADDR,N1MN,MAGDEST,HOA,Dummy_PCOAMN,NMNMAG,NMN,R0,MSG,MNMAGREQ,PCOAMNREQ,CNMAGADDR,NCNMAG,SID,BDATA,PCOAMN) :=
 state_cnmag(CNMAG,MN,MNMAG,MAG,CN,KCN,SK,HASHE,8,Dummy_BDATA,CONN,DATA1,MNMAGADDR,N1MN,MAGDEST,HOA,Dummy_PCOAMN,NMNMAG,NMN,R0,MSG,MNMAGREQ,PCOAMNREQ,CNMAGADDR,NCNMAG,SID).
 iknows(pair(CNMAGADDR,pair(MAGDEST,pair(NCNMAG,pair(crypt(KCN,pair(MNMAGADDR,PCOAMN)),apply(HASHE,pair(MNMAGADDR,PCOAMN)))))))
=[exists BDATA]=>
 state_cnmag(CNMAG,MN,MNMAG,MAG,CN,KCN,SK,HASHE,10,BDATA,CONN,DATA1,MNMAGADDR,N1MN,MAGDEST,HOA,PCOAMN,NMNMAG,NMN,R0,MSG,MNMAGREQ,PCOAMNREQ,CNMAGADDR,NCNMAG,SID).
 iknows(BDATA)

step step_11 (CNMAG,MN,MNMAG,MAG,CN,KCN,SK,HASHE,BDATA,CONN,DATA1,MNMAGADDR,N1MN,MAGDEST,HOA,PCOAMN,NMNMAG,NMN,R0,Dummy_MSG,MNMAGREQ,PCOAMNREQ,CNMAGADDR,NCNMAG,SID,MSG) :=
 state_cnmag(CNMAG,MN,MNMAG,MAG,CN,KCN,SK,HASHE,10,BDATA,CONN,DATA1,MNMAGADDR,N1MN,MAGDEST,HOA,PCOAMN,NMNMAG,NMN,R0,Dummy_MSG,MNMAGREQ,PCOAMNREQ,CNMAGADDR,NCNMAG,SID).
 iknows(pair(apply(HASHE,scrypt(SK,crypt(KCN,MSG))),scrypt(SK,crypt(KCN,MSG))))
 =>
 state_cnmag(CNMAG,MN,MNMAG,MAG,CN,KCN,SK,HASHE,15,BDATA,CONN,DATA1,MNMAGADDR,N1MN,MAGDEST,HOA,PCOAMN,NMNMAG,NMN,R0,MSG,MNMAGREQ,PCOAMNREQ,CNMAGADDR,NCNMAG,SID).
 iknows(pair(apply(HASHE,scrypt(SK,crypt(KCN,Dummy_MSG))),scrypt(SK,crypt(KCN,Dummy_MSG))))

step step_12 (CN,MN,MNMAG,MAG,CNMAG,KCN,SK,HASHE,BDATA,CONN,Dummy_DATA1,MNMAGADDR,N1MN,MAGDEST,HOA,PCOAMN,NMNMAG,NMN,R0,MSG,MNMAGREQ,PCOAMNREQ,CNMAGADDR,NCNMAG,SID,DATA1) :=
 state_cn(CN,MN,MNMAG,MAG,CNMAG,KCN,SK,HASHE,BDATA,CONN,Dummy_DATA1,MNMAGADDR,N1MN,MAGDEST,HOA,PCOAMN,NMNMAG,NMN,R0,MSG,MNMAGREQ,PCOAMNREQ,CNMAGADDR,NCNMAG,3,SID).
 iknows(start)
=[exists DATA1]=>
 state_cn(CN,MN,MNMAG,MAG,CNMAG,KCN,SK,HASHE,BDATA,CONN,DATA1,MNMAGADDR,N1MN,MAGDEST,HOA,PCOAMN,NMNMAG,NMN,R0,MSG,MNMAGREQ,PCOAMNREQ,CNMAGADDR,NCNMAG,6,SID).
 iknows(DATA1)

step step_13 (CN,MN,MNMAG,MAG,CNMAG,KCN,SK,HASHE,BDATA,CONN,DATA1,MNMAGADDR,N1MN,MAGDEST,HOA,PCOAMN,NMNMAG,NMN,R0,Dummy_MSG,MNMAGREQ,PCOAMNREQ,CNMAGADDR,NCNMAG,SID,MSG) :=
 state_cn(CN,MN,MNMAG,MAG,CNMAG,KCN,SK,HASHE,BDATA,CONN,DATA1,MNMAGADDR,N1MN,MAGDEST,HOA,PCOAMN,NMNMAG,NMN,R0,Dummy_MSG,MNMAGREQ,PCOAMNREQ,CNMAGADDR,NCNMAG,6,SID).
 iknows(start)
=[exists MSG]=>
 state_cn(CN,MN,MNMAG,MAG,CNMAG,KCN,SK,HASHE,BDATA,CONN,DATA1,MNMAGADDR,N1MN,MAGDEST,HOA,PCOAMN,NMNMAG,NMN,R0,MSG,MNMAGREQ,PCOAMNREQ,CNMAGADDR,NCNMAG,14,SID).
 iknows(pair(apply(HASHE,scrypt(SK,crypt(KCN,MSG))),scrypt(SK,crypt(KCN,MSG))))


