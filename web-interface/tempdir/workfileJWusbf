role iMobile_MN (MN, MS, FXTR : agent,
                 Snd, Rcv     : channel(dy),
                 K_MnMS     : symmetric_key)
played_by MN
def=

  local  State         : nat,
         K_MnFlocator,K_MnHlocator : symmetric_key

  init   State := 0

  transition

   1. State = 0
      /\ Rcv(FXTR.FXTR)
      =|> 
      State' := 1
      /\  Snd(FXTR.MN.MS.{FXTR.MN.MS}_K_MnMS) 

   2. State = 1
      /\ Rcv( {K_MnFlocator'.K_MnHlocator'}_K_MnMS.
             {{K_MnFlocator'.K_MnHlocator'}_K_MnMS}_K_MnHlocator') 
      =|>  
      State' := 2 
      /\ wrequest(MN,MS,k_mnhlocator2,K_MnHlocator')
      /\ wrequest(MN,MS,k_mnflocator2,K_MnFlocator')

end role



role iRouter_FXTR (FXTR,MR,MS,MN: agent,
                 Snd, Rcv: channel(dy),
                 K_FlocatorMR: symmetric_key)
played_by FXTR
def=

  local
    State              : nat,
    K_MnFlocator, K_FlocatorHlocator      : symmetric_key,
    SignedRegReq                   : {agent.(agent.agent)}_symmetric_key,
    KeyMnHlocatorKeyMnFlocator     : {symmetric_key.symmetric_key}_symmetric_key,
    SignKeyMnHlocatorKeyMnFlocator : 
         {{symmetric_key.symmetric_key}_symmetric_key}_symmetric_key

  init State := 0

  transition

   1. State = 0
      /\ Rcv(start)
      =|> 
      State' := 1
      /\ Snd(FXTR.FXTR) 

   2. State = 1
      /\ Rcv(FXTR.MN.MS.SignedRegReq')
      =|> 
      State' := 2
      /\ Snd(FXTR.MN.MS.SignedRegReq') 
        
   3. State = 2
      /\ Rcv( FXTR.{K_MnFlocator'.K_FlocatorHlocator'}_K_FlocatorMR.
              KeyMnHlocatorKeyMnFlocator'.SignKeyMnHlocatorKeyMnFlocator'.
              {FXTR.{K_MnFlocator'.K_FlocatorHlocator'}_K_FlocatorMR.
               KeyMnHlocatorKeyMnFlocator'.SignKeyMnHlocatorKeyMnFlocator'}_K_FlocatorMR)
      =|>
      State' := 3
      /\ Snd(KeyMnHlocatorKeyMnFlocator'.SignKeyMnHlocatorKeyMnFlocator') 
      /\ wrequest(FXTR,MS,k_flocatorhlocator1,K_FlocatorHlocator')
      /\ wrequest(FXTR,MS,k_mnflocator1,K_MnFlocator')

end role



role iServer_MR (MR,MS,FXTR,MN: agent,
                  Snd, Rcv: channel(dy),
                  K_FlocatorMR,K_MSMR: symmetric_key)
played_by MR
def=

  local
    State                : nat,
    K_MnFlocator,K_FlocatorHlocator        : symmetric_key,
    SignedRegReq         : {agent.(agent.agent)}_symmetric_key,
    KeyMnFlocatorKeyMnHlocator             : {symmetric_key.symmetric_key}_symmetric_key,
    SignedKeyMnFlocatorKeyMnHlocator : 
           {{symmetric_key.symmetric_key}_symmetric_key}_symmetric_key

  init State := 0
  
  transition

   1. State = 0
      /\ Rcv(FXTR.MN.MS.SignedRegReq')
      =|> 
      State' := 1 
      /\ Snd(FXTR.MN.MS. SignedRegReq') 

   2. State = 1
      /\ Rcv( FXTR.{K_MnFlocator'.K_FlocatorHlocator'}_K_MSMR.
              KeyMnFlocatorKeyMnHlocator'.SignedKeyMnFlocatorKeyMnHlocator'.
              {FXTR.{K_MnFlocator'.K_FlocatorHlocator'}_K_MSMR.
               KeyMnFlocatorKeyMnHlocator'.SignedKeyMnFlocatorKeyMnHlocator'}_K_MSMR)
      =|>
      State' := 2
      /\ Snd( FXTR.{K_MnFlocator'.K_FlocatorHlocator'}_K_FlocatorMR.
                 KeyMnFlocatorKeyMnHlocator'.SignedKeyMnFlocatorKeyMnHlocator'.
             {FXTR.{K_MnFlocator'.K_FlocatorHlocator'}_K_FlocatorMR.
                 KeyMnFlocatorKeyMnHlocator'.SignedKeyMnFlocatorKeyMnHlocator'}_K_FlocatorMR)

end role



role iServer_MS (MS,MR,HXTR,FXTR,MN : agent,
           Snd, Rcv : channel(dy),
           K_MnMS,
           K_MSMR,
           KMSHlocator : symmetric_key)
played_by MS
def=

  local  State                : nat,
         K_FlocatorHlocator,K_MnHlocator,K_MnFlocator : symmetric_key

  const  secFXTRHXTR, secFXTRMN, secMNHXTR   : protocol_id

  init   State := 0

  transition

   1. State   = 0
      /\ Rcv(FXTR.MN.MS.{FXTR.MN.MS}_K_MnMS)
      =|> 
      State' := 1
      /\ K_MnHlocator' := new()
      /\ K_MnFlocator' := new()
      /\ K_FlocatorHlocator' := new()
      /\ Snd( MN.{K_MnHlocator'.K_FlocatorHlocator'}_KMSHlocator.
                 {K_MnFlocator'.K_MnHlocator'}_K_MnMS.
                 {MN.{K_MnHlocator'.K_FlocatorHlocator'}_KMSHlocator.
                     {K_MnFlocator'.K_MnHlocator'}_K_MnMS}_KMSHlocator)
      /\ witness(MS,FXTR,k_flocatorhlocator1,K_FlocatorHlocator')
      /\ witness(MS,HXTR,k_flocatorhlocator2,K_FlocatorHlocator')
      /\ witness(MS,FXTR,k_mnflocator1,K_MnFlocator')
      /\ witness(MS,MN,k_mnflocator2,K_MnFlocator')
      /\ witness(MS,MN,k_mnhlocator2,K_MnHlocator')
      /\ witness(MS,HXTR,k_mnhlocator1,K_MnHlocator')

   2. State = 1
      /\ Rcv( {K_MnFlocator.K_MnHlocator}_K_MnMS.
              {{K_MnFlocator.K_MnHlocator}_K_MnMS}_K_MnHlocator.
               {{K_MnFlocator.K_MnHlocator}_K_MnMS.
                {{K_MnFlocator.K_MnHlocator}_K_MnMS}_K_MnHlocator}_KMSHlocator)
      =|>
      State' := 2
      /\ Snd( FXTR.{K_MnFlocator.K_FlocatorHlocator}_K_MSMR.{K_MnFlocator.K_MnHlocator}_K_MnMS.
                {{K_MnFlocator.K_MnHlocator}_K_MnMS}_K_MnHlocator.
             {FXTR.{K_MnFlocator.K_FlocatorHlocator}_K_MSMR.{K_MnFlocator.K_MnHlocator}_K_MnMS.
                {{K_MnFlocator.K_MnHlocator}_K_MnMS}_K_MnHlocator}_K_MSMR)  
      /\ secret(K_FlocatorHlocator,secFXTRHXTR,{FXTR,HXTR}) 
      /\ secret(K_MnFlocator,secFXTRMN,{FXTR,MN})
      /\ secret(K_MnHlocator,secMNHXTR,{MN,HXTR})

end role



role iRouter_HXTR (HXTR,MS,MN: agent,
                 Snd,Rcv: channel(dy),
                 K_MSHlocator: symmetric_key)
played_by HXTR
def=

  local
    State                 : nat,
    K_MnFlocator,K_FlocatorHlocator, K_MnHlocator : symmetric_key,
    KeyMnFlocatorKeyMnHlocator        : {symmetric_key.symmetric_key}_symmetric_key


  init State := 0

  transition

   1. State = 0
      /\ Rcv( MN.{K_MnHlocator'.K_FlocatorHlocator'}_K_MSHlocator.KeyMnFlocatorKeyMnHlocator'.
             {MN.{K_MnHlocator'.K_FlocatorHlocator'}_K_MSHlocator.KeyMnFlocatorKeyMnHlocator'}_K_MSHlocator) 
      =|> 
      State' := 1
      /\ Snd( KeyMnFlocatorKeyMnHlocator'.{KeyMnFlocatorKeyMnHlocator'}_K_MnHlocator'.
             {KeyMnFlocatorKeyMnHlocator'.{KeyMnFlocatorKeyMnHlocator'}_K_MnHlocator'}_K_MSHlocator)
      /\ wrequest(HXTR,MS,k_flocatorhlocator2,K_FlocatorHlocator')
      /\ wrequest(HXTR,MS,k_mnhlocator1,K_MnHlocator')
end role



role session(MN,FXTR,MR,MS,HXTR: agent,
             Kmn3idns,Kflocator3ireq,K3idns3ireq,Khlocator3idns: symmetric_key) def=

   local     MNs,MNr,
             FXTRs,FXTRr,
             Ls, Lr,
             Hs, Hr,
             HXTRs, HXTRr: channel(dy)

   composition

           iMobile_MN(MN,MS,FXTR,MNs,MNr,Kmn3idns)

        /\ iRouter_FXTR(FXTR,MR,MS,MN,FXTRs,FXTRr,Kflocator3ireq)
  
        /\ iServer_MR(MR,MS,FXTR,MN,Ls,Lr,Kflocator3ireq,K3idns3ireq)

        /\ iServer_MS(MS,MR,HXTR,FXTR,MN,Hs,Hr,Kmn3idns,K3idns3ireq,Khlocator3idns)
         
        /\ iRouter_HXTR(HXTR,MS,MN,HXTRs,HXTRr,Khlocator3idns)
end role



role environment() def=

  const k_mnhlocator1, k_mnflocator1, k_flocatorhlocator1                    : protocol_id,
        k_mnhlocator2, k_mnflocator2, k_flocatorhlocator2                    : protocol_id,
        mn, flocator, ireq, idns, hlocator                       : agent,
        k_mn_idns, k_flocator_ireq, k_idns_ireq, k_hlocator_idns : symmetric_key

  intruder_knowledge = {mn,flocator,ireq,idns,hlocator}

  composition

        session(mn,flocator,ireq,idns,hlocator,                         
                k_mn_idns,k_flocator_ireq,k_idns_ireq,k_hlocator_idns)  


end role

goal

  %secrecy_of K_MnFlocator, K_FlocatorHlocator, K_MnFlocator
  secrecy_of secFXTRHXTR, secFXTRMN, secMNHXTR % addresses G12

  %iRouter_FXTR weakly authenticates iServer_MS on k_flocatorhlocator1
  weak_authentication_on k_flocatorhlocator1 % addresses G1,G7,G10
  %iRouter_FXTR weakly authenticates iServer_MS on k_mnflocator1
  weak_authentication_on k_mnflocator1 % addresses G1,G7,G10
  %iRouter_HXTR weakly authenticates iServer_MS on k_flocatorhlocator2
  weak_authentication_on k_flocatorhlocator2 % addresses G1,G7,G10
  %iRouter_HXTR weakly authenticates iServer_MS on k_mnhlocator1
  weak_authentication_on k_mnhlocator1 % addresses G1,G7,G10
  %iMobile_MN weakly authenticates iServer_MS on k_mnhlocator2
  weak_authentication_on k_mnhlocator2 % addresses G1,G7,G10
  %iMobile_MN weakly authenticates iServer_MS on k_mnflocator2
  weak_authentication_on k_mnflocator2 % addresses G1,G7,G10

end goal

environment()


