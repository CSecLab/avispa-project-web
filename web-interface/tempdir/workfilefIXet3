role alice (A,B : agent,Ka,Kb : public_key
,Snd,Rcv : channel (dy)) 
played_by A def=
local
State : nat,
Na : text,
Nb : text
init State := 0
transition
0. State = 0 / Rcv(start) =|>
State':= 2 / Snd(A)
2. State = 2 / Rcv({{B.Nb}_inv(Kb)}_Ka) =|>
State':= 4 / Na':=new()
/Snd({Nb'.Na'}_Kb)/ secret(Na',na,{A,B})
/ witness(A,B,bob_alice_na,Na')
4.State=4 /Rcv({{Na}_inv(Kb)}_Ka)=|>
State':=6 / request (A,B,alice_bob_nb,Nb')
end role
role bob (B,A : agent,Kb,Ka : public_key,Snd,Rcv : channel (dy)) played_by B def=
local
State : nat,
Na : text,
Nb : text
init State := 1
transition
1. State = 1 / Rcv(A) =|>
State':= 3 / Nb':= new() / Snd({{B.Nb'}_inv(Kb)}_Ka)/ secret(Nb',nb,{A,B})
/ witness(B,A,alice_bob_nb,Nb')
2. State = 3 / Rcv({Nb.Na}_Kb) =|>
State':= 5 / Snd({{Na'}_inv(Kb)}_Ka) /
request(B,A,bob_alice_na,Na)
end role
role session (A,B: agent,Ka, Kb : public_key) def=
local SA, RA, SB, RB: channel (dy)
composition
alice(A,B,Ka,Kb,SA,RA)
/ bob(B,A,Kb,Ka,SB,RB)
end role
role environment() def=
const
a, b, i : agent,
ka, kb, ki : public_key,
bob_alice_na,
alice_bob_nb,
na, nb : protocol_id
intruder_knowledge = {a,b,i,ka,kb,ki,inv(ki)}
composition
session(a,b,ka,kb)
/ session(a,i,ka,ki)
/session(i,b,ki,kb)
end role
goal
secrecy_of na,nb
authentication_on alice_bob_nb
authentication_on bob_alice_na
end goal
environment()
 