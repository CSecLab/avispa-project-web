%client
role client (C, As, S	:	agent,
			 Snd, Rcv	:	channel(dy),
			 Input		:	symmetric_key) played_by C def=




	local	St			:nat,
			Nonce		:text,
			Nonce1		:text,
			Nonce2		:text,
			PK_c		:message,
			SK_c		:message,
			PK_as		:message,
			PK_s		:message,
			Timestamp	:text,
			Life		:text,
			Pk_s		:public_key,
			Pk_as		:public_key
			
init State := 0
transition

0.	State=		0 /\ Rcv(start)=|>
	State':=	2 /\ Nonce':=new()
				  /\ Snd(C.{C.AS.Nonce'}_Input)
			  
2.	State=		2 /\ Rcv(As.{As.C.Nonce.Pk_s.SK_c.PK_as}_Input)=|>
	State':=	4 /\ Nonce1':=new()
				  /\ Snd(C.S.Nonce1')

4.	State=		4 /\ Rcv(As.{As.C.Nonce1.PK_s}_inv(PK_as))=|>
	State':=	6 /\ Nonce2':=new()
				  /\Timestamp':=new()
				  /\Life':=new()
				  /\Snd(C.S.{{C.Timestamp'.Life'.Nonce2'}_PK_s}_inv(PK_as))
				  
				  
end role

%================================================================================
%Authentication_Server
role authenticationerver(	C,As,S	:	agent,
							Input	:	symmetric_key,
							PK_c	:	public_key,
							PK_as	:	public_key,
							PK_s	:	public_key,
							Snd,Rcv	:	channel(dy)) played_by As def=

	local	St			:	nat,
			Nonce		:	text,
			Nonce1		:	text,
			Nonce3		:	text,
			Life		:	text,
			Timestamp	:	text
			
init State:=1
transition

1.	State=		1 /\ Rcv(C.{C.As.Nonce'}_Input)
	State':=	3 /\ Snd(As.{C.As.Nonce'.PK_c.inv(PK_c).PK_as}_Input)

3.	State=		3 /\ Rcv(C.S.Nonce1')
	State':=	5 /\ Snd(As.{As.C.Nonce1'.PK_s}_inv(PK_as))

			  
			