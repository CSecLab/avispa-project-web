%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfileY0eoHj

section signature:

state_bob: agent * agent * hash_func * public_key * public_key * nat * text * text * symmetric_key * symmetric_key * nat -> fact
state_alice: agent * agent * hash_func * public_key * public_key * nat * text * text * symmetric_key * symmetric_key * set(agent) * nat -> fact


section types:

alice_bob_nb, k, bob_alice_na: protocol_id
set_84, set_82, set_69: set
Kb, K, Dummy_K, Dummy_Kb, dummy_sk: symmetric_key
Na, Nb, Dummy_Nb, Dummy_Na, dummy_nonce: text
Dummy_Set_24, Set_24, ASGoal: set(agent)
5, 3, 1, State, 10, 6, 4, SID, Dummy_State, 2, SID2, 0, SID1: nat
start, MGoal: message
Kpa, Kpb, kpa, kpb, kpi: public_key
Hash, h: hash_func
A, B, A2Goal, A1Goal, a, b, i: agent


section inits:

initial_state init1 := 
 iknows(start).
 iknows(a).
 iknows(b).
 iknows(h).
 iknows(kpa).
 iknows(kpb).
 iknows(kpi).
 iknows(inv(kpi)).
 iknows(i).
 state_alice(a,b,h,kpa,kpb,0,dummy_nonce,dummy_nonce,dummy_sk,dummy_sk,set_69,3).
 state_bob(b,a,h,kpa,kpb,1,dummy_nonce,dummy_nonce,dummy_sk,dummy_sk,4).
 state_alice(a,i,h,kpa,kpi,0,dummy_nonce,dummy_nonce,dummy_sk,dummy_sk,set_82,6).
 state_bob(b,i,h,kpi,kpb,1,dummy_nonce,dummy_nonce,dummy_sk,dummy_sk,10)


section rules:

step step_0 (A,B,Hash,Kpa,Kpb,Dummy_Na,Nb,Kb,K,Set_24,SID,Na) :=
 state_alice(A,B,Hash,Kpa,Kpb,0,Dummy_Na,Nb,Kb,K,Set_24,SID).
 iknows(start)
=[exists Na]=>
 state_alice(A,B,Hash,Kpa,Kpb,2,Na,Nb,Kb,K,Set_24,SID).
 iknows(crypt(Kpb,pair(Na,A))).
 witness(A,B,bob_alice_na,Na)

step step_1 (A,B,Hash,Kpa,Kpb,Na,Dummy_Nb,Dummy_Kb,Dummy_K,Dummy_Set_24,SID,Nb,K) :=
 state_alice(A,B,Hash,Kpa,Kpb,2,Na,Dummy_Nb,Dummy_Kb,Dummy_K,Dummy_Set_24,SID).
 iknows(crypt(Kpa,pair(Na,pair(Nb,B))))
=[exists K]=>
 state_alice(A,B,Hash,Kpa,Kpb,4,Na,Nb,pair(Nb,Na),K,Dummy_Set_24,SID).
 iknows(scrypt(pair(Nb,Na),K)).
 secret(K,k,Dummy_Set_24).
 contains(A,Dummy_Set_24).
 contains(B,Dummy_Set_24)

step step_2 (A,B,Hash,Kpa,Kpb,Na,Nb,Kb,K,Set_24,SID) :=
 state_alice(A,B,Hash,Kpa,Kpb,4,Na,Nb,Kb,K,Set_24,SID).
 iknows(apply(Hash,K))
 =>
 state_alice(A,B,Hash,Kpa,Kpb,6,Na,Nb,Kb,K,Set_24,SID).
 request(A,B,alice_bob_nb,Nb,SID)

step step_3 (B,A,Hash,Kpa,Kpb,Dummy_Na,Dummy_Nb,Dummy_Kb,K,SID,Na,Nb) :=
 state_bob(B,A,Hash,Kpa,Kpb,1,Dummy_Na,Dummy_Nb,Dummy_Kb,K,SID).
 iknows(crypt(Kpb,pair(Na,A)))
=[exists Nb]=>
 state_bob(B,A,Hash,Kpa,Kpb,3,Na,Nb,pair(Nb,Na),K,SID).
 iknows(crypt(Kpa,pair(Na,pair(Nb,B)))).
 witness(B,A,alice_bob_nb,Nb)

step step_4 (B,A,Hash,Kpa,Kpb,Na,Nb,Kb,Dummy_K,SID,K) :=
 state_bob(B,A,Hash,Kpa,Kpb,3,Na,Nb,Kb,Dummy_K,SID).
 iknows(scrypt(Kb,K))
 =>
 state_bob(B,A,Hash,Kpa,Kpb,5,Na,Nb,Kb,K,SID).
 iknows(apply(Hash,K)).
 request(B,A,bob_alice_na,Na,SID)


section properties:

property secrecy_of_k (MGoal,ASGoal) :=
 [] ((secret(MGoal,k,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property authentication_on_alice_bob_nb (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,alice_bob_nb,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,alice_bob_nb,MGoal))
     /\ ((request(A1Goal,A2Goal,alice_bob_nb,MGoal,SID1)
           /\ request(A1Goal,A2Goal,alice_bob_nb,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_bob_alice_na (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,bob_alice_na,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,bob_alice_na,MGoal))
     /\ ((request(A1Goal,A2Goal,bob_alice_na,MGoal,SID1)
           /\ request(A1Goal,A2Goal,bob_alice_na,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state secrecy_of_k (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,k,ASGoal) &
 not(contains(i,ASGoal))

attack_state authentication_on_alice_bob_nb (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,alice_bob_nb,MGoal,SID) &
 not(witness(A2Goal,A1Goal,alice_bob_nb,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_alice_bob_nb (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,alice_bob_nb,MGoal,SID1).
 request(A1Goal,A2Goal,alice_bob_nb,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_bob_alice_na (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,bob_alice_na,MGoal,SID) &
 not(witness(A2Goal,A1Goal,bob_alice_na,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_bob_alice_na (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,bob_alice_na,MGoal,SID1).
 request(A1Goal,A2Goal,bob_alice_na,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

