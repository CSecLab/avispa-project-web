
----------------
  AtSe Summary  
----------------

  Protocol file: /home/avispa/web-interface-computation/./tempdir/workfileMZOhmg.if
  Attack found : NO

  Analysed   : 7 states
  Reachable  : 4 states
  Translation: 0.02 seconds
  Computation: 0.00 seconds


---------------------------------------------
            Internal System State            
  (initial state after reading the if file)  
---------------------------------------------

Intruder state :
----------------

Intruder Knowledge :  start i s_bi s_ai kbi kai 
 Unforgeable terms :  inv(h)


Interpreted protocol specification :
------------------------------------

Role srp_Init played by (b,9):
| start => b.exp(g,n17(Na))
| Salt(18).{DHY(18)}_(exp(g,{Salt(18).{b.kbi}_h}_h))
|   => {{g}_h.{b}_h.Salt(18).exp(g,n17(Na)).{DHY(18)}_(exp(g,{Salt(18).{b.kbi}_h}_h)).{exp(g,{Salt(18).{b.kbi}_h}_h).exp(DHY(18),n17(Na))}_h}_h
|    & Secret({exp(g,{Salt(18).{b.kbi}_h}_h).exp(DHY(18),n17(Na))}_h,set_100);
|    & Add b to set_100;  Add i to set_100;
| {exp(g,n17(Na)).{{g}_h.{b}_h.Salt(18).exp(g,n17(Na)).{DHY(18)}_(exp(g,{Salt(18).{b.kbi}_h}_h)).{exp(g,{Salt(18).{b.kbi}_h}_h).exp(DHY(18),n17(Na))}_h}_h.{exp(g,{Salt(18).{b.kbi}_h}_h).exp(DHY(18),n17(Na))}_h}_h
|   => ()

Role srp_Init played by (a,6):
| start => a.exp(g,n11(Na))
| Salt(12).{DHY(12)}_(exp(g,{Salt(12).{a.kai}_h}_h))
|   => {{g}_h.{a}_h.Salt(12).exp(g,n11(Na)).{DHY(12)}_(exp(g,{Salt(12).{a.kai}_h}_h)).{exp(g,{Salt(12).{a.kai}_h}_h).exp(DHY(12),n11(Na))}_h}_h
|    & Secret({exp(g,{Salt(12).{a.kai}_h}_h).exp(DHY(12),n11(Na))}_h,set_97);
|    & Add a to set_97;  Add i to set_97;
| {exp(g,n11(Na)).{{g}_h.{a}_h.Salt(12).exp(g,n11(Na)).{DHY(12)}_(exp(g,{Salt(12).{a.kai}_h}_h)).{exp(g,{Salt(12).{a.kai}_h}_h).exp(DHY(12),n11(Na))}_h}_h.{exp(g,{Salt(12).{a.kai}_h}_h).exp(DHY(12),n11(Na))}_h}_h
|   => ()

Role srp_Resp played by (b,4):
| a.DHX(7) => s_ab.{exp(g,n7(Nb))}_(exp(g,{s_ab.{a.kab}_h}_h))
|    & Secret({exp(g,{s_ab.{a.kab}_h}_h).exp(DHX(7),n7(Nb))}_h,set_91);
|    & Witness(b,a,k2,{exp(g,{s_ab.{a.kab}_h}_h).exp(DHX(7),n7(Nb))}_h);
|    & Add a to set_91;  Add b to set_91;
| {{g}_h.{a}_h.s_ab.DHX(7).{exp(g,n7(Nb))}_(exp(g,{s_ab.{a.kab}_h}_h)).{exp(g,{s_ab.{a.kab}_h}_h).exp(DHX(7),n7(Nb))}_h}_h
|   => {DHX(7).{{g}_h.{a}_h.s_ab.DHX(7).{exp(g,n7(Nb))}_(exp(g,{s_ab.{a.kab}_h}_h)).{exp(g,{s_ab.{a.kab}_h}_h).exp(DHX(7),n7(Nb))}_h}_h.{exp(g,{s_ab.{a.kab}_h}_h).exp(DHX(7),n7(Nb))}_h}_h
|    & Request(b,a,k1,{exp(g,{s_ab.{a.kab}_h}_h).exp(DHX(7),n7(Nb))}_h);

Role srp_Init played by (a,3):
| start => a.exp(g,n1(Na))
| Salt(2).{DHY(2)}_(exp(g,{Salt(2).{a.kab}_h}_h))
|   => {{g}_h.{a}_h.Salt(2).exp(g,n1(Na)).{DHY(2)}_(exp(g,{Salt(2).{a.kab}_h}_h)).{exp(g,{Salt(2).{a.kab}_h}_h).exp(DHY(2),n1(Na))}_h}_h
|    & Secret({exp(g,{Salt(2).{a.kab}_h}_h).exp(DHY(2),n1(Na))}_h,set_77);
|    & Witness(a,b,k1,{exp(g,{Salt(2).{a.kab}_h}_h).exp(DHY(2),n1(Na))}_h);
|    & Add a to set_77;  Add b to set_77;
| {exp(g,n1(Na)).{{g}_h.{a}_h.Salt(2).exp(g,n1(Na)).{DHY(2)}_(exp(g,{Salt(2).{a.kab}_h}_h)).{exp(g,{Salt(2).{a.kab}_h}_h).exp(DHY(2),n1(Na))}_h}_h.{exp(g,{Salt(2).{a.kab}_h}_h).exp(DHY(2),n1(Na))}_h}_h
|   => ()
|    & Request(a,b,k2,{exp(g,{Salt(2).{a.kab}_h}_h).exp(DHY(2),n1(Na))}_h);


Some Remarks :
--------------

- The syntax of protocol steps is
   "Received Msg" => "Sent Msg"  [Equalities] & Inequalities & IF facts
- A Role is a tree where steps are unary nodes and choice points are n-ary nodes
- The Initial System state is the state of cl-atse at the begining of the search
  for attacks, and represents both the intruder and honest participants state.
- See the cl-atse's subsection in the user-manual for more details.

