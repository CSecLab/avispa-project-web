%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfileFltkOB

section signature:

state_cert_agency2: agent * agent * agent * public_key * public_key * public_key * nat * crypt(inv(public_key),text) * crypt(inv(public_key),message) * set(agent) * nat -> fact
state_int_log_server_n: agent * agent * public_key * public_key * hash_func * nat * crypt(inv(public_key),pair(agent,pair(agent,pair(agent,agent)))) * nat -> fact
state_int_log_server1: agent * agent * agent * agent * public_key * public_key * public_key * public_key * hash_func * nat * message * message * crypt(inv(public_key),pair(agent,pair(agent,pair(agent,agent)))) * set(agent) * set(agent) * nat -> fact
state_cert_agency1: agent * agent * agent * agent * public_key * public_key * public_key * nat * crypt(inv(public_key),pair(agent,pair(agent,pair(agent,agent)))) * crypt(inv(public_key),crypt(inv(public_key),text)) * crypt(inv(public_key),message) * set(agent) * nat -> fact
state_domain: agent * agent * agent * agent * agent * public_key * public_key * nat * message * crypt(inv(public_key),pair(agent,public_key)) * crypt(inv(public_key),crypt(inv(public_key),crypt(inv(public_key),text))) * crypt(inv(public_key),message) * set(agent) * nat -> fact


section types:

dummy_nonce: text
set_200, set_197, set_196, set_194, set_193, set_188, set_180, set_179, set_173, set_160: set
H, h: hash_func
Dummy_Root2, Root2: crypt(inv(public_key),crypt(inv(public_key),text))
CCReq, Dummy_CCReq: crypt(inv(public_key),pair(agent,pair(agent,pair(agent,agent))))
Dummy_Root3, Root3: crypt(inv(public_key),crypt(inv(public_key),crypt(inv(public_key),text)))
Dummy_ARCert, ARCert: crypt(inv(public_key),pair(agent,public_key))
Dummy_Root, Root, Hashval, Dummy_ICCReq, dummy_msg, MGoal, start, ICCReq: message
Dummy_Set_110, Dummy_Set_82, Set_82, Dummy_Set_79, Set_79, Dummy_Set_54, Dummy_Set_28, ASGoal, Set_54, Set_28, Set_110: set(agent)
k4, k3, k2, k1, k5: protocol_id
Dummy_Proof, Proof: crypt(inv(public_key),message)
Dummy_Root1, Root1: crypt(inv(public_key),text)
13, 12, 11, 9, 10, 7, State, SID, 6, 5, 8, 4, Dummy_State, 3, 2, 1, 0: nat
CA2, CA1, ILS1, ILSN, dummy_agent, a, ca1, ils1, ilsn, ca2, c, A, C, i: agent
Kca1, Kils1, Kilsn, Kca2, dummy_pk, kca1, kils1, kilsn, kca2, ki, Ka, ka: public_key


section inits:

initial_state init1 := 
 iknows(start).
 iknows(a).
 iknows(ca1).
 iknows(ils1).
 iknows(ilsn).
 iknows(ca2).
 iknows(h).
 iknows(ki).
 iknows(i).
 state_domain(a,ca1,c,ca2,ils1,ka,kca1,0,dummy_msg,crypt(inv(dummy_pk),pair(dummy_agent,dummy_pk)),crypt(inv(dummy_pk),crypt(inv(dummy_pk),crypt(inv(dummy_pk),dummy_nonce))),crypt(inv(dummy_pk),dummy_msg),set_160,3).
 state_cert_agency1(ca1,ca2,a,ils1,kca1,kca2,ka,1,crypt(inv(dummy_pk),pair(dummy_agent,pair(dummy_agent,pair(dummy_agent,dummy_agent)))),crypt(inv(dummy_pk),crypt(inv(dummy_pk),dummy_nonce)),crypt(inv(dummy_pk),dummy_msg),set_173,4).
 state_int_log_server1(ils1,ilsn,ca1,ca2,kils1,kilsn,kca1,kca2,h,4,dummy_msg,dummy_msg,crypt(inv(dummy_pk),pair(dummy_agent,pair(dummy_agent,pair(dummy_agent,dummy_agent)))),set_179,set_180,5).
 state_int_log_server_n(ilsn,ils1,kilsn,kils1,h,5,crypt(inv(dummy_pk),pair(dummy_agent,pair(dummy_agent,pair(dummy_agent,dummy_agent)))),6).
 state_cert_agency2(ca2,ca1,ils1,kca2,kca1,kils1,9,crypt(inv(dummy_pk),dummy_nonce),crypt(inv(dummy_pk),dummy_msg),set_188,7).
 state_cert_agency1(ca1,ca2,i,ils1,kca1,kca2,ki,1,crypt(inv(dummy_pk),pair(dummy_agent,pair(dummy_agent,pair(dummy_agent,dummy_agent)))),crypt(inv(dummy_pk),crypt(inv(dummy_pk),dummy_nonce)),crypt(inv(dummy_pk),dummy_msg),set_194,10).
 state_int_log_server1(ils1,ilsn,ca1,ca2,kils1,kilsn,kca1,kca2,h,4,dummy_msg,dummy_msg,crypt(inv(dummy_pk),pair(dummy_agent,pair(dummy_agent,pair(dummy_agent,dummy_agent)))),set_196,set_197,11).
 state_int_log_server_n(ilsn,ils1,kilsn,kils1,h,5,crypt(inv(dummy_pk),pair(dummy_agent,pair(dummy_agent,pair(dummy_agent,dummy_agent)))),12).
 state_cert_agency2(ca2,ca1,ils1,kca2,kca1,kils1,9,crypt(inv(dummy_pk),dummy_nonce),crypt(inv(dummy_pk),dummy_msg),set_200,13)


section rules:

step step_0 (A,CA1,C,CA2,ILS1,Ka,Kca1,ICCReq,ARCert,Root3,Proof,Set_28,SID) :=
 state_domain(A,CA1,C,CA2,ILS1,Ka,Kca1,0,ICCReq,ARCert,Root3,Proof,Set_28,SID).
 iknows(start)
 =>
 state_domain(A,CA1,C,CA2,ILS1,Ka,Kca1,2,ICCReq,ARCert,Root3,Proof,Set_28,SID).
 iknows(pair(A,ka))

step step_1 (A,CA1,C,CA2,ILS1,Ka,Kca1,Dummy_ICCReq,Dummy_ARCert,Root3,Proof,Dummy_Set_28,SID,ARCert) :=
 state_domain(A,CA1,C,CA2,ILS1,Ka,Kca1,2,Dummy_ICCReq,Dummy_ARCert,Root3,Proof,Dummy_Set_28,SID).
 iknows(ARCert)
 =>
 state_domain(A,CA1,C,CA2,ILS1,Ka,Kca1,4,crypt(inv(Ka),pair(A,pair(CA1,pair(CA2,ILS1)))),ARCert,Root3,Proof,Dummy_Set_28,SID).
 iknows(crypt(inv(Ka),pair(A,pair(CA1,pair(CA2,ILS1))))).
 secret(crypt(inv(Ka),pair(A,pair(CA1,pair(CA2,ILS1)))),k1,Dummy_Set_28).
 contains(A,Dummy_Set_28).
 contains(CA1,Dummy_Set_28)

step step_2 (A,CA1,C,CA2,ILS1,Ka,Kca1,ICCReq,ARCert,Dummy_Root3,Dummy_Proof,Set_28,SID,Root3,Proof) :=
 state_domain(A,CA1,C,CA2,ILS1,Ka,Kca1,11,ICCReq,ARCert,Dummy_Root3,Dummy_Proof,Set_28,SID).
 iknows(pair(Root3,Proof))
 =>
 state_domain(A,CA1,C,CA2,ILS1,Ka,Kca1,13,ICCReq,ARCert,Root3,Proof,Set_28,SID).
 iknows(pair(ARCert,pair(Root3,Proof)))

step step_3 (CA1,CA2,A,ILS1,Kca1,Kca2,Ka,CCReq,Root2,Proof,Set_54,SID) :=
 state_cert_agency1(CA1,CA2,A,ILS1,Kca1,Kca2,Ka,1,CCReq,Root2,Proof,Set_54,SID).
 iknows(pair(A,ka))
 =>
 state_cert_agency1(CA1,CA2,A,ILS1,Kca1,Kca2,Ka,3,CCReq,Root2,Proof,Set_54,SID).
 iknows(crypt(inv(kca1),pair(A,ka)))

step step_4 (CA1,CA2,A,ILS1,Kca1,Kca2,Ka,Dummy_CCReq,Root2,Proof,Dummy_Set_54,SID,CCReq) :=
 state_cert_agency1(CA1,CA2,A,ILS1,Kca1,Kca2,Ka,3,Dummy_CCReq,Root2,Proof,Dummy_Set_54,SID).
 iknows(CCReq)
 =>
 state_cert_agency1(CA1,CA2,A,ILS1,Kca1,Kca2,Ka,5,CCReq,Root2,Proof,Dummy_Set_54,SID).
 iknows(CCReq).
 secret(CCReq,k2,Dummy_Set_54).
 contains(CA1,Dummy_Set_54).
 contains(ILS1,Dummy_Set_54)

step step_5 (CA1,CA2,A,ILS1,Kca1,Kca2,Ka,CCReq,Dummy_Root2,Dummy_Proof,Set_54,SID,Root2,Proof) :=
 state_cert_agency1(CA1,CA2,A,ILS1,Kca1,Kca2,Ka,10,CCReq,Dummy_Root2,Dummy_Proof,Set_54,SID).
 iknows(pair(Root2,Proof))
 =>
 state_cert_agency1(CA1,CA2,A,ILS1,Kca1,Kca2,Ka,12,CCReq,Root2,Proof,Set_54,SID).
 iknows(pair(crypt(inv(Kca1),Root2),Proof))

step step_6 (ILS1,ILSN,CA1,CA2,Kils1,Kilsn,Kca1,Kca2,H,Root,Hashval,Dummy_CCReq,Dummy_Set_79,Set_82,SID,CCReq) :=
 state_int_log_server1(ILS1,ILSN,CA1,CA2,Kils1,Kilsn,Kca1,Kca2,H,4,Root,Hashval,Dummy_CCReq,Dummy_Set_79,Set_82,SID).
 iknows(CCReq)
 =>
 state_int_log_server1(ILS1,ILSN,CA1,CA2,Kils1,Kilsn,Kca1,Kca2,H,6,Root,Hashval,CCReq,Dummy_Set_79,Set_82,SID).
 iknows(crypt(inv(Kils1),CCReq)).
 secret(CCReq,k3,Dummy_Set_79).
 contains(ILS1,Dummy_Set_79).
 contains(ILSN,Dummy_Set_79)

step step_7 (ILS1,ILSN,CA1,CA2,Kils1,Kilsn,Kca1,Kca2,H,Root,Hashval,Dummy_CCReq,Set_79,Set_82,SID,CCReq) :=
 state_int_log_server1(ILS1,ILSN,CA1,CA2,Kils1,Kilsn,Kca1,Kca2,H,6,Root,Hashval,Dummy_CCReq,Set_79,Set_82,SID).
 iknows(crypt(inv(Kilsn),apply(H,CCReq)))
 =>
 state_int_log_server1(ILS1,ILSN,CA1,CA2,Kils1,Kilsn,Kca1,Kca2,H,8,Root,Hashval,CCReq,Set_79,Set_82,SID).
 iknows(crypt(inv(Kils1),apply(H,CCReq)))

step step_8 (ILS1,ILSN,CA1,CA2,Kils1,Kilsn,Kca1,Kca2,H,Dummy_Root,Hashval,Dummy_CCReq,Set_79,Dummy_Set_82,SID,Root,CCReq) :=
 state_int_log_server1(ILS1,ILSN,CA1,CA2,Kils1,Kilsn,Kca1,Kca2,H,8,Dummy_Root,Hashval,Dummy_CCReq,Set_79,Dummy_Set_82,SID).
 iknows(crypt(inv(Kilsn),apply(H,CCReq)))
=[exists Root]=>
 state_int_log_server1(ILS1,ILSN,CA1,CA2,Kils1,Kilsn,Kca1,Kca2,H,10,Root,Hashval,CCReq,Set_79,Dummy_Set_82,SID).
 iknows(pair(crypt(inv(Kils1),Hashval),crypt(inv(Kils1),Root))).
 secret(Root,k4,Dummy_Set_82).
 contains(ILS1,Dummy_Set_82).
 contains(CA2,Dummy_Set_82)

step step_9 (ILSN,ILS1,Kilsn,Kils1,H,Dummy_CCReq,SID,CCReq) :=
 state_int_log_server_n(ILSN,ILS1,Kilsn,Kils1,H,5,Dummy_CCReq,SID).
 iknows(crypt(inv(Kils1),CCReq))
 =>
 state_int_log_server_n(ILSN,ILS1,Kilsn,Kils1,H,7,CCReq,SID).
 iknows(crypt(inv(Kilsn),apply(H,CCReq)))

step step_10 (ILSN,ILS1,Kilsn,Kils1,H,Dummy_CCReq,SID,CCReq) :=
 state_int_log_server_n(ILSN,ILS1,Kilsn,Kils1,H,7,Dummy_CCReq,SID).
 iknows(crypt(inv(Kils1),apply(H,CCReq)))
 =>
 state_int_log_server_n(ILSN,ILS1,Kilsn,Kils1,H,9,CCReq,SID).
 iknows(crypt(inv(Kilsn),apply(H,CCReq)))

step step_11 (CA2,CA1,ILS1,Kca2,Kca1,Kils1,Dummy_Root1,Dummy_Proof,Dummy_Set_110,SID,Root1,Proof) :=
 state_cert_agency2(CA2,CA1,ILS1,Kca2,Kca1,Kils1,9,Dummy_Root1,Dummy_Proof,Dummy_Set_110,SID).
 iknows(pair(Proof,Root1))
 =>
 state_cert_agency2(CA2,CA1,ILS1,Kca2,Kca1,Kils1,11,Root1,Proof,Dummy_Set_110,SID).
 iknows(pair(crypt(inv(Kca2),Root1),Proof)).
 secret(Root1,k5,Dummy_Set_110).
 contains(CA2,Dummy_Set_110).
 contains(CA1,Dummy_Set_110)


section properties:

property secrecy_of_k1 (MGoal,ASGoal) :=
 [] ((secret(MGoal,k1,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_k2 (MGoal,ASGoal) :=
 [] ((secret(MGoal,k2,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_k3 (MGoal,ASGoal) :=
 [] ((secret(MGoal,k3,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_k4 (MGoal,ASGoal) :=
 [] ((secret(MGoal,k4,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_k5 (MGoal,ASGoal) :=
 [] ((secret(MGoal,k5,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))


section attack_states:

attack_state secrecy_of_k1 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,k1,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_k2 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,k2,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_k3 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,k3,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_k4 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,k4,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_k5 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,k5,ASGoal) &
 not(contains(i,ASGoal))

