%% PROTOCOL: ENABLE Protocol.
%% PURPOSE: An Energy-Effcient Access Control Scheme for Wireless Sensor Networks based on Elliptic Curve Cryptography
%% Alice:
%% L (rand), Ta (rand), S1 (const)
%% Alice -> S: L, Ta, S1

%% S:
%% computes MAC1 (const)
%% S -> KDC: L, Ta, S1, MAC1

%% KDC:
%% M (rand), Tkdc (rand), MAC2 (const)
%% KDC -> S: M, Tkdc, MAC2

%% S: MAC3 (const)
%% S -> Alice: MAC3
%% To simulate man-in-the-middle attack on this protocol.

role AliceRole (A, S, KDC : agent,
           	Snd, Rcv: channel(dy))
% A = sender, B = receiver

played_by A
def=
         local State  : nat,
         L, Ta, S1:  text
         const alice_sensor_l,  sensor_alice_1, sub1 : protocol_id

   init  State := 0

  transition
   1. State   = 0 /\ Rcv(start) =|>
      State' := 1 /\ L' := new() /\ Ta' := new()
      % fresh value L' and Ta' is generated by user A
                  /\ secret({L'},sub1, A) 
      % L is kept secret to user A only
                  /\ Snd(L'.Ta'.S1) 
      % Send the message L'.Ta'.S1 to user S
                  /\ witness (A, S, alice_sensor_l, L') 
      % User A has freshly generated the value L' for user S
   2. State = 1   /\ Rcv(MAC3) =|> 
      % User A received the message YB = g^{XB} mod q from user A
      State' := 2 /\ request (S, A, sensor_alice_1, MAC3)
     %  A's acceptance of the value MAC3 generated for A by                               
 end role


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
role SensorRole (A, S, KDC  : agent,
           	Snd, Rcv: channel(dy))
played_by S
def=
         local State  : nat,
         L, Ta, S1, MAC1:  text
         const alice_sensor_l, sensor_kdc_1, sub2 : protocol_id

   init  State := 0


  transition
   1. State   = 0 /\ Rcv(L'.Ta'.S1) =|>  
      State' := 1 /\ Snd(L'.Ta'.S1.MAC1)
      % Send the message L'.Ta'.S1.MAC1 to user KDC
                  /\ witness (S, KDC, sensor_kdc_1, MAC1)
      % User B has freshly generated the value MAC1 for user A
                  /\ request (A, S, alice_sensor_l, L')
      %  B's acceptance of the value L generated for S by A    

   2. State   = 1 /\ Rcv(M'.Tkdc'.MAC2) =|>
	  State' := 2 /\ Snd(MAC3) /\ witness(S, A, sensor_alice_1, MAC3) /\ request(KDC, S, kdc_s_1, M')
end role


%%%%%%%%%%%%%%%%%%%%%%%%%

role KDCRole (A, S, KDC  : agent,
           	Snd, Rcv: channel(dy))
played_by KDC
def=
         local State  : nat,
         M, Tkdc, MAC2:  text
         const sensor_kdc_1, kdc_sensor_1, sub2 : protocol_id

   init  State := 0


  transition
   1. State   = 0 /\ Rcv(L'.Ta'.S1.MAC1') =|>  
      State' := 1 /\ M' := new() /\ Tkdc' := new()
      % fresh value M and Tkdc is generated by user KDC
                  /\ secret({M'}, sub2, KDC)
      % M' is kept secret to user KDC only
                  /\ Snd(M'.Tkdc'.MAC2)
      % Send the message M'.Tkdc'.MAC2 to user S
                  /\ witness (KDC, S, kdc_sensor_1, M')
      % User B has freshly generated the value XB for user A
                  /\ request (S, KDC, sensor_kdc_1, MAC1)
      %  KDC's acceptance of the value MAC generated for KDC by S               
end role

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
role session(A,S, KDC: agent
	    )
def=

  local  ACh_Send, ACh_Rcv, SCh_Send, SCh_Rcv, KDCCh_Send, KDCCh_Rcv: channel (dy),
         L, Ta, S1, MAC1, M, Tkdc, MAC2, MAC3 :  text
         const alice_sensor_l,  sensor_alice_1, sensor_kdc_1,kdc_sensor_1, sub1, sub2 : protocol_id
           
  composition
           AliceRole(A, B, SA, RA)
       /\  SensorRole(A, B, SB, RB)
	   /\  KDCRole()
end role 

%%%%%%%%%%%%%%%%%%%%%%%%%%%


%%%%%%%%%%%%%%%%%%%%%%%%%%%
role environment()
def=

  const a, s, kdc   : agent,
        L, Ta, S1, MAC1, M, Tkdc, MAC2, MAC3 :  text,
        alice_sensor_l,  sensor_alice_1, sensor_kdc_1,kdc_sensor_1, sub1, sub2 : protocol_id

  intruder_knowledge = {a, s, kdc, L, Ta, S1, MAC1, M, Tkdc, MAC2, MAC3}

  composition
	session(a, s, kdc) /\
	session(a, s, kdc)  
end role


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

goal
  secrecy_of sub1
  secrecy_of sub2
  authentication_on alice_bob_xa
  authentication_on bob_alice_xb
end goal
 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
environment()

