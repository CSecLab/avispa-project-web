%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfiletGKiwLXCHT

section signature:

state_server: agent * agent * agent * public_key * public_key * hash_func * hash_func * nat * text * text * text * text * text * text * text * public_key * symmetric_key * symmetric_key * nat -> fact
state_client: agent * agent * public_key * public_key * hash_func * hash_func * nat * text * text * text * text * text * text * text * public_key * symmetric_key * symmetric_key * agent * set(agent) * nat -> fact


section types:

Dummy_Set_31, ASGoal, Set_31: set(agent)
pms: protocol_id
MGoal, start: message
Dummy_Ck, Dummy_Sk, dummy_sk, Sk, Ck: symmetric_key
Dummy_MS, Dummy_PMS, Dummy_Vs, Dummy_Ns, Dummy_Sid, Dummy_Vc, Dummy_Nc, dummy_nonce, PMS, MS, Vc, Vs, Sid, Nc, Ns: text
h, prf, H, PRF: hash_func
set_81, set_106, set_104: set
Dummy_Ks, dummy_pk, kc, ks, kca, ki, Kc, Ks, Kca, Dummy_Kc: public_key
Dummy_Ca, dummy_agent, c, s, ca, C, S, Ca, i: agent
Dummy_State, 3, SID, State, 6, 4, 2, 1, 0, 9, 7: nat


section inits:

initial_state init1 := 
 iknows(start).
 iknows(c).
 iknows(s).
 iknows(ca).
 iknows(kc).
 iknows(ks).
 iknows(ki).
 iknows(kca).
 iknows(h).
 iknows(prf).
 iknows(inv(ki)).
 iknows(i).
 state_client(c,s,kc,kca,h,prf,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_pk,dummy_sk,dummy_sk,dummy_agent,set_81,3).
 state_server(s,c,ca,ks,kca,h,prf,1,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_pk,dummy_sk,dummy_sk,4).
 state_server(s,i,ca,ks,kca,h,prf,1,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_pk,dummy_sk,dummy_sk,7).
 state_client(c,i,kc,kca,h,prf,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_pk,dummy_sk,dummy_sk,dummy_agent,set_106,9)


section rules:

step step_0 (C,S,Kc,Kca,H,PRF,Dummy_Nc,Ns,Dummy_Vc,Vs,Dummy_Sid,PMS,MS,Ks,Sk,Ck,Ca,Set_31,SID,Nc,Vc,Sid) :=
 state_client(C,S,Kc,Kca,H,PRF,0,Dummy_Nc,Ns,Dummy_Vc,Vs,Dummy_Sid,PMS,MS,Ks,Sk,Ck,Ca,Set_31,SID).
 iknows(start)
=[exists Sid,Vc,Nc]=>
 state_client(C,S,Kc,Kca,H,PRF,2,Nc,Ns,Vc,Vs,Sid,PMS,MS,Ks,Sk,Ck,Ca,Set_31,SID).
 iknows(pair(Nc,pair(Sid,Vc)))

step step_1 (C,S,Kc,Kca,H,PRF,Nc,Dummy_Ns,Vc,Dummy_Vs,Sid,Dummy_PMS,Dummy_MS,Dummy_Ks,Dummy_Sk,Dummy_Ck,Dummy_Ca,Dummy_Set_31,SID,Ns,Vs,PMS,Ks,Ca) :=
 state_client(C,S,Kc,Kca,H,PRF,2,Nc,Dummy_Ns,Vc,Dummy_Vs,Sid,Dummy_PMS,Dummy_MS,Dummy_Ks,Dummy_Sk,Dummy_Ck,Dummy_Ca,Dummy_Set_31,SID).
 iknows(pair(Ns,pair(Sid,pair(Vs,crypt(inv(Kca),pair(Ca,pair(S,Ks)))))))
=[exists PMS]=>
 state_client(C,S,Kc,Kca,H,PRF,4,Nc,Ns,Vc,Vs,Sid,PMS,apply(PRF,pair(Dummy_PMS,pair(Nc,Dummy_Ns))),Ks,apply(PRF,pair(apply(PRF,pair(Dummy_PMS,pair(Nc,Dummy_Ns))),pair(Nc,pair(Dummy_Ns,S)))),apply(PRF,pair(apply(PRF,pair(Dummy_PMS,pair(Nc,Dummy_Ns))),pair(Nc,pair(Dummy_Ns,C)))),Ca,Dummy_Set_31,SID).
 iknows(pair(crypt(inv(Kca),pair(Ca,pair(C,Kc))),pair(crypt(Ks,PMS),pair(crypt(inv(Kc),apply(H,pair(apply(PRF,pair(Dummy_PMS,pair(Nc,Dummy_Ns))),apply(H,pair(Nc,pair(Ns,pair(PMS,pair(Kc,pair(Ks,pair(Sid,apply(PRF,pair(Dummy_PMS,pair(Nc,Dummy_Ns))))))))))))),scrypt(apply(PRF,pair(apply(PRF,pair(Dummy_PMS,pair(Nc,Dummy_Ns))),pair(Nc,pair(Dummy_Ns,C)))),apply(H,pair(apply(PRF,pair(Dummy_PMS,pair(Nc,Dummy_Ns))),apply(H,pair(Nc,pair(Ns,pair(PMS,pair(Kc,pair(Ks,pair(Sid,apply(PRF,pair(Dummy_PMS,pair(Nc,Dummy_Ns))))))))))))))))).
 secret(PMS,pms,Dummy_Set_31).
 contains(C,Dummy_Set_31).
 contains(S,Dummy_Set_31)

step step_2 (C,S,Kc,Kca,H,PRF,Nc,Dummy_Ns,Vc,Vs,Sid,Dummy_PMS,Dummy_MS,Dummy_Ks,Sk,Ck,Ca,Set_31,SID,Ns,PMS,MS,Ks) :=
 state_client(C,S,Kc,Kca,H,PRF,4,Nc,Dummy_Ns,Vc,Vs,Sid,Dummy_PMS,Dummy_MS,Dummy_Ks,Sk,Ck,Ca,Set_31,SID).
 iknows(scrypt(Sk,apply(H,pair(MS,apply(H,pair(Nc,pair(Ns,pair(PMS,pair(Kc,pair(Ks,pair(Sid,MS)))))))))))
 =>
 state_client(C,S,Kc,Kca,H,PRF,6,Nc,Ns,Vc,Vs,Sid,PMS,MS,Ks,Sk,Ck,Ca,Set_31,SID)

step step_3 (S,C,Ca,Ks,Kca,H,PRF,Dummy_Nc,Dummy_Ns,Dummy_Vc,Dummy_Vs,Dummy_Sid,PMS,MS,Kc,Sk,Ck,SID,Nc,Ns,Vs) :=
 state_server(S,C,Ca,Ks,Kca,H,PRF,1,Dummy_Nc,Dummy_Ns,Dummy_Vc,Dummy_Vs,Dummy_Sid,PMS,MS,Kc,Sk,Ck,SID).
 iknows(Nc)
=[exists Vs,Ns]=>
 state_server(S,C,Ca,Ks,Kca,H,PRF,3,Nc,Ns,Dummy_Vc,Vs,Dummy_Sid,PMS,MS,Kc,Sk,Ck,SID).
 iknows(pair(Ns,pair(Sid,pair(Vs,crypt(inv(Kca),pair(Ca,pair(S,Ks)))))))

step step_4 (S,C,Ca,Dummy_Ks,Kca,H,PRF,Nc,Dummy_Ns,Vc,Vs,Sid,Dummy_PMS,Dummy_MS,Dummy_Kc,Dummy_Sk,Dummy_Ck,SID,Ks,Ns,PMS,Kc) :=
 state_server(S,C,Ca,Dummy_Ks,Kca,H,PRF,3,Nc,Dummy_Ns,Vc,Vs,Sid,Dummy_PMS,Dummy_MS,Dummy_Kc,Dummy_Sk,Dummy_Ck,SID).
 iknows(pair(crypt(inv(Kca),pair(Ca,pair(C,Kc))),pair(crypt(Dummy_Ks,PMS),pair(crypt(inv(Dummy_Kc),apply(H,pair(apply(PRF,pair(PMS,pair(Nc,Dummy_Ns))),apply(H,pair(Nc,pair(Dummy_Ns,pair(PMS,pair(Kc,pair(Dummy_Ks,pair(Sid,apply(PRF,pair(PMS,pair(Nc,Dummy_Ns))))))))))))),scrypt(apply(PRF,pair(apply(PRF,pair(PMS,pair(Nc,Dummy_Ns))),pair(Nc,pair(Dummy_Ns,C)))),apply(H,pair(apply(PRF,pair(PMS,pair(Nc,Dummy_Ns))),apply(H,pair(Nc,pair(Ns,pair(PMS,pair(Dummy_Kc,pair(Ks,pair(Sid,apply(PRF,pair(PMS,pair(Nc,Dummy_Ns)))))))))))))))))
 =>
 state_server(S,C,Ca,Ks,Kca,H,PRF,3,Nc,Ns,Vc,Vs,Sid,PMS,apply(PRF,pair(PMS,pair(Nc,Dummy_Ns))),Kc,apply(PRF,pair(apply(PRF,pair(PMS,pair(Nc,Dummy_Ns))),pair(Nc,pair(Dummy_Ns,S)))),apply(PRF,pair(apply(PRF,pair(PMS,pair(Nc,Dummy_Ns))),pair(Nc,pair(Dummy_Ns,C)))),SID).
 iknows(scrypt(apply(PRF,pair(apply(PRF,pair(PMS,pair(Nc,Dummy_Ns))),pair(Nc,pair(Dummy_Ns,S)))),apply(H,pair(apply(PRF,pair(PMS,pair(Nc,Dummy_Ns))),apply(H,pair(Nc,pair(Dummy_Ns,pair(PMS,pair(Kc,pair(Dummy_Ks,pair(Sid,apply(PRF,pair(PMS,pair(Nc,Dummy_Ns))))))))))))))


section properties:

property secrecy_of_pms (MGoal,ASGoal) :=
 [] ((secret(MGoal,pms,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))


section attack_states:

attack_state secrecy_of_pms (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,pms,ASGoal) &
 not(contains(i,ASGoal))

