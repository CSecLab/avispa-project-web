%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfileTmBXjfNxIY

section signature:

state_role_C: agent * agent * text * text * hash_func * nat * text * text * text * text * text * text * set(agent) * set(agent) * set(agent) * set(agent) * set(agent) * set(agent) * nat -> fact
state_role_S: agent * agent * text * text * hash_func * nat * text * text * text * text * text * text * text * set(agent) * set(agent) * set(agent) * set(agent) * set(agent) * set(agent) * set(agent) * nat -> fact


section types:

sec_10, sec_9, sec_8, sec_7, auth_2, sec_6, sec_3, sec_4, auth_1, sec_5: protocol_id
MGoal, start: message
Dummy_State, 3, SID, SID2, SID1, State, 2, 1, 0, 4: nat
set_95, set_94, set_93, set_92, set_91, set_90, set_89, set_118, set_117, set_116, set_115, set_114, set_113: set
hash_0, H: hash_func
ASGoal, Set_61, Set_60, Set_59, Set_56, Set_55, Set_54, Set_53, Set_35, Set_34, Set_33, Set_30, Set_28, Dummy_Set_35, Dummy_Set_34, Set_23, Dummy_Set_33, Dummy_Set_30, Dummy_Set_28, Dummy_Set_23, Dummy_Set_61, Dummy_Set_60, Dummy_Set_59, Dummy_Set_56, Dummy_Set_55, Dummy_Set_54, Dummy_Set_53: set(agent)
A2Goal, A1Goal, serveur, smartCard, C, S, i: agent
Dummy_Rs, dummy_nonce, sec1, id_0, M8, M7, M4, M3, M2, Rc, Rs, HXs, ID, Dummy_M8, Dummy_M7, Dummy_M3, Dummy_M2, Dummy_Rc: text


section inits:

initial_state init1 := 
 iknows(start).
 iknows(smartCard).
 iknows(serveur).
 iknows(hash_0).
 iknows(i).
 state_role_S(serveur,smartCard,id_0,sec1,hash_0,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_89,set_90,set_91,set_92,set_93,set_94,set_95,3).
 state_role_C(smartCard,serveur,id_0,sec1,hash_0,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_113,set_114,set_115,set_116,set_117,set_118,4)


section rules:

step step_0 (S,C,ID,HXs,H,Dummy_Rs,Dummy_Rc,Dummy_M2,Dummy_M3,M4,Dummy_M7,Dummy_M8,Dummy_Set_53,Dummy_Set_54,Dummy_Set_55,Dummy_Set_56,Set_59,Set_60,Set_61,SID,Rs,Rc,M2,M3) :=
 state_role_S(S,C,ID,HXs,H,0,Dummy_Rs,Dummy_Rc,Dummy_M2,Dummy_M3,M4,Dummy_M7,Dummy_M8,Dummy_Set_53,Dummy_Set_54,Dummy_Set_55,Dummy_Set_56,Set_59,Set_60,Set_61,SID).
 iknows(pair(M2,pair(M3,apply(H,pair(HXs,Rc)))))
=[exists Rs]=>
 state_role_S(S,C,ID,HXs,H,1,Rs,Rc,M2,M3,M4,xor(HXs,Rc),xor(HXs,Rs),Dummy_Set_53,Dummy_Set_54,Dummy_Set_55,Dummy_Set_56,Set_59,Set_60,Set_61,SID).
 iknows(pair(apply(H,pair(xor(HXs,Rc),Rc)),pair(xor(HXs,Rs),apply(H,pair(HXs,Rs))))).
 request(S,C,auth_1,Rc,SID).
 secret(Rc,sec_5,Dummy_Set_53).
 secret(HXs,sec_4,Dummy_Set_54).
 secret(ID,sec_3,Dummy_Set_55).
 secret(Rs,sec_6,Dummy_Set_56).
 witness(S,C,auth_2,Rs).
 contains(C,Dummy_Set_53).
 contains(S,Dummy_Set_53).
 contains(C,Dummy_Set_54).
 contains(S,Dummy_Set_54).
 contains(C,Dummy_Set_55).
 contains(S,Dummy_Set_55).
 contains(C,Dummy_Set_56).
 contains(S,Dummy_Set_56)

step step_1 (S,C,ID,HXs,H,Rs,Rc,M2,M3,M4,M7,M8,Set_53,Set_54,Set_55,Set_56,Dummy_Set_59,Dummy_Set_60,Dummy_Set_61,SID) :=
 state_role_S(S,C,ID,HXs,H,1,Rs,Rc,M2,M3,M4,M7,M8,Set_53,Set_54,Set_55,Set_56,Dummy_Set_59,Dummy_Set_60,Dummy_Set_61,SID).
 iknows(apply(H,pair(HXs,pair(Rc,Rs))))
 =>
 state_role_S(S,C,ID,HXs,H,2,Rs,Rc,M2,M3,M4,M7,M8,Set_53,Set_54,Set_55,Set_56,Dummy_Set_59,Dummy_Set_60,Dummy_Set_61,SID).
 secret(Rs,sec_6,Dummy_Set_59).
 secret(Rc,sec_5,Dummy_Set_60).
 secret(HXs,sec_4,Dummy_Set_61).
 contains(C,Dummy_Set_59).
 contains(S,Dummy_Set_59).
 contains(C,Dummy_Set_60).
 contains(S,Dummy_Set_60).
 contains(C,Dummy_Set_61).
 contains(S,Dummy_Set_61)

step step_2 (C,S,ID,HXs,H,Rs,Dummy_Rc,Dummy_M2,Dummy_M3,M7,M8,Dummy_Set_23,Dummy_Set_28,Dummy_Set_30,Set_33,Set_34,Set_35,SID,Rc) :=
 state_role_C(C,S,ID,HXs,H,0,Rs,Dummy_Rc,Dummy_M2,Dummy_M3,M7,M8,Dummy_Set_23,Dummy_Set_28,Dummy_Set_30,Set_33,Set_34,Set_35,SID).
 iknows(start)
=[exists Rc]=>
 state_role_C(C,S,ID,HXs,H,1,Rs,Rc,xor(HXs,Rc),xor(pair(HXs,Rc),ID),M7,M8,Dummy_Set_23,Dummy_Set_28,Dummy_Set_30,Set_33,Set_34,Set_35,SID).
 iknows(pair(xor(HXs,Rc),pair(xor(pair(HXs,Rc),ID),apply(H,pair(HXs,Rc))))).
 secret(Rc,sec_5,Dummy_Set_23).
 witness(C,S,auth_1,Rc).
 secret(HXs,sec_4,Dummy_Set_28).
 secret(ID,sec_3,Dummy_Set_30).
 contains(C,Dummy_Set_23).
 contains(S,Dummy_Set_23).
 contains(C,Dummy_Set_28).
 contains(S,Dummy_Set_28).
 contains(C,Dummy_Set_30).
 contains(S,Dummy_Set_30)

step step_3 (C,S,ID,HXs,H,Dummy_Rs,Rc,M2,M3,Dummy_M7,Dummy_M8,Set_23,Set_28,Set_30,Dummy_Set_33,Dummy_Set_34,Dummy_Set_35,SID,Rs,M7,M8) :=
 state_role_C(C,S,ID,HXs,H,1,Dummy_Rs,Rc,M2,M3,Dummy_M7,Dummy_M8,Set_23,Set_28,Set_30,Dummy_Set_33,Dummy_Set_34,Dummy_Set_35,SID).
 iknows(pair(apply(H,pair(M7,Rc)),pair(M8,apply(H,pair(HXs,Rs)))))
 =>
 state_role_C(C,S,ID,HXs,H,2,Rs,Rc,M2,M3,M7,M8,Set_23,Set_28,Set_30,Dummy_Set_33,Dummy_Set_34,Dummy_Set_35,SID).
 iknows(apply(H,pair(HXs,pair(Rc,Dummy_Rs)))).
 secret(Rs,sec_6,Dummy_Set_33).
 secret(HXs,sec_4,Dummy_Set_34).
 secret(Rc,sec_5,Dummy_Set_35).
 contains(C,Dummy_Set_33).
 contains(S,Dummy_Set_33).
 contains(C,Dummy_Set_34).
 contains(S,Dummy_Set_34).
 contains(C,Dummy_Set_35).
 contains(S,Dummy_Set_35)


section properties:

property authentication_on_auth_1 (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,auth_1,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,auth_1,MGoal))
     /\ ((request(A1Goal,A2Goal,auth_1,MGoal,SID1)
           /\ request(A1Goal,A2Goal,auth_1,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_auth_2 (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,auth_2,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,auth_2,MGoal))
     /\ ((request(A1Goal,A2Goal,auth_2,MGoal,SID1)
           /\ request(A1Goal,A2Goal,auth_2,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property secrecy_of_sec_3 (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_3,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_sec_4 (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_4,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_sec_5 (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_5,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_sec_6 (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_6,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_sec_7 (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_7,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_sec_8 (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_8,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_sec_9 (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_9,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_sec_10 (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_10,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))


section attack_states:

attack_state authentication_on_auth_1 (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,auth_1,MGoal,SID) &
 not(witness(A2Goal,A1Goal,auth_1,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_auth_1 (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,auth_1,MGoal,SID1).
 request(A1Goal,A2Goal,auth_1,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_auth_2 (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,auth_2,MGoal,SID) &
 not(witness(A2Goal,A1Goal,auth_2,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_auth_2 (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,auth_2,MGoal,SID1).
 request(A1Goal,A2Goal,auth_2,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state secrecy_of_sec_3 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_3,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_sec_4 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_4,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_sec_5 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_5,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_sec_6 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_6,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_sec_7 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_7,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_sec_8 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_8,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_sec_9 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_9,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_sec_10 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_10,ASGoal) &
 not(contains(i,ASGoal))

