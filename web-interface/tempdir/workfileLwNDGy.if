%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfileLwNDGy

section signature:

state_host: agent * agent * agent * public_key * public_key * public_key * hash_func * nat * crypt(public_key,crypt(inv(public_key),pair(text,text))) * crypt(public_key,crypt(inv(public_key),pair(text,text))) * pair(crypt(public_key,crypt(inv(public_key),pair(text,text))),crypt(public_key,crypt(inv(public_key),pair(text,text)))) * hash_func * crypt(public_key,crypt(inv(public_key),pair(text,text))) * crypt(public_key,crypt(inv(public_key),pair(text,pair(text,text)))) * pair(crypt(public_key,crypt(inv(public_key),pair(text,text))),crypt(public_key,crypt(inv(public_key),pair(text,pair(text,text))))) * text * text * text * text * text * text * text * set(agent) * set(agent) * set(agent) * nat -> fact
state_board: agent * agent * agent * public_key * public_key * public_key * hash_func * nat * crypt(public_key,crypt(inv(public_key),pair(text,text))) * crypt(public_key,crypt(inv(public_key),pair(text,text))) * pair(crypt(public_key,crypt(inv(public_key),pair(text,text))),crypt(public_key,crypt(inv(public_key),pair(text,text)))) * hash_func * text * text * text * text * text * crypt(public_key,crypt(inv(public_key),pair(text,text))) * crypt(public_key,crypt(inv(public_key),pair(text,pair(text,text)))) * pair(crypt(public_key,crypt(inv(public_key),pair(text,text))),crypt(public_key,crypt(inv(public_key),pair(text,pair(text,text))))) * crypt(inv(public_key),hash_func) * nat -> fact
state_user: agent * agent * agent * public_key * public_key * public_key * hash_func * nat * crypt(public_key,crypt(inv(public_key),pair(text,text))) * crypt(public_key,crypt(inv(public_key),pair(text,text))) * pair(crypt(public_key,crypt(inv(public_key),pair(text,text))),crypt(public_key,crypt(inv(public_key),pair(text,text)))) * hash_func * text * text * text * text * set(agent) * set(agent) * set(agent) * set(agent) * nat -> fact


section types:

Res_all, Dummy_Res_all: pair(crypt(public_key,crypt(inv(public_key),pair(text,text))),crypt(public_key,crypt(inv(public_key),pair(text,pair(text,text)))))
Res_board, Dummy_Res_board: crypt(public_key,crypt(inv(public_key),pair(text,pair(text,text))))
Sig, Dummy_Sig: crypt(inv(public_key),hash_func)
MGoal, start: message
Nuh_u, Nuh_b, Nuhb, Nhb, UHOA, Token, Mask, Dummy_Nuh_b, Dummy_Nuh_u, Dummy_Mask, Dummy_Token, Nuhb_u, Nuhb_h, Nub, Dummy_Nuhb_h, M, Dummy_M, Dummy_Nhb, Dummy_Nuhb_u, Dummy_Nub, Dummy_Nuhb, Dummy_Nuh, Dummy_UHOA, dummy_nonce, Nuh: text
Req_all, Dummy_Req_all: pair(crypt(public_key,crypt(inv(public_key),pair(text,text))),crypt(public_key,crypt(inv(public_key),pair(text,text))))
Res_user, Req_board, Req_host, Dummy_Res_user, Dummy_Req_board, Dummy_Req_host: crypt(public_key,crypt(inv(public_key),pair(text,text)))
Hashed_req, Hash, Dummy_Hashed_req, dummy_hash, hf: hash_func
Ku, Kh, Kb, dummy_pk, ku, kh, kb, ki: public_key
Dummy_Set_108, Dummy_Set_106, Dummy_Set_104, Dummy_Set_36, Dummy_Set_34, Dummy_Set_32, Dummy_Set_29, Set_36, Set_34, Set_32, ASGoal, Set_29, Set_108, Set_106, Set_104: set(agent)
6, 16, 13, 11, State, 8, 7, 5, 2, SID, 4, Dummy_State, 3, 1, 17: nat
U, H, B, u, h, b, i: agent
board_host_reqsign, user_user_reqsign, board_user_reqsign, user_board_nuhb, nuhb, nub, nuh, uhoa, nhb, mask, token, host_host_nuh, host_host_reqsign: protocol_id
set_201, set_199, set_198, set_197, set_196, set_194, set_193, set_192, set_190, set_189, set_188, set_187, set_186, set_185, set_184, set_181, set_180, set_179, set_178, set_168, set_167, set_166, set_137, set_136, set_135, set_134, set_203, set_202: set


section inits:

initial_state init1 := 
 iknows(start).
 iknows(u).
 iknows(h).
 iknows(b).
 iknows(hf).
 iknows(ku).
 iknows(kh).
 iknows(kb).
 iknows(ki).
 iknows(i).
 state_user(u,h,b,ku,kh,kb,hf,1,crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce))),pair(crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce)))),dummy_hash,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_134,set_135,set_136,set_137,3).
 state_board(b,u,h,ku,kh,kb,hf,2,crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce))),pair(crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce)))),dummy_hash,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,pair(dummy_nonce,dummy_nonce)))),pair(crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,pair(dummy_nonce,dummy_nonce))))),crypt(inv(dummy_pk),dummy_hash),4).
 state_host(h,u,b,ku,kh,kb,hf,4,crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce))),pair(crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce)))),dummy_hash,crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,pair(dummy_nonce,dummy_nonce)))),pair(crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,pair(dummy_nonce,dummy_nonce))))),dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_166,set_167,set_168,5).
 state_user(u,i,b,ku,ki,kb,hf,1,crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce))),pair(crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce)))),dummy_hash,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_178,set_179,set_180,set_181,7).
 state_board(b,u,i,ku,ki,kb,hf,2,crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce))),pair(crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce)))),dummy_hash,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,pair(dummy_nonce,dummy_nonce)))),pair(crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,pair(dummy_nonce,dummy_nonce))))),crypt(inv(dummy_pk),dummy_hash),8).
 state_user(u,h,i,ku,kh,ki,hf,1,crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce))),pair(crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce)))),dummy_hash,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_187,set_188,set_189,set_190,11).
 state_host(h,u,i,ku,kh,ki,hf,4,crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce))),pair(crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce)))),dummy_hash,crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,pair(dummy_nonce,dummy_nonce)))),pair(crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,pair(dummy_nonce,dummy_nonce))))),dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_192,set_193,set_194,13).
 state_board(b,i,h,ki,kh,kb,hf,2,crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce))),pair(crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce)))),dummy_hash,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,pair(dummy_nonce,dummy_nonce)))),pair(crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,pair(dummy_nonce,dummy_nonce))))),crypt(inv(dummy_pk),dummy_hash),16).
 state_host(h,i,b,ki,kh,kb,hf,4,crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce))),pair(crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce)))),dummy_hash,crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,pair(dummy_nonce,dummy_nonce)))),pair(crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,pair(dummy_nonce,dummy_nonce))))),dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_201,set_202,set_203,17)


section rules:

step step_0 (U,H,B,Ku,Kh,Kb,Hash,Dummy_Req_host,Dummy_Req_board,Dummy_Req_all,Hashed_req,Dummy_UHOA,Dummy_Nuh,Dummy_Nuhb,Dummy_Nub,Dummy_Set_29,Dummy_Set_32,Dummy_Set_34,Dummy_Set_36,SID,UHOA,Nuh,Nuhb,Nub) :=
 state_user(U,H,B,Ku,Kh,Kb,Hash,1,Dummy_Req_host,Dummy_Req_board,Dummy_Req_all,Hashed_req,Dummy_UHOA,Dummy_Nuh,Dummy_Nuhb,Dummy_Nub,Dummy_Set_29,Dummy_Set_32,Dummy_Set_34,Dummy_Set_36,SID).
 iknows(start)
=[exists Nub,Nuhb,Nuh,UHOA]=>
 state_user(U,H,B,Ku,Kh,Kb,Hash,3,crypt(Kh,crypt(inv(Ku),pair(UHOA,Nuh))),crypt(Kb,crypt(inv(Ku),pair(Nuhb,Nub))),pair(crypt(Kh,crypt(inv(Ku),pair(UHOA,Nuh))),crypt(Kb,crypt(inv(Ku),pair(Nuhb,Nub)))),Hashed_req,UHOA,Nuh,Nuhb,Nub,Dummy_Set_29,Dummy_Set_32,Dummy_Set_34,Dummy_Set_36,SID).
 secret(UHOA,uhoa,Dummy_Set_29).
 secret(Nuh,nuh,Dummy_Set_32).
 secret(Nub,nub,Dummy_Set_34).
 secret(Nuhb,nuhb,Dummy_Set_36).
 iknows(pair(crypt(Kh,crypt(inv(Ku),pair(UHOA,Nuh))),crypt(Kb,crypt(inv(Ku),pair(Nuhb,Nub))))).
 contains(U,Dummy_Set_29).
 contains(H,Dummy_Set_29).
 contains(U,Dummy_Set_32).
 contains(H,Dummy_Set_32).
 contains(U,Dummy_Set_34).
 contains(B,Dummy_Set_34).
 contains(U,Dummy_Set_36).
 contains(B,Dummy_Set_36)

step step_1 (U,H,B,Ku,Kh,Kb,Hash,Req_host,Req_board,Req_all,Dummy_Hashed_req,UHOA,Nuh,Nuhb,Nub,Set_29,Set_32,Set_34,Set_36,SID,Hashed_req) :=
 state_user(U,H,B,Ku,Kh,Kb,Hash,3,Req_host,Req_board,Req_all,Dummy_Hashed_req,UHOA,Nuh,Nuhb,Nub,Set_29,Set_32,Set_34,Set_36,SID).
 iknows(crypt(inv(Kb),Hashed_req))
 =>
 state_user(U,H,B,Ku,Kh,Kb,Hash,4,Req_host,Req_board,Req_all,Hashed_req,UHOA,Nuh,Nuhb,Nub,Set_29,Set_32,Set_34,Set_36,SID).
 iknows(crypt(Kh,crypt(inv(Ku),pair(Nuh,Nuhb))))

step step_2 (B,U,H,Ku,Kh,Kb,Hash,Dummy_Req_host,Req_board,Dummy_Req_all,Dummy_Hashed_req,Dummy_Nub,Nhb,M,Dummy_Nuhb_u,Nuhb_h,Res_user,Res_board,Res_all,Dummy_Sig,SID,Req_host,Nub,Nuhb_u) :=
 state_board(B,U,H,Ku,Kh,Kb,Hash,2,Dummy_Req_host,Req_board,Dummy_Req_all,Dummy_Hashed_req,Dummy_Nub,Nhb,M,Dummy_Nuhb_u,Nuhb_h,Res_user,Res_board,Res_all,Dummy_Sig,SID).
 iknows(pair(Req_host,crypt(Kb,crypt(inv(Ku),pair(Nuhb_u,Nub)))))
 =>
 state_board(B,U,H,Ku,Kh,Kb,Hash,5,Req_host,Req_board,pair(Req_host,crypt(Kb,crypt(inv(Ku),pair(Nuhb_u,Nub)))),apply(Hash,pair(Req_host,crypt(Kb,crypt(inv(Ku),pair(Nuhb_u,Nub))))),Nub,Nhb,M,Nuhb_u,Nuhb_h,Res_user,Res_board,Res_all,crypt(inv(Kb),apply(Hash,pair(Req_host,crypt(Kb,crypt(inv(Ku),pair(Nuhb_u,Nub)))))),SID).
 iknows(crypt(inv(Kb),apply(Hash,pair(Req_host,crypt(Kb,crypt(inv(Ku),pair(Nuhb_u,Nub))))))).
 iknows(pair(pair(Req_host,crypt(Kb,crypt(inv(Ku),pair(Nuhb_u,Nub)))),crypt(inv(Kb),apply(Hash,pair(Req_host,crypt(Kb,crypt(inv(Ku),pair(Nuhb_u,Nub))))))))

step step_3 (B,U,H,Ku,Kh,Kb,Hash,Req_host,Req_board,Req_all,Hashed_req,Nub,Dummy_Nhb,Dummy_M,Nuhb_u,Dummy_Nuhb_h,Dummy_Res_user,Dummy_Res_board,Dummy_Res_all,Sig,SID,Nhb,M,Nuhb_h,Res_user) :=
 state_board(B,U,H,Ku,Kh,Kb,Hash,5,Req_host,Req_board,Req_all,Hashed_req,Nub,Dummy_Nhb,Dummy_M,Nuhb_u,Dummy_Nuhb_h,Dummy_Res_user,Dummy_Res_board,Dummy_Res_all,Sig,SID).
 iknows(pair(Res_user,crypt(Kb,crypt(inv(Kh),pair(M,pair(Nuhb_h,Nhb))))))
 =>
 state_board(B,U,H,Ku,Kh,Kb,Hash,8,Req_host,Req_board,Req_all,Hashed_req,Nub,Nhb,M,Nuhb_u,Nuhb_h,Res_user,crypt(Kb,crypt(inv(Kh),pair(M,pair(Nuhb_h,Nhb)))),pair(Res_user,crypt(Kb,crypt(inv(Kh),pair(M,pair(Nuhb_h,Nhb))))),Sig,SID)

step step_4 (H,U,B,Ku,Kh,Kb,Hash,Req_host,Req_board,Dummy_Req_all,Dummy_Hashed_req,Dummy_Res_user,Dummy_Res_board,Dummy_Res_all,Dummy_UHOA,Dummy_Token,Dummy_Mask,Dummy_Nuh_u,Dummy_Nuh_b,Dummy_Nuhb,Dummy_Nhb,Dummy_Set_104,Dummy_Set_106,Dummy_Set_108,SID,Hashed_req,UHOA,Token,Mask,Nuh_u,Nuh_b,Nuhb,Nhb) :=
 state_host(H,U,B,Ku,Kh,Kb,Hash,4,Req_host,Req_board,Dummy_Req_all,Dummy_Hashed_req,Dummy_Res_user,Dummy_Res_board,Dummy_Res_all,Dummy_UHOA,Dummy_Token,Dummy_Mask,Dummy_Nuh_u,Dummy_Nuh_b,Dummy_Nuhb,Dummy_Nhb,Dummy_Set_104,Dummy_Set_106,Dummy_Set_108,SID).
 iknows(pair(crypt(Kh,crypt(inv(Ku),pair(UHOA,Nuh_u))),pair(Req_board,crypt(inv(Kb),Hashed_req)))).
 iknows(crypt(Kh,crypt(inv(Ku),pair(Nuh_b,Nuhb))))
=[exists Nhb,Mask,Token]=>
 state_host(H,U,B,Ku,Kh,Kb,Hash,6,Req_host,Req_board,pair(crypt(Kh,crypt(inv(Ku),pair(UHOA,Nuh_u))),Req_board),Hashed_req,crypt(Ku,crypt(inv(Kh),pair(xor(Token,Mask),Nuh_u))),crypt(Kb,crypt(inv(Kh),pair(Mask,pair(Nuhb,Nhb)))),pair(crypt(Ku,crypt(inv(Kh),pair(xor(Token,Mask),Nuh_u))),crypt(Kb,crypt(inv(Kh),pair(Mask,pair(Nuhb,Nhb))))),UHOA,Token,Mask,Nuh_u,Nuh_b,Nuhb,Nhb,Dummy_Set_104,Dummy_Set_106,Dummy_Set_108,SID).
 iknows(pair(crypt(Ku,crypt(inv(Kh),pair(xor(Token,Mask),Nuh_u))),crypt(Kb,crypt(inv(Kh),pair(Mask,pair(Nuhb,Nhb)))))).
 contains(H,Dummy_Set_104).
 contains(U,Dummy_Set_104).
 contains(H,Dummy_Set_106).
 contains(B,Dummy_Set_106).
 contains(H,Dummy_Set_108).
 contains(B,Dummy_Set_108)


section properties:

property secrecy_of_uhoa (MGoal,ASGoal) :=
 [] ((secret(MGoal,uhoa,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_nuh (MGoal,ASGoal) :=
 [] ((secret(MGoal,nuh,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_nuhb (MGoal,ASGoal) :=
 [] ((secret(MGoal,nuhb,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_nub (MGoal,ASGoal) :=
 [] ((secret(MGoal,nub,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))


section attack_states:

attack_state secrecy_of_uhoa (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,uhoa,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_nuh (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,nuh,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_nuhb (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,nuhb,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_nub (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,nub,ASGoal) &
 not(contains(i,ASGoal))

