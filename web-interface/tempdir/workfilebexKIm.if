%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfilebexKIm

section signature:

state_user: agent * agent * agent * symmetric_key * symmetric_key * hash_func * nat * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * set(text) * set(agent) * set(symmetric_key) * set(agent) * set(text) * set(agent) * set(text) * set(agent) * set(text) * nat -> fact
state_basestation: agent * agent * agent * symmetric_key * symmetric_key * hash_func * nat * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * set(text) * set(agent) * set(symmetric_key) * set(agent) * set(text) * set(agent) * set(text) * set(agent) * set(text) * nat -> fact
state_sensornode: agent * agent * agent * symmetric_key * hash_func * nat * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * set(text) * set(agent) * set(symmetric_key) * set(agent) * set(text) * set(agent) * set(text) * set(agent) * set(text) * nat -> fact


section types:

MGoal, start: message
sensornode_user, sensornode_basestation, user_basestation, user_sensornode, subs1, subs2, subs3, subs4, subs5: protocol_id
Dummy_Set_127, Set_127, Set_91, Set_48, Dummy_Set_48, Dummy_Set_91: set(symmetric_key)
h, H: hash_func
Dummy_Set_132, Dummy_Set_130, Dummy_Set_128, Dummy_Set_126, ASGoal, Set_132, Set_130, Set_128, Set_126, Set_96, Set_94, Set_92, Set_90, Set_53, Set_51, Set_49, Set_46, Dummy_Set_53, Dummy_Set_51, Dummy_Set_49, Dummy_Set_46, Dummy_Set_96, Dummy_Set_94, Dummy_Set_92, Dummy_Set_90: set(agent)
Dummy_Set_133, Dummy_Set_131, Dummy_Set_129, Dummy_Set_125, Set_133, Set_131, Set_129, Set_125, Set_97, Set_95, Set_93, Set_89, Set_54, Set_52, Set_50, Set_45, Dummy_Set_54, Dummy_Set_52, Dummy_Set_50, Dummy_Set_45, Dummy_Set_97, Dummy_Set_95, Dummy_Set_93, Dummy_Set_89: set(text)
mkui, mksj, MKsj, MKui: symmetric_key
Dummy_M1, Dummy_T2, Dummy_T1, dummy_nonce, rpwi, rui, kui, kj, rnui, tj, t1, t2, apmi, gidi, kbs, snj, ui, IDi, APMi, GIdx, Wi, RNui, T1, T2, Rui, Keyij, Ru, PWi, KUi, M1, IDsj, Tj, Kj, Pu, Ri, S, Tokenij, GIDx, Dummy_M2, Dummy_Wi, RNuj, M2, Dummy_Tokenij, Dummy_KUi, Dummy_RNui, Dummy_Ri, Dummy_Keyij: text
Dummy_State, 3, SID, SID2, SID1, State, 13, 12, 11, 9, 8, 7, 2, 1, 0, 5, 4: nat
A2Goal, A1Goal, sn, bs, u, SN, BS, U, i: agent
set_202, set_201, set_200, set_199, set_182, set_181, set_180, set_179, set_178, set_177, set_176, set_175, set_174, set_304, set_303, set_302, set_301, set_300, set_299, set_298, set_297, set_296, set_294, set_293, set_292, set_291, set_290, set_289, set_288, set_287, set_286, set_284, set_283, set_282, set_281, set_280, set_279, set_278, set_277, set_276, set_274, set_273, set_272, set_271, set_270, set_269, set_268, set_267, set_266, set_264, set_263, set_262, set_261, set_260, set_259, set_258, set_257, set_256, set_254, set_253, set_252, set_251, set_250, set_249, set_248, set_247, set_246, set_232, set_231, set_230, set_229, set_228, set_227, set_226, set_225, set_224, set_207, set_206, set_205, set_204, set_203: set


section inits:

initial_state init1 := 
 iknows(start).
 iknows(u).
 iknows(bs).
 iknows(sn).
 iknows(h).
 iknows(snj).
 iknows(ui).
 iknows(i).
 state_sensornode(sn,u,bs,mksj,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_174,set_175,set_176,set_177,set_178,set_179,set_180,set_181,set_182,3).
 state_basestation(u,bs,sn,mksj,mkui,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_199,set_200,set_201,set_202,set_203,set_204,set_205,set_206,set_207,4).
 state_user(bs,u,sn,mksj,mkui,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_224,set_225,set_226,set_227,set_228,set_229,set_230,set_231,set_232,5).
 state_sensornode(u,sn,bs,mksj,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_246,set_247,set_248,set_249,set_250,set_251,set_252,set_253,set_254,7).
 state_basestation(sn,bs,u,mksj,mkui,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_256,set_257,set_258,set_259,set_260,set_261,set_262,set_263,set_264,8).
 state_user(bs,sn,u,mksj,mkui,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_266,set_267,set_268,set_269,set_270,set_271,set_272,set_273,set_274,9).
 state_sensornode(u,sn,bs,mksj,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_276,set_277,set_278,set_279,set_280,set_281,set_282,set_283,set_284,11).
 state_basestation(sn,bs,u,mksj,mkui,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_286,set_287,set_288,set_289,set_290,set_291,set_292,set_293,set_294,12).
 state_user(bs,sn,u,mksj,mkui,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_296,set_297,set_298,set_299,set_300,set_301,set_302,set_303,set_304,13)


section rules:

step step_0 (SN,BS,U,MKsj,H,IDsj,Tj,Kj,IDi,APMi,GIdx,Wi,RNui,Dummy_T1,T2,Rui,Keyij,Ru,PWi,KUi,M1,Dummy_Set_125,Dummy_Set_126,Dummy_Set_127,Dummy_Set_128,Dummy_Set_129,Dummy_Set_130,Dummy_Set_131,Dummy_Set_132,Dummy_Set_133,SID,T1) :=
 state_sensornode(SN,BS,U,MKsj,H,0,IDsj,Tj,Kj,IDi,APMi,GIdx,Wi,RNui,Dummy_T1,T2,Rui,Keyij,Ru,PWi,KUi,M1,Dummy_Set_125,Dummy_Set_126,Dummy_Set_127,Dummy_Set_128,Dummy_Set_129,Dummy_Set_130,Dummy_Set_131,Dummy_Set_132,Dummy_Set_133,SID).
 iknows(start)
=[exists T1]=>
 state_sensornode(SN,BS,U,MKsj,H,1,IDsj,Tj,Kj,IDi,APMi,GIdx,Wi,RNui,T1,T2,Rui,Keyij,Ru,PWi,KUi,M1,Dummy_Set_125,Dummy_Set_126,Dummy_Set_127,Dummy_Set_128,Dummy_Set_129,Dummy_Set_130,Dummy_Set_131,Dummy_Set_132,Dummy_Set_133,SID).
 secret(Dummy_Set_125,subs1,Dummy_Set_126).
 secret(Dummy_Set_127,subs2,Dummy_Set_128).
 secret(Dummy_Set_129,subs3,Dummy_Set_130).
 secret(Dummy_Set_131,subs4,Dummy_Set_132).
 secret(Dummy_Set_133,subs5,U).
 iknows(pair(SN,pair(BS,pair(IDsj,pair(Tj,scrypt(MKsj,pair(Kj,pair(IDsj,Tj)))))))).
 witness(SN,BS,sensornode_basestation,T1).
 contains(Kj,Dummy_Set_125).
 contains(SN,Dummy_Set_126).
 contains(BS,Dummy_Set_126).
 contains(MKsj,Dummy_Set_127).
 contains(SN,Dummy_Set_128).
 contains(BS,Dummy_Set_128).
 contains(RNui,Dummy_Set_129).
 contains(U,Dummy_Set_130).
 contains(BS,Dummy_Set_130).
 contains(APMi,Dummy_Set_131).
 contains(GIdx,Dummy_Set_131).
 contains(U,Dummy_Set_132).
 contains(BS,Dummy_Set_132).
 contains(PWi,Dummy_Set_133).
 contains(Ru,Dummy_Set_133)

step step_1 (SN,BS,U,MKsj,H,IDsj,Tj,Kj,IDi,APMi,GIdx,Wi,RNui,Dummy_T1,Dummy_T2,Rui,Keyij,Ru,PWi,KUi,Dummy_M1,Set_125,Set_126,Set_127,Set_128,Set_129,Set_130,Set_131,Set_132,Set_133,SID,T1,T2,M1) :=
 state_sensornode(SN,BS,U,MKsj,H,1,IDsj,Tj,Kj,IDi,APMi,GIdx,Wi,RNui,Dummy_T1,Dummy_T2,Rui,Keyij,Ru,PWi,KUi,Dummy_M1,Set_125,Set_126,Set_127,Set_128,Set_129,Set_130,Set_131,Set_132,Set_133,SID).
 iknows(pair(U,pair(SN,pair(IDi,pair(IDsj,pair(scrypt(Keyij,pair(IDi,pair(IDsj,pair(Rui,pair(GIdx,T1))))),apply(H,pair(IDi,pair(IDsj,pair(T1,pair(T2,pair(APMi,pair(MKsj,M1)))))))))))))
 =>
 state_sensornode(SN,BS,U,MKsj,H,2,IDsj,Tj,Kj,IDi,APMi,GIdx,Wi,RNui,T1,T2,Rui,Keyij,Ru,PWi,KUi,M1,Set_125,Set_126,Set_127,Set_128,Set_129,Set_130,Set_131,Set_132,Set_133,SID).
 request(U,SN,user_sensornode,T1,SID)

step step_2 (BS,SN,U,MKsj,MKui,H,Wi,RNui,Rui,Dummy_Keyij,T2,APMi,GIdx,Pu,PWi,KUi,Ri,Ru,S,Tokenij,GIDx,IDsj,IDi,Kj,Tj,T1,M1,Set_89,Set_90,Set_91,Set_92,Set_93,Set_94,Set_95,Set_96,Set_97,SID) :=
 state_basestation(BS,SN,U,MKsj,MKui,H,0,Wi,RNui,Rui,Dummy_Keyij,T2,APMi,GIdx,Pu,PWi,KUi,Ri,Ru,S,Tokenij,GIDx,IDsj,IDi,Kj,Tj,T1,M1,Set_89,Set_90,Set_91,Set_92,Set_93,Set_94,Set_95,Set_96,Set_97,SID).
 iknows(pair(SN,pair(BS,pair(IDsj,pair(Tj,scrypt(MKsj,pair(Kj,pair(IDsj,Tj))))))))
 =>
 state_basestation(BS,SN,U,MKsj,MKui,H,1,Wi,RNui,Rui,apply(H,pair(IDi,pair(IDsj,pair(MKsj,Kj)))),T2,APMi,GIdx,Pu,PWi,KUi,Ri,Ru,S,Tokenij,GIDx,IDsj,IDi,Kj,Tj,T1,M1,Set_89,Set_90,Set_91,Set_92,Set_93,Set_94,Set_95,Set_96,Set_97,SID)

step step_3 (BS,SN,U,MKsj,MKui,H,Wi,RNui,Rui,Keyij,T2,APMi,GIdx,Pu,PWi,KUi,Dummy_Ri,Ru,S,Tokenij,GIDx,IDsj,IDi,Kj,Tj,T1,M1,Dummy_Set_89,Dummy_Set_90,Dummy_Set_91,Dummy_Set_92,Dummy_Set_93,Dummy_Set_94,Dummy_Set_95,Dummy_Set_96,Dummy_Set_97,SID) :=
 state_basestation(BS,SN,U,MKsj,MKui,H,1,Wi,RNui,Rui,Keyij,T2,APMi,GIdx,Pu,PWi,KUi,Dummy_Ri,Ru,S,Tokenij,GIDx,IDsj,IDi,Kj,Tj,T1,M1,Dummy_Set_89,Dummy_Set_90,Dummy_Set_91,Dummy_Set_92,Dummy_Set_93,Dummy_Set_94,Dummy_Set_95,Dummy_Set_96,Dummy_Set_97,SID).
 iknows(pair(U,pair(BS,scrypt(MKui,pair(IDi,apply(H,pair(IDi,pair(PWi,Ru))))))))
 =>
 state_basestation(BS,SN,U,MKsj,MKui,H,2,Wi,RNui,Rui,Keyij,T2,APMi,GIdx,Pu,PWi,KUi,xor(apply(H,pair(IDi,pair(PWi,Ru))),apply(H,pair(IDi,S))),Ru,S,Tokenij,GIDx,IDsj,IDi,Kj,Tj,T1,M1,Dummy_Set_89,Dummy_Set_90,Dummy_Set_91,Dummy_Set_92,Dummy_Set_93,Dummy_Set_94,Dummy_Set_95,Dummy_Set_96,Dummy_Set_97,SID).
 iknows(pair(BS,pair(U,scrypt(MKui,pair(xor(apply(H,pair(IDi,pair(PWi,Ru))),apply(H,pair(IDi,S))),H))))).
 secret(Dummy_Set_89,subs1,Dummy_Set_90).
 secret(Dummy_Set_91,subs2,Dummy_Set_92).
 secret(Dummy_Set_93,subs3,Dummy_Set_94).
 secret(Dummy_Set_95,subs4,Dummy_Set_96).
 secret(Dummy_Set_97,subs5,U).
 request(SN,BS,sensornode_basestation,Tj,SID).
 contains(Kj,Dummy_Set_89).
 contains(SN,Dummy_Set_90).
 contains(BS,Dummy_Set_90).
 contains(MKsj,Dummy_Set_91).
 contains(SN,Dummy_Set_92).
 contains(BS,Dummy_Set_92).
 contains(RNui,Dummy_Set_93).
 contains(U,Dummy_Set_94).
 contains(BS,Dummy_Set_94).
 contains(APMi,Dummy_Set_95).
 contains(GIdx,Dummy_Set_95).
 contains(U,Dummy_Set_96).
 contains(BS,Dummy_Set_96).
 contains(PWi,Dummy_Set_97).
 contains(Ru,Dummy_Set_97)

step step_4 (BS,SN,U,MKsj,MKui,H,Wi,Dummy_RNui,Rui,Keyij,Dummy_T2,APMi,GIdx,Pu,PWi,Dummy_KUi,Ri,Ru,S,Dummy_Tokenij,GIDx,IDsj,IDi,Kj,Tj,Dummy_T1,Dummy_M1,Set_89,Set_90,Set_91,Set_92,Set_93,Set_94,Set_95,Set_96,Set_97,SID,RNui,T2,T1,M1) :=
 state_basestation(BS,SN,U,MKsj,MKui,H,2,Wi,Dummy_RNui,Rui,Keyij,Dummy_T2,APMi,GIdx,Pu,PWi,Dummy_KUi,Ri,Ru,S,Dummy_Tokenij,GIDx,IDsj,IDi,Kj,Tj,Dummy_T1,Dummy_M1,Set_89,Set_90,Set_91,Set_92,Set_93,Set_94,Set_95,Set_96,Set_97,SID).
 iknows(pair(U,pair(BS,pair(scrypt(KUi,pair(GIdx,pair(M1,pair(apply(H,pair(xor(apply(H,pair(IDi,pair(PWi,Ru))),apply(H,pair(IDi,S))),pair(RNui,pair(GIDx,T1)))),RNui)))),T1))))
=[exists T2]=>
 state_basestation(BS,SN,U,MKsj,MKui,H,3,Wi,RNui,Rui,Keyij,T2,APMi,GIdx,Pu,PWi,xor(pair(apply(H,pair(IDi,S)),T1)),Ri,Ru,S,apply(H,pair(IDi,pair(IDsj,pair(T1,pair(T2,pair(APMi,pair(MKsj,M1))))))),GIDx,IDsj,IDi,Kj,Tj,T1,M1,Set_89,Set_90,Set_91,Set_92,Set_93,Set_94,Set_95,Set_96,Set_97,SID).
 iknows(pair(BS,pair(U,pair(scrypt(Dummy_KUi,pair(IDi,pair(IDsj,pair(Keyij,pair(apply(H,pair(IDi,pair(IDsj,pair(T1,pair(T2,pair(APMi,pair(MKsj,M1))))))),pair(APMi,pair(T1,T2))))))),T2)))).
 request(U,BS,user_basestation,T1,SID)

step step_5 (U,BS,SN,MKsj,MKui,H,IDi,Dummy_Wi,APMi,RNui,Pu,PWi,KUi,Rui,Keyij,IDsj,Kj,GIdx,RNuj,M1,M2,GIDx,Ru,S,T1,T2,Set_45,Set_46,Set_48,Set_49,Set_50,Set_51,Set_52,Set_53,Set_54,SID) :=
 state_user(U,BS,SN,MKsj,MKui,H,0,IDi,Dummy_Wi,APMi,RNui,Pu,PWi,KUi,Rui,Keyij,IDsj,Kj,GIdx,RNuj,M1,M2,GIDx,Ru,S,T1,T2,Set_45,Set_46,Set_48,Set_49,Set_50,Set_51,Set_52,Set_53,Set_54,SID).
 iknows(start)
 =>
 state_user(U,BS,SN,MKsj,MKui,H,1,IDi,apply(H,pair(IDi,pair(PWi,Ru))),APMi,RNui,Pu,PWi,KUi,Rui,Keyij,IDsj,Kj,GIdx,RNuj,M1,M2,GIDx,Ru,S,T1,T2,Set_45,Set_46,Set_48,Set_49,Set_50,Set_51,Set_52,Set_53,Set_54,SID).
 iknows(pair(U,pair(BS,scrypt(MKui,pair(IDi,apply(H,pair(IDi,pair(PWi,Ru))))))))

step step_6 (U,BS,SN,MKsj,MKui,H,IDi,Wi,APMi,Dummy_RNui,Pu,PWi,Dummy_KUi,Rui,Keyij,IDsj,Kj,GIdx,RNuj,Dummy_M1,Dummy_M2,GIDx,Ru,S,Dummy_T1,T2,Dummy_Set_45,Dummy_Set_46,Dummy_Set_48,Dummy_Set_49,Dummy_Set_50,Dummy_Set_51,Dummy_Set_52,Dummy_Set_53,Dummy_Set_54,SID,RNui,T1) :=
 state_user(U,BS,SN,MKsj,MKui,H,1,IDi,Wi,APMi,Dummy_RNui,Pu,PWi,Dummy_KUi,Rui,Keyij,IDsj,Kj,GIdx,RNuj,Dummy_M1,Dummy_M2,GIDx,Ru,S,Dummy_T1,T2,Dummy_Set_45,Dummy_Set_46,Dummy_Set_48,Dummy_Set_49,Dummy_Set_50,Dummy_Set_51,Dummy_Set_52,Dummy_Set_53,Dummy_Set_54,SID).
 iknows(pair(BS,pair(U,scrypt(MKui,pair(xor(apply(H,pair(IDi,pair(PWi,Ru))),apply(H,pair(IDi,S))),H)))))
=[exists RNui,T1]=>
 state_user(U,BS,SN,MKsj,MKui,H,2,IDi,Wi,APMi,RNui,Pu,PWi,xor(pair(apply(H,pair(IDi,S)),T1)),Rui,Keyij,IDsj,Kj,GIdx,RNuj,xor(pair(apply(H,pair(IDi,pair(PWi,Ru))),RNui)),apply(H,pair(xor(apply(H,pair(IDi,pair(PWi,Ru))),apply(H,pair(IDi,S))),pair(RNui,pair(GIDx,T1)))),GIDx,Ru,S,T1,T2,Dummy_Set_45,Dummy_Set_46,Dummy_Set_48,Dummy_Set_49,Dummy_Set_50,Dummy_Set_51,Dummy_Set_52,Dummy_Set_53,Dummy_Set_54,SID).
 secret(Dummy_Set_45,subs1,Dummy_Set_46).
 secret(Dummy_Set_48,subs2,Dummy_Set_49).
 secret(Dummy_Set_50,subs3,Dummy_Set_51).
 secret(Dummy_Set_52,subs4,Dummy_Set_53).
 secret(Dummy_Set_54,subs5,U).
 iknows(pair(U,pair(BS,pair(scrypt(xor(pair(apply(H,pair(IDi,S)),T1)),pair(GIdx,pair(xor(pair(apply(H,pair(IDi,pair(PWi,Ru))),RNui)),pair(apply(H,pair(xor(apply(H,pair(IDi,pair(PWi,Ru))),apply(H,pair(IDi,S))),pair(RNui,pair(GIDx,T1)))),RNui)))),T1)))).
 witness(U,BS,user_basestation,T1).
 contains(Kj,Dummy_Set_45).
 contains(SN,Dummy_Set_46).
 contains(BS,Dummy_Set_46).
 contains(MKsj,Dummy_Set_48).
 contains(SN,Dummy_Set_49).
 contains(BS,Dummy_Set_49).
 contains(RNui,Dummy_Set_50).
 contains(U,Dummy_Set_51).
 contains(BS,Dummy_Set_51).
 contains(APMi,Dummy_Set_52).
 contains(GIdx,Dummy_Set_52).
 contains(U,Dummy_Set_53).
 contains(BS,Dummy_Set_53).
 contains(PWi,Dummy_Set_54).
 contains(Ru,Dummy_Set_54)

step step_7 (U,BS,SN,MKsj,MKui,H,IDi,Wi,APMi,RNui,Pu,PWi,Dummy_KUi,Rui,Keyij,IDsj,Kj,GIdx,RNuj,Dummy_M1,M2,GIDx,Ru,S,Dummy_T1,Dummy_T2,Set_45,Set_46,Set_48,Set_49,Set_50,Set_51,Set_52,Set_53,Set_54,SID,M1,T1,T2) :=
 state_user(U,BS,SN,MKsj,MKui,H,2,IDi,Wi,APMi,RNui,Pu,PWi,Dummy_KUi,Rui,Keyij,IDsj,Kj,GIdx,RNuj,Dummy_M1,M2,GIDx,Ru,S,Dummy_T1,Dummy_T2,Set_45,Set_46,Set_48,Set_49,Set_50,Set_51,Set_52,Set_53,Set_54,SID).
 iknows(pair(BS,pair(U,pair(scrypt(Dummy_KUi,pair(IDi,pair(IDsj,pair(Keyij,pair(apply(H,pair(IDi,pair(IDsj,pair(T1,pair(T2,pair(APMi,pair(MKsj,M1))))))),pair(APMi,pair(T1,T2))))))),T2))))
 =>
 state_user(U,BS,SN,MKsj,MKui,H,3,IDi,Wi,APMi,RNui,Pu,PWi,xor(pair(apply(H,pair(IDi,S)),T1)),Rui,Keyij,IDsj,Kj,GIdx,RNuj,M1,M2,GIDx,Ru,S,T1,T2,Set_45,Set_46,Set_48,Set_49,Set_50,Set_51,Set_52,Set_53,Set_54,SID).
 iknows(pair(U,pair(SN,pair(IDi,pair(IDsj,pair(scrypt(Keyij,pair(IDi,pair(IDsj,pair(Rui,pair(GIdx,T1))))),apply(H,pair(IDi,pair(IDsj,pair(T1,pair(T2,pair(APMi,pair(MKsj,M1))))))))))))).
 witness(U,SN,user_sensornode,T1)


section properties:

property secrecy_of_subs1 (MGoal,ASGoal) :=
 [] ((secret(MGoal,subs1,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_subs2 (MGoal,ASGoal) :=
 [] ((secret(MGoal,subs2,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_subs3 (MGoal,ASGoal) :=
 [] ((secret(MGoal,subs3,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_subs4 (MGoal,ASGoal) :=
 [] ((secret(MGoal,subs4,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_subs5 (MGoal,ASGoal) :=
 [] ((secret(MGoal,subs5,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property authentication_on_user_basestation (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,user_basestation,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,user_basestation,MGoal))
     /\ ((request(A1Goal,A2Goal,user_basestation,MGoal,SID1)
           /\ request(A1Goal,A2Goal,user_basestation,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_sensornode_user (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,sensornode_user,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,sensornode_user,MGoal))
     /\ ((request(A1Goal,A2Goal,sensornode_user,MGoal,SID1)
           /\ request(A1Goal,A2Goal,sensornode_user,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_user_sensornode (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,user_sensornode,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,user_sensornode,MGoal))
     /\ ((request(A1Goal,A2Goal,user_sensornode,MGoal,SID1)
           /\ request(A1Goal,A2Goal,user_sensornode,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_sensornode_basestation (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,sensornode_basestation,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,sensornode_basestation,MGoal))
     /\ ((request(A1Goal,A2Goal,sensornode_basestation,MGoal,SID1)
           /\ request(A1Goal,A2Goal,sensornode_basestation,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state secrecy_of_subs1 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,subs1,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_subs2 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,subs2,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_subs3 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,subs3,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_subs4 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,subs4,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_subs5 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,subs5,ASGoal) &
 not(contains(i,ASGoal))

attack_state authentication_on_user_basestation (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,user_basestation,MGoal,SID) &
 not(witness(A2Goal,A1Goal,user_basestation,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_user_basestation (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,user_basestation,MGoal,SID1).
 request(A1Goal,A2Goal,user_basestation,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_sensornode_user (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,sensornode_user,MGoal,SID) &
 not(witness(A2Goal,A1Goal,sensornode_user,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_sensornode_user (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,sensornode_user,MGoal,SID1).
 request(A1Goal,A2Goal,sensornode_user,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_user_sensornode (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,user_sensornode,MGoal,SID) &
 not(witness(A2Goal,A1Goal,user_sensornode,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_user_sensornode (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,user_sensornode,MGoal,SID1).
 request(A1Goal,A2Goal,user_sensornode,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_sensornode_basestation (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,sensornode_basestation,MGoal,SID) &
 not(witness(A2Goal,A1Goal,sensornode_basestation,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_sensornode_basestation (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,sensornode_basestation,MGoal,SID1).
 request(A1Goal,A2Goal,sensornode_basestation,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

