
role role_A(A:agent,G:agent,C:agent,S:agent,Kag:symmetric_key,SND,RCV:channel(dy))
played_by A
def=
	local
		State:nat,N1:text,L1:text,Ku:public_key,T1start:text,Kcg:symmetric_key,T1expire:text,U:agent
	init
		State := 0
	transition
		1. State=0 / RCV(U'.G.L1'.N1') =|> State':=1 / Ku':=new() / T1expire':=new() / T1start':=new() / Kcg':=new() / SND(U'.{U'.C.G.Kcg'.T1start'.T1expire'}_Kag.{G.Kcg'.T1start'.T1expire'}_Ku')
end role

role role_G(A:agent,G:agent,C:agent,Kag:symmetric_key,Kcg:symmetric_key,SND,RCV:channel(dy))
played_by G
def=
	local
		State:nat,T1:text,L2:text,T1expire:text,T1start:text,Kcs:symmetric_key,T2expire:text,S:agent,T2start:text,N2:text,U:agent,Kgs:symmetric_key
	init
		State := 0
	transition
		3. State=0 / RCV(S'.L2'.N2'.{U'.C.G.Kcg.T1start'.T1expire'}_Kag.{C.T1'}_Kcg) =|> State':=1 / Kcs':=new() / secret(Kcs',sec_1,{}) / T2expire':=new() / T2start':=new() / Kgs':=new() / SND(U'.{U'.C.S'.Kcs'.T2start'.T2expire'}_Kgs'.{S'.Kcs'.T2start'.T2expire'.N2'}_Kcs')
end role

role role_C(A:agent,G:agent,C:agent,S:agent,U:agent,L1:text,L2:text,N1:text,N2:text,Ku:public_key,SND,RCV:channel(dy))
played_by C
def=
	local
		State:nat,Kcg:symmetric_key,T1:text,T1expire:text,T1start:text,Kag:symmetric_key,T2expire:text,T2start:text,Kgs:symmetric_key,Kcs:symmetric_key,T2:text
	init
		State := 0
	transition
		1. State=0 / RCV(start) =|> State':=1 / SND(U.G.L1.N1)
		2. State=1 / RCV(U.{U.C.G.Kcg'.T1start'.T1expire'}_Kag'.{G.Kcg'.T1start'.T1expire'}_Ku) =|> State':=2 / T1':=new() / SND(S.L2.N2.{U.C.G.Kcg'.T1start'.T1expire'}_Kag'.{C.T1'}_Kcg')
		4. State=2 / RCV(U.{U.C.S.Kcs'.T2start'.T2expire'}_Kgs'.{S.Kcs'.T2start'.T2expire'.N2}_Kcs') =|> State':=3 / secret(Kcs',sec_1,{}) / T2':=new() / SND({U.C.S.Kcs'.T2start'.T2expire'}_Kgs'.{C.T2'}_Kcs')
		6. State=3 / RCV({T2}_Kcs) =|> State':=4 / secret(Kcs',sec_1,{})
end role

role role_S(S:agent,G:agent,Kgs:symmetric_key,SND,RCV:channel(dy))
played_by S
def=
	local
		State:nat,C:agent,T2expire:text,U:agent,T2start:text,Kcs:symmetric_key,T2:text
	init
		State := 0
	transition
		5. State=0 / RCV({U'.C'.S.Kcs'.T2start'.T2expire'}_Kgs.{C'.T2'}_Kcs') =|> State':=1 / secret(Kcs',sec_1,{}) / SND({T2'}_Kcs')
end role

role role_U(U:agent,SND,RCV:channel(dy))
played_by U
def=
	local
		State:nat
	init
		State := 0
	transition
end role

role session1(Ku:public_key,N2:text,N1:text,L2:text,L1:text,U:agent,C:agent,A:agent,Kag:symmetric_key,S:agent,G:agent,Kgs:symmetric_key)
def=
	local
		SND3,RCV3,SND2,RCV2,SND1,RCV1:channel(dy)
	composition
		role_S(S,G,Kgs,SND3,RCV3) / role_C(A,G,C,S,U,L1,L2,N1,N2,Ku,SND2,RCV2) / role_A(A,G,C,S,Kag,SND1,RCV1)
end role

role environment()
def=
	const
		hash_0:function,const_1:symmetric_key,alice:agent,const_1:agent,const_1:text,const_1:public_key,bob:agent,server:agent,const_1:agent,const_1:symmetric_key,sec_1:protocol_id
	intruder_knowledge = {}
	composition
		session1(const_1,const_1,const_1,const_1,const_1,const_1,bob,alice,const_1,server,const_1,const_1)
end role

goal
	secrecy_of sec_1
end goal

environment() 