%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfiler80ncaqnwT

section signature:

state_cserver: agent * agent * agent * symmetric_key * symmetric_key * hash_func * hash_func * hash_func * nat * text * text * text * text * text * text * text * message * message * message * message * message * message * message * message * message * message * message * message * message * message * message * message * message * message * message * hash_func * nat -> fact
state_smartcard: agent * agent * agent * symmetric_key * symmetric_key * hash_func * hash_func * hash_func * nat * text * text * text * text * text * message * message * hash_func * nat -> fact
state_user: agent * agent * agent * symmetric_key * symmetric_key * hash_func * hash_func * hash_func * nat * text * text * text * text * text * text * message * message * message * message * message * message * message * message * message * message * message * message * message * message * message * message * message * hash_func * nat -> fact


section types:

ASGoal: set(agent)
user_cserver_A, cserver_user_B, user_smartcard, smartcard_cserver, cserver_user, subs1, subs2, subs3, subs4, subs5, subs6, subs7, subs8: protocol_id
dummy_hash, h, mul, add, Inc, H, MUL, ADD: hash_func
skey2, skey1, SKey2, SKey1: symmetric_key
5, SID, 4, Dummy_State, 3, SID2, SID1, State, 2, 1, 0, 13, 12, 11, 9, 8, 7: nat
A2Goal, A1Goal, ui, scg, csj, CSj, Ui, SCG, i: agent
Dummy_Ppub, Dummy_V, Dummy_Lj, Dummy_Yj, Dummy_K2, Dummy_W, Dummy_Kij, Dummy_B, Dummy_Z, Dummy_PKj, Dummy_PKE, Dummy_IDKi, Dummy_Bi, Dummy_Ai, Dummy_Kxy, Dummy_A, Dummy_Fi, dummy_msg, MGoal, Fi, A, Kxy, Kx, Ai, Bi, IDKi, Z, B, C, Kij, W, K2, Yj, Lj, V, AB, Ppub, PKj, start, PKE, Dummy_C, Dummy_AB: message
Dummy_Sj, Dummy_P, Dummy_IDj, Dummy_T1, Dummy_FFi, dummy_nonce, idi, pwi, ffi, idj, pkj, t1, fi, a, kx, ai, bi, idki, z, b, c, kij, w, k2, yj, lj, v, ab, IDi, PWi, FFi, IDj, T1, P, Sj, S, Dummy_IDi: text


section inits:

initial_state init1 := 
 iknows(start).
 iknows(ui).
 iknows(scg).
 iknows(csj).
 iknows(h).
 iknows(mul).
 iknows(add).
 iknows(t1).
 iknows(ai).
 iknows(bi).
 iknows(z).
 iknows(k2).
 iknows(yj).
 iknows(lj).
 iknows(ab).
 iknows(idki).
 iknows(i).
 state_user(scg,ui,csj,skey1,skey2,h,mul,add,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_hash,3).
 state_smartcard(scg,ui,csj,skey1,skey2,h,mul,add,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_hash,4).
 state_cserver(scg,ui,csj,skey1,skey2,h,mul,add,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_hash,5).
 state_user(ui,scg,csj,skey1,skey2,h,mul,add,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_hash,7).
 state_smartcard(ui,scg,csj,skey1,skey2,h,mul,add,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_hash,8).
 state_cserver(ui,scg,csj,skey1,skey2,h,mul,add,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_hash,9).
 state_user(csj,ui,scg,skey1,skey2,h,mul,add,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_hash,11).
 state_smartcard(csj,ui,scg,skey1,skey2,h,mul,add,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_hash,12).
 state_cserver(csj,ui,scg,skey1,skey2,h,mul,add,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_hash,13)


section rules:

step step_0 (Ui,SCG,CSj,SKey1,SKey2,H,MUL,ADD,IDi,PWi,Dummy_FFi,IDj,T1,P,Fi,A,Kxy,Kx,Ai,Bi,IDKi,Z,PKE,B,Kij,W,K2,Yj,Lj,V,PKj,Inc,SID,FFi) :=
 state_user(Ui,SCG,CSj,SKey1,SKey2,H,MUL,ADD,0,IDi,PWi,Dummy_FFi,IDj,T1,P,Fi,A,Kxy,Kx,Ai,Bi,IDKi,Z,PKE,B,Kij,W,K2,Yj,Lj,V,PKj,Inc,SID).
 iknows(start)
=[exists FFi]=>
 state_user(Ui,SCG,CSj,SKey1,SKey2,H,MUL,ADD,1,IDi,PWi,FFi,IDj,T1,P,Fi,A,Kxy,Kx,Ai,Bi,IDKi,Z,PKE,B,Kij,W,K2,Yj,Lj,V,PKj,Inc,SID).
 iknows(scrypt(SKey1,FFi))

step step_1 (Ui,SCG,CSj,SKey1,SKey2,H,MUL,ADD,IDi,PWi,FFi,IDj,Dummy_T1,P,Dummy_Fi,Dummy_A,Dummy_Kxy,Kx,Dummy_Ai,Dummy_Bi,Dummy_IDKi,Z,Dummy_PKE,B,Kij,W,K2,Yj,Lj,V,Dummy_PKj,Inc,SID,T1,A,PKj) :=
 state_user(Ui,SCG,CSj,SKey1,SKey2,H,MUL,ADD,1,IDi,PWi,FFi,IDj,Dummy_T1,P,Dummy_Fi,Dummy_A,Dummy_Kxy,Kx,Dummy_Ai,Dummy_Bi,Dummy_IDKi,Z,Dummy_PKE,B,Kij,W,K2,Yj,Lj,V,Dummy_PKj,Inc,SID).
 iknows(scrypt(SKey2,pair(IDj,PKj)))
=[exists T1,A]=>
 state_user(Ui,SCG,CSj,SKey1,SKey2,H,MUL,ADD,2,IDi,PWi,FFi,IDj,T1,P,apply(H,pair(IDi,pair(PWi,FFi))),A,apply(MUL,pair(A,apply(MUL,pair(Dummy_PKj,P)))),Kx,xor(apply(H,pair(Dummy_PKj,Dummy_T1)),A),xor(FFi,apply(H,pair(IDj,Dummy_T1))),scrypt(Kx,IDi),Z,scrypt(apply(H,pair(IDi,PWi)),pair(IDj,Dummy_PKj)),B,Kij,W,K2,Yj,Lj,V,PKj,Inc,SID).
 iknows(pair(scrypt(Kx,IDi),pair(xor(apply(H,pair(Dummy_PKj,Dummy_T1)),A),pair(xor(FFi,apply(H,pair(IDj,Dummy_T1))),T1))))

step step_2 (Ui,SCG,CSj,SKey1,SKey2,H,MUL,ADD,IDi,PWi,FFi,IDj,T1,P,Fi,A,Kxy,Kx,Ai,Bi,IDKi,Dummy_Z,PKE,Dummy_B,Dummy_Kij,Dummy_W,Dummy_K2,Yj,Lj,V,PKj,Inc,SID,Z,B) :=
 state_user(Ui,SCG,CSj,SKey1,SKey2,H,MUL,ADD,2,IDi,PWi,FFi,IDj,T1,P,Fi,A,Kxy,Kx,Ai,Bi,IDKi,Dummy_Z,PKE,Dummy_B,Dummy_Kij,Dummy_W,Dummy_K2,Yj,Lj,V,PKj,Inc,SID).
 iknows(Z)
=[exists B]=>
 state_user(Ui,SCG,CSj,SKey1,SKey2,H,MUL,ADD,3,IDi,PWi,FFi,IDj,T1,P,Fi,A,Kxy,Kx,Ai,Bi,IDKi,Z,PKE,B,exp(Dummy_Z,B),apply(H,pair(IDi,pair(IDj,pair(exp(Dummy_Z,B),A)))),apply(ADD,pair(apply(MUL,pair(IDi,apply(MUL,pair(B,P)))),apply(MUL,pair(IDi,apply(MUL,pair(apply(H,IDj),apply(MUL,pair(B,P)))))))),Yj,Lj,V,PKj,Inc,SID).
 iknows(pair(apply(ADD,pair(apply(MUL,pair(IDi,apply(MUL,pair(B,P)))),apply(MUL,pair(IDi,apply(MUL,pair(apply(H,IDj),apply(MUL,pair(B,P)))))))),apply(H,pair(IDi,pair(IDj,pair(exp(Dummy_Z,B),A))))))

step step_3 (Ui,SCG,CSj,SKey1,SKey2,H,MUL,ADD,IDi,PWi,FFi,IDj,T1,P,Fi,A,Kxy,Kx,Ai,Bi,IDKi,Z,PKE,B,Kij,W,K2,Dummy_Yj,Dummy_Lj,Dummy_V,PKj,Inc,SID) :=
 state_user(Ui,SCG,CSj,SKey1,SKey2,H,MUL,ADD,3,IDi,PWi,FFi,IDj,T1,P,Fi,A,Kxy,Kx,Ai,Bi,IDKi,Z,PKE,B,Kij,W,K2,Dummy_Yj,Dummy_Lj,Dummy_V,PKj,Inc,SID).
 iknows(Yj)
 =>
 state_user(Ui,SCG,CSj,SKey1,SKey2,H,MUL,ADD,4,IDi,PWi,FFi,IDj,T1,P,Fi,A,Kxy,Kx,Ai,Bi,IDKi,Z,PKE,B,Kij,W,K2,apply(H,pair(IDi,pair(apply(ADD,pair(Lj,apply(MUL,pair(apply(H,IDi),apply(MUL,pair(apply(H,IDj),P)))))),Kij))),Dummy_Lj,apply(ADD,pair(Lj,apply(MUL,pair(apply(H,IDi),apply(MUL,pair(apply(H,IDj),P)))))),PKj,Inc,SID)

step step_4 (SCG,Ui,CSj,SKey1,SKey2,H,MUL,ADD,Dummy_IDj,S,FFi,Dummy_P,Dummy_Sj,Dummy_Ppub,PKj,Inc,SID,IDj,P) :=
 state_smartcard(SCG,Ui,CSj,SKey1,SKey2,H,MUL,ADD,0,Dummy_IDj,S,FFi,Dummy_P,Dummy_Sj,Dummy_Ppub,PKj,Inc,SID).
 iknows(scrypt(SKey1,IDj))
=[exists P]=>
 state_smartcard(SCG,Ui,CSj,SKey1,SKey2,H,MUL,ADD,1,IDj,S,FFi,P,apply(MUL,pair(inv(apply(ADD,pair(S,IDj))),Dummy_P)),apply(MUL,pair(S,Dummy_P)),PKj,Inc,SID).
 iknows(scrypt(SKey1,apply(MUL,pair(inv(apply(ADD,pair(S,IDj))),Dummy_P))))

step step_5 (SCG,Ui,CSj,SKey1,SKey2,H,MUL,ADD,IDj,S,Dummy_FFi,P,Sj,Ppub,Dummy_PKj,Inc,SID,FFi) :=
 state_smartcard(SCG,Ui,CSj,SKey1,SKey2,H,MUL,ADD,1,IDj,S,Dummy_FFi,P,Sj,Ppub,Dummy_PKj,Inc,SID).
 iknows(scrypt(SKey1,FFi))
 =>
 state_smartcard(SCG,Ui,CSj,SKey1,SKey2,H,MUL,ADD,2,IDj,S,FFi,P,Sj,Ppub,apply(H,pair(Sj,Dummy_FFi)),Inc,SID).
 iknows(scrypt(SKey2,pair(IDj,apply(H,pair(Sj,Dummy_FFi)))))

step step_6 (CSj,Ui,SCG,SKey1,SKey2,H,MUL,ADD,IDi,PWi,FFi,Dummy_IDj,T1,P,Sj,Fi,A,Kxy,Kx,Ai,Bi,IDKi,Z,B,C,Kij,W,K2,Yj,Lj,V,AB,Ppub,PKj,Inc,SID,IDj) :=
 state_cserver(CSj,Ui,SCG,SKey1,SKey2,H,MUL,ADD,0,IDi,PWi,FFi,Dummy_IDj,T1,P,Sj,Fi,A,Kxy,Kx,Ai,Bi,IDKi,Z,B,C,Kij,W,K2,Yj,Lj,V,AB,Ppub,PKj,Inc,SID).
 iknows(start)
=[exists IDj]=>
 state_cserver(CSj,Ui,SCG,SKey1,SKey2,H,MUL,ADD,1,IDi,PWi,FFi,IDj,T1,P,Sj,Fi,A,Kxy,Kx,Ai,Bi,IDKi,Z,B,C,Kij,W,K2,Yj,Lj,V,AB,Ppub,PKj,Inc,SID).
 iknows(scrypt(SKey1,IDj)).
 iknows(scrypt(SKey1,Sj))

step step_7 (CSj,Ui,SCG,SKey1,SKey2,H,MUL,ADD,Dummy_IDi,PWi,Dummy_FFi,IDj,Dummy_T1,P,Sj,Fi,Dummy_A,Dummy_Kxy,Kx,Dummy_Ai,Dummy_Bi,Dummy_IDKi,Dummy_Z,B,C,Kij,W,K2,Yj,Lj,V,Dummy_AB,Ppub,Dummy_PKj,Inc,SID,T1,Ai,Bi,IDKi) :=
 state_cserver(CSj,Ui,SCG,SKey1,SKey2,H,MUL,ADD,1,Dummy_IDi,PWi,Dummy_FFi,IDj,Dummy_T1,P,Sj,Fi,Dummy_A,Dummy_Kxy,Kx,Dummy_Ai,Dummy_Bi,Dummy_IDKi,Dummy_Z,B,C,Kij,W,K2,Yj,Lj,V,Dummy_AB,Ppub,Dummy_PKj,Inc,SID).
 iknows(pair(IDKi,pair(Ai,pair(Bi,T1))))
 =>
 state_cserver(CSj,Ui,SCG,SKey1,SKey2,H,MUL,ADD,2,scrypt(Kx,Dummy_IDKi),PWi,xor(Dummy_Bi,apply(H,pair(IDj,Dummy_T1))),IDj,T1,P,Sj,Fi,xor(Dummy_Ai,Dummy_PKj),apply(MUL,pair(xor(Dummy_Ai,Dummy_PKj),apply(MUL,pair(apply(H,pair(Sj,xor(Dummy_Bi,apply(H,pair(IDj,Dummy_T1))))),P)))),Kx,Ai,Bi,IDKi,exp(apply(MUL,pair(P,P)),apply(MUL,pair(scrypt(Kx,Dummy_IDKi),xor(Dummy_Ai,Dummy_PKj)))),B,C,Kij,W,K2,Yj,Lj,V,apply(MUL,pair(P,P)),Ppub,apply(H,pair(Sj,xor(Dummy_Bi,apply(H,pair(IDj,Dummy_T1))))),Inc,SID).
 iknows(exp(apply(MUL,pair(P,P)),apply(MUL,pair(scrypt(Kx,Dummy_IDKi),xor(Dummy_Ai,Dummy_PKj)))))

step step_8 (CSj,Ui,SCG,SKey1,SKey2,H,MUL,ADD,IDi,PWi,FFi,IDj,T1,P,Sj,Fi,A,Kxy,Kx,Ai,Bi,IDKi,Z,B,Dummy_C,Dummy_Kij,Dummy_W,Dummy_K2,Dummy_Yj,Dummy_Lj,V,AB,Ppub,PKj,Inc,SID,C,W,K2) :=
 state_cserver(CSj,Ui,SCG,SKey1,SKey2,H,MUL,ADD,2,IDi,PWi,FFi,IDj,T1,P,Sj,Fi,A,Kxy,Kx,Ai,Bi,IDKi,Z,B,Dummy_C,Dummy_Kij,Dummy_W,Dummy_K2,Dummy_Yj,Dummy_Lj,V,AB,Ppub,PKj,Inc,SID).
 iknows(pair(K2,W))
=[exists C]=>
 state_cserver(CSj,Ui,SCG,SKey1,SKey2,H,MUL,ADD,3,IDi,PWi,FFi,IDj,T1,P,Sj,Fi,A,Kxy,Kx,Ai,Bi,IDKi,Z,B,C,exp(apply(MUL,pair(Dummy_K2,Sj))),W,K2,apply(H,pair(IDi,pair(apply(MUL,pair(C,Ppub)),exp(apply(MUL,pair(Dummy_K2,Sj)))))),apply(ADD,pair(apply(MUL,pair(C,Ppub)),apply(MUL,pair(apply(H,IDi),apply(MUL,pair(apply(H,IDj),P)))))),V,AB,Ppub,PKj,Inc,SID).
 iknows(apply(H,pair(IDi,pair(apply(MUL,pair(C,Ppub)),exp(apply(MUL,pair(Dummy_K2,Sj)))))))


section properties:

property secrecy_of_subs1 (MGoal,ASGoal) :=
 [] ((secret(MGoal,subs1,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_subs2 (MGoal,ASGoal) :=
 [] ((secret(MGoal,subs2,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_subs3 (MGoal,ASGoal) :=
 [] ((secret(MGoal,subs3,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_subs4 (MGoal,ASGoal) :=
 [] ((secret(MGoal,subs4,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_subs5 (MGoal,ASGoal) :=
 [] ((secret(MGoal,subs5,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_subs6 (MGoal,ASGoal) :=
 [] ((secret(MGoal,subs6,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_subs7 (MGoal,ASGoal) :=
 [] ((secret(MGoal,subs7,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property authentication_on_user_cserver_A (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,user_cserver_A,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,user_cserver_A,MGoal))
     /\ ((request(A1Goal,A2Goal,user_cserver_A,MGoal,SID1)
           /\ request(A1Goal,A2Goal,user_cserver_A,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_cserver_user_B (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,cserver_user_B,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,cserver_user_B,MGoal))
     /\ ((request(A1Goal,A2Goal,cserver_user_B,MGoal,SID1)
           /\ request(A1Goal,A2Goal,cserver_user_B,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state secrecy_of_subs1 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,subs1,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_subs2 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,subs2,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_subs3 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,subs3,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_subs4 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,subs4,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_subs5 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,subs5,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_subs6 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,subs6,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_subs7 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,subs7,ASGoal) &
 not(contains(i,ASGoal))

attack_state authentication_on_user_cserver_A (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,user_cserver_A,MGoal,SID) &
 not(witness(A2Goal,A1Goal,user_cserver_A,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_user_cserver_A (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,user_cserver_A,MGoal,SID1).
 request(A1Goal,A2Goal,user_cserver_A,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_cserver_user_B (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,cserver_user_B,MGoal,SID) &
 not(witness(A2Goal,A1Goal,cserver_user_B,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_cserver_user_B (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,cserver_user_B,MGoal,SID1).
 request(A1Goal,A2Goal,cserver_user_B,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

