%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfilevN3s6Y

section signature:

state_board: agent * agent * agent * public_key * public_key * public_key * hash_func * nat * nat * nat * nat * crypt(public_key,crypt(inv(public_key),pair(text,text))) * crypt(public_key,crypt(inv(public_key),pair(text,text))) * pair(crypt(public_key,crypt(inv(public_key),pair(text,text))),crypt(public_key,crypt(inv(public_key),pair(text,text)))) * hash_func * crypt(inv(public_key),hash_func) * nat -> fact
state_user: agent * agent * agent * public_key * public_key * public_key * hash_func * nat * nat * nat * nat * text * crypt(public_key,crypt(inv(public_key),pair(text,text))) * crypt(public_key,crypt(inv(public_key),pair(text,text))) * pair(crypt(public_key,crypt(inv(public_key),pair(text,text))),crypt(public_key,crypt(inv(public_key),pair(text,text)))) * crypt(inv(public_key),hash_func) * nat -> fact


section types:

ASGoal: set(agent)
uhoa, nuh, nub, nuhb, uh_nuh, uh_nuhb, ub_nub, ub_nuhb, hu_nuh, bh_nuhb: protocol_id
MGoal, start: message
Sig: crypt(inv(public_key),hash_func)
dummy_hash, hf, Hr, Hash: hash_func
dummy_pk, ku, kh, kb, ki, Ku, Kh, Kb: public_key
Ra, Dummy_Ra: pair(crypt(public_key,crypt(inv(public_key),pair(text,text))),crypt(public_key,crypt(inv(public_key),pair(text,text))))
Rb, Rh, Dummy_Rb, Dummy_Rh: crypt(public_key,crypt(inv(public_key),pair(text,text)))
dummy_nonce, Uhoa, Dummy_Uhoa: text
A2Goal, A1Goal, u, h, b, U, H, B, i: agent
SID, dummy_nat, SID2, SID1, 2, Nuhb, Nub, Nbh, State, 3, 1, Nuh, 13, 9, 7, 6, 4, Dummy_Nuhb, Dummy_Nub, Dummy_Nuh, Dummy_State: nat


section inits:

initial_state init1 := 
 iknows(start).
 iknows(u).
 iknows(h).
 iknows(b).
 iknows(hf).
 iknows(ku).
 iknows(kh).
 iknows(kb).
 iknows(ki).
 iknows(inv(ki)).
 iknows(i).
 state_user(u,h,b,ku,kh,kb,hf,1,dummy_nat,dummy_nat,dummy_nat,dummy_nonce,crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce))),pair(crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce)))),crypt(inv(dummy_pk),dummy_hash),3).
 state_board(b,u,h,ku,kh,kb,hf,2,dummy_nat,dummy_nat,dummy_nat,crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce))),pair(crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce)))),dummy_hash,crypt(inv(dummy_pk),dummy_hash),4).
 state_user(u,i,b,ku,ki,kb,hf,1,dummy_nat,dummy_nat,dummy_nat,dummy_nonce,crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce))),pair(crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce)))),crypt(inv(dummy_pk),dummy_hash),6).
 state_board(b,u,i,ku,ki,kb,hf,2,dummy_nat,dummy_nat,dummy_nat,crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce))),pair(crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce)))),dummy_hash,crypt(inv(dummy_pk),dummy_hash),7).
 state_user(u,h,i,ku,kh,ki,hf,1,dummy_nat,dummy_nat,dummy_nat,dummy_nonce,crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce))),pair(crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce)))),crypt(inv(dummy_pk),dummy_hash),9).
 state_board(b,i,h,ki,kh,kb,hf,2,dummy_nat,dummy_nat,dummy_nat,crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce))),pair(crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce)))),dummy_hash,crypt(inv(dummy_pk),dummy_hash),13)


section rules:

step step_0 (U,H,B,Ku,Kh,Kb,Hash,Dummy_Nuh,Dummy_Nub,Dummy_Nuhb,Dummy_Uhoa,Dummy_Rh,Dummy_Rb,Dummy_Ra,Sig,SID,Nuh,Nub,Nuhb,Uhoa) :=
 state_user(U,H,B,Ku,Kh,Kb,Hash,1,Dummy_Nuh,Dummy_Nub,Dummy_Nuhb,Dummy_Uhoa,Dummy_Rh,Dummy_Rb,Dummy_Ra,Sig,SID).
 iknows(start)
=[exists Nuhb,Nub,Nuh,Uhoa]=>
 state_user(U,H,B,Ku,Kh,Kb,Hash,3,Nuh,Nub,Nuhb,Uhoa,crypt(Kh,crypt(inv(Ku),pair(Uhoa,Nuh))),crypt(Kb,crypt(inv(Ku),pair(Nuhb,Nub))),pair(crypt(Kh,crypt(inv(Ku),pair(Uhoa,Nuh))),crypt(Kb,crypt(inv(Ku),pair(Nuhb,Nub)))),Sig,SID).
 iknows(pair(crypt(Kh,crypt(inv(Ku),pair(Uhoa,Nuh))),crypt(Kb,crypt(inv(Ku),pair(Nuhb,Nub)))))


section properties:

property secrecy_of_uhoa (MGoal,ASGoal) :=
 [] ((secret(MGoal,uhoa,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_nuh (MGoal,ASGoal) :=
 [] ((secret(MGoal,nuh,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_nub (MGoal,ASGoal) :=
 [] ((secret(MGoal,nub,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_nuhb (MGoal,ASGoal) :=
 [] ((secret(MGoal,nuhb,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property authentication_on_uh_nuh (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,uh_nuh,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,uh_nuh,MGoal))
     /\ ((request(A1Goal,A2Goal,uh_nuh,MGoal,SID1)
           /\ request(A1Goal,A2Goal,uh_nuh,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_uh_nuhb (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,uh_nuhb,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,uh_nuhb,MGoal))
     /\ ((request(A1Goal,A2Goal,uh_nuhb,MGoal,SID1)
           /\ request(A1Goal,A2Goal,uh_nuhb,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_ub_nub (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,ub_nub,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,ub_nub,MGoal))
     /\ ((request(A1Goal,A2Goal,ub_nub,MGoal,SID1)
           /\ request(A1Goal,A2Goal,ub_nub,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_ub_nuhb (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,ub_nuhb,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,ub_nuhb,MGoal))
     /\ ((request(A1Goal,A2Goal,ub_nuhb,MGoal,SID1)
           /\ request(A1Goal,A2Goal,ub_nuhb,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_bh_nuhb (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,bh_nuhb,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,bh_nuhb,MGoal))
     /\ ((request(A1Goal,A2Goal,bh_nuhb,MGoal,SID1)
           /\ request(A1Goal,A2Goal,bh_nuhb,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_hu_nuh (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,hu_nuh,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,hu_nuh,MGoal))
     /\ ((request(A1Goal,A2Goal,hu_nuh,MGoal,SID1)
           /\ request(A1Goal,A2Goal,hu_nuh,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state secrecy_of_uhoa (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,uhoa,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_nuh (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,nuh,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_nub (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,nub,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_nuhb (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,nuhb,ASGoal) &
 not(contains(i,ASGoal))

attack_state authentication_on_uh_nuh (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,uh_nuh,MGoal,SID) &
 not(witness(A2Goal,A1Goal,uh_nuh,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_uh_nuh (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,uh_nuh,MGoal,SID1).
 request(A1Goal,A2Goal,uh_nuh,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_uh_nuhb (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,uh_nuhb,MGoal,SID) &
 not(witness(A2Goal,A1Goal,uh_nuhb,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_uh_nuhb (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,uh_nuhb,MGoal,SID1).
 request(A1Goal,A2Goal,uh_nuhb,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_ub_nub (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,ub_nub,MGoal,SID) &
 not(witness(A2Goal,A1Goal,ub_nub,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_ub_nub (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,ub_nub,MGoal,SID1).
 request(A1Goal,A2Goal,ub_nub,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_ub_nuhb (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,ub_nuhb,MGoal,SID) &
 not(witness(A2Goal,A1Goal,ub_nuhb,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_ub_nuhb (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,ub_nuhb,MGoal,SID1).
 request(A1Goal,A2Goal,ub_nuhb,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_bh_nuhb (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,bh_nuhb,MGoal,SID) &
 not(witness(A2Goal,A1Goal,bh_nuhb,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_bh_nuhb (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,bh_nuhb,MGoal,SID1).
 request(A1Goal,A2Goal,bh_nuhb,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_hu_nuh (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,hu_nuh,MGoal,SID) &
 not(witness(A2Goal,A1Goal,hu_nuh,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_hu_nuh (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,hu_nuh,MGoal,SID1).
 request(A1Goal,A2Goal,hu_nuh,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

