%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfileg1nmaW

section signature:

state_bob: agent * agent * agent * text * nat * text * text * text * text * text * text * text * text * hash_func * text * text * text * text * text * text * text * set(agent) * nat -> fact
state_serveur: agent * agent * agent * text * nat * text * text * text * nat -> fact
state_alice: agent * agent * agent * text * nat * text * text * text * text * text * text * text * text * hash_func * text * text * text * text * text * text * text * set(agent) * nat -> fact


section types:

MGoal, start: message
sec_KB, sk2, sec_KA, sk1: protocol_id
ASGoal, Set_82, Set_42, Dummy_Set_82, Dummy_Set_42: set(agent)
H, dummy_hash: hash_func
g, KAB, Comp1, Comp2, H1, H2, H3, H4, N1, N2, YB, YA, XB, SA1, SA2, SA3, G, pb, IDA, IDB, idi, idr, pa, Dummy_XB, Dummy_YB, Dummy_KAB, Dummy_SA3, Dummy_Comp2, Dummy_Comp1, Dummy_H4, XA, Dummy_H3, Dummy_H2, Dummy_H1, Dummy_XA, Dummy_YA, Dummy_N2, Dummy_N1, Dummy_SA2, Dummy_SA1, dummy_nonce: text
A2Goal, A1Goal, a, b, s, A, B, S, i: agent
set_134, set_131, set_125, set_102: set
State, 6, 5, 4, 3, 2, 1, 9, 0, 8, 7, SID, Dummy_State: nat


section inits:

initial_state init1 := 
 iknows(start).
 iknows(a).
 iknows(b).
 iknows(s).
 iknows(i).
 state_alice(a,b,s,g,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_hash,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_102,3).
 state_serveur(s,a,b,g,0,dummy_nonce,dummy_nonce,dummy_nonce,4).
 state_bob(b,a,s,g,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_hash,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_125,5).
 state_alice(a,b,s,g,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_hash,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_131,7).
 state_serveur(s,a,b,g,0,dummy_nonce,dummy_nonce,dummy_nonce,8).
 state_bob(b,a,s,g,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_hash,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_134,9)


section rules:

step step_0 (A,B,S,G,N1,N2,YA,YB,XA,Dummy_SA1,SA2,SA3,H,H1,H2,H3,H4,Comp1,Comp2,KAB,Set_42,SID,SA1) :=
 state_alice(A,B,S,G,0,N1,N2,YA,YB,XA,Dummy_SA1,SA2,SA3,H,H1,H2,H3,H4,Comp1,Comp2,KAB,Set_42,SID).
 iknows(start)
=[exists SA1]=>
 state_alice(A,B,S,G,1,N1,N2,YA,YB,XA,SA1,SA2,SA3,H,H1,H2,H3,H4,Comp1,Comp2,KAB,Set_42,SID).
 iknows(SA1)

step step_1 (A,B,S,G,N1,N2,YA,YB,XA,SA1,Dummy_SA2,SA3,H,H1,H2,H3,H4,Comp1,Comp2,KAB,Set_42,SID,SA2) :=
 state_alice(A,B,S,G,1,N1,N2,YA,YB,XA,SA1,Dummy_SA2,SA3,H,H1,H2,H3,H4,Comp1,Comp2,KAB,Set_42,SID).
 iknows(SA2)
 =>
 state_alice(A,B,S,G,2,N1,N2,YA,YB,XA,SA1,SA2,SA3,H,H1,H2,H3,H4,Comp1,Comp2,KAB,Set_42,SID).
 iknows(pair(idi,idr))

step step_2 (A,B,S,G,Dummy_N1,Dummy_N2,Dummy_YA,YB,Dummy_XA,SA1,SA2,SA3,H,Dummy_H1,Dummy_H2,H3,H4,Comp1,Comp2,KAB,Set_42,SID,N1,XA) :=
 state_alice(A,B,S,G,2,Dummy_N1,Dummy_N2,Dummy_YA,YB,Dummy_XA,SA1,SA2,SA3,H,Dummy_H1,Dummy_H2,H3,H4,Comp1,Comp2,KAB,Set_42,SID).
 iknows(xor(N1,pa))
=[exists XA]=>
 state_alice(A,B,S,G,3,N1,xor(xor(N1,pa),pa),exp(G,XA),YB,XA,SA1,SA2,SA3,H,apply(H,pair(exp(G,XA),xor(xor(N1,pa),pa))),apply(H,pair(SA2,xor(xor(N1,pa),pa))),H3,H4,Comp1,Comp2,KAB,Set_42,SID).
 iknows(pair(exp(G,XA),pair(Dummy_H1,Dummy_H2))).
 witness(A,S,sk1,N1)

step step_3 (A,B,S,G,N1,N2,YA,YB,XA,SA1,SA2,SA3,H,H1,H2,Dummy_H3,Dummy_H4,Dummy_Comp1,Dummy_Comp2,KAB,Set_42,SID,H3,H4) :=
 state_alice(A,B,S,G,3,N1,N2,YA,YB,XA,SA1,SA2,SA3,H,H1,H2,Dummy_H3,Dummy_H4,Dummy_Comp1,Dummy_Comp2,KAB,Set_42,SID).
 iknows(pair(YB,pair(H3,H4)))
 =>
 state_alice(A,B,S,G,4,N1,N2,YA,YB,XA,SA1,SA2,SA3,H,H1,H2,H3,H4,apply(H,pair(YB,N2)),apply(H,pair(SA1,N2)),KAB,Set_42,SID)

step step_4 (A,B,S,G,N1,N2,YA,YB,XA,SA1,SA2,Dummy_SA3,H,H1,H2,H3,H4,Dummy_KAB,Set_42,SID,SA3) :=
 state_alice(A,B,S,G,4,N1,N2,YA,YB,XA,SA1,SA2,Dummy_SA3,H,H1,H2,H3,H4,H3,H4,Dummy_KAB,Set_42,SID)
=[exists SA3]=>
 state_alice(A,B,S,G,5,N1,N2,YA,YB,XA,SA1,SA2,SA3,H,H1,H2,H3,H4,H3,H4,exp(YA,YB),Set_42,SID).
 iknows(scrypt(exp(YA,YB),pair(SA3,apply(H,SA3))))

step step_5 (A,B,S,G,N1,N2,YA,YB,XA,SA1,SA2,SA3,H,H1,H2,H3,H4,Comp1,Comp2,KAB,Dummy_Set_42,SID) :=
 state_alice(A,B,S,G,5,N1,N2,YA,YB,XA,SA1,SA2,SA3,H,H1,H2,H3,H4,Comp1,Comp2,KAB,Dummy_Set_42,SID).
 iknows(scrypt(KAB,pair(SA3,apply(H,SA3))))
 =>
 state_alice(A,B,S,G,6,N1,N2,YA,YB,XA,SA1,SA2,SA3,H,H1,H2,H3,H4,Comp1,Comp2,KAB,Dummy_Set_42,SID).
 secret(KAB,sec_KA,Dummy_Set_42).
 contains(A,Dummy_Set_42).
 contains(B,Dummy_Set_42)

step step_6 (S,A,B,G,IDA,IDB,Dummy_N1,SID,N1) :=
 state_serveur(S,A,B,G,0,IDA,IDB,Dummy_N1,SID).
 iknows(pair(IDA,IDB))
=[exists N1]=>
 state_serveur(S,A,B,G,1,IDA,IDB,N1,SID).
 iknows(xor(N1,pa)).
 iknows(xor(N1,pb)).
 witness(S,A,sk1,Dummy_N1).
 witness(S,B,sk2,Dummy_N1)

step step_7 (B,A,S,G,N1,N2,YB,YA,XB,Dummy_SA1,Dummy_SA2,SA3,H,H1,H2,H3,H4,Comp1,Comp2,KAB,Set_82,SID,SA1,SA2) :=
 state_bob(B,A,S,G,0,N1,N2,YB,YA,XB,Dummy_SA1,Dummy_SA2,SA3,H,H1,H2,H3,H4,Comp1,Comp2,KAB,Set_82,SID).
 iknows(SA1)
=[exists SA2]=>
 state_bob(B,A,S,G,1,N1,N2,YB,YA,XB,SA1,SA2,SA3,H,H1,H2,H3,H4,Comp1,Comp2,KAB,Set_82,SID).
 iknows(Dummy_SA2)

step step_8 (B,A,S,G,Dummy_N1,Dummy_N2,YB,YA,XB,SA1,SA2,SA3,H,H1,H2,H3,H4,Comp1,Comp2,KAB,Set_82,SID,N1) :=
 state_bob(B,A,S,G,1,Dummy_N1,Dummy_N2,YB,YA,XB,SA1,SA2,SA3,H,H1,H2,H3,H4,Comp1,Comp2,KAB,Set_82,SID).
 iknows(xor(pair(N1,pb)))
 =>
 state_bob(B,A,S,G,2,N1,xor(xor(N1,pb),pb),YB,YA,XB,SA1,SA2,SA3,H,H1,H2,H3,H4,Comp1,Comp2,KAB,Set_82,SID).
 witness(B,S,sk2,N1)

step step_9 (B,A,S,G,N1,N2,Dummy_YB,Dummy_YA,Dummy_XB,SA1,SA2,SA3,H,Dummy_H1,Dummy_H2,H3,H4,Dummy_Comp1,Dummy_Comp2,KAB,Set_82,SID,YA,XB,H1,H2) :=
 state_bob(B,A,S,G,2,N1,N2,Dummy_YB,Dummy_YA,Dummy_XB,SA1,SA2,SA3,H,Dummy_H1,Dummy_H2,H3,H4,Dummy_Comp1,Dummy_Comp2,KAB,Set_82,SID).
 iknows(pair(YA,pair(H1,H2)))
=[exists XB]=>
 state_bob(B,A,S,G,3,N1,N2,exp(G,XB),YA,XB,SA1,SA2,SA3,H,H1,H2,H3,H4,apply(H,pair(YA,N2)),apply(H,pair(SA2,N2)),KAB,Set_82,SID)

step step_10 (B,A,S,G,N1,N2,YB,YA,XB,SA1,SA2,SA3,H,H1,H2,Dummy_H3,Dummy_H4,Dummy_KAB,Set_82,SID) :=
 state_bob(B,A,S,G,3,N1,N2,YB,YA,XB,SA1,SA2,SA3,H,H1,H2,Dummy_H3,Dummy_H4,H1,H2,Dummy_KAB,Set_82,SID)
 =>
 state_bob(B,A,S,G,4,N1,N2,YB,YA,XB,SA1,SA2,SA3,H,H1,H2,apply(H,pair(YB,N2)),apply(H,pair(SA1,N2)),H1,H2,exp(YB,YA),Set_82,SID).
 iknows(pair(YB,pair(apply(H,pair(YB,N2)),apply(H,pair(SA1,N2)))))

step step_11 (B,A,S,G,N1,N2,YB,YA,XB,SA1,SA2,Dummy_SA3,H,H1,H2,H3,H4,Comp1,Comp2,KAB,Dummy_Set_82,SID,SA3) :=
 state_bob(B,A,S,G,4,N1,N2,YB,YA,XB,SA1,SA2,Dummy_SA3,H,H1,H2,H3,H4,Comp1,Comp2,KAB,Dummy_Set_82,SID).
 iknows(scrypt(KAB,pair(SA3,apply(H,SA3))))
 =>
 state_bob(B,A,S,G,5,N1,N2,YB,YA,XB,SA1,SA2,SA3,H,H1,H2,H3,H4,Comp1,Comp2,KAB,Dummy_Set_82,SID).
 iknows(scrypt(KAB,pair(Dummy_SA3,apply(H,Dummy_SA3)))).
 secret(KAB,sec_KA,Dummy_Set_82).
 contains(A,Dummy_Set_82).
 contains(B,Dummy_Set_82)


section properties:

property secrecy_of_sec_KB (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_KB,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_sec_KA (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_KA,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property weak_authentication_on_sk1 (A1Goal,A2Goal,MGoal,SID) :=
 [] ((wrequest(A1Goal,A2Goal,sk1,MGoal,SID)
      /\ ~ equal(A2Goal,i))
     => witness(A2Goal,A1Goal,sk1,MGoal))

property weak_authentication_on_sk2 (A1Goal,A2Goal,MGoal,SID) :=
 [] ((wrequest(A1Goal,A2Goal,sk2,MGoal,SID)
      /\ ~ equal(A2Goal,i))
     => witness(A2Goal,A1Goal,sk2,MGoal))


section attack_states:

attack_state secrecy_of_sec_KB (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_KB,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_sec_KA (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_KA,ASGoal) &
 not(contains(i,ASGoal))

attack_state weak_authentication_on_sk1 (A1Goal,A2Goal,MGoal,SID) :=
 wrequest(A1Goal,A2Goal,sk1,MGoal,SID) &
 not(witness(A2Goal,A1Goal,sk1,MGoal)) &
 not(equal(A2Goal,i))

attack_state weak_authentication_on_sk2 (A1Goal,A2Goal,MGoal,SID) :=
 wrequest(A1Goal,A2Goal,sk2,MGoal,SID) &
 not(witness(A2Goal,A1Goal,sk2,MGoal)) &
 not(equal(A2Goal,i))

