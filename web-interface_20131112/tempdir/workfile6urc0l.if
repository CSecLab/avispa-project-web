%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfile6urc0l

section signature:

state_tag: agent * agent * text * hash_func * nat * text * text * text * set(agent) * set(agent) * nat -> fact
state_reader: agent * text * text * hash_func * nat * text * text * agent * set(agent) * nat -> fact


section types:

Dummy_Set_42, Dummy_Set_40, Dummy_Set_23, ASGoal, Set_42, Set_40, Set_23: set(agent)
uid1, tid, tr, uid2, rt: protocol_id
MGoal, start: message
h, H: hash_func
Dummy_U2, Dummy_Nt, Dummy_Nr, dummy_nonce, u1, u2, Nr, Nt, U2, U1: text
15, 13, 12, 10, 9, 7, 6, 4, SID, Dummy_State, 3, SID2, SID1, 5, 37, State, 36, 34, 33, 31, 30, 28, 27, 2, 25, 1, 0, 24, 22, 21, 19, 18, 16: nat
Dummy_T, dummy_agent, A2Goal, A1Goal, r, t, T, R, i: agent
set_99, set_97, set_96, set_94, set_92, set_91, set_89, set_87, set_86, set_84, set_78, set_77, set_67, set_137, set_136, set_134, set_132, set_131, set_129, set_127, set_126, set_124, set_122, set_121, set_119, set_117, set_116, set_114, set_112, set_111, set_109, set_107, set_106, set_104, set_102, set_101: set


section inits:

initial_state init1 := 
 iknows(start).
 iknows(h).
 iknows(r).
 iknows(i).
 state_reader(r,u1,u2,h,0,dummy_nonce,dummy_nonce,dummy_agent,set_67,3).
 state_tag(t,r,u1,h,1,dummy_nonce,dummy_nonce,dummy_nonce,set_77,set_78,4).
 state_reader(r,u1,u2,h,0,dummy_nonce,dummy_nonce,dummy_agent,set_84,6).
 state_tag(t,r,u1,h,1,dummy_nonce,dummy_nonce,dummy_nonce,set_86,set_87,7).
 state_reader(r,u1,u2,h,0,dummy_nonce,dummy_nonce,dummy_agent,set_89,9).
 state_tag(t,r,u1,h,1,dummy_nonce,dummy_nonce,dummy_nonce,set_91,set_92,10).
 state_reader(r,u1,u2,h,0,dummy_nonce,dummy_nonce,dummy_agent,set_94,12).
 state_tag(t,r,u1,h,1,dummy_nonce,dummy_nonce,dummy_nonce,set_96,set_97,13).
 state_reader(r,u1,u2,h,0,dummy_nonce,dummy_nonce,dummy_agent,set_99,15).
 state_tag(t,r,u1,h,1,dummy_nonce,dummy_nonce,dummy_nonce,set_101,set_102,16).
 state_reader(r,u1,u2,h,0,dummy_nonce,dummy_nonce,dummy_agent,set_104,18).
 state_tag(t,r,u1,h,1,dummy_nonce,dummy_nonce,dummy_nonce,set_106,set_107,19).
 state_reader(r,u1,u2,h,0,dummy_nonce,dummy_nonce,dummy_agent,set_109,21).
 state_tag(t,r,u1,h,1,dummy_nonce,dummy_nonce,dummy_nonce,set_111,set_112,22).
 state_reader(r,u1,u2,h,0,dummy_nonce,dummy_nonce,dummy_agent,set_114,24).
 state_tag(t,r,u1,h,1,dummy_nonce,dummy_nonce,dummy_nonce,set_116,set_117,25).
 state_reader(r,u1,u2,h,0,dummy_nonce,dummy_nonce,dummy_agent,set_119,27).
 state_tag(t,r,u1,h,1,dummy_nonce,dummy_nonce,dummy_nonce,set_121,set_122,28).
 state_reader(r,u1,u2,h,0,dummy_nonce,dummy_nonce,dummy_agent,set_124,30).
 state_tag(t,r,u1,h,1,dummy_nonce,dummy_nonce,dummy_nonce,set_126,set_127,31).
 state_reader(r,u1,u2,h,0,dummy_nonce,dummy_nonce,dummy_agent,set_129,33).
 state_tag(t,r,u1,h,1,dummy_nonce,dummy_nonce,dummy_nonce,set_131,set_132,34).
 state_reader(r,u1,u2,h,0,dummy_nonce,dummy_nonce,dummy_agent,set_134,36).
 state_tag(t,r,u1,h,1,dummy_nonce,dummy_nonce,dummy_nonce,set_136,set_137,37)


section rules:

step step_0 (R,U1,U2,H,Dummy_Nr,Nt,T,Set_23,SID,Nr) :=
 state_reader(R,U1,U2,H,0,Dummy_Nr,Nt,T,Set_23,SID).
 iknows(start)
=[exists Nr]=>
 state_reader(R,U1,U2,H,2,Nr,Nt,T,Set_23,SID).
 iknows(Dummy_Nr)

step step_1 (R,U1,U2,H,Nr,Dummy_Nt,Dummy_T,Dummy_Set_23,SID,Nt,T) :=
 state_reader(R,U1,U2,H,2,Nr,Dummy_Nt,Dummy_T,Dummy_Set_23,SID).
 iknows(pair(Nt,pair(xor(T,apply(H,pair(Nt,pair(Nr,U1)))),apply(H,pair(Nt,pair(Nr,pair(U1,T)))))))
 =>
 state_reader(R,U1,U2,H,4,Nr,Nt,T,Dummy_Set_23,SID).
 request(R,T,rt,U1,SID).
 iknows(pair(U2,apply(H,pair(Nt,pair(Nr,pair(T,U2)))))).
 secret(U2,uid2,Dummy_Set_23).
 witness(R,T,tr,T).
 contains(R,Dummy_Set_23).
 contains(T,Dummy_Set_23)

step step_2 (T,R,U1,H,Dummy_Nr,Dummy_Nt,U2,Dummy_Set_40,Dummy_Set_42,SID,Nr,Nt) :=
 state_tag(T,R,U1,H,1,Dummy_Nr,Dummy_Nt,U2,Dummy_Set_40,Dummy_Set_42,SID).
 iknows(Nr)
=[exists Nt]=>
 state_tag(T,R,U1,H,3,Nr,Nt,U2,Dummy_Set_40,Dummy_Set_42,SID).
 iknows(pair(Nt,pair(xor(T,apply(H,pair(Nt,pair(Nr,U1)))),apply(H,pair(Nt,pair(Nr,pair(U1,T))))))).
 witness(T,R,rt,U1).
 secret(T,tid,Dummy_Set_40).
 secret(U1,uid1,Dummy_Set_42).
 contains(T,Dummy_Set_40).
 contains(R,Dummy_Set_40).
 contains(T,Dummy_Set_42).
 contains(R,Dummy_Set_42)

step step_3 (T,R,U1,H,Nr,Nt,Dummy_U2,Set_40,Set_42,SID,U2) :=
 state_tag(T,R,U1,H,3,Nr,Nt,Dummy_U2,Set_40,Set_42,SID).
 iknows(pair(U2,apply(H,pair(Nt,pair(Nr,pair(T,U2))))))
 =>
 state_tag(T,R,U1,H,5,Nr,Nt,U2,Set_40,Set_42,SID).
 request(T,R,tr,T,SID)


section properties:

property secrecy_of_uid1 (MGoal,ASGoal) :=
 [] ((secret(MGoal,uid1,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_uid2 (MGoal,ASGoal) :=
 [] ((secret(MGoal,uid2,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_tid (MGoal,ASGoal) :=
 [] ((secret(MGoal,tid,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property authentication_on_tr (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,tr,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,tr,MGoal))
     /\ ((request(A1Goal,A2Goal,tr,MGoal,SID1)
           /\ request(A1Goal,A2Goal,tr,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_rt (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,rt,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,rt,MGoal))
     /\ ((request(A1Goal,A2Goal,rt,MGoal,SID1)
           /\ request(A1Goal,A2Goal,rt,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state secrecy_of_uid1 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,uid1,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_uid2 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,uid2,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_tid (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,tid,ASGoal) &
 not(contains(i,ASGoal))

attack_state authentication_on_tr (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,tr,MGoal,SID) &
 not(witness(A2Goal,A1Goal,tr,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_tr (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,tr,MGoal,SID1).
 request(A1Goal,A2Goal,tr,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_rt (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,rt,MGoal,SID) &
 not(witness(A2Goal,A1Goal,rt,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_rt (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,rt,MGoal,SID1).
 request(A1Goal,A2Goal,rt,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

