%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfilejvB78p

section signature:

state_bob: agent * agent * agent * hash_func * hash_func * nat * text * text * text * text * text * text * text * message * message * message * message * message * message * message * message * hash_func * set(text) * set(agent) * nat -> fact
state_server: agent * agent * agent * hash_func * hash_func * nat * text * text * text * text * text * text * text * message * message * message * message * message * message * message * message * message * message * hash_func * set(text) * set(agent) * nat -> fact
state_alice: agent * agent * agent * hash_func * hash_func * nat * text * text * text * text * text * text * text * message * message * message * message * message * message * message * message * hash_func * set(text) * set(agent) * nat -> fact


section types:

server_bob, alice_bob, alice_server, subs1, subs2, subs3: protocol_id
DB, UB, IDA, IDB, RBB, Q, US, Dummy_RBB, Dummy_UB, Dummy_DB, Dummy_US, DS, Dummy_RAA, UA, Dummy_UA, Dummy_DA, dummy_nonce, ida, idb, ua, ub, da, db, ra, rb, ds, us, cas, cbs, csa, csb, kaa, kbb, ha, DA, hb, ka, kb, raa, RAA, rbb: text
Dummy_Set_109, Dummy_Set_70, Set_70, Dummy_Set_39, Set_39, ASGoal, Set_109: set(agent)
Dummy_Set_108, Dummy_Set_69, Set_69, Dummy_Set_38, Set_38, Set_108: set(text)
H, Mul, Inc, dummy_hash, h, mul: hash_func
11, 9, 8, State, 7, 5, SID, 4, Dummy_State, 3, SID2, SID1, 2, 1, 0, 13, 12: nat
B, S, A, A2Goal, A1Goal, a, s, b, i: agent
SKA, K, Dummy_CBS, Dummy_HB, Dummy_CSB, Dummy_KBB, Dummy_KAA, Dummy_KB, Dummy_RB, HB, RB, RA, Dummy_K, KB, Dummy_SKA, SKB, Dummy_CSA, KA, KAA, KBB, Dummy_CAS, CSA, Dummy_KA, CSB, Dummy_RA, Dummy_HA, dummy_msg, start, MGoal, HA, CAS, CBS: message
set_200, set_199, set_197, set_196, set_194, set_193, set_191, set_190, set_180, set_179, set_168, set_167, set_148, set_147, set_206, set_205, set_203, set_202: set


section inits:

initial_state init1 := 
 iknows(start).
 iknows(a).
 iknows(s).
 iknows(b).
 iknows(h).
 iknows(mul).
 iknows(cas).
 iknows(cbs).
 iknows(csa).
 iknows(csb).
 iknows(ra).
 iknows(rb).
 iknows(i).
 state_alice(a,s,b,h,mul,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_hash,set_147,set_148,3).
 state_server(a,s,b,h,mul,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_hash,set_167,set_168,4).
 state_bob(a,s,b,h,mul,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_hash,set_179,set_180,5).
 state_alice(s,a,b,h,mul,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_hash,set_190,set_191,7).
 state_server(s,a,b,h,mul,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_hash,set_193,set_194,8).
 state_bob(s,a,b,h,mul,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_hash,set_196,set_197,9).
 state_alice(b,s,a,h,mul,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_hash,set_199,set_200,11).
 state_server(b,s,a,h,mul,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_hash,set_202,set_203,12).
 state_bob(b,s,a,h,mul,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_hash,set_205,set_206,13)


section rules:

step step_0 (A,S,B,H,Mul,Dummy_DA,Dummy_UA,IDA,IDB,Dummy_RAA,Q,US,Dummy_HA,Dummy_RA,RB,Dummy_KA,Dummy_CAS,CSA,SKA,K,Inc,Dummy_Set_38,Dummy_Set_39,SID,DA,RAA) :=
 state_alice(A,S,B,H,Mul,0,Dummy_DA,Dummy_UA,IDA,IDB,Dummy_RAA,Q,US,Dummy_HA,Dummy_RA,RB,Dummy_KA,Dummy_CAS,CSA,SKA,K,Inc,Dummy_Set_38,Dummy_Set_39,SID).
 iknows(start)
=[exists RAA,DA]=>
 state_alice(A,S,B,H,Mul,1,DA,apply(Mul,pair(DA,Q)),IDA,IDB,RAA,Q,US,apply(H,pair(RAA,DA)),apply(Mul,pair(apply(H,pair(RAA,DA)),Q)),RB,apply(Mul,pair(Dummy_DA,US)),apply(H,pair(IDA,pair(IDB,pair(apply(Mul,pair(apply(H,pair(RAA,DA)),Q)),apply(Mul,pair(Dummy_DA,US)))))),CSA,SKA,K,Inc,Dummy_Set_38,Dummy_Set_39,SID).
 iknows(pair(IDA,pair(IDB,pair(apply(Mul,pair(apply(H,pair(RAA,DA)),Q)),apply(H,pair(IDA,pair(IDB,pair(apply(Mul,pair(apply(H,pair(RAA,DA)),Q)),apply(Mul,pair(Dummy_DA,US)))))))))).
 secret(Dummy_Set_38,subs1,Dummy_Set_39).
 contains(DA,Dummy_Set_38).
 contains(A,Dummy_Set_39).
 contains(S,Dummy_Set_39)

step step_1 (A,S,B,H,Mul,DA,UA,IDA,IDB,RAA,Q,US,HA,RA,RB,KA,CAS,Dummy_CSA,Dummy_SKA,Dummy_K,Inc,Set_38,Set_39,SID,CSA) :=
 state_alice(A,S,B,H,Mul,1,DA,UA,IDA,IDB,RAA,Q,US,HA,RA,RB,KA,CAS,Dummy_CSA,Dummy_SKA,Dummy_K,Inc,Set_38,Set_39,SID).
 iknows(pair(RB,CSA))
 =>
 state_alice(A,S,B,H,Mul,2,DA,UA,IDA,IDB,RAA,Q,US,HA,RA,RB,KA,CAS,CSA,apply(H,pair(IDA,pair(IDB,pair(RA,pair(RB,apply(Mul,pair(HA,RB))))))),apply(Mul,pair(HA,RB)),Inc,Set_38,Set_39,SID)

step step_2 (S,A,B,H,Mul,DS,UB,UA,IDA,IDB,Q,Dummy_US,HB,Dummy_RB,Dummy_RA,Dummy_KB,SKB,Dummy_KA,Dummy_KAA,Dummy_KBB,Dummy_CSA,Dummy_CSB,Inc,Dummy_Set_69,Dummy_Set_70,SID,RB,RA,KB,KA) :=
 state_server(S,A,B,H,Mul,0,DS,UB,UA,IDA,IDB,Q,Dummy_US,HB,Dummy_RB,Dummy_RA,Dummy_KB,SKB,Dummy_KA,Dummy_KAA,Dummy_KBB,Dummy_CSA,Dummy_CSB,Inc,Dummy_Set_69,Dummy_Set_70,SID).
 iknows(pair(IDA,pair(IDB,pair(RA,KA)))).
 iknows(pair(IDA,pair(IDB,pair(RB,KB))))
 =>
 state_server(S,A,B,H,Mul,1,DS,UB,UA,IDA,IDB,Q,apply(Mul,pair(DS,Q)),HB,RB,RA,KB,SKB,KA,apply(Mul,pair(DS,UA)),apply(Mul,pair(DS,UB)),apply(H,pair(IDA,pair(IDB,pair(Dummy_RA,pair(Dummy_RB,apply(Mul,pair(DS,UA))))))),apply(H,pair(IDB,pair(IDA,pair(Dummy_RB,pair(Dummy_RA,apply(Mul,pair(DS,UB))))))),Inc,Dummy_Set_69,Dummy_Set_70,SID).
 iknows(pair(Dummy_RB,apply(H,pair(IDA,pair(IDB,pair(Dummy_RA,pair(Dummy_RB,apply(Mul,pair(DS,UA))))))))).
 iknows(pair(Dummy_RA,apply(H,pair(IDB,pair(IDA,pair(Dummy_RB,pair(Dummy_RA,apply(Mul,pair(DS,UB))))))))).
 secret(Dummy_Set_69,subs3,Dummy_Set_70).
 contains(DS,Dummy_Set_69).
 contains(S,Dummy_Set_70)

step step_3 (B,S,A,H,Mul,Dummy_DB,Dummy_UB,IDA,IDB,Dummy_RBB,Q,US,Dummy_HB,Dummy_RB,RA,Dummy_KB,Dummy_CBS,CSB,SKA,K,Inc,Dummy_Set_108,Dummy_Set_109,SID,DB,RBB) :=
 state_bob(B,S,A,H,Mul,0,Dummy_DB,Dummy_UB,IDA,IDB,Dummy_RBB,Q,US,Dummy_HB,Dummy_RB,RA,Dummy_KB,Dummy_CBS,CSB,SKA,K,Inc,Dummy_Set_108,Dummy_Set_109,SID).
 iknows(start)
=[exists RBB,DB]=>
 state_bob(B,S,A,H,Mul,1,DB,apply(Mul,pair(DB,Q)),IDA,IDB,RBB,Q,US,apply(H,pair(RBB,DB)),apply(Mul,pair(apply(H,pair(RBB,DB)),Q)),RA,apply(Mul,pair(Dummy_DB,US)),apply(H,pair(IDB,pair(IDA,pair(apply(Mul,pair(apply(H,pair(RBB,DB)),Q)),apply(Mul,pair(Dummy_DB,US)))))),CSB,SKA,K,Inc,Dummy_Set_108,Dummy_Set_109,SID).
 iknows(pair(IDB,pair(IDA,pair(apply(Mul,pair(apply(H,pair(RBB,DB)),Q)),apply(H,pair(IDB,pair(IDA,pair(apply(Mul,pair(apply(H,pair(RBB,DB)),Q)),apply(Mul,pair(Dummy_DB,US)))))))))).
 secret(Dummy_Set_108,subs2,Dummy_Set_109).
 contains(DB,Dummy_Set_108).
 contains(B,Dummy_Set_109).
 contains(S,Dummy_Set_109)

step step_4 (B,S,A,H,Mul,DB,UB,IDA,IDB,RBB,Q,US,HB,RB,RA,KB,CBS,Dummy_CSB,Dummy_SKA,Dummy_K,Inc,Set_108,Set_109,SID,CSB) :=
 state_bob(B,S,A,H,Mul,1,DB,UB,IDA,IDB,RBB,Q,US,HB,RB,RA,KB,CBS,Dummy_CSB,Dummy_SKA,Dummy_K,Inc,Set_108,Set_109,SID).
 iknows(pair(RA,CSB))
 =>
 state_bob(B,S,A,H,Mul,2,DB,UB,IDA,IDB,RBB,Q,US,HB,RB,RA,KB,CBS,CSB,apply(H,pair(IDA,pair(IDB,pair(RA,pair(RB,apply(Mul,pair(HB,RA))))))),apply(Mul,pair(HB,RA)),Inc,Set_108,Set_109,SID)


section properties:

property secrecy_of_subs1 (MGoal,ASGoal) :=
 [] ((secret(MGoal,subs1,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_subs2 (MGoal,ASGoal) :=
 [] ((secret(MGoal,subs2,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_subs3 (MGoal,ASGoal) :=
 [] ((secret(MGoal,subs3,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property authentication_on_alice_server_raa (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,alice_server_raa,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,alice_server_raa,MGoal))
     /\ ((request(A1Goal,A2Goal,alice_server_raa,MGoal,SID1)
           /\ request(A1Goal,A2Goal,alice_server_raa,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_bob_server_rbb (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,bob_server_rbb,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,bob_server_rbb,MGoal))
     /\ ((request(A1Goal,A2Goal,bob_server_rbb,MGoal,SID1)
           /\ request(A1Goal,A2Goal,bob_server_rbb,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state secrecy_of_subs1 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,subs1,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_subs2 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,subs2,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_subs3 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,subs3,ASGoal) &
 not(contains(i,ASGoal))

attack_state authentication_on_alice_server_raa (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,alice_server_raa,MGoal,SID) &
 not(witness(A2Goal,A1Goal,alice_server_raa,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_alice_server_raa (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,alice_server_raa,MGoal,SID1).
 request(A1Goal,A2Goal,alice_server_raa,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_bob_server_rbb (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,bob_server_rbb,MGoal,SID) &
 not(witness(A2Goal,A1Goal,bob_server_rbb,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_bob_server_rbb (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,bob_server_rbb,MGoal,SID1).
 request(A1Goal,A2Goal,bob_server_rbb,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

