%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfileVCFOMr

section signature:

state_bob: agent * agent * public_key * public_key * nat * text * nat -> fact
state_alice: agent * agent * public_key * public_key * nat * text * nat -> fact


section types:

ASGoal: set(agent)
m, bob_alice_m, alice_bob_m: protocol_id
MGoal, start: message
ka, kb, ki, Ka, Kb: public_key
M, Dummy_M, dummy_nonce: text
1, State, 4, 3, 2, 0, SID, Dummy_State, SID2, SID1: nat
A1Goal, a, b, A, B, i, A2Goal: agent


section inits:

initial_state init1 := 
 iknows(start).
 iknows(a).
 iknows(b).
 iknows(ka).
 iknows(kb).
 iknows(ki).
 iknows(i).
 state_alice(a,b,ka,kb,0,dummy_nonce,3).
 state_bob(b,a,ka,kb,1,dummy_nonce,4)


section rules:

step step_0 (A,B,Ka,Kb,Dummy_M,SID,M) :=
 state_alice(A,B,Ka,Kb,0,Dummy_M,SID).
 iknows(start)
=[exists M]=>
 state_alice(A,B,Ka,Kb,2,M,SID).
 iknows(crypt(Kb,pair(crypt(Kb,M),A)))

step step_1 (A,B,Ka,Kb,Dummy_M,SID,M) :=
 state_alice(A,B,Ka,Kb,3,Dummy_M,SID).
 iknows(crypt(Ka,M))
 =>
 state_alice(A,B,Ka,Kb,4,M,SID).
 request(A,B,alice_bob_m,M,SID)

step step_2 (B,A,Ka,Kb,Dummy_M,SID,M) :=
 state_bob(B,A,Ka,Kb,1,Dummy_M,SID).
 iknows(crypt(Kb,pair(crypt(Kb,M),A)))
 =>
 state_bob(B,A,Ka,Kb,3,M,SID).
 iknows(crypt(Ka,M))


section properties:

property secrecy_of_m (MGoal,ASGoal) :=
 [] ((secret(MGoal,m,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property authentication_on_alice_bob_m (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,alice_bob_m,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,alice_bob_m,MGoal))
     /\ ((request(A1Goal,A2Goal,alice_bob_m,MGoal,SID1)
           /\ request(A1Goal,A2Goal,alice_bob_m,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state secrecy_of_m (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,m,ASGoal) &
 not(contains(i,ASGoal))

attack_state authentication_on_alice_bob_m (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,alice_bob_m,MGoal,SID) &
 not(witness(A2Goal,A1Goal,alice_bob_m,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_alice_bob_m (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,alice_bob_m,MGoal,SID1).
 request(A1Goal,A2Goal,alice_bob_m,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

