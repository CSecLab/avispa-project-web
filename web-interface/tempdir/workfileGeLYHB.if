%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfileGeLYHB

section signature:

state_bob: agent * agent * public_key * public_key * nat * text * text * nat -> fact
state_alice: agent * agent * public_key * public_key * nat * text * text * nat -> fact


section types:

nb, na: protocol_id
ka, kb, ki, Ka, Kb: public_key
Nb, Na, Dummy_Na, dummy_nonce: text
start, MGoal: message
A2Goal, A1Goal, a, b, B, A, i: agent
SID, State, 2, 1, 0, 10, 6, 4, Dummy_State, 3, SID2, SID1: nat


section inits:

initial_state init1 := 
 iknows(start).
 iknows(a).
 iknows(b).
 iknows(ki).
 iknows(i).
 state_alice(a,b,ka,kb,0,dummy_nonce,dummy_nonce,3).
 state_bob(b,a,kb,ka,0,dummy_nonce,dummy_nonce,4).
 state_alice(a,i,ka,ki,0,dummy_nonce,dummy_nonce,6).
 state_bob(b,i,kb,ki,0,dummy_nonce,dummy_nonce,10)


section rules:

step step_0 (A,B,Ka,Kb,Dummy_Na,Nb,SID,Na) :=
 state_alice(A,B,Ka,Kb,0,Dummy_Na,Nb,SID).
 iknows(start)
=[exists Na]=>
 state_alice(A,B,Ka,Kb,1,Na,Nb,SID).
 iknows(crypt(Ka,Na))

step step_1 (A,B,Ka,Kb,Na,Nb,SID) :=
 state_alice(A,B,Ka,Kb,1,Na,Nb,SID).
 iknows(crypt(inv(Kb),Na))
 =>
 state_alice(A,B,Ka,Kb,2,Na,Nb,SID).
 request(A,B,na,Na,SID)

step step_2 (B,A,Ka,Kb,Dummy_Na,Nb,SID,Na) :=
 state_bob(B,A,Ka,Kb,0,Dummy_Na,Nb,SID).
 iknows(crypt(Ka,Na))
 =>
 state_bob(B,A,Ka,Kb,1,Na,Nb,SID).
 iknows(crypt(inv(Kb),Na)).
 witness(B,A,na,Na)


section properties:

property authentication_on_na (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,na,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,na,MGoal))
     /\ ((request(A1Goal,A2Goal,na,MGoal,SID1)
           /\ request(A1Goal,A2Goal,na,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state authentication_on_na (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,na,MGoal,SID) &
 not(witness(A2Goal,A1Goal,na,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_na (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,na,MGoal,SID1).
 request(A1Goal,A2Goal,na,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

