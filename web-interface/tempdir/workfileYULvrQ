%%Initial phase
role useri(U,S,CS: agent,
			Ci, Di,IDi, SIDj, Bee :text ,  
		    Hash : hash_func,
            Snd, Rcv: channel(dy))
played_by U def=

local State : nat, 
		Ni1 ,Fi,Gi,Tsi,Vii,Ni2xNi3,Ni1xNi2xNi3, SharedKey ,BBi,CIDi ,PIDi , Pij: text

	
const    bi : text
	init State := 0
	
transition
	1. State = 0 /\ Rcv(start) =|> 
		State':= 1 /\   Ni1':= new() 
		/\  Tsi' := new() 
		/\ PIDi':= Hash(IDi.Bee) 
		/\  BBi':= xor(Di, Ci) 
		/\ Fi':=xor(BBi' ,Ni1')
		/\ Pij' := Hash(BBi, Hash(Ni1'.SIDj.PIDi'.Tsi)) 
		/\ CIDi' := xor(IDi, Hash(BBi'.Ni1'.Tsi'.00))
		/\ Gi' := xor(Bee, Hash(BBi'.Ni1'.Tsi'.11))
		/\ Snd(Fi'.Pij'.CIDi'.Gi'.PIDi'.Tsi') 
		/\ witness(U,CS,u_s_cs_pij , Pij')
		/\ witness(U,CS,u_cs_pidi , PIDi')
		/\secret(Bee,be,{U,S,CS})
	    /\ secret(Ni1', n1 , {U,S,CS})
		
	2. State = 4 /\ Rcv(ri.vi) =|> 
		State' := 5 
		/\ Ni2xNi3' := xor(ri, Hash(IDi.Ni1.BBi))
		/\ Vii' := Hash(Ni2xNi3')
		/\ request(CS, U, u_s_cs_vi , Vii')
		/\ Ni1xNi2xNi3' := xor(Ni1 , Ni2xNi3')
		/\ SharedKey' := Hash(Ni1xNi2xNi3'.Tsi)
		/\ secret(SharedKey',sharedkey , {U,S,CS})
	 
	

end role

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
role serverj(U, S,CS: agent,
					BSj, SIDj,Dee : text,
					Hash : hash_func,
					Snd, Rcv: channel(dy))
played_by S def=
	local State : nat,	
	Ni2 ,Ji,Ki,Mi, Li,PSIDj, Ni1xNi3,Ni1xNi2xNi3,SharedKey , Qii :text,
	Bi , X, Pid: text
		
		
	const  fi,gi,tsi, cidi ,pidi , pij , pi,qi,ri,vi :text
					
	init State :=1 
transition	
	1. State = 1 /\ Rcv(fi.pij.cidi.gi.pidi.tsi) =|> 
		State' := 2 /\ Ni2':=new() 
		/\  PSIDj' := Hash(SIDj.Dee) 
		/\ Ji' := xor(BSj,Ni2') 
		/\ Ki' := Hash(Ni2'.BSj.pij.tsi)  
		/\ Li' := xor(SIDj, Hash(BSj.Ni2'.tsi.00))
		/\ Mi' := xor(Dee,Hash(BSj.Ni2'.tsi.11)) 
		/\ Snd(fi.pij.cidi.gi.pidi.tsi.Ji'.Ki'.Li'.Mi'.PSIDj')
		/\secret(Dee,de,{U,S,CS}) 
		/\ secret(Ni2', n2 , {U,S,CS})
		/\ witness(S,CS, s_cs_ki, Ki')
		/\ witness(S,CS, s_cs_psidj, PSIDj')
		
	2. State = 3 /\ Rcv(pi.qi.ri.vi) =|>
	   State' := 4 
	   /\ Ni1xNi3' := xor(pi, Hash(SIDj.Ni2.BSj))
	   /\ Qii' := Hash(Ni1xNi3')
	   /\ request(CS, S, cs_s_qi , Qii')
	   /\ Ni1xNi2xNi3' := xor(Ni2 , Ni1xNi3')
	   /\ SharedKey' := Hash(Ni1xNi2xNi3'.tsi)
	   /\ secret(SharedKey',sharedkey , {U,S,CS})
	   /\ Snd(ri.vi) 
end role


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
role controlserver(U, S,CS: agent,
					X,Y : text,
					Hash : hash_func,
					Snd, Rcv: channel(dy))
played_by CS def=
	local State : nat,	
	BBi , Pid, Bee,IDi,BSj, SIDj,Dee,Ni1,Kii,PIDii ,Ni1xNi2xNi3,PSIDjj,SharedKey, Ni2 ,Ni3 , Pij2: text,
	Pi, Qi, Ri, Vi : text
		
		
	const  bee,dee: text,
	fi,gi,tsi,cidi ,pidi , psidj, pij,ji,ki,li,mi :text
					
	init State :=2 
transition	
	1. State = 2 /\ Rcv(fi.pij.cidi.gi.pidi.tsi.ji.ki.li.mi.psidj) =|> 
		State' := 3 
		/\ BSj':= Hash(psidj.Y) 
		/\ Ni2':=xor(ji,BSj') 
		/\ Kii' := Hash(Ni2'.BSj'.pij.tsi)
		/\ 	BBi':= Hash(pidi.X)
		/\ Ni1' := xor(fi,BBi')
		/\ IDi' := xor(cidi, Hash(BBi'.Ni1'.tsi.00))
		/\ SIDj' := xor(li, Hash(BSj'.Ni2'.tsi.00))
		/\ Pij2' := Hash(xor(BBi', Hash(Ni1'.SIDj'.pidi.tsi) ))
		/\ Bee' := xor(gi , Hash(BBi'.Ni1'.tsi.11))
		/\ Dee':= xor(mi,Hash(BSj'.Ni2'.tsi.11))
		/\ PIDii':=Hash(IDi'.Bee') 
		/\ PSIDjj' := Hash(SIDj'.Dee')
		/\ Ni3' := new()
		/\ Pi' := xor(Ni1', xor(Ni3', Hash(SIDj'.Ni2'.BSj')))
		/\ Qi' := Hash(xor(Ni1', Ni3'))
		/\ Ri' := xor(Ni2', xor(Ni3', Hash(IDi'.Ni1'.BBi')))
		/\ Vi' := Hash(xor(Ni2', Ni3'))		
		/\ Snd(Pi'.Qi'.Ri'.Vi')
		/\ secret(Ni3', n3 , {U,S,CS})
		/\ request(U,CS,u_s_cs_pij , Pij2')
		/\ request(S,CS, s_cs_ki, Kii')
		/\ request(U,CS,u_cs_pidi , PIDii')
		/\ request(S,CS, s_cs_psidj, PSIDjj')
		/\ witness(CS, S, cs_s_qi , Qi')
		/\ witness(CS, U, u_s_cs_vi , Vi')
		/\ Ni1xNi2xNi3' := xor(Ni1' , xor(Ni2',Ni3'))
	    /\ SharedKey' := Hash(Ni1xNi2xNi3'.tsi)
	    /\ secret(SharedKey',sharedkey , {U,S,CS})
	

end role

%%%%%%%%%
role session (U, S,CS: agent, Hash : hash_func)
def=
	local Su, Ru , SS,RS , SCS, RCS  : channel(dy),
	 X , Y , BSj, SIDj,Dee , Ai, Di,IDi, Bee :text
	composition 
	controlserver(u,s, cs,X , Y, Hash, SCS, RCS ) /\ serverj(u,s, cs,BSj, SIDj,Dee,Hash, SS, RS) /\ useri( u, s,cs ,Ai, Di,IDi, SIDj, Bee , Hash , Su , Ru )
	
end role
%%%%%%

%%%%%%%%%


role environment() def=
	const 
	u,s, cs:agent,	
	be, de , n1,n2,n3,u_s_cs_pij ,u_cs_pidi, s_cs_ki , s_cs_psidj , cs_s_qi ,u_s_cs_vi , sharedkey: protocol_id,
	ha : hash_func
	
	intruder_knowledge = {u,cs,ha}
	
	composition
		session(u,s, cs,ha) /\ session(i,s,cs,ha)/\ session(u,i,cs,ha)/\ session(u,s,i,ha)

end role
%%%%%%%%%%%%%%%%%%%%%%%
goal

  secrecy_of be ,de , n1,n2,n3
  secrecy_of sharedkey
  authentication_on u_s_cs_pij
  authentication_on s_cs_ki
  authentication_on u_cs_pidi
  authentication_on s_cs_psidj
  authentication_on cs_s_qi
  authentication_on u_s_cs_vi

end goal
%%%%%%%%%%%

environment()
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%Login Phase

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%Authentication Phase