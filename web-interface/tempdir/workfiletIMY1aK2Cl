role role_A(
	A:agent,B:agent,
	H:function,
	Kab,P1ab,P2ab:symmetric_key,
	SND,RCV:channel(dy)
	)
played_by A
def=
	local
		State:nat,
		Offseta,Lengtha,Filtera,Offsetb,Lengthb,Filterb,T1,T2,T3,T4,Sa,Sb,Sessionkey:text
	const
		sa,sb:protocol_id
	init
		State := 0
	transition
		1. State=0 /\ RCV(start) =|> 
				State':=1 /\ Offseta':=new() /\ Lengtha':=new() /\ Filtera':=new() /\ T1':=new() /\ SND(Offseta'.Lengtha'.Filtera'.T1')

		2. State=1 /\ RCV(Offsetb'.Lengthb'.Filterb'.T2'.H(P1ab)) =|> 
				State':=2 /\ Sa':=new() /\ T3':=new() /\ SND({Sa'}_P2ab.T3') /\ secret(Sa',sa,{A,B})

		3. State=2 /\ RCV({Sb'}_P2ab.T4') =|> 
				State':=3 /\ Sessionkey':=H(Sa'.Sb')


end role

role role_B(
	A:agent,B:agent,
	H:function,
	Kab,P1ab,P2ab:symmetric_key,
	SND,RCV:channel(dy)
	)
played_by B
def=
	local
		State:nat,
		Offseta,Lengtha,Filtera,Offsetb,Lengthb,Filterb,T1,T2,T3,T4,Sa,Sb,Sessionkey:text
	const
		sa,sb:protocol_id
	init
		State := 0
	transition
		1. State=0 /\ RCV(Offseta'.Lengtha'.Filtera'.T1') =|> State':=1 /\ Offsetb':=new() /\ Lengthb':=new() /\ Filterb':=new() /\ T2':=new()
									/\ SND(Offsetb'.Lengthb'.Filterb'.T2'.H(P1ab))
		2. State=1 /\ RCV({Sa'}_P2ab.T3') =|> State':=2 /\ Sb':=new() /\ Sessionkey':=H(Sa'.Sb') /\ T4':=new() /\ SND({Sb'}_P2ab.T4') /\ secret(Sb',sb,{A,B})
end role

role session1(A:agent,B:agent,H:function,Kab,P1ab,P2ab:symmetric_key)
def=
	local
		SND2,RCV2,SND1,RCV1:channel(dy)
	composition
		role_A(A,B,H,Kab,P1ab,P2ab,SND1,RCV1) /\ role_B(A,B,H,Kab,P1ab,P2ab,SND2,RCV2)
end role

role environment()
def=
	const
		hash_0:function,alice:agent,bob:agent,h:function,kab,p1ab,p2ab:symmetric_key,sa,sb:protocol_id
	intruder_knowledge = {alice,bob}
	composition
		session1(alice,bob,h,kab,p1ab,p2ab)
end role

goal
	secrecy_of p1ab,p2ab
	secrecy_of sa,sb
	authentication_on p1ab,p2ab
end goal

environment()
