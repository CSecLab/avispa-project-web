%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfilejLI0yR

section signature:

state_mme: agent * agent * symmetric_key * text * text * text * text * hash_func * hash_func * hash_func * text * nat * nat -> fact
state_mtcd: agent * agent * symmetric_key * text * text * text * text * hash_func * hash_func * hash_func * text * nat * nat -> fact


section types:

MGoal, start: message
mme_mtcd, mtcd_mme: protocol_id
4, 0, State, SID, Dummy_State, 3, SID2, 2, SID1, 1: nat
F2, F3, F4, f2, f3, f4: hash_func
Rmme, Sqn, Amf, Rhss, Rg, Dummy_Rmme, dummy_nonce, sqn, amf, rhss, rg: text
GK, gkmm, gkmi, gkim: symmetric_key
MME, MTCD, mme, A2Goal, A1Goal, mtcd, i: agent


section inits:

initial_state init1 := 
 iknows(start).
 iknows(mtcd).
 iknows(mme).
 iknows(f2).
 iknows(f3).
 iknows(f4).
 iknows(i).
 state_mtcd(mtcd,mme,gkmm,sqn,amf,rhss,rg,f2,f3,f4,dummy_nonce,1,3).
 state_mme(mme,mtcd,gkmm,sqn,amf,rhss,rg,f2,f3,f4,dummy_nonce,0,4)


section rules:

step step_0 (MTCD,MME,GK,Sqn,Amf,Rhss,Rg,F2,F3,F4,Rmme,SID) :=
 state_mtcd(MTCD,MME,GK,Sqn,Amf,Rhss,Rg,F2,F3,F4,Rmme,1,SID).
 iknows(start)
 =>
 state_mtcd(MTCD,MME,GK,Sqn,Amf,Rhss,Rg,F2,F3,F4,Rmme,2,SID).
 iknows(MTCD)

step step_1 (MTCD,MME,GK,Sqn,Amf,Rhss,Rg,F2,F3,F4,Dummy_Rmme,SID,Rmme) :=
 state_mtcd(MTCD,MME,GK,Sqn,Amf,Rhss,Rg,F2,F3,F4,Dummy_Rmme,2,SID).
 iknows(pair(Rhss,pair(Rg,pair(Rmme,pair(scrypt(apply(F4,pair(GK,pair(Rg,pair(Rhss,Amf)))),apply(F2,pair(Sqn,Rmme))),Amf)))))
 =>
 state_mtcd(MTCD,MME,GK,Sqn,Amf,Rhss,Rg,F2,F3,F4,Rmme,3,SID).
 iknows(scrypt(apply(F4,pair(GK,pair(Rg,pair(Rhss,Amf)))),apply(F3,pair(Sqn,Rg)))).
 request(MTCD,MME,mtcd_mme,Rmme,SID).
 witness(MTCD,MME,mme_mtcd,Rmme)

step step_2 (MME,MTCD,GK,Sqn,Amf,Rhss,Rg,F2,F3,F4,Dummy_Rmme,SID,Rmme) :=
 state_mme(MME,MTCD,GK,Sqn,Amf,Rhss,Rg,F2,F3,F4,Dummy_Rmme,0,SID).
 iknows(MTCD)
=[exists Rmme]=>
 state_mme(MME,MTCD,GK,Sqn,Amf,Rhss,Rg,F2,F3,F4,Rmme,2,SID).
 iknows(pair(Rhss,pair(Rg,pair(Rmme,pair(scrypt(apply(F4,pair(GK,pair(Rg,pair(Rhss,Amf)))),apply(F2,pair(Sqn,Rmme))),Amf))))).
 witness(MME,MTCD,mtcd_mme,Rmme)

step step_3 (MME,MTCD,GK,Sqn,Amf,Rhss,Rg,F2,F3,F4,Dummy_Rmme,SID,Rmme) :=
 state_mme(MME,MTCD,GK,Sqn,Amf,Rhss,Rg,F2,F3,F4,Dummy_Rmme,2,SID).
 iknows(scrypt(apply(F4,pair(GK,pair(Rg,pair(Rhss,Amf)))),apply(F3,pair(Sqn,Rg))))
=[exists Rmme]=>
 state_mme(MME,MTCD,GK,Sqn,Amf,Rhss,Rg,F2,F3,F4,Rmme,4,SID).
 request(MME,MTCD,mme_mtcd,Rmme,SID)


section properties:

property authentication_on_mme_mtcd (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,mme_mtcd,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,mme_mtcd,MGoal))
     /\ ((request(A1Goal,A2Goal,mme_mtcd,MGoal,SID1)
           /\ request(A1Goal,A2Goal,mme_mtcd,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_mtcd_mme (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,mtcd_mme,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,mtcd_mme,MGoal))
     /\ ((request(A1Goal,A2Goal,mtcd_mme,MGoal,SID1)
           /\ request(A1Goal,A2Goal,mtcd_mme,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state authentication_on_mme_mtcd (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,mme_mtcd,MGoal,SID) &
 not(witness(A2Goal,A1Goal,mme_mtcd,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_mme_mtcd (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,mme_mtcd,MGoal,SID1).
 request(A1Goal,A2Goal,mme_mtcd,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_mtcd_mme (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,mtcd_mme,MGoal,SID) &
 not(witness(A2Goal,A1Goal,mtcd_mme,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_mtcd_mme (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,mtcd_mme,MGoal,SID1).
 request(A1Goal,A2Goal,mtcd_mme,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

