%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfileniWlsk

section signature:

state_eke_Resp: agent * agent * symmetric_key * text * nat * text * text * text * hash_func * set(agent) * nat -> fact
state_eke_Init: agent * agent * symmetric_key * text * nat * hash_func * text * text * text * set(agent) * nat -> fact


section types:

sec_k2, nb, na, sec_k1: protocol_id
set_79, set_77, set_73, set_63: set
H, dummy_hash: hash_func
State, 7, 6, 4, SID, 2, 1, Dummy_State, 0, 3, SID2, SID1: nat
Set_40, Dummy_Set_40, Dummy_Set_21, Set_21, ASGoal: set(agent)
start, MGoal: message
Na, Nb, K, TID, Dummy_K, Dummy_Nb, Dummy_Na, dummy_nonce, tid, k: text
Kab, kab: symmetric_key
B, A, A2Goal, A1Goal, a, i, b: agent


section inits:

initial_state init1 := 
 iknows(start).
 iknows(a).
 iknows(b).
 iknows(i).
 state_eke_Init(a,b,kab,tid,0,dummy_hash,dummy_nonce,dummy_nonce,dummy_nonce,set_63,3).
 state_eke_Resp(b,a,kab,tid,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_hash,set_73,4).
 state_eke_Init(b,a,kab,tid,0,dummy_hash,dummy_nonce,dummy_nonce,dummy_nonce,set_77,6).
 state_eke_Resp(a,b,kab,tid,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_hash,set_79,7)


section rules:

step step_0 (A,B,Kab,TID,H,Dummy_Na,Nb,K,Set_21,SID,Na) :=
 state_eke_Init(A,B,Kab,TID,0,H,Dummy_Na,Nb,K,Set_21,SID).
 iknows(start)
=[exists Na]=>
 state_eke_Init(A,B,Kab,TID,1,H,Na,Nb,K,Set_21,SID).
 iknows(Na)

step step_1 (A,B,Kab,TID,H,Dummy_Na,Dummy_Nb,Dummy_K,Dummy_Set_21,SID,Na,Nb) :=
 state_eke_Init(A,B,Kab,TID,1,H,Dummy_Na,Dummy_Nb,Dummy_K,Dummy_Set_21,SID).
 iknows(scrypt(Kab,xor(xor(TID,Nb),apply(H,pair(K,Na)))))
 =>
 state_eke_Init(A,B,Kab,TID,2,H,Na,Nb,apply(H,pair(Nb,Na)),Dummy_Set_21,SID).
 iknows(scrypt(Kab,apply(H,pair(apply(H,pair(Nb,Na)),Nb)))).
 secret(apply(H,pair(Nb,Na)),sec_k1,Dummy_Set_21).
 witness(A,B,na,Na).
 request(A,B,nb,Nb,SID).
 contains(A,Dummy_Set_21).
 contains(B,Dummy_Set_21)

step step_2 (B,A,Kab,TID,Dummy_Na,Dummy_Nb,Dummy_K,H,Dummy_Set_40,SID,Na,Nb) :=
 state_eke_Resp(B,A,Kab,TID,0,Dummy_Na,Dummy_Nb,Dummy_K,H,Dummy_Set_40,SID).
 iknows(Na)
=[exists Nb]=>
 state_eke_Resp(B,A,Kab,TID,1,Na,Nb,apply(H,pair(Nb,Na)),H,Dummy_Set_40,SID).
 iknows(scrypt(Kab,xor(xor(TID,Nb),apply(H,pair(apply(H,pair(Nb,Na)),Na))))).
 secret(apply(H,pair(Nb,Na)),sec_k2,Dummy_Set_40).
 contains(A,Dummy_Set_40).
 contains(B,Dummy_Set_40)

step step_3 (B,A,Kab,TID,Dummy_Na,Dummy_Nb,Dummy_K,H,Set_40,SID,Na,Nb,K) :=
 state_eke_Resp(B,A,Kab,TID,1,Dummy_Na,Dummy_Nb,Dummy_K,H,Set_40,SID).
 iknows(scrypt(Kab,apply(H,pair(K,pair(Na,Nb)))))
 =>
 state_eke_Resp(B,A,Kab,TID,2,Na,Nb,K,H,Set_40,SID).
 witness(B,A,nb,Nb).
 request(B,A,na,Dummy_Na,SID)


section properties:

property secrecy_of_sec_k1 (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_k1,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_sec_k2 (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_k2,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property authentication_on_nb (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,nb,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,nb,MGoal))
     /\ ((request(A1Goal,A2Goal,nb,MGoal,SID1)
           /\ request(A1Goal,A2Goal,nb,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_na (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,na,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,na,MGoal))
     /\ ((request(A1Goal,A2Goal,na,MGoal,SID1)
           /\ request(A1Goal,A2Goal,na,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state secrecy_of_sec_k1 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_k1,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_sec_k2 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_k2,ASGoal) &
 not(contains(i,ASGoal))

attack_state authentication_on_nb (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,nb,MGoal,SID) &
 not(witness(A2Goal,A1Goal,nb,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_nb (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,nb,MGoal,SID1).
 request(A1Goal,A2Goal,nb,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_na (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,na,MGoal,SID) &
 not(witness(A2Goal,A1Goal,na,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_na (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,na,MGoal,SID1).
 request(A1Goal,A2Goal,na,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

