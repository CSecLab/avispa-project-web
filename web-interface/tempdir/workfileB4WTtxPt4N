role
role_A(A:agent,B:agent,S:agent,Pw1:text,G:text,N:text,M:text,MAC:function,SND,RCV:channel(dy))
played_by A
def=
	local
		State:nat,X:text,K1:text,SKas:text,Z1:text,Pw2:text,Z2:text,SKbs:text,K2:text,SKab:text
	init
		State := 0
	transition
		1. State=0 /\ RCV(start) =|> State':=1 /\ X':=new() /\ secret(X',sec_1,{A,B}) /\ SND(xor(exp(G,X'),exp(M,Pw1)))
		3. State=1 /\ RCV(xor(exp(G,Z1'),exp(N,Pw1)).xor(SKas',K1').xor(exp(G,Z2'),exp(N,Pw2')).xor(SKbs',K2')) =|> State':=2 /\ SKab':=new() /\ SND(xor(exp(G,Z2'),exp(N,Pw2')).xor(SKbs',K2').MAC(SKab'.A.B))
		5. State=2 /\ RCV(MAC(SKab.B.A)) =|> State':=3
end role

role role_B(A:agent,B:agent,S:agent,Pw2:text,G:text,N:text,M:text,MAC:function,SND,RCV:channel(dy))
played_by B
def=
	local
		State:nat,Y:text,X:text,Pw1:text,Z2:text,SKbs:text,K2:text,SKab:text
	init
		State := 0
	transition
		1. State=0 /\ RCV(xor(exp(G,X'),exp(M,Pw1'))) =|> State':=1 /\ secret(X',sec_1,{A,B}) /\ Y':=new() /\ secret(Y',sec_2,{A,B}) /\ SND(xor(exp(G,X'),exp(M,Pw1')).xor(exp(G,Y'),exp(M,Pw2)))
		4. State=1 /\ RCV(xor(exp(G,Z2'),exp(N,Pw2)).xor(SKbs',K2').MAC(SKab'.A.B)) =|> State':=2 /\ SND(MAC(SKab'.B.A))
end role

role role_S(A:agent,B:agent,S:agent,G:text,N:text,M:text,Pw1:text,Pw2:text,SND,RCV:channel(dy))
played_by S
def=
	local
		State:nat,Y:text,X:text,K2:text,SKbs:text,K1:text,SKas:text,Z1:text,Z2:text
	init
		State := 0
	transition
		2. State=0 /\ RCV(xor(exp(G,X'),exp(M,Pw1)).xor(exp(G,Y'),exp(M,Pw2))) =|> State':=1 /\ secret(Y',sec_2,{A,B}) /\ secret(X',sec_1,{A,B}) /\ K2':=new() /\ SKbs':=new() /\ Z2':=new() /\ K1':=new() /\ SKas':=new() /\ Z1':=new() /\ SND(xor(exp(G,Z1'),exp(N,Pw1)).xor(SKas',K1').xor(exp(G,Z2'),exp(N,Pw2)).xor(SKbs',K2'))
end role

role session1(MAC:function,A:agent,B:agent,S:agent,G:text,N:text,M:text,Pw1:text,Pw2:text)
def=
	local
		SND3,RCV3,SND2,RCV2,SND1,RCV1:channel(dy)
	composition
		role_S(A,B,S,G,N,M,Pw1,Pw2,SND3,RCV3) /\ role_B(A,B,S,Pw2,G,N,M,MAC,SND2,RCV2) /\ role_A(A,B,S,Pw1,G,N,M,MAC,SND1,RCV1)
end role

role environment()
def=
	const
		hash_0:function,p1:text,n:text,server:agent,alice:agent,mac:function,bob:agent,g:text,m:text,p2:text,sec_1:protocol_id,sec_2:protocol_id
	intruder_knowledge = {}
	composition
		session1(mac,alice,bob,server,g,n,m,p1,p2)
end role

goal
	secrecy_of sec_1
	secrecy_of sec_2
end goal
environment()?
