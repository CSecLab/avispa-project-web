%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfileT4K3CI

section signature:

state_server: agent * agent * text * hash_func * public_key * public_key * text * text * text * text * message * apply(hash_func,pair(text,pair(text,message))) * nat * set(agent) * nat -> fact
state_peer: agent * agent * text * hash_func * public_key * public_key * text * text * message * text * text * apply(hash_func,pair(text,pair(text,message))) * nat * set(agent) * nat -> fact


section types:

SK, Dummy_SK: apply(hash_func,pair(text,pair(text,message)))
Kp, Ks, kp, ks: public_key
PRF, f: hash_func
SAi1, Dummy_DHi, DHi, Ni, Nr, Dummy_DHr, Dummy_Nr, G, Dummy_SAi1, Dummy_Ni, dummy_nonce, success, respond_id, request_id, g, DHr: text
Dummy_Set_54, Dummy_Set_29, Set_29, ASGoal, Set_54: set(agent)
P, S, A2Goal, A1Goal, p, s, i: agent
KEr, Dummy_KEr, Dummy_KEi, dummy_msg, MGoal, KEi, start: message
set_99, set_93, set_80, set_101: set
sec_sk1, ni, nr, sec_sk2: protocol_id
State, 4, SID, Dummy_State, 3, 6, SID2, SID1, 2, 0, 1, 7: nat


section inits:

initial_state init1 := 
 iknows(start).
 iknows(p).
 iknows(s).
 iknows(f).
 iknows(i).
 state_peer(p,s,g,f,kp,ks,dummy_nonce,dummy_nonce,dummy_msg,dummy_nonce,dummy_nonce,dummy_msg,0,set_80,3).
 state_server(s,p,g,f,kp,ks,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,0,set_93,4).
 state_peer(p,s,g,f,kp,ks,dummy_nonce,dummy_nonce,dummy_msg,dummy_nonce,dummy_nonce,dummy_msg,0,set_99,6).
 state_server(s,p,g,f,kp,ks,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,0,set_101,7)


section rules:

step step_0 (P,S,G,PRF,Kp,Ks,Ni,SAi1,KEi,Nr,DHr,SK,Set_29,SID) :=
 state_peer(P,S,G,PRF,Kp,Ks,Ni,SAi1,KEi,Nr,DHr,SK,0,Set_29,SID).
 iknows(request_id)
 =>
 state_peer(P,S,G,PRF,Kp,Ks,Ni,SAi1,KEi,Nr,DHr,SK,2,Set_29,SID).
 iknows(pair(respond_id,P))

step step_1 (P,S,G,PRF,Kp,Ks,Dummy_Ni,Dummy_SAi1,Dummy_KEi,Dummy_Nr,Dummy_DHr,Dummy_SK,Dummy_Set_29,SID,Ni,SAi1,KEi,Nr,DHr) :=
 state_peer(P,S,G,PRF,Kp,Ks,Dummy_Ni,Dummy_SAi1,Dummy_KEi,Dummy_Nr,Dummy_DHr,Dummy_SK,2,Dummy_Set_29,SID).
 iknows(pair(SAi1,pair(KEi,Ni)))
=[exists Nr,DHr]=>
 state_peer(P,S,G,PRF,Kp,Ks,Ni,SAi1,KEi,Nr,DHr,apply(PRF,pair(Ni,pair(Nr,exp(KEi,DHr)))),4,Dummy_Set_29,SID).
 iknows(pair(SAi1,pair(exp(G,DHr),Nr))).
 secret(apply(PRF,pair(Ni,pair(Nr,exp(KEi,DHr)))),sec_sk1,Dummy_Set_29).
 witness(P,S,nr,Nr).
 contains(S,Dummy_Set_29).
 contains(P,Dummy_Set_29)

step step_2 (P,S,G,PRF,Kp,Ks,Ni,SAi1,KEi,Nr,DHr,SK,Set_29,SID) :=
 state_peer(P,S,G,PRF,Kp,Ks,Ni,SAi1,KEi,Nr,DHr,SK,4,Set_29,SID).
 iknows(scrypt(SK,pair(S,crypt(inv(Ks),pair(SAi1,pair(KEi,pair(Ni,Nr)))))))
 =>
 state_peer(P,S,G,PRF,Kp,Ks,Ni,SAi1,KEi,Nr,DHr,SK,6,Set_29,SID).
 iknows(scrypt(SK,pair(P,crypt(inv(Kp),pair(SAi1,pair(exp(G,DHr),pair(Nr,Ni))))))).
 request(P,S,ni,Ni,SID)

step step_3 (S,P,G,PRF,Kp,Ks,Nr,SAi1,DHi,Ni,KEr,SK,Set_54,SID) :=
 state_server(S,P,G,PRF,Kp,Ks,Nr,SAi1,DHi,Ni,KEr,SK,0,Set_54,SID).
 iknows(start)
 =>
 state_server(S,P,G,PRF,Kp,Ks,Nr,SAi1,DHi,Ni,KEr,SK,1,Set_54,SID).
 iknows(request_id)

step step_4 (S,P,G,PRF,Kp,Ks,Nr,Dummy_SAi1,Dummy_DHi,Dummy_Ni,KEr,SK,Set_54,SID,SAi1,DHi,Ni) :=
 state_server(S,P,G,PRF,Kp,Ks,Nr,Dummy_SAi1,Dummy_DHi,Dummy_Ni,KEr,SK,1,Set_54,SID).
 iknows(pair(respond_id,P))
=[exists Ni,DHi,SAi1]=>
 state_server(S,P,G,PRF,Kp,Ks,Nr,SAi1,DHi,Ni,KEr,SK,2,Set_54,SID).
 iknows(pair(SAi1,pair(exp(G,DHi),Ni))).
 witness(S,P,ni,Ni)

step step_5 (S,P,G,PRF,Kp,Ks,Dummy_Nr,SAi1,DHi,Ni,Dummy_KEr,Dummy_SK,Dummy_Set_54,SID,Nr,KEr) :=
 state_server(S,P,G,PRF,Kp,Ks,Dummy_Nr,SAi1,DHi,Ni,Dummy_KEr,Dummy_SK,2,Dummy_Set_54,SID).
 iknows(pair(SAi1,pair(KEr,Nr)))
 =>
 state_server(S,P,G,PRF,Kp,Ks,Nr,SAi1,DHi,Ni,KEr,apply(PRF,pair(Ni,pair(Nr,exp(KEr,DHi)))),3,Dummy_Set_54,SID).
 iknows(scrypt(apply(PRF,pair(Ni,pair(Nr,exp(KEr,DHi)))),pair(S,crypt(inv(Ks),pair(SAi1,pair(exp(G,DHi),pair(Ni,Nr))))))).
 secret(apply(PRF,pair(Ni,pair(Nr,exp(KEr,DHi)))),sec_sk2,Dummy_Set_54).
 contains(S,Dummy_Set_54).
 contains(P,Dummy_Set_54)

step step_6 (S,P,G,PRF,Kp,Ks,Nr,SAi1,DHi,Ni,Dummy_KEr,SK,Set_54,SID,KEr) :=
 state_server(S,P,G,PRF,Kp,Ks,Nr,SAi1,DHi,Ni,Dummy_KEr,SK,3,Set_54,SID).
 iknows(scrypt(SK,pair(P,crypt(inv(Kp),pair(SAi1,pair(KEr,pair(Nr,Ni)))))))
 =>
 state_server(S,P,G,PRF,Kp,Ks,Nr,SAi1,DHi,Ni,KEr,SK,4,Set_54,SID).
 iknows(success).
 request(S,P,nr,Nr,SID)


section properties:

property secrecy_of_sec_sk1 (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_sk1,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_sec_sk2 (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_sk2,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property authentication_on_nr (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,nr,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,nr,MGoal))
     /\ ((request(A1Goal,A2Goal,nr,MGoal,SID1)
           /\ request(A1Goal,A2Goal,nr,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_ni (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,ni,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,ni,MGoal))
     /\ ((request(A1Goal,A2Goal,ni,MGoal,SID1)
           /\ request(A1Goal,A2Goal,ni,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state secrecy_of_sec_sk1 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_sk1,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_sec_sk2 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_sk2,ASGoal) &
 not(contains(i,ASGoal))

attack_state authentication_on_nr (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,nr,MGoal,SID) &
 not(witness(A2Goal,A1Goal,nr,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_nr (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,nr,MGoal,SID1).
 request(A1Goal,A2Goal,nr,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_ni (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,ni,MGoal,SID) &
 not(witness(A2Goal,A1Goal,ni,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_ni (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,ni,MGoal,SID1).
 request(A1Goal,A2Goal,ni,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

