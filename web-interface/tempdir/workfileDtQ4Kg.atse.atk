
----------------
  AtSe Summary  
----------------

  Protocol file: /home/avispa/web-interface-computation/./tempdir/workfileDtQ4Kg.if
  Attack found : NO

  Analysed   : 3 states
  Reachable  : 0 states
  Translation: 0.08 seconds
  Computation: 0.00 seconds


---------------------------------------------
            Internal System State            
  (initial state after reading the if file)  
---------------------------------------------

Intruder state :
----------------

Intruder Knowledge :  start i t h uj s ui 
 Unforgeable terms :  lj li


Interpreted protocol specification :
------------------------------------

Role server played by (s,17):
| dummy_nonce.{dummy_nonce.dummy_nonce.dummy_nonce.Ruj(17).TIj(17)}_lj.
| dummy_nonce.{dummy_nonce.dummy_nonce.dummy_nonce.Rui(17).TIi(17)}_li
|   => dummy_nonce.
|      {dummy_nonce.dummy_nonce.dummy_nonce.Ruj(17).Rui(17).{Rui(17).Ruj(17).xs}_h.n17(TIs)}_lj.
|      dummy_nonce.
|      {dummy_nonce.dummy_nonce.dummy_nonce.Rui(17).Ruj(17).{Rui(17).Ruj(17).xs}_h.n17(TIs)}_li
|    & Secret(xs,s);  Secret(lj,set_259);  Secret(li,set_258);
|    & Witness(s,ui,s_ui_vs,dummy_nonce);  Witness(s,ui,s_ui_tis,dummy_nonce);
|    & Request(ui,s,ui_s_tii,dummy_nonce);  Request(ui,s,ui_s_ri,dummy_nonce);
|    & Add s to set_258;  Add ui to set_258;  Add s to set_259;
|    & Add i to set_259;

Role initiator played by (ui,15):
| start => dummy_nonce.
|      {dummy_nonce.dummy_nonce.dummy_nonce.{n15(Ri).n15(X)}_t.n15(TIi)}_li.
|      dummy_nonce.dummy_nonce
|    & Secret(li,set_255);  Secret(n15(Ri),ui);
|    & Witness(ui,s,ui_s_tii,n15(TIi));  Witness(ui,s,ui_s_ri,n15(Ri));
|    & Add ui to set_255;  Add s to set_255;

Role server played by (s,13):
| dummy_nonce.{dummy_nonce.dummy_nonce.dummy_nonce.Ruj(13).TIj(13)}_lj.
| dummy_nonce.{dummy_nonce.dummy_nonce.dummy_nonce.Rui(13).TIi(13)}_li
|   => dummy_nonce.
|      {dummy_nonce.dummy_nonce.dummy_nonce.Ruj(13).Rui(13).{Rui(13).Ruj(13).xs}_h.n13(TIs)}_lj.
|      dummy_nonce.
|      {dummy_nonce.dummy_nonce.dummy_nonce.Rui(13).Ruj(13).{Rui(13).Ruj(13).xs}_h.n13(TIs)}_li
|    & Secret(xs,s);  Secret(lj,set_253);  Secret(li,set_252);
|    & Witness(s,uj,s_uj_vs,dummy_nonce);  Witness(s,uj,s_uj_tis,dummy_nonce);
|    & Request(uj,s,uj_s_tij,dummy_nonce);  Request(uj,s,uj_s_rj,dummy_nonce);
|    & Add s to set_252;  Add i to set_252;  Add s to set_253;
|    & Add uj to set_253;

Role responder played by (uj,12):
| dummy_nonce.dummy_nonce => dummy_nonce.
|      {dummy_nonce.dummy_nonce.dummy_nonce.{n11(Rj).n11(X)}_t.n11(TIj)}_lj.
|      dummy_nonce.dummy_nonce
|    & Secret(lj,set_250);  Secret(n11(Rj),uj);
|    & Witness(uj,s,uj_s_tij,dummy_nonce);  Witness(uj,s,uj_s_rj,dummy_nonce);
|    & Add uj to set_250;  Add s to set_250;

Role responder played by (uj,8):
| dummy_nonce.dummy_nonce => dummy_nonce.
|      {dummy_nonce.dummy_nonce.dummy_nonce.{n9(Rj).n9(X)}_t.n9(TIj)}_lj.
|      dummy_nonce.dummy_nonce
|    & Secret(lj,set_245);  Secret(n9(Rj),uj);  Add uj to set_245;
|    & Add i to set_245;

Role initiator played by (ui,7):
| start => dummy_nonce.
|      {dummy_nonce.dummy_nonce.dummy_nonce.{n7(Ri).n7(X)}_t.n7(TIi)}_li.
|      dummy_nonce.dummy_nonce
|    & Secret(li,set_243);  Secret(n7(Ri),ui);  Add ui to set_243;
|    & Add i to set_243;

Role server played by (s,5):
| dummy_nonce.{dummy_nonce.dummy_nonce.dummy_nonce.Ruj(5).TIj(5)}_lj.dummy_nonce.
| {dummy_nonce.dummy_nonce.dummy_nonce.Rui(5).TIi(5)}_li => dummy_nonce.
|      {dummy_nonce.dummy_nonce.dummy_nonce.Ruj(5).Rui(5).{Rui(5).Ruj(5).xs}_h.n5(TIs)}_lj.
|      dummy_nonce.
|      {dummy_nonce.dummy_nonce.dummy_nonce.Rui(5).Ruj(5).{Rui(5).Ruj(5).xs}_h.n5(TIs)}_li
|    & Secret(xs,s);  Secret(lj,set_236);  Secret(li,set_235);
|    & Witness(s,uj,s_uj_vs,dummy_nonce);  Witness(s,uj,s_uj_tis,dummy_nonce);
|    & Witness(s,ui,s_ui_vs,dummy_nonce);  Witness(s,ui,s_ui_tis,dummy_nonce);
|    & Request(uj,s,uj_s_tij,dummy_nonce);  Request(uj,s,uj_s_rj,dummy_nonce);
|    & Request(ui,s,ui_s_tii,dummy_nonce);  Request(ui,s,ui_s_ri,dummy_nonce);
|    & Add s to set_235;  Add ui to set_235;  Add s to set_236;
|    & Add uj to set_236;

Role responder played by (uj,4):
| dummy_nonce.dummy_nonce => dummy_nonce.
|      {dummy_nonce.dummy_nonce.dummy_nonce.{n3(Rj).n3(X)}_t.n3(TIj)}_lj.
|      dummy_nonce.dummy_nonce
|    & Secret(lj,set_227);  Secret(n3(Rj),uj);
|    & Witness(uj,s,uj_s_tij,dummy_nonce);  Witness(uj,s,uj_s_rj,dummy_nonce);
|    & Add uj to set_227;  Add s to set_227;

Role initiator played by (ui,3):
| start => dummy_nonce.
|      {dummy_nonce.dummy_nonce.dummy_nonce.{n1(Ri).n1(X)}_t.n1(TIi)}_li.
|      dummy_nonce.dummy_nonce
|    & Secret(li,set_211);  Secret(n1(Ri),ui);  Witness(ui,s,ui_s_tii,n1(TIi));
|    & Witness(ui,s,ui_s_ri,n1(Ri));  Add ui to set_211;  Add s to set_211;


Some Remarks :
--------------

- The syntax of protocol steps is
   "Received Msg" => "Sent Msg"  [Equalities] & Inequalities & IF facts
- A Role is a tree where steps are unary nodes and choice points are n-ary nodes
- The Initial System state is the state of cl-atse at the begining of the search
  for attacks, and represents both the intruder and honest participants state.
- See the cl-atse's subsection in the user-manual for more details.

