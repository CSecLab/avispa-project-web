%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfile0471ec

section signature:

state_bob: agent * agent * symmetric_key * hash_func * nat * text * text * message * set(agent) * nat -> fact
state_alice: agent * agent * symmetric_key * hash_func * nat * text * text * message * nat -> fact


section types:

bob_alice_nb, k1: protocol_id
Set_33, Dummy_Set_33: set(agent)
set_67, set_66, set_61: set
kab, kai, kib, K: symmetric_key
5, 3, State, 4, 2, 10, 1, 0, 6, SID, Dummy_State: nat
K1, start, Dummy_K1, dummy_msg: message
Nb, Na, Dummy_Nb, Dummy_Na, dummy_nonce: text
Hash, h: hash_func
A, B, i, a, b: agent


section inits:

initial_state init1 := 
 iknows(start).
 iknows(a).
 iknows(b).
 iknows(h).
 iknows(kai).
 iknows(kib).
 iknows(i).
 state_alice(a,b,kab,h,0,dummy_nonce,dummy_nonce,dummy_msg,3).
 state_bob(b,a,kab,h,1,dummy_nonce,dummy_nonce,dummy_msg,set_61,4).
 state_alice(a,i,kai,h,0,dummy_nonce,dummy_nonce,dummy_msg,6).
 state_bob(b,i,kib,h,1,dummy_nonce,dummy_nonce,dummy_msg,set_67,10)


section rules:

step step_0 (A,B,K,Hash,Dummy_Na,Nb,K1,SID,Na) :=
 state_alice(A,B,K,Hash,0,Dummy_Na,Nb,K1,SID).
 iknows(start)
=[exists Na]=>
 state_alice(A,B,K,Hash,2,Na,Nb,K1,SID).
 iknows(scrypt(K,Na))

step step_1 (A,B,K,Hash,Na,Dummy_Nb,Dummy_K1,SID,Nb) :=
 state_alice(A,B,K,Hash,2,Na,Dummy_Nb,Dummy_K1,SID).
 iknows(scrypt(K,Nb))
 =>
 state_alice(A,B,K,Hash,4,Na,Nb,apply(Hash,pair(Na,Nb)),SID).
 iknows(scrypt(apply(Hash,pair(Na,Nb)),Nb))

step step_2 (B,A,K,Hash,Dummy_Nb,Dummy_Na,Dummy_K1,Dummy_Set_33,SID,Nb,Na) :=
 state_bob(B,A,K,Hash,1,Dummy_Nb,Dummy_Na,Dummy_K1,Dummy_Set_33,SID).
 iknows(scrypt(K,Na))
=[exists Nb]=>
 state_bob(B,A,K,Hash,3,Nb,Na,apply(Hash,pair(Na,Nb)),Dummy_Set_33,SID).
 iknows(scrypt(K,Nb)).
 secret(apply(Hash,pair(Na,Nb)),k1,Dummy_Set_33).
 contains(A,Dummy_Set_33).
 contains(B,Dummy_Set_33)

step step_3 (B,A,K,Hash,Nb,Na,K1,Set_33,SID) :=
 state_bob(B,A,K,Hash,3,Nb,Na,K1,Set_33,SID).
 iknows(scrypt(K1,Nb))
 =>
 state_bob(B,A,K,Hash,5,Nb,Na,K1,Set_33,SID)


