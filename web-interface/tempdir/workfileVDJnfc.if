%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfileVDJnfc

section signature:

state_paymentgateway: agent * agent * agent * hash_func * public_key * public_key * public_key * nat * message * message * message * message * symmetric_key * symmetric_key * symmetric_key * symmetric_key * set(agent) * set(agent) * nat -> fact
state_merchant: agent * agent * agent * hash_func * public_key * public_key * public_key * nat * message * message * message * message * symmetric_key * symmetric_key * symmetric_key * symmetric_key * set(agent) * set(agent) * set(agent) * set(agent) * set(agent) * set(agent) * set(agent) * set(agent) * nat -> fact
state_cardholder: agent * agent * agent * hash_func * public_key * public_key * public_key * nat * message * message * message * symmetric_key * symmetric_key * symmetric_key * set(agent) * set(agent) * set(agent) * set(agent) * nat -> fact


section types:

k4, resp_pay, card_m, k3, k2, k1, payment, order: protocol_id
K4, K3, K2, K1, Dummy_K3, Dummy_K4, Dummy_K2, Dummy_K1, dummy_sk: symmetric_key
set_157, set_156, set_143, set_142, set_141, set_140, set_139, set_138, set_137, set_136, set_120, set_119, set_118, set_117: set
Set_93, Set_92, Set_70, Set_68, Set_65, Set_63, Set_61, Set_60, Dummy_Set_93, Set_59, Dummy_Set_92, Set_58, Dummy_Set_70, Dummy_Set_68, Dummy_Set_65, Dummy_Set_63, Dummy_Set_61, Dummy_Set_60, Dummy_Set_59, Dummy_Set_58, Set_33, Dummy_Set_33, Set_31, Dummy_Set_31, Dummy_Set_29, Set_29, Dummy_Set_26, Set_26, ASGoal: set(agent)
7, 6, S, 5, 3, SID, 4, 2, Dummy_S, 1, 0: nat
Resp_pay, IC, IP2, Card_M, Dummy_Card_M, Dummy_Resp_pay, Dummy_IP2, Dummy_IC, start, dummy_msg, MGoal: message
KpubC, KpubM, KpubP, kpub_c, kpub_m, kpub_p, kpub_i: public_key
H, h: hash_func
C, M, P, c, m, p, i: agent


section inits:

initial_state init1 := 
 iknows(start).
 iknows(c).
 iknows(m).
 iknows(p).
 iknows(kpub_c).
 iknows(kpub_m).
 iknows(kpub_i).
 iknows(inv(kpub_i)).
 iknows(kpub_p).
 iknows(h).
 iknows(i).
 state_cardholder(c,m,p,h,kpub_c,kpub_m,kpub_p,0,dummy_msg,dummy_msg,dummy_msg,dummy_sk,dummy_sk,dummy_sk,set_117,set_118,set_119,set_120,3).
 state_merchant(m,c,p,h,kpub_c,kpub_m,kpub_p,1,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_sk,dummy_sk,dummy_sk,dummy_sk,set_136,set_137,set_138,set_139,set_140,set_141,set_142,set_143,4).
 state_paymentgateway(p,c,m,h,kpub_c,kpub_m,kpub_p,6,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_sk,dummy_sk,dummy_sk,dummy_sk,set_156,set_157,5)


section rules:

step step_0 (C,M,P,H,KpubC,KpubM,KpubP,Dummy_IC,Dummy_IP2,Resp_pay,Dummy_K1,Dummy_K2,K4,Dummy_Set_26,Dummy_Set_29,Dummy_Set_31,Dummy_Set_33,SID,IC,IP2,K1,K2) :=
 state_cardholder(C,M,P,H,KpubC,KpubM,KpubP,0,Dummy_IC,Dummy_IP2,Resp_pay,Dummy_K1,Dummy_K2,K4,Dummy_Set_26,Dummy_Set_29,Dummy_Set_31,Dummy_Set_33,SID).
 iknows(start)
=[exists IC,IP2,K2,K1]=>
 state_cardholder(C,M,P,H,KpubC,KpubM,KpubP,2,IC,IP2,Resp_pay,K1,K2,K4,Dummy_Set_26,Dummy_Set_29,Dummy_Set_31,Dummy_Set_33,SID).
 iknows(pair(scrypt(K1,IP2),pair(crypt(KpubP,K1),pair(scrypt(K2,IC),pair(crypt(KpubM,K2),crypt(inv(KpubC),apply(H,pair(scrypt(K1,IP2),pair(crypt(KpubP,K1),pair(scrypt(K2,IC),crypt(KpubM,K2))))))))))).
 secret(IC,order,Dummy_Set_26).
 secret(IP2,payment,Dummy_Set_29).
 secret(K1,k1,Dummy_Set_31).
 secret(K2,k2,Dummy_Set_33).
 contains(C,Dummy_Set_26).
 contains(M,Dummy_Set_26).
 contains(P,Dummy_Set_26).
 contains(C,Dummy_Set_29).
 contains(P,Dummy_Set_29).
 contains(C,Dummy_Set_31).
 contains(M,Dummy_Set_31).
 contains(C,Dummy_Set_33).
 contains(M,Dummy_Set_33)

step step_1 (C,M,P,H,KpubC,KpubM,KpubP,IC,IP2,Dummy_Resp_pay,K1,K2,Dummy_K4,Set_26,Set_29,Set_31,Set_33,SID,Resp_pay,K4) :=
 state_cardholder(C,M,P,H,KpubC,KpubM,KpubP,2,IC,IP2,Dummy_Resp_pay,K1,K2,Dummy_K4,Set_26,Set_29,Set_31,Set_33,SID).
 iknows(pair(scrypt(K4,Resp_pay),pair(crypt(KpubC,K4),crypt(inv(KpubP),apply(H,pair(scrypt(K4,Resp_pay),crypt(KpubM,K4)))))))
 =>
 state_cardholder(C,M,P,H,KpubC,KpubM,KpubP,4,IC,IP2,Resp_pay,K1,K2,K4,Set_26,Set_29,Set_31,Set_33,SID)

step step_2 (M,C,P,H,KpubC,KpubM,KpubP,Dummy_IC,Dummy_IP2,Dummy_Card_M,Resp_pay,Dummy_K1,Dummy_K2,Dummy_K3,K4,Dummy_Set_58,Dummy_Set_59,Dummy_Set_60,Dummy_Set_61,Dummy_Set_63,Dummy_Set_65,Set_68,Set_70,SID,IC,IP2,Card_M,K1,K2,K3) :=
 state_merchant(M,C,P,H,KpubC,KpubM,KpubP,1,Dummy_IC,Dummy_IP2,Dummy_Card_M,Resp_pay,Dummy_K1,Dummy_K2,Dummy_K3,K4,Dummy_Set_58,Dummy_Set_59,Dummy_Set_60,Dummy_Set_61,Dummy_Set_63,Dummy_Set_65,Set_68,Set_70,SID).
 iknows(pair(scrypt(K1,IP2),pair(crypt(KpubP,K1),pair(scrypt(K2,IC),pair(crypt(KpubM,K2),crypt(inv(KpubC),apply(H,pair(scrypt(K1,IP2),pair(crypt(KpubP,K1),pair(scrypt(K2,IC),crypt(KpubM,K2)))))))))))
=[exists Card_M,K3]=>
 state_merchant(M,C,P,H,KpubC,KpubM,KpubP,3,IC,IP2,Card_M,Resp_pay,K1,K2,K3,K4,Dummy_Set_58,Dummy_Set_59,Dummy_Set_60,Dummy_Set_61,Dummy_Set_63,Dummy_Set_65,Set_68,Set_70,SID).
 iknows(pair(scrypt(K1,IP2),pair(crypt(KpubP,K1),pair(scrypt(K2,IC),pair(crypt(KpubM,K2),pair(crypt(inv(KpubC),apply(H,pair(scrypt(K1,IP2),pair(crypt(KpubP,K1),pair(scrypt(K2,IC),crypt(KpubM,K2)))))),pair(scrypt(K3,pair(IC,Card_M)),pair(crypt(KpubP,K3),crypt(inv(KpubM),apply(H,pair(scrypt(K3,pair(IC,Card_M)),crypt(KpubP,K3)))))))))))).
 secret(IC,order,Dummy_Set_58).
 secret(IP2,payment,Dummy_Set_59).
 secret(K1,k1,Dummy_Set_60).
 secret(K2,k2,Dummy_Set_61).
 secret(K3,k3,Dummy_Set_63).
 secret(Card_M,card_m,Dummy_Set_65).
 contains(C,Dummy_Set_58).
 contains(M,Dummy_Set_58).
 contains(P,Dummy_Set_58).
 contains(C,Dummy_Set_59).
 contains(P,Dummy_Set_59).
 contains(C,Dummy_Set_60).
 contains(P,Dummy_Set_60).
 contains(C,Dummy_Set_61).
 contains(M,Dummy_Set_61).
 contains(M,Dummy_Set_63).
 contains(P,Dummy_Set_63).
 contains(M,Dummy_Set_65).
 contains(P,Dummy_Set_65)

step step_3 (M,C,P,H,KpubC,KpubM,KpubP,IC,IP2,Card_M,Dummy_Resp_pay,K1,K2,K3,Dummy_K4,Set_58,Set_59,Set_60,Set_61,Set_63,Set_65,Dummy_Set_68,Dummy_Set_70,SID,Resp_pay,K4) :=
 state_merchant(M,C,P,H,KpubC,KpubM,KpubP,3,IC,IP2,Card_M,Dummy_Resp_pay,K1,K2,K3,Dummy_K4,Set_58,Set_59,Set_60,Set_61,Set_63,Set_65,Dummy_Set_68,Dummy_Set_70,SID).
 iknows(pair(scrypt(K4,Resp_pay),pair(crypt(KpubM,K4),crypt(inv(KpubP),apply(H,pair(scrypt(K4,Resp_pay),crypt(KpubM,K4)))))))
 =>
 state_merchant(M,C,P,H,KpubC,KpubM,KpubP,5,IC,IP2,Card_M,Resp_pay,K1,K2,K3,K4,Set_58,Set_59,Set_60,Set_61,Set_63,Set_65,Dummy_Set_68,Dummy_Set_70,SID).
 iknows(pair(scrypt(K4,Resp_pay),pair(crypt(KpubC,K4),crypt(inv(KpubP),apply(H,pair(scrypt(K4,Resp_pay),crypt(KpubM,K4))))))).
 secret(Resp_pay,resp_pay,Dummy_Set_68).
 secret(K4,k4,Dummy_Set_70).
 contains(C,Dummy_Set_68).
 contains(M,Dummy_Set_68).
 contains(C,Dummy_Set_70).
 contains(M,Dummy_Set_70)

step step_4 (P,C,M,H,KpubC,KpubM,KpubP,Dummy_IC,Dummy_IP2,Dummy_Card_M,Dummy_Resp_pay,Dummy_K1,Dummy_K2,Dummy_K3,Dummy_K4,Dummy_Set_92,Dummy_Set_93,SID,IC,IP2,Card_M,Resp_pay,K1,K2,K3,K4) :=
 state_paymentgateway(P,C,M,H,KpubC,KpubM,KpubP,6,Dummy_IC,Dummy_IP2,Dummy_Card_M,Dummy_Resp_pay,Dummy_K1,Dummy_K2,Dummy_K3,Dummy_K4,Dummy_Set_92,Dummy_Set_93,SID).
 iknows(pair(scrypt(K1,IP2),pair(crypt(KpubP,K1),pair(scrypt(K2,IC),pair(crypt(KpubM,K2),pair(crypt(inv(KpubC),apply(H,pair(scrypt(K1,IP2),pair(crypt(KpubP,K1),pair(scrypt(K2,IC),crypt(KpubM,K2)))))),pair(scrypt(K3,pair(IC,Card_M)),pair(crypt(KpubP,K3),crypt(inv(KpubM),apply(H,pair(scrypt(K3,pair(IC,Card_M)),crypt(KpubP,K3))))))))))))
=[exists Resp_pay,K4]=>
 state_paymentgateway(P,C,M,H,KpubC,KpubM,KpubP,7,IC,IP2,Card_M,Resp_pay,K1,K2,K3,K4,Dummy_Set_92,Dummy_Set_93,SID).
 iknows(pair(scrypt(K4,Resp_pay),pair(crypt(KpubM,K4),crypt(inv(KpubP),apply(H,pair(scrypt(K4,Resp_pay),crypt(KpubM,K4))))))).
 secret(K4,k4,Dummy_Set_92).
 secret(Resp_pay,resp_pay,Dummy_Set_93).
 contains(M,Dummy_Set_92).
 contains(P,Dummy_Set_92).
 contains(M,Dummy_Set_93).
 contains(P,Dummy_Set_93)


section properties:

property secrecy_of_card_m (MGoal,ASGoal) :=
 [] ((secret(MGoal,card_m,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_resp_pay (MGoal,ASGoal) :=
 [] ((secret(MGoal,resp_pay,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_payment (MGoal,ASGoal) :=
 [] ((secret(MGoal,payment,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_order (MGoal,ASGoal) :=
 [] ((secret(MGoal,order,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_k1 (MGoal,ASGoal) :=
 [] ((secret(MGoal,k1,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_k2 (MGoal,ASGoal) :=
 [] ((secret(MGoal,k2,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_k3 (MGoal,ASGoal) :=
 [] ((secret(MGoal,k3,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_k4 (MGoal,ASGoal) :=
 [] ((secret(MGoal,k4,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))


section attack_states:

attack_state secrecy_of_card_m (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,card_m,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_resp_pay (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,resp_pay,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_payment (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,payment,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_order (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,order,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_k1 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,k1,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_k2 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,k2,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_k3 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,k3,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_k4 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,k4,ASGoal) &
 not(contains(i,ASGoal))

