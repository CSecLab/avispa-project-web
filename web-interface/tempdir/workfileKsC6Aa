role key_establish_req(U,V:agent,
            MAC,ECC:hash_func,
            Knwk:symmetric_key,
            Cu,Pu,EPu:text,
            Eu:public_key,
            SND,RCV:channel(dy))
played_by U
def=
	local
		State:nat,Cv:text,Ev:public_key,MACu:text,MACv:text,Kl:symmetric_key
        const   sec_kl: protocol_id
	init
		State := 0
	transition
		1. State=0 /\ RCV(start) =|> State':=1 /\ SND({Cu}_Knwk)
		2. State=1 /\ RCV({Cv'}_Knwk) =|> State':=2 /\ SND({Eu}_Knwk)
		4. State=2 /\ RCV({Ev'}_Knwk) =|> State':=3 /\ Kl':=ECC(Pu,Eu,EPu,Cv,Ev) /\ MACu':=MAC(Kl') /\ SND({MACu'}_Knwk) /\ secret(Kl',sec_kl,{U,V})
		6. State=3 /\ RCV({MACv'}_Knwk) =|> State':=4
end role

role key_establish_response(U,V:agent,
            MAC,ECC:hash_func,
            Knwk:symmetric_key,
            Cv,Pv,EPv:text,
            Ev:public_key,
            SND,RCV:channel(dy))
played_by V
def=
	local
		State:nat,Cu:text,Eu:public_key,MACu:text,MACv:text,Kl:symmetric_key
        const   sec_kl: protocol_id
	init
		State := 0
	transition
		1. State=0 /\ RCV({Cu'}_Knwk) =|> State':=1 /\ SND({Cv}_Knwk)
		3. State=1 /\ RCV({Eu'}_Knwk) =|> State':=2 /\ SND({Ev}_Knwk) 
		5. State=2 /\ RCV({MACu'}_Knwk) =|> State':=3 /\ Kl':=ECC(Pv,Ev,EPv,Cu,Eu) /\ MACv':=MAC(Kl') /\ SND({MACv'}_Knwk) /\ secret(Kl',sec_kl,{U,V})
end role

role session_key_establish(Pv:text,EPv:text,Ev:public_key,Cv:text,U:agent,V:agent,MAC:hash_func,ECC:hash_func,Knwk:symmetric_key,Cu:text,Eu:public_key,EPu:text,Pu:text)
def=
	local
		SND2,RCV2,SND1,RCV1:channel(dy)
	composition
		key_establish_req(U,V,MAC,ECC,Knwk,Cu,Pu,EPu,Eu,SND2,RCV2) /\ key_establish_response(U,V,MAC,ECC,Knwk,Cv,Pv,EPv,Ev,SND1,RCV1)
end role

role environment()
def=
	const
		         ephPrivateKeyU:text,certU:text,ecc:hash_func,responder:agent,certV:text,ephPrivateKeyV:text,purivateKeyV:text,ephPublicKeyV:public_key,initiator:agent,mac:hash_func,nwkKey:symmetric_key,ephPublicKeyU:public_key,purivateKeyU:text,linkKey:text,sec_1:protocol_id,sec_2:protocol_id
	intruder_knowledge = {responder,initiator}
	composition
		session_key_establish(purivateKeyV,ephPrivateKeyV,ephPublicKeyV,certV,initiator,responder,mac,ecc,nwkKey,certU,ephPublicKeyU,ephPrivateKeyU,purivateKeyU)
end role

goal
	secrecy_of sec_kl
	
end goal

environment()
