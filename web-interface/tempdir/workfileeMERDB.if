%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfileeMERDB

section signature:

state_party3: agent * agent * agent * text * public_key * public_key * public_key * nat * public_key * public_key * public_key * public_key * public_key * public_key * public_key * symmetric_key * text * set(agent) * nat -> fact
state_party2: agent * agent * agent * text * public_key * public_key * public_key * nat * public_key * public_key * public_key * public_key * public_key * public_key * public_key * symmetric_key * text * set(agent) * nat -> fact
state_party1: agent * agent * agent * text * public_key * public_key * public_key * nat * text * public_key * public_key * public_key * public_key * public_key * public_key * public_key * symmetric_key * set(agent) * nat -> fact


section types:

party2_party3_xa3, party3_party2_xa2, party3_party2_y, party3_party2_x, k, party1_party3_ya3, party2_party1_x: protocol_id
K, Dummy_K, dummy_sk: symmetric_key
set_158, set_156, set_154, set_152, set_150, set_149, set_147, set_145, set_143, set_141, set_139, set_137, set_131, set_124, set_111: set
State, 20, 19, 17, 16, 13, 12, 11, 9, 8, 7, 5, SID, 2, 1, 4, 0, Dummy_State, 3, SID2, SID1: nat
Set_82, Set_61, Dummy_Set_82, Set_33, Dummy_Set_61, Dummy_Set_33, ASGoal: set(agent)
start, MGoal: message
p3, p2, P3, P1, P2, p1, A2Goal, A1Goal, i: agent
k2, X, Y, Z, Ya3, Za2, Xa2, Xa3, K1, K2, K3, k3, Dummy_Z, Dummy_Xa2, Dummy_Y, Dummy_Xa3, Dummy_Ya3, Dummy_X, dummy_pk, k1, ki: public_key
A3, G, A2, Dummy_A3, Dummy_A2, Dummy_A1, A1, dummy_nonce, g: text


section inits:

initial_state init1 := 
 iknows(start).
 iknows(p1).
 iknows(p2).
 iknows(p3).
 iknows(g).
 iknows(k1).
 iknows(k2).
 iknows(k3).
 iknows(ki).
 iknows(i).
 state_party1(p1,p2,p3,g,k1,k2,k3,0,dummy_nonce,dummy_pk,dummy_pk,dummy_pk,dummy_pk,dummy_pk,dummy_pk,dummy_pk,dummy_sk,set_111,3).
 state_party2(p2,p3,p1,g,k1,k2,k3,0,dummy_pk,dummy_pk,dummy_pk,dummy_pk,dummy_pk,dummy_pk,dummy_pk,dummy_sk,dummy_nonce,set_124,4).
 state_party3(p3,p1,p2,g,k1,k2,k3,0,dummy_pk,dummy_pk,dummy_pk,dummy_pk,dummy_pk,dummy_pk,dummy_pk,dummy_sk,dummy_nonce,set_131,5).
 state_party1(p2,p3,p1,g,k2,k3,k1,0,dummy_nonce,dummy_pk,dummy_pk,dummy_pk,dummy_pk,dummy_pk,dummy_pk,dummy_pk,dummy_sk,set_137,7).
 state_party2(p3,p1,p2,g,k2,k3,k1,0,dummy_pk,dummy_pk,dummy_pk,dummy_pk,dummy_pk,dummy_pk,dummy_pk,dummy_sk,dummy_nonce,set_139,8).
 state_party3(p1,p2,p3,g,k2,k2,k1,0,dummy_pk,dummy_pk,dummy_pk,dummy_pk,dummy_pk,dummy_pk,dummy_pk,dummy_sk,dummy_nonce,set_141,9).
 state_party1(p3,p1,p2,g,k3,k1,k2,0,dummy_nonce,dummy_pk,dummy_pk,dummy_pk,dummy_pk,dummy_pk,dummy_pk,dummy_pk,dummy_sk,set_143,11).
 state_party2(p1,p2,p3,g,k3,k1,k2,0,dummy_pk,dummy_pk,dummy_pk,dummy_pk,dummy_pk,dummy_pk,dummy_pk,dummy_sk,dummy_nonce,set_145,12).
 state_party3(p2,p3,p1,g,k3,k2,k2,0,dummy_pk,dummy_pk,dummy_pk,dummy_pk,dummy_pk,dummy_pk,dummy_pk,dummy_sk,dummy_nonce,set_147,13).
 state_party2(p2,p3,i,g,ki,k2,k3,0,dummy_pk,dummy_pk,dummy_pk,dummy_pk,dummy_pk,dummy_pk,dummy_pk,dummy_sk,dummy_nonce,set_150,16).
 state_party3(p3,i,p2,g,ki,k2,k3,0,dummy_pk,dummy_pk,dummy_pk,dummy_pk,dummy_pk,dummy_pk,dummy_pk,dummy_sk,dummy_nonce,set_152,17).
 state_party1(p1,p2,i,g,k1,k2,ki,0,dummy_nonce,dummy_pk,dummy_pk,dummy_pk,dummy_pk,dummy_pk,dummy_pk,dummy_pk,dummy_sk,set_154,19).
 state_party2(p2,i,p1,g,k1,k2,ki,0,dummy_pk,dummy_pk,dummy_pk,dummy_pk,dummy_pk,dummy_pk,dummy_pk,dummy_sk,dummy_nonce,set_156,20)


section rules:

step step_0 (P1,P2,P3,G,K1,K2,K3,Dummy_A1,Dummy_X,Y,Z,Ya3,Za2,Xa2,Xa3,K,Set_33,SID,A1) :=
 state_party1(P1,P2,P3,G,K1,K2,K3,0,Dummy_A1,Dummy_X,Y,Z,Ya3,Za2,Xa2,Xa3,K,Set_33,SID).
 iknows(start)
=[exists A1]=>
 state_party1(P1,P2,P3,G,K1,K2,K3,1,A1,exp(G,A1),Y,Z,Ya3,Za2,Xa2,Xa3,K,Set_33,SID).
 iknows(crypt(K2,crypt(inv(K1),pair(P1,exp(G,A1))))).
 witness(P1,P2,party2_party1_x,exp(G,A1))

step step_1 (P1,P2,P3,G,K1,K2,K3,A1,X,Y,Z,Dummy_Ya3,Za2,Xa2,Dummy_Xa3,Dummy_K,Dummy_Set_33,SID,Ya3,Xa3) :=
 state_party1(P1,P2,P3,G,K1,K2,K3,1,A1,X,Y,Z,Dummy_Ya3,Za2,Xa2,Dummy_Xa3,Dummy_K,Dummy_Set_33,SID).
 iknows(crypt(K1,crypt(inv(K3),pair(Xa3,Ya3))))
 =>
 state_party1(P1,P2,P3,G,K1,K2,K3,2,A1,X,Y,Z,Ya3,Za2,Xa2,Xa3,exp(Ya3,A1),Dummy_Set_33,SID).
 request(P1,P3,party1_party3_ya3,Ya3,SID).
 secret(exp(Ya3,A1),k,Dummy_Set_33).
 contains(P1,Dummy_Set_33).
 contains(P2,Dummy_Set_33).
 contains(P3,Dummy_Set_33)

step step_2 (P2,P3,P1,G,K1,K2,K3,Dummy_X,Dummy_Y,Z,Ya3,Za2,Dummy_Xa2,Xa3,K,Dummy_A2,Set_61,SID,X,A2) :=
 state_party2(P2,P3,P1,G,K1,K2,K3,0,Dummy_X,Dummy_Y,Z,Ya3,Za2,Dummy_Xa2,Xa3,K,Dummy_A2,Set_61,SID).
 iknows(crypt(K2,crypt(inv(K1),pair(P1,X))))
=[exists A2]=>
 state_party2(P2,P3,P1,G,K1,K2,K3,1,X,exp(G,A2),Z,Ya3,Za2,exp(X,A2),Xa3,K,A2,Set_61,SID).
 request(P2,p1,party2_party1_x,X,SID).
 iknows(crypt(K3,crypt(inv(K2),pair(P1,pair(P2,pair(X,pair(exp(G,A2),exp(X,A2)))))))).
 witness(P2,P3,party3_party2_x,X).
 witness(P2,P3,party3_party2_y,exp(G,A2)).
 witness(P2,P3,party3_party2_xa2,exp(X,A2))

step step_3 (P2,P3,P1,G,K1,K2,K3,X,Y,Z,Dummy_Ya3,Za2,Xa2,Dummy_Xa3,Dummy_K,A2,Dummy_Set_61,SID,Ya3,Xa3) :=
 state_party2(P2,P3,P1,G,K1,K2,K3,1,X,Y,Z,Dummy_Ya3,Za2,Xa2,Dummy_Xa3,Dummy_K,A2,Dummy_Set_61,SID).
 iknows(crypt(K2,crypt(inv(k3),pair(Xa3,Ya3))))
 =>
 state_party2(P2,P3,P1,G,K1,K2,K3,2,X,Y,Z,Ya3,Za2,Xa2,Xa3,exp(Xa3,A2),A2,Dummy_Set_61,SID).
 secret(exp(Xa3,A2),k,Dummy_Set_61).
 contains(P1,Dummy_Set_61).
 contains(P2,Dummy_Set_61).
 contains(P3,Dummy_Set_61)

step step_4 (P3,P1,P2,G,K1,K2,K3,Dummy_X,Dummy_Y,Dummy_Z,Dummy_Ya3,Za2,Dummy_Xa2,Dummy_Xa3,Dummy_K,Dummy_A3,Dummy_Set_82,SID,X,Y,Xa2,A3) :=
 state_party3(P3,P1,P2,G,K1,K2,K3,0,Dummy_X,Dummy_Y,Dummy_Z,Dummy_Ya3,Za2,Dummy_Xa2,Dummy_Xa3,Dummy_K,Dummy_A3,Dummy_Set_82,SID).
 iknows(crypt(K3,crypt(inv(K2),pair(P1,pair(P2,pair(X,pair(Y,Xa2)))))))
=[exists A3]=>
 state_party3(P3,P1,P2,G,K1,K2,K3,1,X,Y,exp(G,A3),exp(Y,A3),Za2,Xa2,exp(X,A3),exp(Xa2,A3),A3,Dummy_Set_82,SID).
 request(P3,P2,party3_party2_x,X,SID).
 request(P3,P2,party3_party2_y,Y,SID).
 request(P3,P2,party3_party2_xa2,Xa2,SID).
 secret(exp(Xa2,A3),k,Dummy_Set_82).
 iknows(crypt(K1,crypt(inv(K3),pair(exp(X,A3),exp(Y,A3))))).
 iknows(crypt(K2,crypt(inv(K3),pair(exp(X,A3),exp(Y,A3))))).
 witness(P3,P1,party1_party3_ya3,exp(Y,A3)).
 contains(P1,Dummy_Set_82).
 contains(P2,Dummy_Set_82).
 contains(P3,Dummy_Set_82)


section properties:

property secrecy_of_k (MGoal,ASGoal) :=
 [] ((secret(MGoal,k,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property authentication_on_party1_party3_ya3 (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,party1_party3_ya3,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,party1_party3_ya3,MGoal))
     /\ ((request(A1Goal,A2Goal,party1_party3_ya3,MGoal,SID1)
           /\ request(A1Goal,A2Goal,party1_party3_ya3,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_party3_party2_x (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,party3_party2_x,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,party3_party2_x,MGoal))
     /\ ((request(A1Goal,A2Goal,party3_party2_x,MGoal,SID1)
           /\ request(A1Goal,A2Goal,party3_party2_x,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_party3_party2_y (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,party3_party2_y,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,party3_party2_y,MGoal))
     /\ ((request(A1Goal,A2Goal,party3_party2_y,MGoal,SID1)
           /\ request(A1Goal,A2Goal,party3_party2_y,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_party3_party2_xa2 (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,party3_party2_xa2,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,party3_party2_xa2,MGoal))
     /\ ((request(A1Goal,A2Goal,party3_party2_xa2,MGoal,SID1)
           /\ request(A1Goal,A2Goal,party3_party2_xa2,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_party2_party1_x (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,party2_party1_x,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,party2_party1_x,MGoal))
     /\ ((request(A1Goal,A2Goal,party2_party1_x,MGoal,SID1)
           /\ request(A1Goal,A2Goal,party2_party1_x,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state secrecy_of_k (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,k,ASGoal) &
 not(contains(i,ASGoal))

attack_state authentication_on_party1_party3_ya3 (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,party1_party3_ya3,MGoal,SID) &
 not(witness(A2Goal,A1Goal,party1_party3_ya3,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_party1_party3_ya3 (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,party1_party3_ya3,MGoal,SID1).
 request(A1Goal,A2Goal,party1_party3_ya3,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_party3_party2_x (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,party3_party2_x,MGoal,SID) &
 not(witness(A2Goal,A1Goal,party3_party2_x,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_party3_party2_x (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,party3_party2_x,MGoal,SID1).
 request(A1Goal,A2Goal,party3_party2_x,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_party3_party2_y (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,party3_party2_y,MGoal,SID) &
 not(witness(A2Goal,A1Goal,party3_party2_y,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_party3_party2_y (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,party3_party2_y,MGoal,SID1).
 request(A1Goal,A2Goal,party3_party2_y,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_party3_party2_xa2 (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,party3_party2_xa2,MGoal,SID) &
 not(witness(A2Goal,A1Goal,party3_party2_xa2,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_party3_party2_xa2 (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,party3_party2_xa2,MGoal,SID1).
 request(A1Goal,A2Goal,party3_party2_xa2,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_party2_party1_x (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,party2_party1_x,MGoal,SID) &
 not(witness(A2Goal,A1Goal,party2_party1_x,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_party2_party1_x (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,party2_party1_x,MGoal,SID1).
 request(A1Goal,A2Goal,party2_party1_x,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

