%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfile1yFjSC

section signature:

state_server: agent * agent * symmetric_key * hash_func * nat * text * text * text * text * text * text * text * text * text * text * text * text * text * text * set(agent) * set(agent) * nat -> fact
state_user: agent * agent * symmetric_key * hash_func * nat * text * text * text * text * text * text * text * text * text * text * text * text * text * text * set(text) * set(agent) * set(symmetric_key) * set(agent) * nat -> fact


section types:

MGoal, start: message
abc1, abc2, user_server_na, server_user_a, server_user_id, server_user_nb: protocol_id
Set_39, Dummy_Set_39: set(symmetric_key)
dummy_hash, h, H: hash_func
ASGoal, Set_72, Set_71, Set_40, Set_37, Dummy_Set_72, Dummy_Set_71, Dummy_Set_40, Dummy_Set_37: set(agent)
dummy_sk, SKus: symmetric_key
Set_36, Dummy_Set_36: set(text)
dummy_nonce, PWi, Idi, Idi1, A, Ni, Y, X, Na, CID, Bi, Ci, Nb, HPWi, Ack, Dummy_Idi1, Dummy_X, Z, Dummy_PWi_new, Dummy_Ni_new, Dummy_Nb, Dummy_A, Dummy_CID, Dummy_Na, Dummy_Y, Ni_new, Dummy_Ni, PWi_new, Dummy_Z, Dummy_PWi, Dummy_Idi: text
SID2, SID1, SID, State, 10, 5, 8, 6, 3, 2, 1, 0, 4, Dummy_State: nat
A2Goal, A1Goal, u, s, U, S, i: agent
set_100, set_123, set_122, set_103, set_102, set_101: set


section inits:

initial_state init1 := 
 iknows(start).
 iknows(u).
 iknows(s).
 iknows(h).
 iknows(i).
 state_user(u,s,dummy_sk,dummy_hash,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_100,set_101,set_102,set_103,3).
 state_server(s,u,dummy_sk,dummy_hash,1,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_122,set_123,4)


section rules:

step step_0 (U,S,SKus,H,Dummy_Idi,A,PWi,Z,Ni,Y,Na,CID,Bi,Ci,Nb,Ack,Ni_new,PWi_new,Dummy_Set_36,Dummy_Set_37,Dummy_Set_39,Dummy_Set_40,SID,Idi) :=
 state_user(U,S,SKus,H,0,Dummy_Idi,A,PWi,Z,Ni,Y,Na,CID,Bi,Ci,Nb,Ack,Ni_new,PWi_new,Dummy_Set_36,Dummy_Set_37,Dummy_Set_39,Dummy_Set_40,SID).
 iknows(start)
=[exists Idi]=>
 state_user(U,S,SKus,H,2,Idi,A,PWi,Z,Ni,Y,Na,CID,Bi,Ci,Nb,Ack,Ni_new,PWi_new,Dummy_Set_36,Dummy_Set_37,Dummy_Set_39,Dummy_Set_40,SID).
 iknows(scrypt(SKus,Idi)).
 secret(Dummy_Set_36,abc1,Dummy_Set_37).
 secret(Dummy_Set_39,abc2,Dummy_Set_40).
 witness(U,S,server_user_id,Idi).
 contains(Idi,Dummy_Set_36).
 contains(U,Dummy_Set_37).
 contains(S,Dummy_Set_37).
 contains(SKus,Dummy_Set_39).
 contains(U,Dummy_Set_40).
 contains(S,Dummy_Set_40)

step step_1 (U,S,SKus,H,Idi,A,Dummy_PWi,Dummy_Z,Dummy_Ni,Dummy_Y,Dummy_Na,Dummy_CID,Bi,Ci,Nb,Ack,Ni_new,PWi_new,Set_36,Set_37,Set_39,Set_40,SID,PWi,Ni,Y,Na) :=
 state_user(U,S,SKus,H,2,Idi,A,Dummy_PWi,Dummy_Z,Dummy_Ni,Dummy_Y,Dummy_Na,Dummy_CID,Bi,Ci,Nb,Ack,Ni_new,PWi_new,Set_36,Set_37,Set_39,Set_40,SID).
 iknows(scrypt(SKus,pair(PWi,pair(H,pair(Ni,Y)))))
=[exists Na]=>
 state_user(U,S,SKus,H,6,Idi,A,PWi,xor(apply(H,PWi),apply(H,xor(Ni,xor(Y,Na)))),Ni,Y,Na,xor(Idi,xor(apply(H,PWi),apply(H,xor(Ni,xor(Y,Na))))),Bi,Ci,Nb,Ack,Ni_new,PWi_new,Set_36,Set_37,Set_39,Set_40,SID).
 witness(U,S,user_server_na,Na).
 iknows(pair(Idi,pair(xor(Idi,xor(apply(H,PWi),apply(H,xor(Ni,xor(Y,Na))))),pair(Ni,Na))))

step step_2 (U,S,SKus,H,Idi,Dummy_A,PWi,Dummy_Z,Ni,Y,Na,CID,Bi,Ci,Dummy_Nb,Ack,Ni_new,PWi_new,Set_36,Set_37,Set_39,Set_40,SID,A,Nb) :=
 state_user(U,S,SKus,H,6,Idi,Dummy_A,PWi,Dummy_Z,Ni,Y,Na,CID,Bi,Ci,Dummy_Nb,Ack,Ni_new,PWi_new,Set_36,Set_37,Set_39,Set_40,SID).
 iknows(scrypt(SKus,pair(A,Nb)))
 =>
 state_user(U,S,SKus,H,8,Idi,A,PWi,apply(H,xor(xor(apply(H,PWi),Y),Nb)),Ni,Y,Na,CID,Bi,Ci,Nb,Ack,Ni_new,PWi_new,Set_36,Set_37,Set_39,Set_40,SID).
 request(U,S,server_user_a,A,SID).
 request(U,S,server_user_nb,Nb,SID)

step step_3 (U,S,SKus,H,Idi,A,PWi,Z,Dummy_Ni,Y,Na,CID,Bi,Ci,Nb,Ack,Dummy_Ni_new,Dummy_PWi_new,Set_36,Set_37,Set_39,Set_40,SID,PWi_new) :=
 state_user(U,S,SKus,H,8,Idi,A,PWi,Z,Dummy_Ni,Y,Na,CID,Bi,Ci,Nb,Ack,Dummy_Ni_new,Dummy_PWi_new,Set_36,Set_37,Set_39,Set_40,SID)
=[exists PWi_new]=>
 state_user(U,S,SKus,H,10,Idi,A,PWi,Z,xor(Dummy_Ni,xor(apply(H,PWi),apply(H,PWi_new))),Y,Na,CID,Bi,Ci,Nb,Ack,xor(Dummy_Ni,xor(apply(H,PWi),apply(H,PWi_new))),PWi_new,Set_36,Set_37,Set_39,Set_40,SID)

step step_4 (S,U,SKus,H,Dummy_PWi,Dummy_Idi,Idi1,A,Dummy_Ni,Dummy_Y,Dummy_X,Na,CID,Bi,Ci,Nb,HPWi,Ack,Dummy_Set_71,Dummy_Set_72,SID,PWi,Idi,Y,X) :=
 state_server(S,U,SKus,H,1,Dummy_PWi,Dummy_Idi,Idi1,A,Dummy_Ni,Dummy_Y,Dummy_X,Na,CID,Bi,Ci,Nb,HPWi,Ack,Dummy_Set_71,Dummy_Set_72,SID).
 iknows(scrypt(SKus,Idi))
=[exists Y,PWi,X]=>
 state_server(S,U,SKus,H,3,PWi,Idi,Idi1,A,xor(Idi,xor(apply(H,PWi),apply(H,X))),Y,X,Na,CID,Bi,Ci,Nb,HPWi,Ack,Dummy_Set_71,Dummy_Set_72,SID).
 secret(X,abc1,Dummy_Set_71).
 secret(Y,abc2,Dummy_Set_72).
 iknows(scrypt(SKus,pair(PWi,pair(H,pair(xor(Idi,xor(apply(H,PWi),apply(H,X))),Y))))).
 contains(S,Dummy_Set_71).
 contains(U,Dummy_Set_72).
 contains(S,Dummy_Set_72)

step step_5 (S,U,SKus,H,Dummy_PWi,Dummy_Idi,Dummy_Idi1,Dummy_A,Dummy_Ni,Y,X,Dummy_Na,Dummy_CID,Bi,Ci,Dummy_Nb,HPWi,Ack,Set_71,Set_72,SID,Idi,Ni,Na,CID,Nb) :=
 state_server(S,U,SKus,H,3,Dummy_PWi,Dummy_Idi,Dummy_Idi1,Dummy_A,Dummy_Ni,Y,X,Dummy_Na,Dummy_CID,Bi,Ci,Dummy_Nb,HPWi,Ack,Set_71,Set_72,SID).
 iknows(pair(Idi,pair(CID,pair(Ni,Na))))
=[exists Nb]=>
 state_server(S,U,SKus,H,5,xor(Idi,xor(CID,apply(H,xor(Ni,xor(Y,Na))))),Idi,xor(Ni,xor(apply(H,X),apply(H,xor(Idi,xor(CID,apply(H,xor(Ni,xor(Y,Na)))))))),apply(H,xor(Nb,xor(apply(H,xor(Idi,xor(CID,apply(H,xor(Ni,xor(Y,Na)))))),Y))),Ni,Y,X,Na,CID,Bi,Ci,Nb,HPWi,Ack,Set_71,Set_72,SID).
 request(S,U,user_server_na,Na,SID).
 request(S,U,server_user_id,xor(Ni,xor(apply(H,X),apply(H,xor(Idi,xor(CID,apply(H,xor(Ni,xor(Y,Na)))))))),SID).
 iknows(scrypt(SKus,pair(apply(H,xor(Nb,xor(apply(H,xor(Idi,xor(CID,apply(H,xor(Ni,xor(Y,Na)))))),Y))),Nb))).
 witness(S,U,server_user_nb,Nb).
 witness(S,U,server_user_a,apply(H,xor(Nb,xor(apply(H,xor(Idi,xor(CID,apply(H,xor(Ni,xor(Y,Na)))))),Y))))


section properties:

property secrecy_of_abc1 (MGoal,ASGoal) :=
 [] ((secret(MGoal,abc1,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_abc2 (MGoal,ASGoal) :=
 [] ((secret(MGoal,abc2,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property authentication_on_user_server_na (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,user_server_na,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,user_server_na,MGoal))
     /\ ((request(A1Goal,A2Goal,user_server_na,MGoal,SID1)
           /\ request(A1Goal,A2Goal,user_server_na,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_server_user_nb (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,server_user_nb,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,server_user_nb,MGoal))
     /\ ((request(A1Goal,A2Goal,server_user_nb,MGoal,SID1)
           /\ request(A1Goal,A2Goal,server_user_nb,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_server_user_id (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,server_user_id,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,server_user_id,MGoal))
     /\ ((request(A1Goal,A2Goal,server_user_id,MGoal,SID1)
           /\ request(A1Goal,A2Goal,server_user_id,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_server_user_a (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,server_user_a,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,server_user_a,MGoal))
     /\ ((request(A1Goal,A2Goal,server_user_a,MGoal,SID1)
           /\ request(A1Goal,A2Goal,server_user_a,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state secrecy_of_abc1 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,abc1,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_abc2 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,abc2,ASGoal) &
 not(contains(i,ASGoal))

attack_state authentication_on_user_server_na (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,user_server_na,MGoal,SID) &
 not(witness(A2Goal,A1Goal,user_server_na,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_user_server_na (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,user_server_na,MGoal,SID1).
 request(A1Goal,A2Goal,user_server_na,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_server_user_nb (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,server_user_nb,MGoal,SID) &
 not(witness(A2Goal,A1Goal,server_user_nb,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_server_user_nb (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,server_user_nb,MGoal,SID1).
 request(A1Goal,A2Goal,server_user_nb,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_server_user_id (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,server_user_id,MGoal,SID) &
 not(witness(A2Goal,A1Goal,server_user_id,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_server_user_id (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,server_user_id,MGoal,SID1).
 request(A1Goal,A2Goal,server_user_id,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_server_user_a (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,server_user_a,MGoal,SID) &
 not(witness(A2Goal,A1Goal,server_user_a,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_server_user_a (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,server_user_a,MGoal,SID1).
 request(A1Goal,A2Goal,server_user_a,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

