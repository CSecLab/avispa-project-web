%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfile8xxMXj

section signature:

state_server: agent * agent * symmetric_key * hash_func * nat * text * text * text * text * text * text * text * text * text * text * message * message * message * message * message * message * hash_func * set(text) * set(agent) * set(text) * set(agent) * nat -> fact
state_alice: agent * agent * symmetric_key * hash_func * nat * text * text * text * text * text * text * text * text * text * text * message * message * message * message * message * message * hash_func * set(text) * set(text) * set(agent) * set(text) * set(agent) * nat -> fact


section types:

Set_76, Set_74, Dummy_Set_76, Dummy_Set_74, Set_44, Set_40, Set_38, Dummy_Set_44, Dummy_Set_40, Dummy_Set_38: set(text)
set_162, set_161, set_160, set_159, set_157, set_156, set_155, set_154, set_153, set_142, set_141, set_140, set_139, set_118, set_117, set_116, set_115, set_114: set
7, 6, State, 3, 4, 2, SID, 1, 0, Dummy_State, SID2, SID1: nat
h, Inc, H, dummy_hash: hash_func
skas, SKas: symmetric_key
Set_77, Set_75, Dummy_Set_77, Dummy_Set_75, Set_45, Set_41, Dummy_Set_45, Dummy_Set_41, ASGoal: set(agent)
Ci, Di, Gi, Li, Rc, Zi, Dummy_Rc, start, Dummy_Li, Dummy_Gi, Dummy_Di, Dummy_Zi, Dummy_Ci, dummy_msg, MGoal: message
server_alice, alice_server, subs1, subs2, subs3, subs4, subs5, alice_server_ri, server_alice_rs: protocol_id
ui, s, S, Ui, A2Goal, A1Goal, i: agent
pwfi, bi, fi, ai, xs, gi, li, ci, di, IDi, PWi, Ri, Rs, Bi, Fi, PWFi, Ti, Ai, Xs, Dummy_Rs, Dummy_Xs, Dummy_Ti, Dummy_Ai, Dummy_Ri, Dummy_PWFi, Dummy_Fi, dummy_nonce, idi, pwi, ri, rs: text


section inits:

initial_state init1 := 
 iknows(start).
 iknows(ui).
 iknows(s).
 iknows(h).
 iknows(pwfi).
 iknows(ai).
 iknows(gi).
 iknows(li).
 iknows(ci).
 iknows(di).
 iknows(i).
 state_alice(ui,s,skas,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_hash,set_114,set_115,set_116,set_117,set_118,3).
 state_server(ui,s,skas,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_hash,set_139,set_140,set_141,set_142,4).
 state_alice(s,ui,skas,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_hash,set_153,set_154,set_155,set_156,set_157,6).
 state_server(s,ui,skas,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_hash,set_159,set_160,set_161,set_162,7)


section rules:

step step_0 (Ui,S,SKas,H,IDi,PWi,Ri,Bi,Dummy_Fi,Dummy_PWFi,Ti,Ai,Rs,Xs,Ci,Zi,Di,Gi,Li,Rc,Inc,Dummy_Set_38,Dummy_Set_40,Dummy_Set_41,Set_44,Set_45,SID) :=
 state_alice(Ui,S,SKas,H,0,IDi,PWi,Ri,Bi,Dummy_Fi,Dummy_PWFi,Ti,Ai,Rs,Xs,Ci,Zi,Di,Gi,Li,Rc,Inc,Dummy_Set_38,Dummy_Set_40,Dummy_Set_41,Set_44,Set_45,SID).
 iknows(start)
 =>
 state_alice(Ui,S,SKas,H,1,IDi,PWi,Ri,Bi,apply(H,Bi),apply(H,pair(IDi,pair(PWi,apply(H,Bi)))),Ti,Ai,Rs,Xs,Ci,Zi,Di,Gi,Li,Rc,Inc,Dummy_Set_38,Dummy_Set_40,Dummy_Set_41,Set_44,Set_45,SID).
 iknows(scrypt(SKas,pair(apply(H,Bi),apply(H,pair(IDi,pair(PWi,apply(H,Bi))))))).
 secret(Dummy_Set_38,subs1,Ui).
 secret(Dummy_Set_40,subs2,Dummy_Set_41).
 contains(PWi,Dummy_Set_38).
 contains(IDi,Dummy_Set_40).
 contains(Ui,Dummy_Set_41).
 contains(S,Dummy_Set_41)

step step_1 (Ui,S,SKas,H,IDi,PWi,Dummy_Ri,Bi,Dummy_Fi,Dummy_PWFi,Ti,Dummy_Ai,Rs,Xs,Dummy_Ci,Dummy_Zi,Dummy_Di,Gi,Li,Rc,Inc,Set_38,Set_40,Set_41,Dummy_Set_44,Dummy_Set_45,SID,Ri,Fi,PWFi,Ai) :=
 state_alice(Ui,S,SKas,H,1,IDi,PWi,Dummy_Ri,Bi,Dummy_Fi,Dummy_PWFi,Ti,Dummy_Ai,Rs,Xs,Dummy_Ci,Dummy_Zi,Dummy_Di,Gi,Li,Rc,Inc,Set_38,Set_40,Set_41,Dummy_Set_44,Dummy_Set_45,SID).
 iknows(scrypt(SKas,pair(Fi,pair(PWFi,Ai))))
=[exists Ri]=>
 state_alice(Ui,S,SKas,H,2,IDi,PWi,Ri,Bi,Fi,PWFi,Ti,Ai,Rs,Xs,apply(H,pair(IDi,pair(xor(Ai,PWFi),Ri))),xor(Ai,PWFi),xor(xor(Ai,PWFi),Ri),Gi,Li,Rc,Inc,Set_38,Set_40,Set_41,Dummy_Set_44,Dummy_Set_45,SID).
 iknows(pair(apply(H,pair(IDi,pair(xor(Ai,PWFi),Ri))),xor(xor(Ai,PWFi),Ri))).
 secret(Dummy_Set_44,subs3,Dummy_Set_45).
 contains(Ri,Dummy_Set_44).
 contains(Ui,Dummy_Set_45).
 contains(S,Dummy_Set_45)

step step_2 (Ui,S,SKas,H,IDi,PWi,Ri,Bi,Fi,PWFi,Ti,Ai,Rs,Xs,Ci,Zi,Di,Dummy_Gi,Dummy_Li,Rc,Inc,Set_38,Set_40,Set_41,Set_44,Set_45,SID,Gi,Li) :=
 state_alice(Ui,S,SKas,H,2,IDi,PWi,Ri,Bi,Fi,PWFi,Ti,Ai,Rs,Xs,Ci,Zi,Di,Dummy_Gi,Dummy_Li,Rc,Inc,Set_38,Set_40,Set_41,Set_44,Set_45,SID).
 iknows(pair(Gi,Li))
 =>
 state_alice(Ui,S,SKas,H,3,IDi,PWi,Ri,Bi,Fi,PWFi,Ti,Ai,Rs,Xs,Ci,Zi,Di,Gi,Li,Rc,Inc,Set_38,Set_40,Set_41,Set_44,Set_45,SID)

step step_3 (S,Ui,SKas,H,IDi,PWi,Ri,Rs,Bi,Dummy_Fi,Dummy_PWFi,Dummy_Ti,Dummy_Ai,Dummy_Xs,Ci,Di,Gi,Li,Rc,Zi,Inc,Dummy_Set_74,Dummy_Set_75,Set_76,Set_77,SID,Fi,PWFi,Ti,Xs) :=
 state_server(S,Ui,SKas,H,0,IDi,PWi,Ri,Rs,Bi,Dummy_Fi,Dummy_PWFi,Dummy_Ti,Dummy_Ai,Dummy_Xs,Ci,Di,Gi,Li,Rc,Zi,Inc,Dummy_Set_74,Dummy_Set_75,Set_76,Set_77,SID).
 iknows(pair(Fi,PWFi))
=[exists Ti,Xs]=>
 state_server(S,Ui,SKas,H,1,IDi,PWi,Ri,Rs,Bi,Fi,PWFi,Ti,xor(apply(H,pair(IDi,PWFi)),apply(H,pair(Xs,Ti))),Xs,Ci,Di,Gi,Li,Rc,Zi,Inc,Dummy_Set_74,Dummy_Set_75,Set_76,Set_77,SID).
 secret(Dummy_Set_74,subs4,Dummy_Set_75).
 iknows(scrypt(SKas,pair(PWFi,pair(Fi,xor(apply(H,pair(IDi,PWFi)),apply(H,pair(Xs,Ti))))))).
 contains(Xs,Dummy_Set_74).
 contains(S,Dummy_Set_75)

step step_4 (S,Ui,SKas,H,IDi,PWi,Ri,Dummy_Rs,Bi,Fi,PWFi,Ti,Ai,Xs,Dummy_Ci,Dummy_Di,Dummy_Gi,Dummy_Li,Dummy_Rc,Zi,Inc,Set_74,Set_75,Dummy_Set_76,Dummy_Set_77,SID,Rs,Ci,Di) :=
 state_server(S,Ui,SKas,H,1,IDi,PWi,Ri,Dummy_Rs,Bi,Fi,PWFi,Ti,Ai,Xs,Dummy_Ci,Dummy_Di,Dummy_Gi,Dummy_Li,Dummy_Rc,Zi,Inc,Set_74,Set_75,Dummy_Set_76,Dummy_Set_77,SID).
 iknows(pair(Ci,Di))
=[exists Rs]=>
 state_server(S,Ui,SKas,H,2,IDi,PWi,Ri,Rs,Bi,Fi,PWFi,Ti,Ai,Xs,Ci,Di,apply(H,pair(IDi,pair(apply(H,pair(Xs,Ti)),Rs))),xor(xor(Di,apply(H,pair(Xs,Ti))),Rs),xor(Di,apply(H,pair(Xs,Ti))),Zi,Inc,Set_74,Set_75,Dummy_Set_76,Dummy_Set_77,SID).
 secret(Dummy_Set_76,subs5,Dummy_Set_77).
 iknows(pair(apply(H,pair(IDi,pair(apply(H,pair(Xs,Ti)),Rs))),xor(xor(Di,apply(H,pair(Xs,Ti))),Rs))).
 contains(Rs,Dummy_Set_76).
 contains(Ui,Dummy_Set_77).
 contains(S,Dummy_Set_77)


section properties:

property secrecy_of_subs1 (MGoal,ASGoal) :=
 [] ((secret(MGoal,subs1,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_subs2 (MGoal,ASGoal) :=
 [] ((secret(MGoal,subs2,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_subs3 (MGoal,ASGoal) :=
 [] ((secret(MGoal,subs3,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_subs4 (MGoal,ASGoal) :=
 [] ((secret(MGoal,subs4,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_subs5 (MGoal,ASGoal) :=
 [] ((secret(MGoal,subs5,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property authentication_on_alice_server_ri (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,alice_server_ri,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,alice_server_ri,MGoal))
     /\ ((request(A1Goal,A2Goal,alice_server_ri,MGoal,SID1)
           /\ request(A1Goal,A2Goal,alice_server_ri,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_server_alice_rs (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,server_alice_rs,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,server_alice_rs,MGoal))
     /\ ((request(A1Goal,A2Goal,server_alice_rs,MGoal,SID1)
           /\ request(A1Goal,A2Goal,server_alice_rs,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state secrecy_of_subs1 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,subs1,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_subs2 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,subs2,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_subs3 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,subs3,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_subs4 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,subs4,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_subs5 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,subs5,ASGoal) &
 not(contains(i,ASGoal))

attack_state authentication_on_alice_server_ri (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,alice_server_ri,MGoal,SID) &
 not(witness(A2Goal,A1Goal,alice_server_ri,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_alice_server_ri (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,alice_server_ri,MGoal,SID1).
 request(A1Goal,A2Goal,alice_server_ri,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_server_alice_rs (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,server_alice_rs,MGoal,SID) &
 not(witness(A2Goal,A1Goal,server_alice_rs,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_server_alice_rs (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,server_alice_rs,MGoal,SID1).
 request(A1Goal,A2Goal,server_alice_rs,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

