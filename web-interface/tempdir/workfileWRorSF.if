%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfileWRorSF

section signature:

state_bob: agent * agent * symmetric_key * hash_func * hash_func * nat * text * text * text * text * text * text * text * text * text * text * text * text * hash_func * text * text * set(text) * set(text) * set(agent) * nat -> fact
state_alice: agent * agent * symmetric_key * hash_func * hash_func * nat * text * text * text * text * text * text * text * text * text * text * text * hash_func * text * text * set(text) * set(text) * set(agent) * nat -> fact


section types:

MGoal, start: message
alice_bob_t1, bob_alice_t3, alice_bob_r, alice_bob_u, subs1, subs2, subs3: protocol_id
set_97, set_96, set_95, set_127, set_126, set_125, set_123, set_122, set_121, set_113, set_112, set_111: set
dummy_hash, bh, h, F, BH, H: hash_func
skus, SKus: symmetric_key
ASGoal, Set_71, Set_40, Dummy_Set_71, Dummy_Set_40: set(agent)
Set_70, Set_69, Set_39, Set_37, Dummy_Set_70, Dummy_Set_69, Dummy_Set_39, Dummy_Set_37: set(text)
dummy_nonce, Xi, Yi, Username, T1, T3, U, MK, R, PWi, N, Bi, RPWi, P, SK, Dummy_Yi, Dummy_Xi, Dummy_T3, Dummy_U, Dummy_T1, Dummy_RPWi, Dummy_R: text
A2Goal, A1Goal, ui, s, Ui, S, i: agent
SID, SID2, SID1, State, 3, 2, 1, 0, 7, 6, 4, Dummy_State: nat


section inits:

initial_state init1 := 
 iknows(start).
 iknows(ui).
 iknows(s).
 iknows(bh).
 iknows(h).
 iknows(i).
 state_alice(ui,s,skus,h,bh,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_hash,dummy_nonce,dummy_nonce,set_95,set_96,set_97,3).
 state_bob(s,ui,skus,h,bh,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_hash,dummy_nonce,dummy_nonce,set_111,set_112,set_113,4).
 state_alice(ui,s,skus,h,bh,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_hash,dummy_nonce,dummy_nonce,set_121,set_122,set_123,6).
 state_bob(s,ui,skus,h,bh,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_hash,dummy_nonce,dummy_nonce,set_125,set_126,set_127,7)


section rules:

step step_0 (Ui,S,SKus,H,BH,Dummy_R,PWi,N,Bi,Dummy_RPWi,P,Username,T1,T3,U,MK,F,Xi,Yi,Dummy_Set_37,Dummy_Set_39,Dummy_Set_40,SID,R) :=
 state_alice(Ui,S,SKus,H,BH,0,Dummy_R,PWi,N,Bi,Dummy_RPWi,P,Username,T1,T3,U,MK,F,Xi,Yi,Dummy_Set_37,Dummy_Set_39,Dummy_Set_40,SID).
 iknows(start)
=[exists R]=>
 state_alice(Ui,S,SKus,H,BH,1,R,PWi,N,Bi,apply(H,pair(R,pair(PWi,Username))),P,Username,T1,T3,U,MK,F,Xi,Yi,Dummy_Set_37,Dummy_Set_39,Dummy_Set_40,SID).
 secret(Dummy_Set_37,subs2,Ui).
 secret(Dummy_Set_39,subs3,Dummy_Set_40).
 iknows(scrypt(SKus,pair(Username,apply(H,pair(R,pair(PWi,Username)))))).
 contains(PWi,Dummy_Set_37).
 contains(Bi,Dummy_Set_37).
 contains(R,Dummy_Set_37).
 contains(Username,Dummy_Set_39).
 contains(Ui,Dummy_Set_40).
 contains(S,Dummy_Set_40)

step step_1 (Ui,S,SKus,H,BH,Dummy_R,PWi,N,Bi,RPWi,P,Username,Dummy_T1,T3,Dummy_U,MK,F,Xi,Yi,Set_37,Set_39,Set_40,SID,R,T1,U) :=
 state_alice(Ui,S,SKus,H,BH,1,Dummy_R,PWi,N,Bi,RPWi,P,Username,Dummy_T1,T3,Dummy_U,MK,F,Xi,Yi,Set_37,Set_39,Set_40,SID).
 iknows(scrypt(SKus,pair(xor(apply(H,pair(MK,pair(Username,N))),apply(H,pair(R,pair(PWi,Username)))),pair(apply(F,pair(MK,P)),H))))
=[exists T1,U]=>
 state_alice(Ui,S,SKus,H,BH,2,R,PWi,N,Bi,RPWi,P,Username,T1,T3,U,MK,F,Xi,Yi,Set_37,Set_39,Set_40,SID).
 iknows(pair(xor(Username,apply(H,apply(F,pair(U,pair(MK,P))))),pair(apply(H,pair(Username,pair(apply(H,pair(MK,pair(Username,N))),pair(apply(F,pair(U,pair(MK,P))),pair(apply(F,pair(U,P)),T1))))),pair(apply(F,pair(U,P)),T1)))).
 witness(Ui,S,alice_bob_t1,T1)

step step_2 (Ui,S,SKus,H,BH,R,PWi,N,Bi,RPWi,P,Username,Dummy_T1,Dummy_T3,Dummy_U,MK,F,Xi,Yi,Set_37,Set_39,Set_40,SID,T1,T3,U) :=
 state_alice(Ui,S,SKus,H,BH,2,R,PWi,N,Bi,RPWi,P,Username,Dummy_T1,Dummy_T3,Dummy_U,MK,F,Xi,Yi,Set_37,Set_39,Set_40,SID).
 iknows(pair(apply(H,pair(apply(H,pair(Username,pair(apply(H,pair(MK,pair(Username,N))),pair(apply(F,pair(MK,pair(U,P))),pair(T1,T3))))),pair(T1,pair(T3,apply(F,pair(MK,pair(U,P))))))),T3))
 =>
 state_alice(Ui,S,SKus,H,BH,3,R,PWi,N,Bi,RPWi,P,Username,T1,T3,U,MK,F,Xi,Yi,Set_37,Set_39,Set_40,SID).
 request(S,Ui,bob_alice_t3,T3,SID)

step step_3 (S,Ui,SKus,H,BH,Dummy_R,PWi,N,Bi,RPWi,P,SK,Username,T1,T3,U,MK,F,Dummy_Xi,Dummy_Yi,Dummy_Set_69,Dummy_Set_70,Dummy_Set_71,SID,R) :=
 state_bob(S,Ui,SKus,H,BH,0,Dummy_R,PWi,N,Bi,RPWi,P,SK,Username,T1,T3,U,MK,F,Dummy_Xi,Dummy_Yi,Dummy_Set_69,Dummy_Set_70,Dummy_Set_71,SID).
 iknows(scrypt(SKus,pair(Username,apply(H,pair(R,pair(PWi,Username))))))
 =>
 state_bob(S,Ui,SKus,H,BH,1,R,PWi,N,Bi,RPWi,P,SK,Username,T1,T3,U,MK,F,apply(H,pair(MK,pair(Username,N))),xor(apply(H,pair(MK,pair(Username,N))),apply(H,pair(R,pair(PWi,Username)))),Dummy_Set_69,Dummy_Set_70,Dummy_Set_71,SID).
 secret(Dummy_Set_69,subs2,Ui).
 secret(Dummy_Set_70,subs3,Dummy_Set_71).
 secret(MK,subs1,S).
 iknows(scrypt(SKus,pair(xor(apply(H,pair(MK,pair(Username,N))),apply(H,pair(R,pair(PWi,Username)))),pair(apply(F,pair(MK,P)),H)))).
 contains(PWi,Dummy_Set_69).
 contains(Bi,Dummy_Set_69).
 contains(R,Dummy_Set_69).
 contains(Username,Dummy_Set_70).
 contains(Ui,Dummy_Set_71).
 contains(S,Dummy_Set_71)

step step_4 (S,Ui,SKus,H,BH,R,PWi,N,Bi,RPWi,P,SK,Username,Dummy_T1,Dummy_T3,Dummy_U,MK,F,Xi,Yi,Set_69,Set_70,Set_71,SID,T1,T3,U) :=
 state_bob(S,Ui,SKus,H,BH,1,R,PWi,N,Bi,RPWi,P,SK,Username,Dummy_T1,Dummy_T3,Dummy_U,MK,F,Xi,Yi,Set_69,Set_70,Set_71,SID).
 iknows(pair(xor(Username,apply(H,apply(F,pair(U,pair(MK,P))))),pair(apply(H,pair(Username,pair(apply(H,pair(MK,pair(Username,N))),pair(apply(F,pair(U,pair(MK,P))),pair(apply(F,pair(U,P)),T1))))),pair(apply(F,pair(U,P)),T1))))
=[exists T3]=>
 state_bob(S,Ui,SKus,H,BH,2,R,PWi,N,Bi,RPWi,P,SK,Username,T1,T3,U,MK,F,Xi,Yi,Set_69,Set_70,Set_71,SID).
 iknows(pair(apply(H,pair(apply(H,pair(Username,pair(apply(H,pair(MK,pair(Username,N))),pair(apply(F,pair(MK,pair(U,P))),pair(T1,T3))))),pair(T1,pair(T3,apply(F,pair(MK,pair(U,P))))))),T3)).
 witness(S,Ui,bob_alice_t3,T3).
 request(Ui,S,alice_bob_t1,T1,SID)


section properties:

property secrecy_of_subs1 (MGoal,ASGoal) :=
 [] ((secret(MGoal,subs1,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_subs2 (MGoal,ASGoal) :=
 [] ((secret(MGoal,subs2,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_subs3 (MGoal,ASGoal) :=
 [] ((secret(MGoal,subs3,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property authentication_on_alice_bob_t1 (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,alice_bob_t1,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,alice_bob_t1,MGoal))
     /\ ((request(A1Goal,A2Goal,alice_bob_t1,MGoal,SID1)
           /\ request(A1Goal,A2Goal,alice_bob_t1,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_bob_alice_t3 (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,bob_alice_t3,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,bob_alice_t3,MGoal))
     /\ ((request(A1Goal,A2Goal,bob_alice_t3,MGoal,SID1)
           /\ request(A1Goal,A2Goal,bob_alice_t3,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state secrecy_of_subs1 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,subs1,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_subs2 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,subs2,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_subs3 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,subs3,ASGoal) &
 not(contains(i,ASGoal))

attack_state authentication_on_alice_bob_t1 (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,alice_bob_t1,MGoal,SID) &
 not(witness(A2Goal,A1Goal,alice_bob_t1,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_alice_bob_t1 (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,alice_bob_t1,MGoal,SID1).
 request(A1Goal,A2Goal,alice_bob_t1,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_bob_alice_t3 (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,bob_alice_t3,MGoal,SID) &
 not(witness(A2Goal,A1Goal,bob_alice_t3,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_bob_alice_t3 (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,bob_alice_t3,MGoal,SID1).
 request(A1Goal,A2Goal,bob_alice_t3,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

