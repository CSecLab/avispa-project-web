%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfileU19314

section signature:

state_charlie: agent * agent * agent * hash_func * nat * public_key * public_key * message * message * nat -> fact
state_bob: agent * agent * agent * message * hash_func * message * nat * public_key * public_key * message * set(agent) * nat -> fact
state_alice: agent * agent * agent * message * hash_func * message * nat * public_key * public_key * message * set(agent) * nat -> fact


section types:

set_98, set_88: set
alice_bob_ky, ky, alice_bob_y1, bob_alice_kx, x1, y1, kx, bob_alice_x1: protocol_id
Dummy_Y1, X1, Dummy_X1, Y1, dummy_pk: public_key
F, f: hash_func
Dummy_Ky, Kx, dummy_msg, Fkx, Ky, MGoal, kx1, ky1, start, Fky, Dummy_Kx: message
Set_47, Dummy_Set_25, ASGoal, Set_25, Dummy_Set_47: set(agent)
A, A2Goal, B, A1Goal, C, a, b, c, i: agent
SID, Dummy_State, State, 3, 6, 4, 2, 0, 5: nat


section inits:

initial_state init1 := 
 iknows(start).
 iknows(a).
 iknows(b).
 iknows(c).
 iknows(f).
 iknows(i).
 state_alice(a,b,c,kx1,f,apply(f,ky1),0,dummy_pk,dummy_pk,dummy_msg,set_88,3).
 state_bob(b,a,c,ky1,f,apply(f,kx1),0,dummy_pk,dummy_pk,dummy_msg,set_98,4).
 state_charlie(c,a,b,f,0,dummy_pk,dummy_pk,dummy_msg,dummy_msg,5)


section rules:

step step_0 (A,B,C,Kx,F,Fky,Dummy_X1,Y1,Ky,Set_25,SID,X1) :=
 state_alice(A,B,C,Kx,F,Fky,0,Dummy_X1,Y1,Ky,Set_25,SID).
 iknows(start)
=[exists X1]=>
 state_alice(A,B,C,Kx,F,Fky,2,X1,Y1,Ky,Set_25,SID).
 iknows(X1).
 witness(A,B,bob_alice_x1,X1)

step step_1 (A,B,C,Kx,F,Fky,X1,Dummy_Y1,Ky,Dummy_Set_25,SID,Y1) :=
 state_alice(A,B,C,Kx,F,Fky,2,X1,Dummy_Y1,Ky,Dummy_Set_25,SID).
 iknows(Y1)
 =>
 state_alice(A,B,C,Kx,F,Fky,4,X1,Y1,Ky,Dummy_Set_25,SID).
 iknows(pair(apply(F,Kx),pair(Fky,pair(crypt(X1,Kx),apply(F,Y1))))).
 secret(Kx,kx,Dummy_Set_25).
 witness(A,B,bob_alice_kx,Kx).
 wrequest(A,B,alice_bob_y1,Y1,SID).
 contains(A,Dummy_Set_25).
 contains(B,Dummy_Set_25)

step step_2 (A,B,C,Kx,F,Fky,X1,Y1,Dummy_Ky,Set_25,SID,Ky) :=
 state_alice(A,B,C,Kx,F,Fky,4,X1,Y1,Dummy_Ky,Set_25,SID).
 iknows(crypt(Y1,Ky))
 =>
 state_alice(A,B,C,Kx,F,Fky,6,X1,Y1,Ky,Set_25,SID)

step step_3 (B,A,C,Ky,F,Fkx,X1,Dummy_Y1,Kx,Set_47,SID,Y1) :=
 state_bob(B,A,C,Ky,F,Fkx,0,X1,Dummy_Y1,Kx,Set_47,SID).
 iknows(start)
=[exists Y1]=>
 state_bob(B,A,C,Ky,F,Fkx,2,X1,Y1,Kx,Set_47,SID).
 iknows(Y1).
 witness(B,A,alice_bob_y1,Y1)

step step_4 (B,A,C,Ky,F,Fkx,Dummy_X1,Y1,Kx,Dummy_Set_47,SID,X1) :=
 state_bob(B,A,C,Ky,F,Fkx,2,Dummy_X1,Y1,Kx,Dummy_Set_47,SID).
 iknows(X1)
 =>
 state_bob(B,A,C,Ky,F,Fkx,4,X1,Y1,Kx,Dummy_Set_47,SID).
 iknows(pair(apply(F,Ky),pair(Fkx,pair(crypt(Y1,Ky),apply(F,X1))))).
 secret(Ky,ky,Dummy_Set_47).
 witness(B,A,alice_bob_ky,Ky).
 wrequest(B,A,bob_alice_x1,X1,SID).
 contains(A,Dummy_Set_47).
 contains(B,Dummy_Set_47)

step step_5 (B,A,C,Ky,F,Fkx,X1,Y1,Dummy_Kx,Set_47,SID,Kx) :=
 state_bob(B,A,C,Ky,F,Fkx,4,X1,Y1,Dummy_Kx,Set_47,SID).
 iknows(crypt(X1,Kx))
 =>
 state_bob(B,A,C,Ky,F,Fkx,6,X1,Y1,Kx,Set_47,SID).
 wrequest(B,A,bob_alice_kx,Kx,SID)

step step_6 (C,A,B,F,Dummy_X1,Dummy_Y1,Dummy_Kx,Dummy_Ky,SID,X1,Y1,Kx,Ky) :=
 state_charlie(C,A,B,F,0,Dummy_X1,Dummy_Y1,Dummy_Kx,Dummy_Ky,SID).
 iknows(X1).
 iknows(Y1).
 iknows(pair(apply(F,Ky),pair(apply(F,Kx),pair(crypt(Y1,Ky),apply(F,X1))))).
 iknows(pair(apply(F,Kx),pair(apply(F,Ky),pair(crypt(X1,Kx),apply(F,Y1)))))
 =>
 state_charlie(C,A,B,F,2,X1,Y1,Kx,Ky,SID).
 iknows(crypt(Y1,Ky)).
 iknows(crypt(X1,Kx))


section properties:

property secrecy_of_kx (MGoal,ASGoal) :=
 [] ((secret(MGoal,kx,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_ky (MGoal,ASGoal) :=
 [] ((secret(MGoal,ky,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property weak_authentication_on_alice_bob_y1 (A1Goal,A2Goal,MGoal,SID) :=
 [] ((wrequest(A1Goal,A2Goal,alice_bob_y1,MGoal,SID)
      /\ ~ equal(A2Goal,i))
     => witness(A2Goal,A1Goal,alice_bob_y1,MGoal))

property weak_authentication_on_alice_bob_ky (A1Goal,A2Goal,MGoal,SID) :=
 [] ((wrequest(A1Goal,A2Goal,alice_bob_ky,MGoal,SID)
      /\ ~ equal(A2Goal,i))
     => witness(A2Goal,A1Goal,alice_bob_ky,MGoal))

property weak_authentication_on_bob_alice_x1 (A1Goal,A2Goal,MGoal,SID) :=
 [] ((wrequest(A1Goal,A2Goal,bob_alice_x1,MGoal,SID)
      /\ ~ equal(A2Goal,i))
     => witness(A2Goal,A1Goal,bob_alice_x1,MGoal))

property weak_authentication_on_bob_alice_kx (A1Goal,A2Goal,MGoal,SID) :=
 [] ((wrequest(A1Goal,A2Goal,bob_alice_kx,MGoal,SID)
      /\ ~ equal(A2Goal,i))
     => witness(A2Goal,A1Goal,bob_alice_kx,MGoal))


section attack_states:

attack_state secrecy_of_kx (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,kx,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_ky (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,ky,ASGoal) &
 not(contains(i,ASGoal))

attack_state weak_authentication_on_alice_bob_y1 (A1Goal,A2Goal,MGoal,SID) :=
 wrequest(A1Goal,A2Goal,alice_bob_y1,MGoal,SID) &
 not(witness(A2Goal,A1Goal,alice_bob_y1,MGoal)) &
 not(equal(A2Goal,i))

attack_state weak_authentication_on_alice_bob_ky (A1Goal,A2Goal,MGoal,SID) :=
 wrequest(A1Goal,A2Goal,alice_bob_ky,MGoal,SID) &
 not(witness(A2Goal,A1Goal,alice_bob_ky,MGoal)) &
 not(equal(A2Goal,i))

attack_state weak_authentication_on_bob_alice_x1 (A1Goal,A2Goal,MGoal,SID) :=
 wrequest(A1Goal,A2Goal,bob_alice_x1,MGoal,SID) &
 not(witness(A2Goal,A1Goal,bob_alice_x1,MGoal)) &
 not(equal(A2Goal,i))

attack_state weak_authentication_on_bob_alice_kx (A1Goal,A2Goal,MGoal,SID) :=
 wrequest(A1Goal,A2Goal,bob_alice_kx,MGoal,SID) &
 not(witness(A2Goal,A1Goal,bob_alice_kx,MGoal)) &
 not(equal(A2Goal,i))

