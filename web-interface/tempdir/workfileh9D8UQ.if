%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfileh9D8UQ

section signature:

state_board: agent * agent * public_key * public_key * nat * message * text * text * nat -> fact
state_user: agent * agent * public_key * public_key * nat * message * text * text * set(agent) * nat -> fact


section types:

user_board_s1: protocol_id
S1, N2, Dummy_N2, Dummy_S1, dummy_nonce: text
set_58: set
ku, kb, ki, Ku, Kb: public_key
4, 2, State, SID, 3, 1, Dummy_State, SID2, SID1: nat
u, b, U, B, A2Goal, A1Goal, i: agent
Set_19, Dummy_Set_19, ASGoal: set(agent)
ReqH, start, Dummy_ReqH, dummy_msg, MGoal: message


section inits:

initial_state init1 := 
 iknows(start).
 iknows(u).
 iknows(b).
 iknows(ku).
 iknows(kb).
 iknows(ki).
 iknows(i).
 state_user(u,b,ku,kb,1,dummy_msg,dummy_nonce,dummy_nonce,set_58,3).
 state_board(b,u,ku,kb,2,dummy_msg,dummy_nonce,dummy_nonce,4)


section rules:

step step_0 (U,B,Ku,Kb,Dummy_ReqH,Dummy_S1,Dummy_N2,Dummy_Set_19,SID,ReqH,S1,N2) :=
 state_user(U,B,Ku,Kb,1,Dummy_ReqH,Dummy_S1,Dummy_N2,Dummy_Set_19,SID).
 iknows(start)
=[exists ReqH,S1,N2]=>
 state_user(U,B,Ku,Kb,3,ReqH,S1,N2,Dummy_Set_19,SID).
 iknows(pair(ReqH,crypt(Kb,crypt(Ku,pair(S1,N2))))).
 secret(N2,n2,Dummy_Set_19).
 contains(U,Dummy_Set_19).
 contains(B,Dummy_Set_19)

step step_1 (B,U,Ku,Kb,Dummy_ReqH,Dummy_S1,Dummy_N2,SID,ReqH,S1,N2) :=
 state_board(B,U,Ku,Kb,2,Dummy_ReqH,Dummy_S1,Dummy_N2,SID).
 iknows(pair(ReqH,crypt(Kb,crypt(Ku,pair(S1,N2)))))
 =>
 state_board(B,U,Ku,Kb,4,ReqH,S1,N2,SID)


section properties:

property secrecy_of_n2 (MGoal,ASGoal) :=
 [] ((secret(MGoal,n2,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property authentication_on_user_host_s1 (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,user_host_s1,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,user_host_s1,MGoal))
     /\ ((request(A1Goal,A2Goal,user_host_s1,MGoal,SID1)
           /\ request(A1Goal,A2Goal,user_host_s1,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state secrecy_of_n2 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,n2,ASGoal) &
 not(contains(i,ASGoal))

attack_state authentication_on_user_host_s1 (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,user_host_s1,MGoal,SID) &
 not(witness(A2Goal,A1Goal,user_host_s1,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_user_host_s1 (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,user_host_s1,MGoal,SID1).
 request(A1Goal,A2Goal,user_host_s1,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

