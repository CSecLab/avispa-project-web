%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfile22k653

section signature:

state_server: agent * agent * symmetric_key * symmetric_key * symmetric_key * hash_func * nat * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * message * set(agent) * set(agent) * set(agent) * set(agent) * set(agent) * nat -> fact
state_user: agent * agent * symmetric_key * symmetric_key * hash_func * nat * text * text * text * text * text * text * text * text * text * text * text * text * text * message * set(agent) * set(agent) * set(agent) * nat -> fact


section types:

bob_alice_nb, k1, f_n, y_k, z_k, m_k, p_p, e_m, g_m, h_m: protocol_id
5, 10, 6, State, 3, 4, SID, 2, 1, 0, Dummy_State: nat
Un1, Pass1, Ya, Xa, Na, Aa, Ba, Da, Mi, Mi1, Mi2, Ua, Ca, Hx, Ms, Dummy_Ca, Dummy_Mi2, Dummy_Mi1, Dummy_Da, Dummy_Xa, Dummy_Ua, Dummy_Ms, Dummy_Ya, Dummy_Mi, Dummy_Cid, Dummy_Hx, Dummy_Ra, Dummy_Ba, Dummy_Aa, Dummy_Na, Ra, Ga, Dummy_Pass1, Cid, Dummy_Un1, dummy_nonce: text
set_167, set_166, set_165, set_164, set_163, set_162, set_161, set_160, set_159, set_158, set_157, set_156, set_155, set_153, set_152, set_151, set_138, set_137, set_136, set_135, set_134, set_112, set_111, set_110: set
Set_77, Set_76, Set_74, Set_73, Set_72, Dummy_Set_77, Dummy_Set_76, Dummy_Set_74, Dummy_Set_73, Dummy_Set_72, Set_38, Set_36, Set_34, Dummy_Set_38, Dummy_Set_36, Dummy_Set_34, ASGoal: set(agent)
K1, start, dummy_msg, MGoal: message
Hash, h: hash_func
U, S, u, s, i: agent
k12, k13, k14, k15, k16, k17, k18, k19, K, Ea, Sk, Dummy_Ea, kab, kai, kib, k11: symmetric_key


section inits:

initial_state init1 := 
 iknows(start).
 iknows(u).
 iknows(s).
 iknows(h).
 iknows(kai).
 iknows(kib).
 iknows(i).
 state_user(u,s,kab,k13,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,set_110,set_111,set_112,3).
 state_server(s,u,kab,k11,k12,h,1,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,set_134,set_135,set_136,set_137,set_138,4).
 state_user(u,i,kai,k16,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,set_151,set_152,set_153,6).
 state_server(s,i,kib,k17,k18,h,1,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,set_163,set_164,set_165,set_166,set_167,10)


section rules:

step step_0 (U,S,K,Ea,Hash,Dummy_Un1,Dummy_Pass1,Na,Aa,Ba,Ra,Ga,Hx,Cid,Mi,Ya,Ms,Ua,K1,Dummy_Set_34,Dummy_Set_36,Set_38,SID,Un1,Pass1) :=
 state_user(U,S,K,Ea,Hash,0,Dummy_Un1,Dummy_Pass1,Na,Aa,Ba,Ra,Ga,Hx,Cid,Mi,Ya,Ms,Ua,K1,Dummy_Set_34,Dummy_Set_36,Set_38,SID).
 iknows(start)
=[exists Pass1,Un1]=>
 state_user(U,S,K,Ea,Hash,2,Un1,Pass1,Na,Aa,Ba,Ra,Ga,Hx,Cid,Mi,Ya,Ms,Ua,K1,Dummy_Set_34,Dummy_Set_36,Set_38,SID).
 iknows(scrypt(K,pair(Un1,Pass1))).
 secret(Pass1,g_m,Dummy_Set_34).
 secret(Un1,h_m,Dummy_Set_36).
 contains(U,Dummy_Set_34).
 contains(S,Dummy_Set_34).
 contains(U,Dummy_Set_36).
 contains(S,Dummy_Set_36)

step step_1 (U,S,K,Dummy_Ea,Hash,Dummy_Un1,Dummy_Pass1,Dummy_Na,Dummy_Aa,Dummy_Ba,Dummy_Ra,Ga,Dummy_Hx,Dummy_Cid,Dummy_Mi,Dummy_Ya,Ms,Ua,K1,Set_34,Set_36,Dummy_Set_38,SID,Un1,Pass1,Na,Aa,Ba,Ra,Ya) :=
 state_user(U,S,K,Dummy_Ea,Hash,2,Dummy_Un1,Dummy_Pass1,Dummy_Na,Dummy_Aa,Dummy_Ba,Dummy_Ra,Ga,Dummy_Hx,Dummy_Cid,Dummy_Mi,Dummy_Ya,Ms,Ua,K1,Set_34,Set_36,Dummy_Set_38,SID).
 iknows(scrypt(K,pair(Na,pair(Aa,Ba))))
=[exists Pass1,Un1,Ya,Ra]=>
 state_user(U,S,K,exp(Dummy_Ra,Ga),Hash,4,Un1,Pass1,Na,Aa,Ba,Ra,Ga,xor(Na,apply(Hash,pair(Un1,Pass1))),xor(apply(Hash,pair(Un1,Pass1)),xor(Na,apply(Hash,pair(Un1,Pass1)))),apply(Hash,pair(Un1,pair(xor(Na,apply(Hash,pair(Un1,Pass1))),Ya))),Ya,Ms,Ua,K1,Set_34,Set_36,Dummy_Set_38,SID).
 iknows(scrypt(Dummy_Ea,Dummy_Mi)).
 secret(Dummy_Ea,e_m,Dummy_Set_38).
 contains(U,Dummy_Set_38).
 contains(S,Dummy_Set_38)

step step_2 (U,S,K,Ea,Hash,Un1,Pass1,Na,Aa,Ba,Ra,Ga,Hx,Cid,Mi,Ya,Dummy_Ms,Dummy_Ua,K1,Set_34,Set_36,Set_38,SID,Ms,Ua) :=
 state_user(U,S,K,Ea,Hash,4,Un1,Pass1,Na,Aa,Ba,Ra,Ga,Hx,Cid,Mi,Ya,Dummy_Ms,Dummy_Ua,K1,Set_34,Set_36,Set_38,SID).
 iknows(scrypt(K,pair(Ms,Ua)))
 =>
 state_user(U,S,K,Ea,Hash,6,Un1,Pass1,Na,Aa,Ba,Ra,Ga,Hx,Cid,Mi,Ya,Ms,Ua,K1,Set_34,Set_36,Set_38,SID)

step step_3 (S,U,K,Ea,Sk,Hash,Dummy_Un1,Dummy_Pass1,Dummy_Ya,Dummy_Xa,Dummy_Na,Dummy_Aa,Dummy_Ba,Dummy_Da,Mi,Mi1,Mi2,Ua,Ca,Hx,Ms,K1,Dummy_Set_72,Dummy_Set_73,Dummy_Set_74,Set_76,Set_77,SID,Un1,Pass1,Ya,Xa) :=
 state_server(S,U,K,Ea,Sk,Hash,1,Dummy_Un1,Dummy_Pass1,Dummy_Ya,Dummy_Xa,Dummy_Na,Dummy_Aa,Dummy_Ba,Dummy_Da,Mi,Mi1,Mi2,Ua,Ca,Hx,Ms,K1,Dummy_Set_72,Dummy_Set_73,Dummy_Set_74,Set_76,Set_77,SID).
 iknows(scrypt(K,pair(Un1,Pass1)))
=[exists Ya,Xa]=>
 state_server(S,U,K,Ea,Sk,Hash,3,Un1,Pass1,Ya,Xa,xor(apply(Hash,pair(Un1,Pass1)),apply(Hash,Xa)),xor(xor(apply(Hash,pair(Un1,Pass1)),Pass1),apply(Hash,Ya)),xor(xor(Ya,Un1),Xa),apply(Hash,xor(apply(Hash,pair(Un1,Ya)),Xa)),Mi,Mi1,Mi2,Ua,Ca,Hx,Ms,K1,Dummy_Set_72,Dummy_Set_73,Dummy_Set_74,Set_76,Set_77,SID).
 iknows(scrypt(K,pair(xor(apply(Hash,pair(Un1,Pass1)),apply(Hash,Xa)),pair(xor(xor(apply(Hash,pair(Un1,Pass1)),Pass1),apply(Hash,Ya)),xor(xor(Ya,Un1),Xa))))).
 secret(xor(apply(Hash,pair(Un1,Pass1)),apply(Hash,Xa)),f_n,Dummy_Set_72).
 secret(xor(xor(apply(Hash,pair(Un1,Pass1)),Pass1),apply(Hash,Ya)),z_k,Dummy_Set_73).
 secret(xor(xor(Ya,Un1),Xa),m_k,Dummy_Set_74).
 contains(U,Dummy_Set_72).
 contains(S,Dummy_Set_72).
 contains(U,Dummy_Set_73).
 contains(S,Dummy_Set_73).
 contains(U,Dummy_Set_74).
 contains(S,Dummy_Set_74)

step step_4 (S,U,K,Dummy_Ea,Sk,Hash,Dummy_Un1,Pass1,Ya,Dummy_Xa,Na,Aa,Ba,Da,Mi,Dummy_Mi1,Dummy_Mi2,Dummy_Ua,Dummy_Ca,Dummy_Hx,Dummy_Ms,K1,Set_72,Set_73,Set_74,Dummy_Set_76,Dummy_Set_77,SID,Ea,Un1,Xa,Ua,Hx) :=
 state_server(S,U,K,Dummy_Ea,Sk,Hash,3,Dummy_Un1,Pass1,Ya,Dummy_Xa,Na,Aa,Ba,Da,Mi,Dummy_Mi1,Dummy_Mi2,Dummy_Ua,Dummy_Ca,Dummy_Hx,Dummy_Ms,K1,Set_72,Set_73,Set_74,Dummy_Set_76,Dummy_Set_77,SID).
 iknows(scrypt(Dummy_Ea,Mi))
=[exists Un1,Hx,Ea,Xa,Ua]=>
 state_server(S,U,K,Ea,Sk,Hash,5,Un1,Pass1,Ya,Xa,Na,Aa,Ba,Da,Mi,apply(Hash,pair(Un1,pair(Hx,Ya))),scrypt(Ea,Mi),Ua,exp(Ea,Xa),Hx,apply(Hash,pair(Dummy_Ca,pair(Dummy_Ua,Mi))),K1,Set_72,Set_73,Set_74,Dummy_Set_76,Dummy_Set_77,SID).
 iknows(scrypt(K,pair(apply(Hash,pair(Dummy_Ca,pair(Dummy_Ua,Mi))),Ua))).
 secret(apply(Hash,pair(Dummy_Ca,pair(Dummy_Ua,Mi))),y_k,Dummy_Set_76).
 secret(Ua,p_p,Dummy_Set_77).
 contains(U,Dummy_Set_76).
 contains(S,Dummy_Set_76).
 contains(U,Dummy_Set_77).
 contains(S,Dummy_Set_77)


section properties:

property secrecy_of_k1 (MGoal,ASGoal) :=
 [] ((secret(MGoal,k1,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_e_m (MGoal,ASGoal) :=
 [] ((secret(MGoal,e_m,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_g_m (MGoal,ASGoal) :=
 [] ((secret(MGoal,g_m,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_h_m (MGoal,ASGoal) :=
 [] ((secret(MGoal,h_m,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_f_n (MGoal,ASGoal) :=
 [] ((secret(MGoal,f_n,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_y_k (MGoal,ASGoal) :=
 [] ((secret(MGoal,y_k,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_z_k (MGoal,ASGoal) :=
 [] ((secret(MGoal,z_k,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_m_k (MGoal,ASGoal) :=
 [] ((secret(MGoal,m_k,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_p_p (MGoal,ASGoal) :=
 [] ((secret(MGoal,p_p,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))


section attack_states:

attack_state secrecy_of_k1 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,k1,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_e_m (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,e_m,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_g_m (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,g_m,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_h_m (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,h_m,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_f_n (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,f_n,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_y_k (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,y_k,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_z_k (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,z_k,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_m_k (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,m_k,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_p_p (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,p_p,ASGoal) &
 not(contains(i,ASGoal))

