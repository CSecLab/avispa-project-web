%% PROTOCOL: Privacy-Aware Handover
%% PURPOSE: 
%%HLPSL:
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

role server(S,M : agent,
	    Snd, Rec: channel(dy),
            K_M: symmetric_key,
            Seq : text,
            F1,F2,F5,F_add,F_asme,F_kenb,F_guti: hash_func,
	    Km,Ks: public_key)
played_by S
def=

  local State 				: nat,
	Kasme, Kenb1, Kenb2		: symmetric_key,
	R, Guti1, Guti2, Sign1, Sign2  	: text

  const
	 seq_1_s, k_asme_s, guti_1_s		: protocol_id,
	 kenb_1_s, sign_1_s, sign_2_s 		: protocol_id


  init  State := 0 

  transition

    1.  State = 0 / Rec(S.M) =|> 
        State':=2 / R' := new()
                  / Snd(M.S.R'.{Seq}_F5(K_M.R').F1(K_M.Seq.R')) 
	 	  / secret(Seq,seq_1_s,{S,M})
		  / witness(S,M,r1,R')

    2.  State = 2 / Rec(S.M.F2(K_M.R))  =|> 
        State':=4 / Seq' := F_add(Seq.1) 
		  / Kasme' := F_asme(K_M.R)
		  / Guti1' := F_guti(M,K_M,Seq)
		  / wrequest(S,M,r2,R)
		  / secret(Kasme',k_asme_s,{S,M})
		  / secret(Guti1',guti_1_s,{M,S})
		  / Snd(M.S.{F_guti}_Kasme')


    3. State = 4  / Rec(S.M.1) =|>
       State':=6  / Kenb1' := F_kenb(Kasme,Guti1)	
		  / secret(Kenb1',kenb_1_s,{M,S})
		  / Snd(M.{F_kenb}_Kasme)

    4. State = 6  / Rec(S.M.2) =|>
       State':=8  / Sign1' := {Guti1.Kenb1}_inv(Ks)
		  / Snd(M.{Sign1'}_Kasme)
		  / secret(Sign1',sign_1_s,{M,S})

    5. State = 8  / Rec(S.M.3) =|>
       State':=10 / Seq' := F_add(Seq.1) 
		  / Guti2' := F_guti(Guti1,K_M,Seq)
  		  / Kenb2' := F_kenb(Kenb1,Guti2')	
		  / Sign2' := {Guti2'.Kenb2'}_inv(Ks)
		  / Snd(M.{Sign2'}_Kasme)
		  / secret(Sign2',sign_2_s,{M,S})

end role

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

role mobile(M,S,C:agent,
            SndS, RecS, SndC, RecC	: channel(dy),
            K_M				: symmetric_key,
            Seq				: text,
            F1,F2,F5,F_add,F_asme	: hash_func,
	    Km,Ks,Kc			: public_key)
played_by M
def=

  local State :nat, 
	Kasme, Kenb1, Kenb2		: symmetric_key,
	F_kenb, F_guti			: hash_func,
	R, Guti1, Guti2, Sign1, Sign2	: text

  const
        seq_2_s, k_asme_m, guti_1_m, kenb_1_m		: protocol_id,
        kenb_1_mc, guti_1_mc, sign_1_m			: protocol_id,
        kenb_2_mc, guti_2_mc, sign_2_m			: protocol_id

  init  State := 1

  transition

    1.  State = 1  / RecS(start) =|> 
        State':= 3 / SndS(S.M)  

    2.  State = 3  / RecS(M.S.R'.{Seq}_F5(K_M.R').F1(K_M.Seq.R')) =|>  
        State':= 5 / Kasme' := F_asme(K_M.R')
		   / secret(Seq,seq_2_s,{M,S})
		   / secret(Kasme',k_asme_m,{M,S})
		   / SndS(S.M.F2(K_M.R')) 
		   / wrequest(M,S,r1,R') 
		   / witness(M,S,r2,R')


    3.  State = 5  / RecS(M.S.{F_guti'}_Kasme) =|>
	State':= 7 / Seq' := F_add(Seq.1)
		   / SndS(S.M.1)

    4.  State = 7  / RecS(M.{F_kenb'}_Kasme) =|>
	State':= 9 / Guti1' := F_guti(M,K_M,Seq)
		   / secret(Guti1',guti_1_m,{M,S})
		   / SndS(S.M.2)


     5. State = 9  / RecS(M.{Sign1'}_Kasme) =|>
	State':=11 / Kenb1' := F_kenb(Kasme,Guti1)	
		   / secret(Kenb1', kenb_1_m, {M,S})
		   / secret(Sign1', sign_1_m, {S,M})
		   / SndS(S.M.3)
		   / SndC(C.{Seq.Guti1.Kenb1'.Sign1'}_Kc)
		   / secret(Guti1, guti_1_mc, {M,C})
		   / secret(Kenb1', kenb_1_mc, {M,C})
		   / witness(M,C,r3,Guti1)


     6. State = 11 / RecS(M.{Sign2'}_Kasme) =|>
	State':=13 / Seq' := F_add(Seq.1)
		   / Guti2' := F_guti(Guti1, K_M, Seq)
		   / Kenb2' := F_kenb(Kenb1, Guti2')	
		   / secret(Sign2', sign_2_m, {S,M})

     7. State = 13 / RecC(M.C.{Guti1}_Kenb1) =|>
	State':=15 / SndC(C.{Seq.Guti2.Kenb2.Sign2}_Kc)
		   / witness(M,C,r3,Guti1)

     8. State = 15 / RecC(M.C.{Guti2}_Kenb2) =|>
	State':=17 / secret(Guti2, guti_2_mc, {M,C})
		   / secret(Kenb2, kenb_2_mc, {M,C})
		  
 
end role

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

role cap(C,M,S:agent,
            Snd, Rec: channel(dy),
	    Kc,Ks: public_key)
played_by C
def=

  local State :nat, 
	Kenb1,Kenb2		: symmetric_key,
	Guti1, Seq1, Sign1  : text,
	Guti2, Seq2, Sign2  : text

  const
        seq_1_c, guti_1_c, kenb_1_c : protocol_id,
        seq_2_c, guti_2_c, kenb_2_c : protocol_id

  init  State := 20

  transition

    1.  State = 20 / Rec(C.{Seq1'.Guti1'.Kenb1'.Sign1'}_Kc)
		   / Sign1' = {Seq1'.Guti1'.Kenb1'}_inv(Ks)
	 =|> 
        State':=21 / secret(Seq1',seq_1_c,{C,M})
		   / secret(Guti1',guti_1_c,{C,M})
		   / secret(Kenb1',kenb_1_c,{C,M})
		   / Snd(M.C.{Guti1'}_Kenb1')
		   / wrequest(C,M,r3,Guti1') 


    2.  State = 21 / Rec(C.{Seq2'.Guti2'.Kenb2'.Sign2'}_Kc)
		   / Sign2' = {Seq2'.Guti2'.Kenb2'}_inv(Ks)
	 =|> 
        State':=22 / secret(Seq2',seq_1_c,{C,M})
		   / secret(Guti2',guti_1_c,{C,M})
		   / secret(Kenb2',kenb_1_c,{C,M})
		   / Snd(M.C.{Guti2'}_Kenb2')
		   / wrequest(C,M,r4,Guti2') 

 
end role

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

role session(M,S,C: agent,
	     K_M: symmetric_key,
	     Seq: text,
             F1,F2,F5,F_add,F_asme,F_kenb,F_guti: hash_func,
             SMs,RMs,SMc,RMc,SS,RS,SC,RC: channel(dy),
	     Km,Ks,Kc: public_key) def=

   composition

	 mobile(M,S,C,SMs,RMs,SMc,RMc,K_M,Seq,F1,F2,F5,F_add,F_asme,Km,Ks,Kc)
      / server(S,M,SS,RS,K_M,Seq,F1,F2,F5,F_add,F_asme,F_kenb,F_guti,Km,Ks)
	/ cap(C,M,S,SC,RC,Kc,Ks)

end role

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

role environment() def=

 local Sms,Rms,Smc,Rmc,Smi,Rmi,Sis,Ris,Sic,Ric,Ss,Rs,Si,Ri,Sc,Rc : channel (dy)

 const 	r1, r2, r3, r4	       		: protocol_id,
       	m, i, s, c               	: agent,
       	k_ms, k_is, k_mi        	: symmetric_key,
       	f1, f2, f5, f_add             	: hash_func,
       	f_asme, f_kenb,f_guti           : hash_func,
	ks, kap1, kap2, ki, km, kc	: public_key,	
       	seq_ms, seq_is, seq_mi 		: text

 intruder_knowledge={m,s,i,f1,f2,f5,f_add,f_asme,f_kenb,f_guti,ki, inv(ki)}

 composition
 
	session(m,s,c,k_ms,seq_ms,f1,f2,f5,f_add,f_asme,f_kenb,f_guti,Sms,Rms,Smc,Rmc,Ss,Rs,Sc,Rc,km,ks,kc) 
   /	session(i,s,c,k_is,seq_is,f1,f2,f5,f_add,f_asme,f_kenb,f_guti,Sis,Ris,Sic,Ric,Ss,Rs,Sc,Rc,ki,ks,kc) 
   /	session(m,i,c,k_mi,seq_mi,f1,f2,f5,f_add,f_asme,f_kenb,f_guti,Smi,Rmi,Smc,Rmc,Si,Ri,Sc,Rc,km,ki,kc)
   /	session(m,s,i,k_ms,seq_ms,f1,f2,f5,f_add,f_asme,f_kenb,f_guti,Sms,Rms,Smi,Rmi,Ss,Rs,Si,Ri,km,ks,ki)


end role

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

goal

  % Confidentiality (G12)
  secrecy_of seq_1_s, seq_2_s
  secrecy_of k_asme_m, k_asme_s
  secrecy_of guti_1_m, guti_1_s
  secrecy_of kenb_1_m, kenb_1_s
  secrecy_of guti_1_mc, guti_1_c
  secrecy_of kenb_1_mc, kenb_1_c
  secrecy_of sign_1_m, sign_1_s
  secrecy_of seq_1_c, seq_2_c
  secrecy_of sign_2_m, sign_2_s
  secrecy_of guti_2_mc, kenb_2_mc

  % Message Authentication (G2)
  % Mobile weakly authenticates Server on r1  % the nonce R
  weak_authentication_on r1

  % Message Authentication (G2)
  % Server weakly authenticates Mobile on r2  % the nonce R
  weak_authentication_on r2

  weak_authentication_on r3
  weak_authentication_on r4


end goal

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

environment()
 