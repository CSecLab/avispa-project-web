%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfileqKe5M1

section signature:

state_bob: agent * agent * agent * symmetric_key * hash_func * nat * text * text * text * text * text * text * text * text * set(text) * set(text) * nat -> fact
state_bs: agent * agent * agent * symmetric_key * hash_func * nat * text * text * text * text * text * text * text * set(text) * set(text) * set(symmetric_key) * set(agent) * nat -> fact
state_alice: agent * agent * agent * symmetric_key * hash_func * nat * text * text * text * text * text * text * text * set(text) * set(text) * nat -> fact


section types:

MGoal, start: message
Set_52, Dummy_Set_52: set(symmetric_key)
alice_bob_nj, bob_alice_ni, alice_server, bs_bob, sub1_subs, subs, sub1, sub2: protocol_id
Set_73, Set_72, Set_51, Set_50, Set_31, Dummy_Set_73, Dummy_Set_72, Set_29, Dummy_Set_51, Dummy_Set_50, Dummy_Set_31, Dummy_Set_29: set(text)
h, H: hash_func
skubs, SKubs: symmetric_key
idi, pwi, xa, t1, t, k, sj, IDi, Sj, PWi, K, Xa, Yy, T1, T, Dummy_T1, Dummy_T, dummy_nonce: text
set_142, set_141, set_139, set_138, set_137, set_136, set_134, set_133, set_128, set_127, set_119, set_118, set_117, set_116, set_108, set_107: set
State, 9, 8, 7, 2, 5, SID, 1, 0, 4, Dummy_State, 3, SID2, SID1: nat
ui, snj, Ui, SNj, BS, bs, A2Goal, i, A1Goal: agent
Set_53, Dummy_Set_53, ASGoal: set(agent)


section inits:

initial_state init1 := 
 iknows(start).
 iknows(ui).
 iknows(snj).
 iknows(idi).
 iknows(sj).
 iknows(h).
 iknows(i).
 state_alice(ui,snj,bs,skubs,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_107,set_108,3).
 state_bs(bs,ui,snj,skubs,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_116,set_117,set_118,set_119,4).
 state_bob(snj,ui,bs,skubs,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_127,set_128,5).
 state_alice(ui,snj,bs,skubs,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_133,set_134,7).
 state_bs(bs,ui,snj,skubs,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_136,set_137,set_138,set_139,8).
 state_bob(snj,ui,bs,skubs,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_141,set_142,9)


section rules:

step step_0 (Ui,SNj,BS,SKubs,H,IDi,Sj,K,PWi,Xa,T1,T,Dummy_Set_29,Dummy_Set_31,SID) :=
 state_alice(Ui,SNj,BS,SKubs,H,0,IDi,Sj,K,PWi,Xa,T1,T,Dummy_Set_29,Dummy_Set_31,SID).
 iknows(start)
 =>
 state_alice(Ui,SNj,BS,SKubs,H,1,IDi,Sj,K,PWi,Xa,T1,T,Dummy_Set_29,Dummy_Set_31,SID).
 iknows(pair(Ui,pair(BS,scrypt(SKubs,pair(IDi,PWi))))).
 secret(Dummy_Set_29,sub1,Ui).
 secret(Dummy_Set_31,subs,BS).
 contains(PWi,Dummy_Set_29).
 contains(Xa,Dummy_Set_31)

step step_1 (Ui,SNj,BS,SKubs,H,IDi,Sj,K,PWi,Xa,T1,Dummy_T,Set_29,Set_31,SID,T) :=
 state_alice(Ui,SNj,BS,SKubs,H,1,IDi,Sj,K,PWi,Xa,T1,Dummy_T,Set_29,Set_31,SID).
 iknows(pair(BS,pair(Ui,scrypt(SKubs,pair(xor(apply(H,pair(IDi,PWi)),apply(H,pair(K,Xa))),pair(IDi,pair(apply(H,PWi),apply(H,Xa))))))))
=[exists T]=>
 state_alice(Ui,SNj,BS,SKubs,H,2,IDi,Sj,K,PWi,Xa,T1,T,Set_29,Set_31,SID).
 iknows(pair(Ui,pair(BS,pair(xor(apply(H,pair(IDi,PWi)),apply(H,pair(apply(H,Xa),T))),pair(apply(H,pair(xor(apply(H,pair(IDi,PWi)),apply(H,pair(K,Xa))),pair(apply(H,Xa),T))),T))))).
 witness(Ui,BS,alice_server,T)

step step_2 (BS,Ui,SNj,SKubs,H,IDi,Sj,PWi,Xa,T1,T,K,Dummy_Set_50,Dummy_Set_51,Dummy_Set_52,Dummy_Set_53,SID) :=
 state_bs(BS,Ui,SNj,SKubs,H,0,IDi,Sj,PWi,Xa,T1,T,K,Dummy_Set_50,Dummy_Set_51,Dummy_Set_52,Dummy_Set_53,SID).
 iknows(pair(Ui,pair(BS,scrypt(SKubs,pair(IDi,PWi)))))
 =>
 state_bs(BS,Ui,SNj,SKubs,H,1,IDi,Sj,PWi,Xa,T1,T,K,Dummy_Set_50,Dummy_Set_51,Dummy_Set_52,Dummy_Set_53,SID).
 secret(Dummy_Set_50,subs,BS).
 secret(Dummy_Set_51,sub1,Ui).
 secret(Dummy_Set_52,sub2,Dummy_Set_53).
 iknows(pair(BS,pair(Ui,scrypt(SKubs,pair(xor(apply(H,pair(IDi,PWi)),apply(H,pair(K,Xa))),pair(IDi,pair(apply(H,PWi),apply(H,Xa)))))))).
 contains(Xa,Dummy_Set_50).
 contains(PWi,Dummy_Set_51).
 contains(SKubs,Dummy_Set_52).
 contains(BS,Dummy_Set_53).
 contains(Ui,Dummy_Set_53)

step step_3 (BS,Ui,SNj,SKubs,H,IDi,Sj,PWi,Xa,Dummy_T1,Dummy_T,K,Set_50,Set_51,Set_52,Set_53,SID,T1,T) :=
 state_bs(BS,Ui,SNj,SKubs,H,1,IDi,Sj,PWi,Xa,Dummy_T1,Dummy_T,K,Set_50,Set_51,Set_52,Set_53,SID).
 iknows(pair(Ui,pair(BS,pair(xor(apply(H,pair(IDi,PWi)),apply(H,pair(apply(H,Xa),T))),pair(apply(H,pair(xor(apply(H,pair(IDi,PWi)),apply(H,pair(K,Xa))),pair(apply(H,Xa),T))),T)))))
=[exists T1]=>
 state_bs(BS,Ui,SNj,SKubs,H,2,IDi,Sj,PWi,Xa,T1,T,K,Set_50,Set_51,Set_52,Set_53,SID).
 iknows(pair(BS,pair(SNj,pair(xor(apply(H,pair(IDi,PWi)),apply(H,pair(apply(H,Xa),T))),apply(H,pair(xor(apply(H,pair(IDi,PWi)),apply(H,pair(apply(H,Xa),T))),pair(apply(H,pair(Xa,Sj)),T1))))))).
 witness(BS,SNj,bs_bob,T1).
 request(Ui,BS,alice_server,T1,SID)

step step_4 (SNj,Ui,BS,SKubs,H,IDi,Sj,PWi,K,Xa,Yy,Dummy_T1,Dummy_T,Dummy_Set_72,Dummy_Set_73,SID,T1,T) :=
 state_bob(SNj,Ui,BS,SKubs,H,0,IDi,Sj,PWi,K,Xa,Yy,Dummy_T1,Dummy_T,Dummy_Set_72,Dummy_Set_73,SID).
 iknows(pair(BS,pair(SNj,pair(xor(apply(H,pair(IDi,PWi)),apply(H,pair(apply(H,Xa),T))),apply(H,pair(xor(apply(H,pair(IDi,PWi)),apply(H,pair(apply(H,Xa),T))),pair(apply(H,pair(Xa,Sj)),T1)))))))
 =>
 state_bob(SNj,Ui,BS,SKubs,H,1,IDi,Sj,PWi,K,Xa,Yy,T1,T,Dummy_Set_72,Dummy_Set_73,SID).
 secret(Dummy_Set_72,subs,BS).
 secret(Dummy_Set_73,sub1,Ui).
 request(BS,SNj,bs_bob,T1,SID).
 contains(Xa,Dummy_Set_72).
 contains(PWi,Dummy_Set_73).
 contains(Xa,Dummy_Set_73)


section properties:

property secrecy_of_subs (MGoal,ASGoal) :=
 [] ((secret(MGoal,subs,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_sub1_subs (MGoal,ASGoal) :=
 [] ((secret(MGoal,sub1_subs,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_sub1 (MGoal,ASGoal) :=
 [] ((secret(MGoal,sub1,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_sub2 (MGoal,ASGoal) :=
 [] ((secret(MGoal,sub2,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property authentication_on_alice_server (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,alice_server,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,alice_server,MGoal))
     /\ ((request(A1Goal,A2Goal,alice_server,MGoal,SID1)
           /\ request(A1Goal,A2Goal,alice_server,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_bs_bob (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,bs_bob,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,bs_bob,MGoal))
     /\ ((request(A1Goal,A2Goal,bs_bob,MGoal,SID1)
           /\ request(A1Goal,A2Goal,bs_bob,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state secrecy_of_subs (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,subs,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_sub1_subs (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sub1_subs,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_sub1 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sub1,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_sub2 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sub2,ASGoal) &
 not(contains(i,ASGoal))

attack_state authentication_on_alice_server (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,alice_server,MGoal,SID) &
 not(witness(A2Goal,A1Goal,alice_server,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_alice_server (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,alice_server,MGoal,SID1).
 request(A1Goal,A2Goal,alice_server,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_bs_bob (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,bs_bob,MGoal,SID) &
 not(witness(A2Goal,A1Goal,bs_bob,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_bs_bob (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,bs_bob,MGoal,SID1).
 request(A1Goal,A2Goal,bs_bob,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

