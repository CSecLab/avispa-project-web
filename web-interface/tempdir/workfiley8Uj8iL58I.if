%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfiley8Uj8iL58I

section signature:

state_sensor: agent * agent * symmetric_key * text * hash_func * nat * text * text * text * symmetric_key * message * nat -> fact
state_gateway: agent * agent * agent * symmetric_key * symmetric_key * text * text * text * hash_func * hash_func * nat * text * text * text * text * text * text * text * text * message * symmetric_key * set(agent) * set(agent) * nat -> fact
state_user: agent * agent * agent * symmetric_key * text * text * text * hash_func * nat * text * text * text * text * text * symmetric_key * set(agent) * nat -> fact


section types:

set_146, set_145, set_133: set
Set_68, Set_67, Dummy_Set_68, Dummy_Set_67, Dummy_Set_34, Set_34, ASGoal: set(agent)
AIDu, Dummy_AIDu, dummy_msg, start, MGoal: message
sseq1, nu, auth_sk, secret_kgsnew, r1, r2, tsug_id, auth_nu, auth_sk2, secret_sk, secret_kugnew: protocol_id
State, 5, SID, 4, Dummy_State, 3, 2, SID2, SID1, 1: nat
Hash, Add, f1, f2: hash_func
R2, T, T2, IDsn, R, Nu, Dummy_TS, TS, Dummy_T2, TSugnew, Dummy_R, M, Dummy_T, IDu, Dummy_R2, TSug, Dummy_TSugnew, Dummy_TSug, Dummy_Nu, dummy_nonce, idu, idsn, tsug, m: text
SK, Kgs, Dummy_Kgs, Kug, Dummy_SK, Dummy_Kug, dummy_sk, kug, kgs, k_is, kai: symmetric_key
SENSOR, GATEWAY, USER, A2Goal, A1Goal, u, g, s, i: agent


section inits:

initial_state init1 := 
 iknows(start).
 iknows(f1).
 iknows(f2).
 iknows(f5).
 iknows(i).
 state_user(u,s,g,kug,idu,idsn,tsug,f1,1,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_sk,set_133,3).
 state_gateway(g,u,s,kug,kgs,idu,idsn,tsug,f1,f2,1,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_sk,set_145,set_146,4).
 state_sensor(s,g,kgs,idsn,f1,1,dummy_nonce,dummy_nonce,dummy_nonce,dummy_sk,dummy_msg,5)


section rules:

step step_0 (USER,SENSOR,GATEWAY,Kug,IDu,IDsn,TSug,Hash,R,R2,Dummy_Nu,TS,TSugnew,SK,Set_34,SID,Nu) :=
 state_user(USER,SENSOR,GATEWAY,Kug,IDu,IDsn,TSug,Hash,1,R,R2,Dummy_Nu,TS,TSugnew,SK,Set_34,SID).
 iknows(start)
=[exists Nu]=>
 state_user(USER,SENSOR,GATEWAY,Kug,IDu,IDsn,TSug,Hash,2,R,R2,Nu,TS,TSugnew,SK,Set_34,SID).
 iknows(pair(xor(Kug,Nu),pair(apply(Hash,pair(IDu,pair(Kug,pair(Nu,TSug)))),pair(TSug,pair(IDsn,apply(Hash,pair(apply(Hash,pair(IDu,pair(Kug,pair(Nu,TSug)))),pair(Kug,pair(xor(Kug,Nu),IDsn))))))))).
 witness(USER,GATEWAY,auth_nu,Nu)

step step_1 (USER,SENSOR,GATEWAY,Dummy_Kug,IDu,IDsn,Dummy_TSug,Hash,R,R2,Nu,TS,Dummy_TSugnew,Dummy_SK,Dummy_Set_34,SID,TSugnew,SK) :=
 state_user(USER,SENSOR,GATEWAY,Dummy_Kug,IDu,IDsn,Dummy_TSug,Hash,2,R,R2,Nu,TS,Dummy_TSugnew,Dummy_SK,Dummy_Set_34,SID).
 iknows(pair(xor(apply(Hash,pair(Dummy_Kug,pair(IDu,Nu))),SK),pair(xor(TSugnew,apply(Hash,pair(Dummy_Kug,pair(IDu,Nu)))),apply(Hash,pair(xor(apply(Hash,pair(Dummy_Kug,pair(IDu,Nu))),SK),pair(Nu,pair(xor(TSugnew,apply(Hash,pair(Dummy_Kug,pair(IDu,Nu)))),Dummy_Kug)))))))
 =>
 state_user(USER,SENSOR,GATEWAY,apply(Hash,pair(Dummy_Kug,pair(IDu,TSugnew))),IDu,IDsn,TSugnew,Hash,3,R,R2,Nu,TS,TSugnew,SK,Dummy_Set_34,SID).
 secret(apply(Hash,pair(Dummy_Kug,pair(IDu,TSugnew))),secret_kugnew,Dummy_Set_34).
 request(USER,GATEWAY,auth_sk2,SK,SID).
 contains(USER,Dummy_Set_34).
 contains(GATEWAY,Dummy_Set_34)

step step_2 (GATEWAY,USER,SENSOR,Kug,Kgs,IDu,IDsn,TSug,Hash,Add,R,Dummy_R2,Dummy_Nu,Dummy_T,T2,TS,TSugnew,M,Dummy_AIDu,Dummy_SK,Dummy_Set_67,Set_68,SID,R2,Nu,T,SK) :=
 state_gateway(GATEWAY,USER,SENSOR,Kug,Kgs,IDu,IDsn,TSug,Hash,Add,1,R,Dummy_R2,Dummy_Nu,Dummy_T,T2,TS,TSugnew,M,Dummy_AIDu,Dummy_SK,Dummy_Set_67,Set_68,SID).
 iknows(pair(xor(Kug,Nu),pair(apply(Hash,pair(IDu,pair(Kug,pair(Nu,TSug)))),pair(TSug,pair(IDsn,apply(Hash,pair(apply(Hash,pair(IDu,pair(Kug,pair(Nu,TSug)))),pair(Kug,pair(xor(Kug,Nu),IDsn)))))))))
=[exists T,SK,R2]=>
 state_gateway(GATEWAY,USER,SENSOR,Kug,Kgs,IDu,IDsn,TSug,Hash,Add,2,R,R2,Nu,T,T2,TS,TSugnew,M,apply(Hash,pair(IDu,pair(Kug,pair(Nu,TSug)))),SK,Dummy_Set_67,Set_68,SID).
 iknows(pair(xor(R2,Kgs),pair(Dummy_AIDu,pair(xor(SK,apply(Hash,Kgs)),pair(T,apply(Hash,pair(Dummy_AIDu,pair(xor(apply(Hash,Kgs),SK),pair(T,Kgs))))))))).
 secret(Nu,nu,Dummy_Set_67).
 request(GATEWAY,USER,auth_nu,Nu,SID).
 witness(GATEWAY,SENSOR,auth_sk,SK).
 contains(GATEWAY,Dummy_Set_67).
 contains(USER,Dummy_Set_67)

step step_3 (GATEWAY,USER,SENSOR,Dummy_Kug,Dummy_Kgs,IDu,IDsn,TSug,Hash,Add,Dummy_R,R2,Nu,T,Dummy_T2,Dummy_TS,Dummy_TSugnew,M,AIDu,SK,Set_67,Dummy_Set_68,SID,R,T2,TSugnew) :=
 state_gateway(GATEWAY,USER,SENSOR,Dummy_Kug,Dummy_Kgs,IDu,IDsn,TSug,Hash,Add,2,Dummy_R,R2,Nu,T,Dummy_T2,Dummy_TS,Dummy_TSugnew,M,AIDu,SK,Set_67,Dummy_Set_68,SID).
 iknows(pair(apply(Hash,R2),pair(T2,pair(IDsn,apply(Hash,pair(SK,pair(Dummy_Kgs,pair(IDsn,T2))))))))
=[exists TSugnew,R]=>
 state_gateway(GATEWAY,USER,SENSOR,apply(Hash,pair(Dummy_Kug,pair(IDu,TSugnew))),apply(Hash,pair(Dummy_Kgs,IDsn)),IDu,IDsn,TSug,Hash,Add,3,R,R2,Nu,T,T2,xor(TSugnew,apply(Hash,pair(Dummy_Kug,pair(IDu,Nu)))),TSugnew,M,AIDu,SK,Set_67,Dummy_Set_68,SID).
 iknows(pair(xor(apply(Hash,pair(Dummy_Kug,pair(IDu,Nu))),SK),pair(xor(TSugnew,apply(Hash,pair(Dummy_Kug,pair(IDu,Nu)))),apply(Hash,pair(xor(apply(Hash,pair(Dummy_Kug,pair(IDu,Nu))),SK),pair(Nu,pair(xor(TSugnew,apply(Hash,pair(Dummy_Kug,pair(IDu,Nu)))),Dummy_Kug))))))).
 secret(apply(Hash,pair(Dummy_Kgs,IDsn)),secret_kgsnew,Dummy_Set_68).
 witness(GATEWAY,USER,auth_sk2,SK).
 contains(GATEWAY,Dummy_Set_68).
 contains(SENSOR,Dummy_Set_68)

step step_4 (SENSOR,GATEWAY,Dummy_Kgs,IDsn,Hash,Dummy_R2,Dummy_T,Dummy_T2,Dummy_SK,Dummy_AIDu,SID,R2,T,T2,SK,AIDu) :=
 state_sensor(SENSOR,GATEWAY,Dummy_Kgs,IDsn,Hash,1,Dummy_R2,Dummy_T,Dummy_T2,Dummy_SK,Dummy_AIDu,SID).
 iknows(pair(xor(R2,Dummy_Kgs),pair(AIDu,pair(xor(SK,apply(Hash,Dummy_Kgs)),pair(T,apply(Hash,pair(AIDu,pair(xor(apply(Hash,Dummy_Kgs),SK),pair(T,Dummy_Kgs)))))))))
=[exists T2]=>
 state_sensor(SENSOR,GATEWAY,apply(Hash,pair(Dummy_Kgs,IDsn)),IDsn,Hash,2,R2,T,T2,SK,AIDu,SID).
 iknows(pair(apply(Hash,R2),pair(T2,pair(IDsn,apply(Hash,pair(SK,pair(Dummy_Kgs,pair(IDsn,T2)))))))).
 request(SENSOR,GATEWAY,auth_sk,SK,SID)


section properties:

property secrecy_of_nu (MGoal,ASGoal) :=
 [] ((secret(MGoal,nu,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_secret_kugnew (MGoal,ASGoal) :=
 [] ((secret(MGoal,secret_kugnew,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_secret_kgsnew (MGoal,ASGoal) :=
 [] ((secret(MGoal,secret_kgsnew,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property authentication_on_auth_nu (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,auth_nu,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,auth_nu,MGoal))
     /\ ((request(A1Goal,A2Goal,auth_nu,MGoal,SID1)
           /\ request(A1Goal,A2Goal,auth_nu,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_auth_sk (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,auth_sk,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,auth_sk,MGoal))
     /\ ((request(A1Goal,A2Goal,auth_sk,MGoal,SID1)
           /\ request(A1Goal,A2Goal,auth_sk,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_auth_sk2 (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,auth_sk2,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,auth_sk2,MGoal))
     /\ ((request(A1Goal,A2Goal,auth_sk2,MGoal,SID1)
           /\ request(A1Goal,A2Goal,auth_sk2,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state secrecy_of_nu (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,nu,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_secret_kugnew (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,secret_kugnew,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_secret_kgsnew (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,secret_kgsnew,ASGoal) &
 not(contains(i,ASGoal))

attack_state authentication_on_auth_nu (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,auth_nu,MGoal,SID) &
 not(witness(A2Goal,A1Goal,auth_nu,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_auth_nu (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,auth_nu,MGoal,SID1).
 request(A1Goal,A2Goal,auth_nu,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_auth_sk (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,auth_sk,MGoal,SID) &
 not(witness(A2Goal,A1Goal,auth_sk,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_auth_sk (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,auth_sk,MGoal,SID1).
 request(A1Goal,A2Goal,auth_sk,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_auth_sk2 (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,auth_sk2,MGoal,SID) &
 not(witness(A2Goal,A1Goal,auth_sk2,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_auth_sk2 (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,auth_sk2,MGoal,SID1).
 request(A1Goal,A2Goal,auth_sk2,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

