%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfileveQY6Q

section signature:

state_keyDistributionCentre: agent * agent * agent * symmetric_key * symmetric_key * nat * text * text * symmetric_key * text * text * set(agent) * nat -> fact
state_ticketGrantingServer: agent * agent * agent * agent * symmetric_key * symmetric_key * set(text) * nat * text * text * symmetric_key * symmetric_key * text * text * text * text * text * set(agent) * set(agent) * nat -> fact
state_server: agent * agent * agent * symmetric_key * set(text) * nat * text * symmetric_key * text * text * text * set(agent) * nat -> fact
state_client: agent * text * agent * agent * agent * symmetric_key * nat * symmetric_key * symmetric_key * text * text * text * text * scrypt(symmetric_key,pair(text,pair(agent,pair(agent,pair(symmetric_key,pair(text,text)))))) * scrypt(symmetric_key,pair(text,pair(agent,pair(agent,pair(symmetric_key,pair(text,text)))))) * text * text * text * text * set(agent) * set(agent) * nat -> fact


section types:

Tcg, Tcs, Dummy_Tcs, Dummy_Tcg: scrypt(symmetric_key,pair(text,pair(agent,pair(agent,pair(symmetric_key,pair(text,text))))))
set_194, set_192, set_191, set_189, set_188, set_187, set_183, set_178, set_177, set_171, set_150, set_149, set_148, set_147: set
start, MGoal: message
Dummy_L, L: set(text)
sec_c_Kcg, sec_c_Kcs, t2b, t2a, sec_s_Kcs, n2, t1, sec_t_Kcg, sec_t_Kcs, n1, sec_k_Kcg: protocol_id
N1, N2, T1, T2, T2start, T1start, T2expire, T1expire, U, Dummy_U, Dummy_T2, Dummy_T2start, Dummy_T2expire, Dummy_N2, Dummy_T1, Dummy_T1start, Dummy_T1expire, Dummy_N1, dummy_nonce, u1, u2: text
Kcs, Kcg, Kca, Dummy_Kcs, Kgs, Dummy_Kcg, dummy_sk, k_ca, k_gs, k_ag, k_ia, Kag: symmetric_key
C, G, S, A, dummy_agent, A2Goal, A1Goal, a, g, c, s, i: agent
Dummy_Set_24, Dummy_Set_54, Dummy_Set_53, Dummy_Set_74, Set_74, Dummy_Set_104, Dummy_Set_102, Set_54, Set_53, ASGoal, Set_24, Set_104, Set_102: set(agent)
2, 11, 10, 9, State, 6, SID, 5, 4, 32, 31, Dummy_State, 3, 22, 21, SID2, SID1, 12, 1: nat


section inits:

initial_state init1 := 
 iknows(start).
 iknows(u1).
 iknows(u2).
 iknows(a).
 iknows(g).
 iknows(c).
 iknows(s).
 iknows(k_ia).
 iknows(i).
 state_client(c,u1,g,s,a,k_ca,1,dummy_sk,dummy_sk,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,scrypt(dummy_sk,pair(dummy_nonce,pair(dummy_agent,pair(dummy_agent,pair(dummy_sk,pair(dummy_nonce,dummy_nonce)))))),scrypt(dummy_sk,pair(dummy_nonce,pair(dummy_agent,pair(dummy_agent,pair(dummy_sk,pair(dummy_nonce,dummy_nonce)))))),dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_149,set_150,3).
 state_server(s,c,g,k_gs,set_147,31,dummy_nonce,dummy_sk,dummy_nonce,dummy_nonce,dummy_nonce,set_171,4).
 state_ticketGrantingServer(g,s,c,a,k_ag,k_gs,set_148,21,dummy_nonce,dummy_nonce,dummy_sk,dummy_sk,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_177,set_178,5).
 state_keyDistributionCentre(a,c,g,k_ca,k_ag,11,dummy_nonce,dummy_nonce,dummy_sk,dummy_nonce,dummy_nonce,set_183,6).
 state_server(s,i,g,k_gs,set_147,31,dummy_nonce,dummy_sk,dummy_nonce,dummy_nonce,dummy_nonce,set_189,9).
 state_ticketGrantingServer(g,s,i,a,k_ag,k_gs,set_148,21,dummy_nonce,dummy_nonce,dummy_sk,dummy_sk,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_191,set_192,10).
 state_keyDistributionCentre(a,i,g,k_ia,k_ag,11,dummy_nonce,dummy_nonce,dummy_sk,dummy_nonce,dummy_nonce,set_194,11)


section rules:

step step_0 (C,U,G,S,A,Kca,Kcs,Kcg,T1expire,T2expire,T1start,T2start,Tcg,Tcs,T1,T2,Dummy_N1,N2,Set_102,Set_104,SID,N1) :=
 state_client(C,U,G,S,A,Kca,1,Kcs,Kcg,T1expire,T2expire,T1start,T2start,Tcg,Tcs,T1,T2,Dummy_N1,N2,Set_102,Set_104,SID).
 iknows(start)
=[exists N1]=>
 state_client(C,U,G,S,A,Kca,2,Kcs,Kcg,T1expire,T2expire,T1start,T2start,Tcg,Tcs,T1,T2,N1,N2,Set_102,Set_104,SID).
 iknows(pair(U,pair(G,N1)))

step step_1 (C,U,G,S,A,Kca,Kcs,Dummy_Kcg,Dummy_T1expire,T2expire,Dummy_T1start,T2start,Dummy_Tcg,Tcs,Dummy_T1,T2,N1,Dummy_N2,Dummy_Set_102,Set_104,SID,Kcg,T1expire,T1start,Tcg,T1,N2) :=
 state_client(C,U,G,S,A,Kca,2,Kcs,Dummy_Kcg,Dummy_T1expire,T2expire,Dummy_T1start,T2start,Dummy_Tcg,Tcs,Dummy_T1,T2,N1,Dummy_N2,Dummy_Set_102,Set_104,SID).
 iknows(pair(U,pair(Tcg,scrypt(Kca,pair(G,pair(Kcg,pair(T1start,pair(T1expire,N1))))))))
=[exists T1,N2]=>
 state_client(C,U,G,S,A,Kca,3,Kcs,Kcg,T1expire,T2expire,T1start,T2start,Tcg,Tcs,T1,T2,N1,N2,Dummy_Set_102,Set_104,SID).
 iknows(pair(S,pair(N2,pair(Tcg,scrypt(Kcg,pair(C,T1)))))).
 witness(C,G,t1,T1).
 request(C,A,n1,pair(Kcg,N1),SID).
 secret(Kcg,sec_c_Kcg,Dummy_Set_102).
 contains(A,Dummy_Set_102).
 contains(C,Dummy_Set_102).
 contains(G,Dummy_Set_102)

step step_2 (C,U,G,S,A,Kca,Dummy_Kcs,Kcg,T1expire,Dummy_T2expire,T1start,Dummy_T2start,Tcg,Dummy_Tcs,T1,Dummy_T2,N1,N2,Set_102,Dummy_Set_104,SID,Kcs,T2expire,T2start,Tcs,T2) :=
 state_client(C,U,G,S,A,Kca,3,Dummy_Kcs,Kcg,T1expire,Dummy_T2expire,T1start,Dummy_T2start,Tcg,Dummy_Tcs,T1,Dummy_T2,N1,N2,Set_102,Dummy_Set_104,SID).
 iknows(pair(U,pair(Tcs,scrypt(Kcg,pair(S,pair(Kcs,pair(T2start,pair(T2expire,N2))))))))
=[exists T2]=>
 state_client(C,U,G,S,A,Kca,4,Kcs,Kcg,T1expire,T2expire,T1start,T2start,Tcg,Tcs,T1,T2,N1,N2,Set_102,Dummy_Set_104,SID).
 iknows(pair(Tcs,scrypt(Kcs,pair(C,T2)))).
 witness(C,S,t2b,T2).
 request(C,G,n2,pair(Kcs,N2),SID).
 secret(Kcs,sec_c_Kcs,Dummy_Set_104).
 contains(G,Dummy_Set_104).
 contains(C,Dummy_Set_104).
 contains(S,Dummy_Set_104)

step step_3 (C,U,G,S,A,Kca,Kcs,Kcg,T1expire,T2expire,T1start,T2start,Tcg,Tcs,T1,T2,N1,N2,Set_102,Set_104,SID) :=
 state_client(C,U,G,S,A,Kca,4,Kcs,Kcg,T1expire,T2expire,T1start,T2start,Tcg,Tcs,T1,T2,N1,N2,Set_102,Set_104,SID).
 iknows(scrypt(Kcs,T2))
 =>
 state_client(C,U,G,S,A,Kca,5,Kcs,Kcg,T1expire,T2expire,T1start,T2start,Tcg,Tcs,T1,T2,N1,N2,Set_102,Set_104,SID).
 request(C,S,t2a,T2,SID)

step step_4 (S,C,G,Kgs,Dummy_L,Dummy_U,Dummy_Kcs,Dummy_T2expire,Dummy_T2start,Dummy_T2,Dummy_Set_74,SID,U,Kcs,T2expire,T2start,T2) :=
 state_server(S,C,G,Kgs,Dummy_L,31,Dummy_U,Dummy_Kcs,Dummy_T2expire,Dummy_T2start,Dummy_T2,Dummy_Set_74,SID).
 iknows(pair(scrypt(Kgs,pair(U,pair(C,pair(S,pair(Kcs,pair(T2start,T2expire)))))),scrypt(Kcs,pair(C,T2)))) &
 not(contains(T2,Dummy_L))
 =>
 state_server(S,C,G,Kgs,Dummy_L,32,U,Kcs,T2expire,T2start,T2,Dummy_Set_74,SID).
 iknows(scrypt(Kcs,T2)).
 witness(S,C,t2a,T2).
 request(S,C,t2b,T2,SID).
 secret(Kcs,sec_s_Kcs,Dummy_Set_74).
 contains(T2,Dummy_L).
 contains(G,Dummy_Set_74).
 contains(C,Dummy_Set_74).
 contains(S,Dummy_Set_74)

step step_5 (G,S,C,A,Kag,Kgs,Dummy_L,Dummy_N2,Dummy_U,Dummy_Kcg,Dummy_Kcs,Dummy_T1start,Dummy_T1expire,Dummy_T2start,Dummy_T2expire,Dummy_T1,Dummy_Set_53,Dummy_Set_54,SID,N2,U,Kcg,Kcs,T1start,T1expire,T2start,T2expire,T1) :=
 state_ticketGrantingServer(G,S,C,A,Kag,Kgs,Dummy_L,21,Dummy_N2,Dummy_U,Dummy_Kcg,Dummy_Kcs,Dummy_T1start,Dummy_T1expire,Dummy_T2start,Dummy_T2expire,Dummy_T1,Dummy_Set_53,Dummy_Set_54,SID).
 iknows(pair(S,pair(N2,pair(scrypt(Kag,pair(U,pair(C,pair(G,pair(Kcg,pair(T1start,T1expire)))))),scrypt(Kcg,pair(C,T1)))))) &
 not(contains(T1,Dummy_L))
=[exists T2expire,T2start,Kcs]=>
 state_ticketGrantingServer(G,S,C,A,Kag,Kgs,Dummy_L,22,N2,U,Kcg,Kcs,T1start,T1expire,T2start,T2expire,T1,Dummy_Set_53,Dummy_Set_54,SID).
 iknows(pair(U,pair(scrypt(Kgs,pair(U,pair(C,pair(S,pair(Kcs,pair(T2start,T2expire)))))),scrypt(Kcg,pair(S,pair(Kcs,pair(T2start,pair(T2expire,N2)))))))).
 request(G,C,t1,T1,SID).
 witness(G,C,n2,pair(Kcs,N2)).
 secret(Kcg,sec_t_Kcg,Dummy_Set_53).
 secret(Kcs,sec_t_Kcs,Dummy_Set_54).
 contains(T1,Dummy_L).
 contains(A,Dummy_Set_53).
 contains(C,Dummy_Set_53).
 contains(G,Dummy_Set_53).
 contains(G,Dummy_Set_54).
 contains(C,Dummy_Set_54).
 contains(S,Dummy_Set_54)

step step_6 (A,C,G,Kca,Kag,Dummy_N1,Dummy_U,Dummy_Kcg,Dummy_T1start,Dummy_T1expire,Dummy_Set_24,SID,N1,U,Kcg,T1start,T1expire) :=
 state_keyDistributionCentre(A,C,G,Kca,Kag,11,Dummy_N1,Dummy_U,Dummy_Kcg,Dummy_T1start,Dummy_T1expire,Dummy_Set_24,SID).
 iknows(pair(U,pair(G,N1)))
=[exists T1expire,T1start,Kcg]=>
 state_keyDistributionCentre(A,C,G,Kca,Kag,12,N1,U,Kcg,T1start,T1expire,Dummy_Set_24,SID).
 iknows(pair(U,pair(scrypt(Kag,pair(U,pair(C,pair(G,pair(Kcg,pair(T1start,T1expire)))))),scrypt(Kca,pair(G,pair(Kcg,pair(T1start,pair(T1expire,N1)))))))).
 witness(A,C,n1,pair(Kcg,N1)).
 secret(Kcg,sec_k_Kcg,Dummy_Set_24).
 contains(A,Dummy_Set_24).
 contains(C,Dummy_Set_24).
 contains(G,Dummy_Set_24)


section properties:

property secrecy_of_sec_k_Kcg (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_k_Kcg,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_sec_t_Kcg (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_t_Kcg,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_sec_t_Kcs (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_t_Kcs,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_sec_s_Kcs (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_s_Kcs,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_sec_c_Kcg (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_c_Kcg,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_sec_c_Kcs (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_c_Kcs,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property authentication_on_n1 (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,n1,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,n1,MGoal))
     /\ ((request(A1Goal,A2Goal,n1,MGoal,SID1)
           /\ request(A1Goal,A2Goal,n1,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_n2 (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,n2,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,n2,MGoal))
     /\ ((request(A1Goal,A2Goal,n2,MGoal,SID1)
           /\ request(A1Goal,A2Goal,n2,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_t2a (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,t2a,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,t2a,MGoal))
     /\ ((request(A1Goal,A2Goal,t2a,MGoal,SID1)
           /\ request(A1Goal,A2Goal,t2a,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_t2b (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,t2b,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,t2b,MGoal))
     /\ ((request(A1Goal,A2Goal,t2b,MGoal,SID1)
           /\ request(A1Goal,A2Goal,t2b,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_t1 (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,t1,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,t1,MGoal))
     /\ ((request(A1Goal,A2Goal,t1,MGoal,SID1)
           /\ request(A1Goal,A2Goal,t1,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state secrecy_of_sec_k_Kcg (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_k_Kcg,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_sec_t_Kcg (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_t_Kcg,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_sec_t_Kcs (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_t_Kcs,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_sec_s_Kcs (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_s_Kcs,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_sec_c_Kcg (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_c_Kcg,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_sec_c_Kcs (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_c_Kcs,ASGoal) &
 not(contains(i,ASGoal))

attack_state authentication_on_n1 (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,n1,MGoal,SID) &
 not(witness(A2Goal,A1Goal,n1,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_n1 (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,n1,MGoal,SID1).
 request(A1Goal,A2Goal,n1,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_n2 (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,n2,MGoal,SID) &
 not(witness(A2Goal,A1Goal,n2,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_n2 (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,n2,MGoal,SID1).
 request(A1Goal,A2Goal,n2,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_t2a (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,t2a,MGoal,SID) &
 not(witness(A2Goal,A1Goal,t2a,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_t2a (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,t2a,MGoal,SID1).
 request(A1Goal,A2Goal,t2a,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_t2b (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,t2b,MGoal,SID) &
 not(witness(A2Goal,A1Goal,t2b,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_t2b (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,t2b,MGoal,SID1).
 request(A1Goal,A2Goal,t2b,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_t1 (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,t1,MGoal,SID) &
 not(witness(A2Goal,A1Goal,t1,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_t1 (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,t1,MGoal,SID1).
 request(A1Goal,A2Goal,t1,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

