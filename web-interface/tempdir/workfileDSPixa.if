%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfileDSPixa

section signature:

state_dest: agent * agent * agent * agent * symmetric_key * symmetric_key * symmetric_key * nat * message * message * message * message * hash_func * set(message) * nat -> fact
state_router2: agent * agent * agent * agent * symmetric_key * symmetric_key * symmetric_key * nat * message * message * message * message * hash_func * set(message) * set(agent) * nat -> fact
state_router1: agent * agent * agent * agent * symmetric_key * symmetric_key * symmetric_key * nat * message * message * message * message * hash_func * set(message) * set(agent) * nat -> fact
state_source: agent * agent * agent * agent * symmetric_key * symmetric_key * symmetric_key * nat * message * message * message * message * message * message * message * message * message * hash_func * set(message) * set(agent) * set(agent) * set(agent) * nat -> fact


section types:

set_183, set_181, set_180, set_179, set_178, set_177, set_167, set_160, set_144, set_143, set_142, set_141: set
Set_85, Dummy_Set_85, Dummy_Set_62, Set_62, Dummy_Set_39, Dummy_Set_37, Dummy_Set_34, Set_39, ASGoal, Set_37, Set_34: set(agent)
a5, a4, a3, a2, a1: protocol_id
K1, K2, Kd, k1, k2, kd: symmetric_key
State, 6, 11, 5, 10, 9, SID, 4, 3, Dummy_State, 7, 2, 1, 0, 8: nat
OV, dummy_set, Dummy_OV: set(message)
H, dummy_hash: hash_func
S, R1, R2, D, s, r1, r2, d, i: agent
Datahash, Ovr2, Pvf2, PVF, Dummy_Pvfd, Dummy_Ovdest, Dummy_Pvf2, Dummy_Ovr2, Dummy_Pvf1, Dummy_Ovr1, Ovr1, Pvf1, Dummy_PVF, Dummy_Pvf0, Dummy_OvD, Dummy_Ov2, Dummy_Ov1, Dummy_Datahash, dummy_msg, MGoal, start, P, Ov1, Ov2, OvD, Pvf0, Pvfd, Accept, Ovdest: message


section inits:

initial_state init1 := 
 iknows(start).
 iknows(s).
 iknows(r1).
 iknows(r2).
 iknows(d).
 iknows(i).
 state_source(s,r1,r2,d,k1,k2,kd,0,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_hash,set_141,set_142,set_143,set_144,3).
 state_router1(r1,s,r2,d,k1,k2,kd,1,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_hash,dummy_set,set_160,4).
 state_router2(r2,s,r1,d,k1,k2,kd,3,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_hash,dummy_set,set_167,5).
 state_dest(d,s,r1,r2,k1,k2,kd,5,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_hash,dummy_set,6).
 state_router1(r1,i,r2,d,k1,k2,kd,1,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_hash,dummy_set,set_181,9).
 state_router2(r2,i,r1,d,k1,k2,kd,3,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_hash,dummy_set,set_183,10).
 state_dest(d,i,r1,r2,k1,k2,kd,5,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_hash,dummy_set,11)


section rules:

step step_0 (S,R1,R2,D,K1,K2,Kd,P,Dummy_Datahash,Dummy_Ov1,Dummy_Ov2,Dummy_OvD,Dummy_Pvf0,Dummy_PVF,Pvfd,Accept,H,Dummy_OV,Dummy_Set_34,Dummy_Set_37,Dummy_Set_39,SID) :=
 state_source(S,R1,R2,D,K1,K2,Kd,0,P,Dummy_Datahash,Dummy_Ov1,Dummy_Ov2,Dummy_OvD,Dummy_Pvf0,Dummy_PVF,Pvfd,Accept,H,Dummy_OV,Dummy_Set_34,Dummy_Set_37,Dummy_Set_39,SID).
 iknows(start)
 =>
 state_source(S,R1,R2,D,K1,K2,Kd,2,P,apply(H,P),scrypt(K1,apply(H,apply(H,P))),scrypt(K2,apply(H,apply(H,P))),scrypt(Kd,apply(H,apply(H,P))),scrypt(Kd,apply(H,apply(H,P))),scrypt(Kd,apply(H,apply(H,P))),Pvfd,Accept,H,Dummy_OV,Dummy_Set_34,Dummy_Set_37,Dummy_Set_39,SID).
 iknows(pair(apply(H,P),scrypt(Kd,apply(H,apply(H,P))))).
 iknows(Dummy_OV).
 secret(K1,a1,Dummy_Set_34).
 secret(K2,a2,Dummy_Set_37).
 secret(Kd,a3,Dummy_Set_39).
 contains(scrypt(K1,apply(H,apply(H,P))),Dummy_OV).
 contains(scrypt(K2,apply(H,apply(H,P))),Dummy_OV).
 contains(scrypt(Kd,apply(H,apply(H,P))),Dummy_OV).
 contains(S,Dummy_Set_34).
 contains(R1,Dummy_Set_34).
 contains(S,Dummy_Set_37).
 contains(R2,Dummy_Set_37).
 contains(S,Dummy_Set_39).
 contains(D,Dummy_Set_39)

step step_1 (S,R1,R2,D,K1,K2,Kd,P,Datahash,Ov1,Ov2,OvD,Pvf0,Dummy_PVF,Accept,H,OV,Set_34,Set_37,Set_39,SID) :=
 state_source(S,R1,R2,D,K1,K2,Kd,7,P,Datahash,Ov1,Ov2,OvD,Pvf0,Dummy_PVF,scrypt(K2,apply(H,pair(Datahash,scrypt(K1,apply(H,pair(Datahash,scrypt(Kd,apply(H,Datahash)))))))),Accept,H,OV,Set_34,Set_37,Set_39,SID).
 iknows(scrypt(Kd,pair(scrypt(K2,apply(H,pair(Datahash,scrypt(K1,apply(H,pair(Datahash,scrypt(Kd,apply(H,Datahash)))))))),Datahash)))
 =>
 state_source(S,R1,R2,D,K1,K2,Kd,7,P,Datahash,Ov1,Ov2,OvD,Pvf0,scrypt(K2,apply(H,pair(Datahash,scrypt(K1,apply(H,pair(Datahash,scrypt(Kd,apply(H,Datahash)))))))),scrypt(K2,apply(H,pair(Datahash,scrypt(K1,apply(H,pair(Datahash,scrypt(Kd,apply(H,Datahash)))))))),Accept,H,OV,Set_34,Set_37,Set_39,SID).
 iknows(Accept)

step step_2 (R1,S,R2,D,K1,K2,Kd,Datahash,Dummy_Ovr1,Dummy_Pvf1,Dummy_PVF,H,OV,Dummy_Set_62,SID) :=
 state_router1(R1,S,R2,D,K1,K2,Kd,1,Datahash,Dummy_Ovr1,Dummy_Pvf1,Dummy_PVF,H,OV,Dummy_Set_62,SID).
 iknows(pair(Datahash,Dummy_PVF))
 =>
 state_router1(R1,S,R2,D,K1,K2,Kd,3,Datahash,scrypt(K1,apply(H,Datahash)),scrypt(K1,apply(H,pair(Datahash,Dummy_PVF))),scrypt(K1,apply(H,pair(Datahash,Dummy_PVF))),H,OV,Dummy_Set_62,SID).
 secret(K1,a4,Dummy_Set_62).
 contains(R1,Dummy_Set_62).
 contains(D,Dummy_Set_62)

step step_3 (R1,S,R2,D,K1,K2,Kd,Datahash,Dummy_Ovr1,Pvf1,PVF,H,Dummy_OV,Set_62,SID,Ovr1,OV) :=
 state_router1(R1,S,R2,D,K1,K2,Kd,2,Datahash,Dummy_Ovr1,Pvf1,PVF,H,Dummy_OV,Set_62,SID).
 iknows(OV).
 contains(Ovr1,OV)
 =>
 state_router1(R1,S,R2,D,K1,K2,Kd,4,Datahash,Ovr1,Pvf1,PVF,H,OV,Set_62,SID).
 iknows(pair(Datahash,PVF)).
 iknows(OV).
 contains(Ovr1,OV)

step step_4 (R2,S,R1,D,K1,K2,Kd,Datahash,Dummy_Ovr2,Dummy_Pvf2,Dummy_PVF,H,OV,Dummy_Set_85,SID) :=
 state_router2(R2,S,R1,D,K1,K2,Kd,3,Datahash,Dummy_Ovr2,Dummy_Pvf2,Dummy_PVF,H,OV,Dummy_Set_85,SID).
 iknows(pair(Datahash,Dummy_PVF))
 =>
 state_router2(R2,S,R1,D,K1,K2,Kd,5,Datahash,scrypt(K2,apply(H,Datahash)),scrypt(K2,apply(H,pair(Datahash,Dummy_PVF))),scrypt(K2,apply(H,pair(Datahash,Dummy_PVF))),H,OV,Dummy_Set_85,SID).
 secret(K2,a5,Dummy_Set_85).
 contains(R2,Dummy_Set_85).
 contains(D,Dummy_Set_85)

step step_5 (R2,S,R1,D,K1,K2,Kd,Datahash,Dummy_Ovr2,Pvf2,PVF,H,Dummy_OV,Set_85,SID,Ovr2,OV) :=
 state_router2(R2,S,R1,D,K1,K2,Kd,4,Datahash,Dummy_Ovr2,Pvf2,PVF,H,Dummy_OV,Set_85,SID).
 iknows(OV).
 contains(Ovr2,OV)
 =>
 state_router2(R2,S,R1,D,K1,K2,Kd,6,Datahash,Ovr2,Pvf2,PVF,H,OV,Set_85,SID).
 iknows(pair(Datahash,PVF)).
 iknows(OV).
 contains(Ovr2,OV)

step step_6 (D,S,R1,R2,K1,K2,Kd,Datahash,Dummy_Ovdest,Dummy_Pvfd,PVF,H,OV,SID) :=
 state_dest(D,S,R1,R2,K1,K2,Kd,5,Datahash,Dummy_Ovdest,Dummy_Pvfd,PVF,H,OV,SID).
 iknows(pair(Datahash,PVF))
 =>
 state_dest(D,S,R1,R2,K1,K2,Kd,7,Datahash,scrypt(Kd,apply(H,Datahash)),scrypt(K2,apply(H,pair(Datahash,scrypt(K1,apply(H,pair(Datahash,scrypt(Kd,apply(H,Datahash)))))))),PVF,H,OV,SID)

step step_7 (D,S,R1,R2,K1,K2,Kd,Datahash,Dummy_Ovdest,PVF,H,Dummy_OV,SID,Ovdest,OV) :=
 state_dest(D,S,R1,R2,K1,K2,Kd,6,Datahash,Dummy_Ovdest,PVF,PVF,H,Dummy_OV,SID).
 iknows(OV).
 contains(Ovdest,OV)
 =>
 state_dest(D,S,R1,R2,K1,K2,Kd,8,Datahash,Ovdest,PVF,PVF,H,OV,SID).
 iknows(scrypt(Kd,pair(PVF,Datahash))).
 contains(Ovdest,OV)


section properties:

property secrecy_of_a1 (MGoal,ASGoal) :=
 [] ((secret(MGoal,a1,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_a2 (MGoal,ASGoal) :=
 [] ((secret(MGoal,a2,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_a3 (MGoal,ASGoal) :=
 [] ((secret(MGoal,a3,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_a4 (MGoal,ASGoal) :=
 [] ((secret(MGoal,a4,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_a5 (MGoal,ASGoal) :=
 [] ((secret(MGoal,a5,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))


section attack_states:

attack_state secrecy_of_a1 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,a1,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_a2 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,a2,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_a3 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,a3,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_a4 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,a4,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_a5 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,a5,ASGoal) &
 not(contains(i,ASGoal))

