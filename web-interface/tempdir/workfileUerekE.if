%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfileUerekE

section signature:

state_target_SN: agent * agent * agent * hash_func * text * hash_func * nat * text * text * text * text * text * text * pair(text,text) * pair(text,text) * pair(text,pair(text,text)) * text * text * text * text * text * text * text * nat -> fact
state_target_GW: agent * agent * agent * hash_func * text * hash_func * nat * text * text * text * text * text * text * text * text * text * text * text * text * pair(text,text) * pair(text,pair(text,text)) * text * text * set(agent) * set(agent) * set(agent) * set(agent) * set(agent) * set(agent) * nat -> fact
state_user: agent * agent * agent * hash_func * text * text * nat * text * text * text * text * text * text * pair(text,text) * pair(text,text) * text * set(agent) * set(agent) * set(agent) * nat -> fact


section types:

Set_80, Set_79, Set_78, Set_77, Set_76, Set_75, Dummy_Set_80, Dummy_Set_79, Dummy_Set_78, Dummy_Set_77, Dummy_Set_76, Dummy_Set_75, Dummy_Set_41, Dummy_Set_40, Dummy_Set_34, Set_41, Set_40, ASGoal, Set_34: set(agent)
MGoal, start: message
gateway_sensor, sensor_gateway, sec_N_sensor, sec_Ts_sensor, sec_success, sec_i_Pwd, sec_i_NPwd, user_gateway, sec_i_pwd, gateway_user, user_sensor, sensor_user: protocol_id
Rec_N_TS, Req_Login, Dummy_Rec_N_TS, Broad_N_TS, Dummy_Req_Login, Dummy_Reg_req, Reg_req: pair(text,text)
Pwd, H, h: hash_func
11, State, 9, 8, 7, 5, SID, 4, Dummy_State, 3, 2, SID2, 1, SID1, 0, 13, 12: nat
U, GW, SN, A2Goal, A1Goal, u, gw, sn, i: agent
Tstamp1, Tstamp3, Tstamp, N, A, C, UID, Dummy_Tstamp7, Dummy_Tstamp3, Dummy_C, Dummy_PERMIT_LOGIN, PERMIT_LOGIN, NPwd, Dummy_Tstamp5, Dummy_MA_u, Dummy_MA_sn, Reg_resp, Succ_msg, Dummy_Succ_msg, Dummy_Tstamp, Dummy_N, Dummy_X, Tstamp5, X, MA_sn, MA_u, Dummy_NewPassword, Dummy_Tstamp1, Dummy_A, dummy_nonce, pwd_u_gw, uid, NewPassword, Tstamp7, Recv_msg, Password, XMA_sn_XMA_u, HMA_u: text
Dummy_Res_Login, Dummy_Accept_Login, Accept_Login, Res_Login: pair(text,pair(text,text))
set_201, set_200, set_199, set_198, set_196, set_195, set_194, set_191, set_190, set_189, set_188, set_187, set_186, set_184, set_183, set_182, set_157, set_156, set_155, set_154, set_153, set_152, set_139, set_138, set_137, set_203, set_202: set


section inits:

initial_state init1 := 
 iknows(start).
 iknows(u).
 iknows(gw).
 iknows(sn).
 iknows(h).
 iknows(uid).
 iknows(i).
 state_user(u,gw,sn,h,uid,pwd_u_gw,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,pair(dummy_nonce,dummy_nonce),pair(dummy_nonce,dummy_nonce),dummy_nonce,set_137,set_138,set_139,3).
 state_target_GW(gw,u,sn,h,uid,apply(h,pwd_u_gw),0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,pair(dummy_nonce,dummy_nonce),pair(dummy_nonce,pair(dummy_nonce,dummy_nonce)),dummy_nonce,dummy_nonce,set_152,set_153,set_154,set_155,set_156,set_157,4).
 state_target_SN(sn,u,gw,h,uid,apply(h,pwd_u_gw),0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,pair(dummy_nonce,dummy_nonce),pair(dummy_nonce,dummy_nonce),pair(dummy_nonce,pair(dummy_nonce,dummy_nonce)),dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,5).
 state_user(u,gw,sn,h,uid,pwd_u_gw,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,pair(dummy_nonce,dummy_nonce),pair(dummy_nonce,dummy_nonce),dummy_nonce,set_182,set_183,set_184,7).
 state_target_GW(gw,u,sn,h,uid,apply(h,pwd_u_gw),0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,pair(dummy_nonce,dummy_nonce),pair(dummy_nonce,pair(dummy_nonce,dummy_nonce)),dummy_nonce,dummy_nonce,set_186,set_187,set_188,set_189,set_190,set_191,8).
 state_target_SN(sn,u,gw,h,uid,apply(h,pwd_u_gw),0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,pair(dummy_nonce,dummy_nonce),pair(dummy_nonce,dummy_nonce),pair(dummy_nonce,pair(dummy_nonce,dummy_nonce)),dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,9).
 state_user(u,gw,sn,h,uid,pwd_u_gw,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,pair(dummy_nonce,dummy_nonce),pair(dummy_nonce,dummy_nonce),dummy_nonce,set_194,set_195,set_196,11).
 state_target_GW(gw,u,sn,h,uid,apply(h,pwd_u_gw),0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,pair(dummy_nonce,dummy_nonce),pair(dummy_nonce,pair(dummy_nonce,dummy_nonce)),dummy_nonce,dummy_nonce,set_198,set_199,set_200,set_201,set_202,set_203,12).
 state_target_SN(sn,u,gw,h,uid,apply(h,pwd_u_gw),0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,pair(dummy_nonce,dummy_nonce),pair(dummy_nonce,dummy_nonce),pair(dummy_nonce,pair(dummy_nonce,dummy_nonce)),dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,13)


section rules:

step step_0 (U,GW,SN,H,UID,Password,Recv_msg,A,Tstamp1,PERMIT_LOGIN,MA_u,Tstamp7,Dummy_Reg_req,Req_Login,NewPassword,Dummy_Set_34,Set_40,Set_41,SID) :=
 state_user(U,GW,SN,H,UID,Password,0,Recv_msg,A,Tstamp1,PERMIT_LOGIN,MA_u,Tstamp7,Dummy_Reg_req,Req_Login,NewPassword,Dummy_Set_34,Set_40,Set_41,SID).
 iknows(start)
 =>
 state_user(U,GW,SN,H,UID,Password,1,Recv_msg,A,Tstamp1,PERMIT_LOGIN,MA_u,Tstamp7,pair(UID,apply(H,Password)),Req_Login,NewPassword,Dummy_Set_34,Set_40,Set_41,SID).
 iknows(pair(UID,apply(H,Password))).
 secret(Password,sec_i_Pwd,Dummy_Set_34).
 witness(U,GW,user_gateway,pair(UID,apply(H,Password))).
 contains(GW,Dummy_Set_34)

step step_1 (U,GW,SN,H,UID,Password,Recv_msg,Dummy_A,Dummy_Tstamp1,PERMIT_LOGIN,MA_u,Tstamp7,Reg_req,Dummy_Req_Login,NewPassword,Set_34,Set_40,Set_41,SID,Tstamp1) :=
 state_user(U,GW,SN,H,UID,Password,1,Recv_msg,Dummy_A,Dummy_Tstamp1,PERMIT_LOGIN,MA_u,Tstamp7,Reg_req,Dummy_Req_Login,NewPassword,Set_34,Set_40,Set_41,SID).
 iknows(Recv_msg)
=[exists Tstamp1]=>
 state_user(U,GW,SN,H,UID,Password,2,Recv_msg,apply(H,xor(apply(H,Password),Tstamp1)),Tstamp1,PERMIT_LOGIN,MA_u,Tstamp7,Reg_req,pair(apply(H,xor(apply(H,Password),Tstamp1)),Tstamp1),NewPassword,Set_34,Set_40,Set_41,SID).
 request(GW,U,gateway_user,Recv_msg,SID).
 iknows(pair(UID,pair(apply(H,xor(apply(H,Password),Tstamp1)),Tstamp1))).
 witness(U,SN,user_sensor,pair(apply(H,xor(apply(H,Password),Tstamp1)),Tstamp1))

step step_2 (U,GW,SN,H,UID,Password,Recv_msg,A,Tstamp1,PERMIT_LOGIN,MA_u,Tstamp7,Reg_req,Req_Login,Dummy_NewPassword,Set_34,Dummy_Set_40,Dummy_Set_41,SID,NewPassword) :=
 state_user(U,GW,SN,H,UID,Password,2,Recv_msg,A,Tstamp1,PERMIT_LOGIN,MA_u,Tstamp7,Reg_req,Req_Login,Dummy_NewPassword,Set_34,Dummy_Set_40,Dummy_Set_41,SID).
 iknows(pair(PERMIT_LOGIN,pair(MA_u,Tstamp7)))
=[exists NewPassword]=>
 state_user(U,GW,SN,H,UID,Password,3,Recv_msg,A,Tstamp1,PERMIT_LOGIN,MA_u,Tstamp7,Reg_req,Req_Login,NewPassword,Set_34,Dummy_Set_40,Dummy_Set_41,SID).
 request(SN,U,sensor_user,pair(PERMIT_LOGIN,pair(MA_u,Tstamp7)),SID).
 iknows(pair(UID,pair(apply(H,Password),apply(H,NewPassword)))).
 secret(Password,sec_i_Pwd,Dummy_Set_40).
 secret(NewPassword,sec_i_NPwd,Dummy_Set_41).
 witness(U,GW,user_gateway,pair(apply(H,Password),apply(H,NewPassword))).
 contains(GW,Dummy_Set_40).
 contains(GW,Dummy_Set_41)

step step_3 (GW,U,SN,H,UID,Pwd,Dummy_X,Dummy_N,MA_sn,MA_u,A,C,Tstamp1,Tstamp3,Tstamp5,Dummy_Tstamp,Dummy_Succ_msg,Reg_resp,Broad_N_TS,Accept_Login,NPwd,PERMIT_LOGIN,Dummy_Set_75,Dummy_Set_76,Dummy_Set_77,Set_78,Set_79,Set_80,SID,X,Tstamp,Succ_msg) :=
 state_target_GW(GW,U,SN,H,UID,Pwd,0,Dummy_X,Dummy_N,MA_sn,MA_u,A,C,Tstamp1,Tstamp3,Tstamp5,Dummy_Tstamp,Dummy_Succ_msg,Reg_resp,Broad_N_TS,Accept_Login,NPwd,PERMIT_LOGIN,Dummy_Set_75,Dummy_Set_76,Dummy_Set_77,Set_78,Set_79,Set_80,SID).
 iknows(pair(UID,Pwd))
=[exists Tstamp,X,Succ_msg]=>
 state_target_GW(GW,U,SN,H,UID,Pwd,1,X,xor(Pwd,apply(H,xor(Dummy_X,UID))),MA_sn,MA_u,A,C,Tstamp1,Tstamp3,Tstamp5,Tstamp,Succ_msg,Reg_resp,Broad_N_TS,Accept_Login,NPwd,PERMIT_LOGIN,Dummy_Set_75,Dummy_Set_76,Dummy_Set_77,Set_78,Set_79,Set_80,SID).
 secret(Succ_msg,sec_success,Dummy_Set_75).
 iknows(Succ_msg).
 witness(GW,U,gateway_user,Succ_msg).
 request(U,GW,user_gateway,pair(UID,Pwd),SID).
 secret(xor(Pwd,apply(H,xor(Dummy_X,UID))),sec_N_sensor,Dummy_Set_76).
 secret(Tstamp,sec_Ts_sensor,Dummy_Set_77).
 iknows(pair(UID,pair(xor(Pwd,apply(H,xor(Dummy_X,UID))),Tstamp))).
 witness(GW,SN,gateway_sensor,pair(xor(Pwd,apply(H,xor(Dummy_X,UID))),Tstamp)).
 contains(U,Dummy_Set_75).
 contains(SN,Dummy_Set_76).
 contains(SN,Dummy_Set_77)

step step_4 (GW,U,SN,H,UID,Pwd,X,N,Dummy_MA_sn,Dummy_MA_u,Dummy_A,C,Tstamp1,Tstamp3,Dummy_Tstamp5,Tstamp,Succ_msg,Reg_resp,Broad_N_TS,Dummy_Accept_Login,NPwd,Dummy_PERMIT_LOGIN,Set_75,Set_76,Set_77,Set_78,Set_79,Set_80,SID,Tstamp5,PERMIT_LOGIN) :=
 state_target_GW(GW,U,SN,H,UID,Pwd,1,X,N,Dummy_MA_sn,Dummy_MA_u,Dummy_A,C,Tstamp1,Tstamp3,Dummy_Tstamp5,Tstamp,Succ_msg,Reg_resp,Broad_N_TS,Dummy_Accept_Login,NPwd,Dummy_PERMIT_LOGIN,Set_75,Set_76,Set_77,Set_78,Set_79,Set_80,SID).
 iknows(pair(UID,pair(C,pair(Tstamp1,Tstamp3))))
=[exists PERMIT_LOGIN,Tstamp5]=>
 state_target_GW(GW,U,SN,H,UID,Pwd,2,X,N,apply(H,xor(apply(H,xor(Pwd,Tstamp1)),apply(H,xor(N,Tstamp5)))),apply(H,xor(apply(H,xor(Pwd,Tstamp1)),Pwd)),apply(H,xor(Pwd,Tstamp1)),C,Tstamp1,Tstamp3,Tstamp5,Tstamp,Succ_msg,Reg_resp,Broad_N_TS,pair(C,pair(Tstamp1,Tstamp3)),NPwd,PERMIT_LOGIN,Set_75,Set_76,Set_77,Set_78,Set_79,Set_80,SID).
 request(SN,GW,sensor_gateway,pair(C,pair(Tstamp1,Tstamp3)),SID).
 iknows(pair(PERMIT_LOGIN,pair(xor(apply(H,xor(apply(H,xor(Pwd,Tstamp1)),apply(H,xor(N,Tstamp5)))),apply(H,xor(apply(H,xor(Pwd,Tstamp1)),Pwd))),pair(apply(H,apply(H,xor(apply(H,xor(Pwd,Tstamp1)),Pwd))),Tstamp5)))).
 witness(GW,SN,gateway_sensor,pair(PERMIT_LOGIN,pair(xor(apply(H,xor(apply(H,xor(Pwd,Tstamp1)),apply(H,xor(N,Tstamp5)))),apply(H,xor(apply(H,xor(Pwd,Tstamp1)),Pwd))),pair(apply(H,apply(H,xor(apply(H,xor(Pwd,Tstamp1)),Pwd))),Tstamp5))))

step step_5 (GW,U,SN,H,UID,Pwd,Dummy_X,Dummy_N,MA_sn,MA_u,A,C,Tstamp1,Tstamp3,Tstamp5,Dummy_Tstamp,Dummy_Succ_msg,Reg_resp,Broad_N_TS,Accept_Login,NPwd,PERMIT_LOGIN,Set_75,Set_76,Set_77,Dummy_Set_78,Dummy_Set_79,Dummy_Set_80,SID,X,Tstamp,Succ_msg) :=
 state_target_GW(GW,U,SN,H,UID,Pwd,2,Dummy_X,Dummy_N,MA_sn,MA_u,A,C,Tstamp1,Tstamp3,Tstamp5,Dummy_Tstamp,Dummy_Succ_msg,Reg_resp,Broad_N_TS,Accept_Login,NPwd,PERMIT_LOGIN,Set_75,Set_76,Set_77,Dummy_Set_78,Dummy_Set_79,Dummy_Set_80,SID).
 iknows(pair(UID,pair(Pwd,NPwd)))
=[exists Tstamp,X,Succ_msg]=>
 state_target_GW(GW,U,SN,H,UID,Pwd,3,X,xor(Pwd,apply(H,xor(Dummy_X,UID))),MA_sn,MA_u,A,C,Tstamp1,Tstamp3,Tstamp5,Tstamp,Succ_msg,Reg_resp,Broad_N_TS,Accept_Login,NPwd,PERMIT_LOGIN,Set_75,Set_76,Set_77,Dummy_Set_78,Dummy_Set_79,Dummy_Set_80,SID).
 request(U,GW,user_gateway,pair(UID,pair(Pwd,NPwd)),SID).
 secret(Succ_msg,sec_success,Dummy_Set_78).
 iknows(Succ_msg).
 witness(GW,U,gateway_user,Succ_msg).
 secret(xor(Pwd,apply(H,xor(Dummy_X,UID))),sec_N_sensor,Dummy_Set_79).
 secret(Tstamp,sec_Ts_sensor,Dummy_Set_80).
 iknows(pair(UID,pair(xor(Pwd,apply(H,xor(Dummy_X,UID))),Tstamp))).
 witness(GW,SN,gateway_sensor,pair(xor(Pwd,apply(H,xor(Dummy_X,UID))),Tstamp)).
 contains(U,Dummy_Set_78).
 contains(SN,Dummy_Set_79).
 contains(SN,Dummy_Set_80)

step step_6 (SN,U,GW,H,UID,Pwd,N,A,C,Tstamp,Tstamp1,Tstamp3,Dummy_Rec_N_TS,Req_Login,Res_Login,MA_sn,MA_u,PERMIT_LOGIN,XMA_sn_XMA_u,HMA_u,Tstamp5,Tstamp7,SID) :=
 state_target_SN(SN,U,GW,H,UID,Pwd,0,N,A,C,Tstamp,Tstamp1,Tstamp3,Dummy_Rec_N_TS,Req_Login,Res_Login,MA_sn,MA_u,PERMIT_LOGIN,XMA_sn_XMA_u,HMA_u,Tstamp5,Tstamp7,SID).
 iknows(pair(UID,pair(N,Tstamp)))
 =>
 state_target_SN(SN,U,GW,H,UID,Pwd,1,N,A,C,Tstamp,Tstamp1,Tstamp3,pair(N,Tstamp),Req_Login,Res_Login,MA_sn,MA_u,PERMIT_LOGIN,XMA_sn_XMA_u,HMA_u,Tstamp5,Tstamp7,SID).
 request(GW,SN,gateway_sensor,pair(N,Tstamp),SID)

step step_7 (SN,U,GW,H,UID,Pwd,N,A,Dummy_C,Tstamp,Tstamp1,Dummy_Tstamp3,Rec_N_TS,Dummy_Req_Login,Dummy_Res_Login,MA_sn,MA_u,PERMIT_LOGIN,XMA_sn_XMA_u,HMA_u,Tstamp5,Tstamp7,SID,Tstamp3) :=
 state_target_SN(SN,U,GW,H,UID,Pwd,1,N,A,Dummy_C,Tstamp,Tstamp1,Dummy_Tstamp3,Rec_N_TS,Dummy_Req_Login,Dummy_Res_Login,MA_sn,MA_u,PERMIT_LOGIN,XMA_sn_XMA_u,HMA_u,Tstamp5,Tstamp7,SID).
 iknows(pair(UID,pair(A,Tstamp1)))
=[exists Tstamp3]=>
 state_target_SN(SN,U,GW,H,UID,Pwd,2,N,A,apply(H,xor(A,apply(H,xor(N,Tstamp3)))),Tstamp,Tstamp1,Tstamp3,Rec_N_TS,pair(A,Tstamp1),pair(apply(H,xor(A,apply(H,xor(N,Tstamp3)))),pair(Tstamp1,Tstamp3)),MA_sn,MA_u,PERMIT_LOGIN,XMA_sn_XMA_u,HMA_u,Tstamp5,Tstamp7,SID).
 request(U,SN,user_sensor,pair(A,Tstamp1),SID).
 iknows(pair(UID,pair(apply(H,xor(A,apply(H,xor(N,Tstamp3)))),pair(Tstamp1,Tstamp3)))).
 witness(SN,GW,sensor_gateway,pair(apply(H,xor(A,apply(H,xor(N,Tstamp3)))),pair(Tstamp1,Tstamp3)))

step step_8 (SN,U,GW,H,UID,Pwd,N,A,C,Tstamp,Tstamp1,Tstamp3,Rec_N_TS,Req_Login,Res_Login,Dummy_MA_sn,Dummy_MA_u,PERMIT_LOGIN,XMA_sn_XMA_u,HMA_u,Tstamp5,Dummy_Tstamp7,SID,Tstamp7) :=
 state_target_SN(SN,U,GW,H,UID,Pwd,2,N,A,C,Tstamp,Tstamp1,Tstamp3,Rec_N_TS,Req_Login,Res_Login,Dummy_MA_sn,Dummy_MA_u,PERMIT_LOGIN,XMA_sn_XMA_u,HMA_u,Tstamp5,Dummy_Tstamp7,SID).
 iknows(pair(PERMIT_LOGIN,pair(XMA_sn_XMA_u,pair(HMA_u,Tstamp5))))
=[exists Tstamp7]=>
 state_target_SN(SN,U,GW,H,UID,Pwd,3,N,A,C,Tstamp,Tstamp1,Tstamp3,Rec_N_TS,Req_Login,Res_Login,apply(H,xor(A,apply(H,xor(N,Tstamp5)))),apply(H,xor(apply(H,xor(A,apply(H,xor(N,Tstamp5)))),pair(XMA_sn_XMA_u,HMA_u))),PERMIT_LOGIN,XMA_sn_XMA_u,HMA_u,Tstamp5,Tstamp7,SID).
 request(GW,SN,gateway_sensor,pair(PERMIT_LOGIN,pair(XMA_sn_XMA_u,pair(HMA_u,Tstamp5))),SID).
 iknows(pair(PERMIT_LOGIN,pair(apply(H,xor(apply(H,xor(A,apply(H,xor(N,Tstamp5)))),pair(XMA_sn_XMA_u,HMA_u))),Tstamp7))).
 witness(SN,U,sensor_user,pair(PERMIT_LOGIN,pair(apply(H,xor(apply(H,xor(A,apply(H,xor(N,Tstamp5)))),pair(XMA_sn_XMA_u,HMA_u))),Tstamp7)))


section properties:

property authentication_on_gateway_sensor (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,gateway_sensor,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,gateway_sensor,MGoal))
     /\ ((request(A1Goal,A2Goal,gateway_sensor,MGoal,SID1)
           /\ request(A1Goal,A2Goal,gateway_sensor,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_gateway_user (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,gateway_user,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,gateway_user,MGoal))
     /\ ((request(A1Goal,A2Goal,gateway_user,MGoal,SID1)
           /\ request(A1Goal,A2Goal,gateway_user,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_user_sensor (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,user_sensor,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,user_sensor,MGoal))
     /\ ((request(A1Goal,A2Goal,user_sensor,MGoal,SID1)
           /\ request(A1Goal,A2Goal,user_sensor,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_user_gateway (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,user_gateway,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,user_gateway,MGoal))
     /\ ((request(A1Goal,A2Goal,user_gateway,MGoal,SID1)
           /\ request(A1Goal,A2Goal,user_gateway,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_sensor_gateway (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,sensor_gateway,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,sensor_gateway,MGoal))
     /\ ((request(A1Goal,A2Goal,sensor_gateway,MGoal,SID1)
           /\ request(A1Goal,A2Goal,sensor_gateway,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_sensor_user (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,sensor_user,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,sensor_user,MGoal))
     /\ ((request(A1Goal,A2Goal,sensor_user,MGoal,SID1)
           /\ request(A1Goal,A2Goal,sensor_user,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property secrecy_of_sec_i_Pwd (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_i_Pwd,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_sec_i_NPwd (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_i_NPwd,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_sec_N_sensor (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_N_sensor,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_sec_Ts_sensor (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_Ts_sensor,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_sec_success (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_success,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))


section attack_states:

attack_state authentication_on_gateway_sensor (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,gateway_sensor,MGoal,SID) &
 not(witness(A2Goal,A1Goal,gateway_sensor,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_gateway_sensor (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,gateway_sensor,MGoal,SID1).
 request(A1Goal,A2Goal,gateway_sensor,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_gateway_user (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,gateway_user,MGoal,SID) &
 not(witness(A2Goal,A1Goal,gateway_user,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_gateway_user (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,gateway_user,MGoal,SID1).
 request(A1Goal,A2Goal,gateway_user,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_user_sensor (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,user_sensor,MGoal,SID) &
 not(witness(A2Goal,A1Goal,user_sensor,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_user_sensor (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,user_sensor,MGoal,SID1).
 request(A1Goal,A2Goal,user_sensor,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_user_gateway (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,user_gateway,MGoal,SID) &
 not(witness(A2Goal,A1Goal,user_gateway,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_user_gateway (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,user_gateway,MGoal,SID1).
 request(A1Goal,A2Goal,user_gateway,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_sensor_gateway (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,sensor_gateway,MGoal,SID) &
 not(witness(A2Goal,A1Goal,sensor_gateway,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_sensor_gateway (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,sensor_gateway,MGoal,SID1).
 request(A1Goal,A2Goal,sensor_gateway,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_sensor_user (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,sensor_user,MGoal,SID) &
 not(witness(A2Goal,A1Goal,sensor_user,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_sensor_user (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,sensor_user,MGoal,SID1).
 request(A1Goal,A2Goal,sensor_user,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state secrecy_of_sec_i_Pwd (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_i_Pwd,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_sec_i_NPwd (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_i_NPwd,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_sec_N_sensor (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_N_sensor,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_sec_Ts_sensor (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_Ts_sensor,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_sec_success (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_success,ASGoal) &
 not(contains(i,ASGoal))

