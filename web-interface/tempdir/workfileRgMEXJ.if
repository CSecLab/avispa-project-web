%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfileRgMEXJ

section signature:

state_tienda: agent * agent * agent * public_key * public_key * hash_func * nat * text * text * text * nat -> fact
state_banco: agent * agent * agent * public_key * public_key * hash_func * nat * text * text * text * text * text * text * text * message * message * message * message * message * symmetric_key * set(agent) * set(agent) * nat -> fact
state_cliente: agent * agent * agent * public_key * public_key * hash_func * nat * text * text * text * text * text * text * text * text * text * message * message * message * message * message * set(agent) * set(agent) * set(agent) * set(agent) * nat -> fact


section types:

Session_Key, Dummy_Session_Key, dummy_sk: symmetric_key
hsession, na, response, cliente_banco_nb, nb, downreq: protocol_id
set_170, set_169, set_168, set_167, set_166, set_165, set_163, set_162, set_160, set_159, set_158, set_157, set_147, set_146, set_125, set_124, set_123, set_122: set
Set_82, Set_80, Set_55, Dummy_Set_82, Set_51, Dummy_Set_80, Set_45, Dummy_Set_55, Dummy_Set_51, Set_38, Dummy_Set_45, Dummy_Set_38, ASGoal: set(agent)
H, Hsession, Hsession2, Operation, Response, Dummy_Operation, Dummy_Hsession2, Dummy_Hsession, start, Dummy_H, link, id_account, pn, psw, dummy_msg, MGoal: message
Downloadreq, Package, Finish, Enrolreq, Na, Nb, Tn, Rn, OTP, Dummy_Downloadreq, Dummy_OTP, Dummy_Rn, Dummy_Nb, Dummy_Na, Dummy_Tn, Dummy_Package, Dummy_Enrolreq, dummy_nonce: text
State, 13, 12, 9, 7, 5, 11, SID, 10, 4, 8, 6, 3, 2, 1, 0, Dummy_State: nat
Hash, h: hash_func
Pkc, Pkb, pkc, pkb, pki: public_key
C, B, T, A2Goal, A1Goal, c, b, t, i: agent


section inits:

initial_state init1 := 
 iknows(start).
 iknows(c).
 iknows(b).
 iknows(t).
 iknows(pkc).
 iknows(pkb).
 iknows(pki).
 iknows(inv(pki)).
 iknows(h).
 iknows(i).
 state_cliente(c,b,t,pkc,pkb,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,set_122,set_123,set_124,set_125,3).
 state_banco(b,c,t,pkc,pkb,h,1,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_sk,set_146,set_147,4).
 state_tienda(t,c,b,pkc,pkb,h,3,dummy_nonce,dummy_nonce,dummy_nonce,5).
 state_cliente(c,i,t,pkc,pki,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,set_157,set_158,set_159,set_160,7).
 state_tienda(t,c,i,pkc,pki,h,3,dummy_nonce,dummy_nonce,dummy_nonce,9).
 state_banco(b,i,t,pki,pkb,h,1,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_sk,set_169,set_170,12).
 state_tienda(t,i,b,pki,pkb,h,3,dummy_nonce,dummy_nonce,dummy_nonce,13)


section rules:

step step_0 (C,B,T,Pkc,Pkb,Hash,Dummy_Enrolreq,Downloadreq,Finish,Package,Tn,Na,Nb,Rn,OTP,H,Hsession,Hsession2,Operation,Response,Set_38,Set_45,Set_51,Set_55,SID,Enrolreq) :=
 state_cliente(C,B,T,Pkc,Pkb,Hash,0,Dummy_Enrolreq,Downloadreq,Finish,Package,Tn,Na,Nb,Rn,OTP,H,Hsession,Hsession2,Operation,Response,Set_38,Set_45,Set_51,Set_55,SID).
 iknows(start)
=[exists Enrolreq]=>
 state_cliente(C,B,T,Pkc,Pkb,Hash,1,Enrolreq,Downloadreq,Finish,Package,Tn,Na,Nb,Rn,OTP,H,Hsession,Hsession2,Operation,Response,Set_38,Set_45,Set_51,Set_55,SID).
 iknows(Enrolreq)

step step_1 (C,B,T,Pkc,Pkb,Hash,Enrolreq,Downloadreq,Finish,Package,Tn,Na,Nb,Rn,OTP,H,Hsession,Hsession2,Operation,Response,Dummy_Set_38,Set_45,Set_51,Set_55,SID) :=
 state_cliente(C,B,T,Pkc,Pkb,Hash,2,Enrolreq,Downloadreq,Finish,Package,Tn,Na,Nb,Rn,OTP,H,Hsession,Hsession2,Operation,Response,Dummy_Set_38,Set_45,Set_51,Set_55,SID).
 iknows(link)
 =>
 state_cliente(C,B,T,Pkc,Pkb,Hash,3,Enrolreq,Downloadreq,Finish,Package,Tn,Na,Nb,Rn,OTP,H,Hsession,Hsession2,Operation,Response,Dummy_Set_38,Set_45,Set_51,Set_55,SID).
 iknows(Downloadreq).
 secret(Downloadreq,downreq,Dummy_Set_38).
 contains(C,Dummy_Set_38).
 contains(T,Dummy_Set_38)

step step_2 (C,B,T,Pkc,Pkb,Hash,Enrolreq,Downloadreq,Finish,Dummy_Package,Tn,Na,Nb,Rn,OTP,Dummy_H,Hsession,Hsession2,Operation,Response,Set_38,Set_45,Set_51,Set_55,SID,Package) :=
 state_cliente(C,B,T,Pkc,Pkb,Hash,4,Enrolreq,Downloadreq,Finish,Dummy_Package,Tn,Na,Nb,Rn,OTP,Dummy_H,Hsession,Hsession2,Operation,Response,Set_38,Set_45,Set_51,Set_55,SID).
 iknows(Package)
 =>
 state_cliente(C,B,T,Pkc,Pkb,Hash,5,Enrolreq,Downloadreq,Finish,Package,Tn,Na,Nb,Rn,OTP,apply(Hash,pair(id_account,pair(pn,Tn))),Hsession,Hsession2,Operation,Response,Set_38,Set_45,Set_51,Set_55,SID).
 iknows(crypt(Pkb,pair(id_account,pair(pn,pair(Tn,apply(Hash,pair(id_account,pair(pn,Tn))))))))

step step_3 (C,B,T,Pkc,Pkb,Hash,Enrolreq,Downloadreq,Finish,Package,Dummy_Tn,Dummy_Na,Dummy_Nb,Dummy_Rn,OTP,Dummy_H,Hsession,Hsession2,Operation,Response,Set_38,Dummy_Set_45,Set_51,Set_55,SID,Tn,Na,Rn) :=
 state_cliente(C,B,T,Pkc,Pkb,Hash,6,Enrolreq,Downloadreq,Finish,Package,Dummy_Tn,Dummy_Na,Dummy_Nb,Dummy_Rn,OTP,Dummy_H,Hsession,Hsession2,Operation,Response,Set_38,Dummy_Set_45,Set_51,Set_55,SID).
 iknows(crypt(Pkc,pair(Na,pair(Tn,H))))
=[exists Rn]=>
 state_cliente(C,B,T,Pkc,Pkb,Hash,7,Enrolreq,Downloadreq,Finish,Package,Tn,Na,apply(Hash,pair(Na,psw)),Rn,OTP,apply(Hash,pair(apply(Hash,pair(Na,psw)),pair(Tn,Rn))),Hsession,Hsession2,Operation,Response,Set_38,Dummy_Set_45,Set_51,Set_55,SID).
 iknows(crypt(Pkb,pair(apply(Hash,pair(Na,psw)),pair(Tn,pair(Rn,apply(Hash,pair(apply(Hash,pair(Na,psw)),pair(Tn,Rn)))))))).
 secret(apply(Hash,pair(Na,psw)),nb,Dummy_Set_45).
 witness(C,B,cliente_banco_nb,apply(Hash,pair(Na,psw))).
 contains(B,Dummy_Set_45).
 contains(C,Dummy_Set_45)

step step_4 (C,B,T,Pkc,Pkb,Hash,Enrolreq,Downloadreq,Finish,Package,Dummy_Tn,Na,Nb,Rn,Dummy_OTP,Dummy_H,Dummy_Hsession,Dummy_Hsession2,Dummy_Operation,Response,Set_38,Set_45,Dummy_Set_51,Set_55,SID,Tn,OTP,Hsession,Operation) :=
 state_cliente(C,B,T,Pkc,Pkb,Hash,8,Enrolreq,Downloadreq,Finish,Package,Dummy_Tn,Na,Nb,Rn,Dummy_OTP,Dummy_H,Dummy_Hsession,Dummy_Hsession2,Dummy_Operation,Response,Set_38,Set_45,Dummy_Set_51,Set_55,SID).
 iknows(crypt(Pkc,pair(Tn,Hsession)))
=[exists OTP,Operation]=>
 state_cliente(C,B,T,Pkc,Pkb,Hash,9,Enrolreq,Downloadreq,Finish,Package,Tn,Na,Nb,Rn,OTP,apply(Hash,pair(Operation,pair(OTP,Tn))),Hsession,apply(Hash,pair(psw,Rn)),Operation,Response,Set_38,Set_45,Dummy_Set_51,Set_55,SID).
 iknows(scrypt(apply(Hash,pair(psw,Rn)),pair(Operation,pair(OTP,pair(Tn,apply(Hash,pair(Operation,pair(OTP,Tn)))))))).
 contains(B,Dummy_Set_51).
 contains(C,Dummy_Set_51)

step step_5 (C,B,T,Pkc,Pkb,Hash,Enrolreq,Downloadreq,Finish,Package,Dummy_Tn,Na,Nb,Rn,OTP,Dummy_H,Hsession,Hsession2,Operation,Response,Set_38,Set_45,Set_51,Dummy_Set_55,SID,Tn,H) :=
 state_cliente(C,B,T,Pkc,Pkb,Hash,10,Enrolreq,Downloadreq,Finish,Package,Dummy_Tn,Na,Nb,Rn,OTP,Dummy_H,Hsession,Hsession2,Operation,Response,Set_38,Set_45,Set_51,Dummy_Set_55,SID).
 iknows(crypt(Pkc,pair(Response,pair(Tn,H))))
 =>
 state_cliente(C,B,T,Pkc,Pkb,Hash,11,Enrolreq,Downloadreq,Finish,Package,Tn,Na,Nb,Rn,OTP,H,Hsession,Hsession2,Operation,Response,Set_38,Set_45,Set_51,Dummy_Set_55,SID).
 contains(B,Dummy_Set_55).
 contains(C,Dummy_Set_55)

step step_6 (B,C,T,Pkc,Pkb,Hash,Dummy_Enrolreq,Finish,Na,Nb,Tn,Rn,OTP,H,Hsession,Hsession2,Operation,Response,Session_Key,Set_80,Set_82,SID,Enrolreq) :=
 state_banco(B,C,T,Pkc,Pkb,Hash,1,Dummy_Enrolreq,Finish,Na,Nb,Tn,Rn,OTP,H,Hsession,Hsession2,Operation,Response,Session_Key,Set_80,Set_82,SID).
 iknows(Enrolreq)
 =>
 state_banco(B,C,T,Pkc,Pkb,Hash,2,Enrolreq,Finish,Na,Nb,Tn,Rn,OTP,H,Hsession,Hsession2,Operation,Response,Session_Key,Set_80,Set_82,SID).
 iknows(link)

step step_7 (B,C,T,Pkc,Pkb,Hash,Enrolreq,Finish,Dummy_Na,Nb,Dummy_Tn,Rn,OTP,Dummy_H,Hsession,Hsession2,Operation,Response,Session_Key,Dummy_Set_80,Set_82,SID,Na,Tn) :=
 state_banco(B,C,T,Pkc,Pkb,Hash,5,Enrolreq,Finish,Dummy_Na,Nb,Dummy_Tn,Rn,OTP,Dummy_H,Hsession,Hsession2,Operation,Response,Session_Key,Dummy_Set_80,Set_82,SID).
 iknows(crypt(Pkb,pair(id_account,pair(pn,pair(Tn,H)))))
=[exists Na]=>
 state_banco(B,C,T,Pkc,Pkb,Hash,6,Enrolreq,Finish,Na,Nb,Tn,Rn,OTP,apply(Hash,pair(Na,Tn)),Hsession,Hsession2,Operation,Response,Session_Key,Dummy_Set_80,Set_82,SID).
 iknows(crypt(Pkc,pair(Na,pair(Tn,apply(Hash,pair(Na,Tn)))))).
 secret(Na,na,Dummy_Set_80).
 contains(C,Dummy_Set_80).
 contains(B,Dummy_Set_80)

step step_8 (B,C,T,Pkc,Pkb,Hash,Enrolreq,Finish,Na,Dummy_Nb,Dummy_Tn,Dummy_Rn,OTP,Dummy_H,Dummy_Hsession,Hsession2,Operation,Response,Dummy_Session_Key,Set_80,Dummy_Set_82,SID,Nb,Tn,Rn,H) :=
 state_banco(B,C,T,Pkc,Pkb,Hash,7,Enrolreq,Finish,Na,Dummy_Nb,Dummy_Tn,Dummy_Rn,OTP,Dummy_H,Dummy_Hsession,Hsession2,Operation,Response,Dummy_Session_Key,Set_80,Dummy_Set_82,SID).
 iknows(crypt(Pkb,pair(Nb,pair(Tn,pair(Rn,H)))))
 =>
 state_banco(B,C,T,Pkc,Pkb,Hash,8,Enrolreq,Finish,Na,Nb,Tn,Rn,OTP,H,apply(Hash,apply(Hash,pair(Rn,psw))),Hsession2,Operation,Response,apply(Hash,pair(Rn,psw)),Set_80,Dummy_Set_82,SID).
 iknows(crypt(Pkc,pair(Tn,apply(Hash,apply(Hash,pair(Rn,psw)))))).
 secret(apply(Hash,apply(Hash,pair(Rn,psw))),hsession,Dummy_Set_82).
 contains(C,Dummy_Set_82).
 contains(B,Dummy_Set_82)

step step_9 (B,C,T,Pkc,Pkb,Hash,Enrolreq,Finish,Na,Nb,Dummy_Tn,Rn,Dummy_OTP,Dummy_H,Hsession,Dummy_Hsession2,Dummy_Operation,Response,Session_Key,Set_80,Set_82,SID,Tn,OTP,Hsession2,Operation) :=
 state_banco(B,C,T,Pkc,Pkb,Hash,9,Enrolreq,Finish,Na,Nb,Dummy_Tn,Rn,Dummy_OTP,Dummy_H,Hsession,Dummy_Hsession2,Dummy_Operation,Response,Session_Key,Set_80,Set_82,SID).
 iknows(scrypt(Hsession2,pair(Operation,pair(OTP,pair(Tn,H)))))
 =>
 state_banco(B,C,T,Pkc,Pkb,Hash,10,Enrolreq,Finish,Na,Nb,Tn,Rn,OTP,apply(Hash,pair(Response,Tn)),Hsession,Hsession2,Operation,Response,Session_Key,Set_80,Set_82,SID).
 iknows(crypt(Pkc,pair(Response,pair(Tn,apply(Hash,pair(Response,Tn))))))

step step_10 (T,C,B,Pkc,Pkb,Hash,Dummy_Downloadreq,Package,Finish,SID,Downloadreq) :=
 state_tienda(T,C,B,Pkc,Pkb,Hash,3,Dummy_Downloadreq,Package,Finish,SID).
 iknows(Downloadreq)
 =>
 state_tienda(T,C,B,Pkc,Pkb,Hash,4,Downloadreq,Package,Finish,SID).
 iknows(Package)


section properties:

property secrecy_of_downreq (MGoal,ASGoal) :=
 [] ((secret(MGoal,downreq,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_na (MGoal,ASGoal) :=
 [] ((secret(MGoal,na,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_nb (MGoal,ASGoal) :=
 [] ((secret(MGoal,nb,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_hsession (MGoal,ASGoal) :=
 [] ((secret(MGoal,hsession,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property weak_authentication_on_cliente_banco_nb (A1Goal,A2Goal,MGoal,SID) :=
 [] ((wrequest(A1Goal,A2Goal,cliente_banco_nb,MGoal,SID)
      /\ ~ equal(A2Goal,i))
     => witness(A2Goal,A1Goal,cliente_banco_nb,MGoal))


section attack_states:

attack_state secrecy_of_downreq (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,downreq,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_na (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,na,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_nb (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,nb,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_hsession (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,hsession,ASGoal) &
 not(contains(i,ASGoal))

attack_state weak_authentication_on_cliente_banco_nb (A1Goal,A2Goal,MGoal,SID) :=
 wrequest(A1Goal,A2Goal,cliente_banco_nb,MGoal,SID) &
 not(witness(A2Goal,A1Goal,cliente_banco_nb,MGoal)) &
 not(equal(A2Goal,i))

