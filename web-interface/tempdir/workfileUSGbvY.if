%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfileUSGbvY

section signature:

state_role_U: agent * agent * agent * text * text * text * text * text * text * text * symmetric_key * hash_func * hash_func * hash_func * hash_func * hash_func * nat * text * text * pair(symmetric_key,text) * pair(symmetric_key,text) * pair(symmetric_key,text) * pair(symmetric_key,text) * pair(symmetric_key,pair(text,pair(text,text))) * set(agent) * set(agent) * nat -> fact
state_role_M: agent * agent * agent * text * hash_func * hash_func * hash_func * hash_func * hash_func * nat * text * text * text * symmetric_key * text * text * text * text * text * text * pair(symmetric_key,text) * pair(symmetric_key,text) * pair(symmetric_key,text) * pair(symmetric_key,text) * pair(symmetric_key,pair(text,pair(text,text))) * nat -> fact
state_role_H: agent * agent * agent * text * text * text * text * text * text * symmetric_key * hash_func * hash_func * hash_func * hash_func * hash_func * nat * text * text * text * text * set(agent) * nat -> fact


section types:

set_180, set_179, set_155: set
MGoal, start: message
ue_mme_vf1, ue_hss_vf4, mme_ue_vf2, imsii, imsi2, sq, imsi3: protocol_id
Dummy_Xvf1, Xvf1: pair(symmetric_key,pair(text,pair(text,text)))
Dummy_Xvf5, Dummy_Xvf4, Xvf2, Dummy_Xvf3, Xvf3, Dummy_Xvf2, Xvf4, Xvf5: pair(symmetric_key,text)
State, 5, SID, 3, 4, Dummy_State, SID2, SID1, 2, 1, 0: nat
F1, F2, F3, F4, F5, f1, f2, f3, f4, f5: hash_func
K, dummy_sk, k, ki: symmetric_key
H, M, U, A2Goal, A1Goal, ue, hss, mme, i: agent
Dummy_Set_47, Dummy_Set_41, Dummy_Set_102, ASGoal, Set_47, Set_41, Set_102: set(agent)
IMSI, SQN, RAND, SNID, AMF, Vf1, Vf2, Vf3, Vf4, Vf5, Dummy_AMF, Dummy_IMSI, Dummy_SQN, Dummy_SNID, Dummy_RAND, Dummy_Vf5, Dummy_Vf4, Dummy_Vf3, Dummy_Vf2, Dummy_Vf1, dummy_nonce, vf1, vf3, vf4, vf5, const_1, rand, snid, imsi, amf, vf2: text


section inits:

initial_state init1 := 
 iknows(start).
 iknows(ki).
 iknows(snid).
 iknows(f1).
 iknows(f2).
 iknows(f3).
 iknows(f4).
 iknows(f5).
 iknows(i).
 state_role_H(hss,mme,ue,amf,vf1,vf2,vf3,vf4,vf5,k,f1,f2,f3,f4,f5,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_155,3).
 state_role_M(mme,hss,ue,snid,f1,f2,f3,f4,f5,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_sk,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,pair(dummy_sk,dummy_nonce),pair(dummy_sk,dummy_nonce),pair(dummy_sk,dummy_nonce),pair(dummy_sk,dummy_nonce),pair(dummy_sk,pair(dummy_nonce,pair(dummy_nonce,dummy_nonce))),4).
 state_role_U(ue,hss,mme,imsi,amf,vf1,vf2,vf3,vf4,vf5,k,f1,f2,f3,f4,f5,0,dummy_nonce,dummy_nonce,pair(dummy_sk,dummy_nonce),pair(dummy_sk,dummy_nonce),pair(dummy_sk,dummy_nonce),pair(dummy_sk,dummy_nonce),pair(dummy_sk,pair(dummy_nonce,pair(dummy_nonce,dummy_nonce))),set_179,set_180,5)


section rules:

step step_0 (H,M,U,AMF,Dummy_Vf1,Dummy_Vf2,Dummy_Vf3,Dummy_Vf4,Dummy_Vf5,K,F1,F2,F3,F4,F5,Dummy_RAND,Dummy_SNID,Dummy_SQN,Dummy_IMSI,Dummy_Set_102,SID,RAND,SNID,SQN,IMSI) :=
 state_role_H(H,M,U,AMF,Dummy_Vf1,Dummy_Vf2,Dummy_Vf3,Dummy_Vf4,Dummy_Vf5,K,F1,F2,F3,F4,F5,0,Dummy_RAND,Dummy_SNID,Dummy_SQN,Dummy_IMSI,Dummy_Set_102,SID).
 iknows(pair(IMSI,SNID))
=[exists RAND,SQN]=>
 state_role_H(H,M,U,AMF,apply(F1,pair(K,pair(SQN,pair(RAND,AMF)))),apply(F2,pair(K,RAND)),apply(F3,pair(K,RAND)),apply(F4,pair(K,RAND)),apply(F5,pair(K,RAND)),K,F1,F2,F3,F4,F5,1,RAND,SNID,SQN,IMSI,Dummy_Set_102,SID).
 iknows(pair(RAND,pair(apply(F2,pair(K,RAND)),pair(apply(F3,pair(K,RAND)),pair(apply(F4,pair(K,RAND)),pair(xor(SQN,apply(F5,pair(K,RAND))),pair(AMF,apply(F1,pair(K,pair(SQN,pair(RAND,AMF))))))))))).
 contains(U,Dummy_Set_102).
 contains(H,Dummy_Set_102)

step step_1 (M,H,U,SNID,F1,F2,F3,F4,F5,IMSI,AMF,SQN,K,RAND,Vf1,Vf2,Vf3,Vf4,Vf5,Xvf2,Xvf3,Xvf4,Xvf5,Xvf1,SID) :=
 state_role_M(M,H,U,SNID,F1,F2,F3,F4,F5,0,IMSI,AMF,SQN,K,RAND,Vf1,Vf2,Vf3,Vf4,Vf5,Xvf2,Xvf3,Xvf4,Xvf5,Xvf1,SID).
 iknows(IMSI)
 =>
 state_role_M(M,H,U,SNID,F1,F2,F3,F4,F5,1,IMSI,AMF,SQN,K,RAND,Vf1,Vf2,Vf3,Vf4,Vf5,Xvf2,Xvf3,Xvf4,Xvf5,Xvf1,SID).
 iknows(pair(IMSI,SNID))

step step_2 (M,H,U,SNID,F1,F2,F3,F4,F5,IMSI,Dummy_AMF,Dummy_SQN,K,Dummy_RAND,Vf1,Vf2,Vf3,Vf4,Vf5,Dummy_Xvf2,Dummy_Xvf3,Dummy_Xvf4,Dummy_Xvf5,Dummy_Xvf1,SID,AMF,SQN,RAND,Xvf2,Xvf3,Xvf4,Xvf5,Xvf1) :=
 state_role_M(M,H,U,SNID,F1,F2,F3,F4,F5,1,IMSI,Dummy_AMF,Dummy_SQN,K,Dummy_RAND,Vf1,Vf2,Vf3,Vf4,Vf5,Dummy_Xvf2,Dummy_Xvf3,Dummy_Xvf4,Dummy_Xvf5,Dummy_Xvf1,SID).
 iknows(pair(RAND,pair(apply(F2,Xvf2),pair(apply(F3,Xvf3),pair(apply(F4,Xvf4),pair(xor(SQN,apply(F5,Xvf5)),pair(AMF,apply(F1,Xvf1))))))))
 =>
 state_role_M(M,H,U,SNID,F1,F2,F3,F4,F5,2,IMSI,AMF,SQN,K,RAND,Vf1,Vf2,Vf3,Vf4,Vf5,Xvf2,Xvf3,Xvf4,Xvf5,Xvf1,SID).
 iknows(pair(RAND,pair(xor(SQN,apply(F5,Xvf5)),pair(AMF,apply(F1,Xvf1)))))

step step_3 (M,H,U,SNID,F1,F2,F3,F4,F5,IMSI,AMF,SQN,K,Dummy_RAND,Vf1,Vf2,Vf3,Vf4,Vf5,Xvf2,Xvf3,Xvf4,Xvf5,Xvf1,SID,RAND) :=
 state_role_M(M,H,U,SNID,F1,F2,F3,F4,F5,2,IMSI,AMF,SQN,K,Dummy_RAND,Vf1,Vf2,Vf3,Vf4,Vf5,Xvf2,Xvf3,Xvf4,Xvf5,Xvf1,SID).
 iknows(apply(F2,pair(K,RAND))) &
 equal(apply(F2,pair(K,RAND)),apply(F2,pair(K,Dummy_RAND)))
 =>
 state_role_M(M,H,U,SNID,F1,F2,F3,F4,F5,3,IMSI,AMF,SQN,K,RAND,Vf1,Vf2,Vf3,Vf4,Vf5,Xvf2,Xvf3,Xvf4,Xvf5,Xvf1,SID)

step step_4 (U,H,M,IMSI,AMF,Vf1,Vf2,Vf3,Vf4,Vf5,K,F1,F2,F3,F4,F5,SQN,RAND,Xvf2,Xvf3,Xvf4,Xvf5,Xvf1,Dummy_Set_41,Set_47,SID) :=
 state_role_U(U,H,M,IMSI,AMF,Vf1,Vf2,Vf3,Vf4,Vf5,K,F1,F2,F3,F4,F5,0,SQN,RAND,Xvf2,Xvf3,Xvf4,Xvf5,Xvf1,Dummy_Set_41,Set_47,SID).
 iknows(start)
 =>
 state_role_U(U,H,M,IMSI,AMF,Vf1,Vf2,Vf3,Vf4,Vf5,K,F1,F2,F3,F4,F5,1,SQN,RAND,Xvf2,Xvf3,Xvf4,Xvf5,Xvf1,Dummy_Set_41,Set_47,SID).
 iknows(IMSI).
 contains(H,Dummy_Set_41).
 contains(U,Dummy_Set_41)

step step_5 (U,H,M,IMSI,Dummy_AMF,Vf1,Vf2,Vf3,Vf4,Vf5,K,F1,F2,F3,F4,F5,Dummy_SQN,Dummy_RAND,Xvf2,Xvf3,Xvf4,Dummy_Xvf5,Dummy_Xvf1,Set_41,Dummy_Set_47,SID,AMF,SQN,RAND,Xvf5,Xvf1) :=
 state_role_U(U,H,M,IMSI,Dummy_AMF,Vf1,Vf2,Vf3,Vf4,Vf5,K,F1,F2,F3,F4,F5,1,Dummy_SQN,Dummy_RAND,Xvf2,Xvf3,Xvf4,Dummy_Xvf5,Dummy_Xvf1,Set_41,Dummy_Set_47,SID).
 iknows(pair(RAND,pair(xor(SQN,apply(F5,Xvf5)),pair(AMF,apply(F1,Xvf1)))))
 =>
 state_role_U(U,H,M,IMSI,AMF,Vf1,Vf2,Vf3,Vf4,Vf5,K,F1,F2,F3,F4,F5,2,SQN,RAND,Xvf2,Xvf3,Xvf4,Xvf5,Xvf1,Set_41,Dummy_Set_47,SID).
 iknows(apply(F2,pair(K,RAND))).
 contains(U,Dummy_Set_47).
 contains(H,Dummy_Set_47)


section properties:

property authentication_on_mme (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,mme,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,mme,MGoal))
     /\ ((request(A1Goal,A2Goal,mme,MGoal,SID1)
           /\ request(A1Goal,A2Goal,mme,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_ue (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,ue,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,ue,MGoal))
     /\ ((request(A1Goal,A2Goal,ue,MGoal,SID1)
           /\ request(A1Goal,A2Goal,ue,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property secrecy_of_imsi (MGoal,ASGoal) :=
 [] ((secret(MGoal,imsi,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))


section attack_states:

attack_state authentication_on_mme (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,mme,MGoal,SID) &
 not(witness(A2Goal,A1Goal,mme,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_mme (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,mme,MGoal,SID1).
 request(A1Goal,A2Goal,mme,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_ue (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,ue,MGoal,SID) &
 not(witness(A2Goal,A1Goal,ue,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_ue (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,ue,MGoal,SID1).
 request(A1Goal,A2Goal,ue,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state secrecy_of_imsi (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,imsi,ASGoal) &
 not(contains(i,ASGoal))

