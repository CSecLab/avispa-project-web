%Protocol Yahalom

role alice(A, B, S :agent,
	Kas :symmetric_key,
	SND_BA, RCV_BA, SND_SA, RCV_SA :channel(dy))

played_by A
def=
	local State :nat,
		Na,Nb :text,
		Kab :symmetric_key,
		X :{agent.symmetric_key}_symmetric_key

init State:=0

transition

1.State =0 /\ RCV_BA(start) =|>
  State':=2 /\ Na' :=new()
			/\ SND_BA(A.Na')

2.State =2 /\ RCV_SA({B.Kab'.Na.Nb'}_Kas.X') =|>
  State':=4 /\ SND_BA(X'.{Nb'}_Kab')
			/\ witness(A,B,bob_alice_kab,Kab')
			/\ request(A,S,alice_server_kab,Kab')
			/\ request(A,B,alice_bob_nb,Nb')
end role


role server(A, B, S: agent,
	Kas, Kbs: symmetric_key,
	SND_AS,RCV_AS,SND_BS,RCV_BS: channel(dy))

played_by S
def=
	local State :nat,
	Na,Nb:text,
	Kab:symmetric_key

init State :=1

transition
1.State = 1 /\ RCV_BS(B.{A.Na'.Nb'}_Kbs)=|>
  State':= 3 /\ Kab' := new()
			 /\ SND_AS({B.Kab'.Na'.Nb'}_Kas.{A.Kab'}_Kbs)
			 /\ witness(S,A,alice_server_kab,Kab')
			 /\ secret(Kab',kab,{A,B,S})
			 /\ request(S,B,server_bob_nb,Nb')
end role

role bob (A, B, S : agent,
	Kbs : symmetric_key,
	SND_AB, RCV_AB, SND_SB, RCV_SB: channel(dy))

played_by B
def=
	local State : nat,
	Na,Nb : text,
	Kab: symmetric_key

init State:=5

transition
1.State =5 /\ RCV_AB(A.Na')=|>
  State':=7 /\ Nb':=new()
			/\ SND_SB(B.{A.Na'.Nb'}_Kbs)
			/\ witness(B,S,server_bob_nb,Nb')
			/\ witness(B,A,alice_bob_nb,Nb')

2.State =7 /\ RCV_AB({A.Kab'}_Kbs.{Nb}_Kab')=|>
  State':=9 /\ request(B,A,bob_alice_kab,Kab')
end role

role session(A, S, B : agent,
	Kas, Kbs : symmetric_key)
def=
local
	SSA, RSA, SBA, RBA,
	SAS, RAS, SBS, RBS,
	SAB, RAB, SSB, RSB : channel (dy)
composition
	alice (A, B, S, Kas, SBA, RBA, SSA, RSA)
	/\ server (A, B, S, Kas, Kbs, SAS, RAS, SBS,RBS)
	/\ bob (A, B, S, Kbs, SAB, RAB, SSB, RSB)
end role

role environment()
def=
	const a, b, s : agent,
	kas, kbs, kis : symmetric_key,
	alice_bob_nb,bob_alice_kab,kab,server_bob_nb,
	alice_server_kab : protocol_id
	intruder_knowledge = {a, b, s, kis}
composition
session(a,s,b,kas,kbs)
/\ session(a,s,b,kas,kbs)
/\ session(a,s,i,kas,kis)
/\ session(i,s,b,kis,kbs)
/\ session(a,i,b,kas,kbs)
end role

goal
	secrecy_of kab
	authentication_on alice_bob_nb
	authentication_on alice_server_kab
	authentication_on server_bob_nb
	authentication_on bob_alice_kab

end goal
environment()