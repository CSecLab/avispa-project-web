%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfileHHuJuo

section signature:

state_bob: agent * agent * agent * symmetric_key * hash_func * nat * text * text * text * text * text * text * text * text * set(text) * set(text) * set(agent) * set(symmetric_key) * set(agent) * nat -> fact
state_bs: agent * agent * agent * symmetric_key * hash_func * nat * text * text * text * text * text * text * text * set(text) * set(text) * set(agent) * set(symmetric_key) * set(agent) * nat -> fact
state_alice: agent * agent * agent * symmetric_key * hash_func * nat * text * text * text * text * text * text * text * set(text) * set(text) * set(agent) * set(symmetric_key) * set(agent) * nat -> fact


section types:

Set_79, Set_56, Dummy_Set_79, Dummy_Set_56, Set_33, Dummy_Set_33: set(symmetric_key)
alice_server, bs_bob, sub1_subs, subs, sub1, sub2: protocol_id
Set_77, Set_76, Set_54, Set_53, Dummy_Set_77, Dummy_Set_76, Dummy_Set_54, Dummy_Set_53, Set_31, Set_29, Dummy_Set_31, Dummy_Set_29: set(text)
set_168, set_167, set_166, set_165, set_164, set_162, set_161, set_160, set_159, set_158, set_156, set_155, set_154, set_153, set_152, set_144, set_143, set_142, set_141, set_140, set_131, set_130, set_129, set_128, set_127, set_116, set_115, set_114, set_113, set_112: set
h, H: hash_func
skubs, SKubs: symmetric_key
9, State, 8, 7, 5, SID, 2, 4, 1, 0, Dummy_State, 3, SID2, SID1: nat
Set_80, Set_78, Set_57, Set_55, Dummy_Set_80, Dummy_Set_78, Dummy_Set_57, Dummy_Set_55, Set_34, Set_32, Dummy_Set_34, Dummy_Set_32, ASGoal: set(agent)
start, MGoal: message
ui, snj, Ui, SNj, BS, bs, A2Goal, A1Goal, i: agent
t, k, sj, IDi, Sj, PWi, K, Xa, Yy, T1, T, Dummy_T1, Dummy_T, dummy_nonce, idi, pwi, xa, t1: text


section inits:

initial_state init1 := 
 iknows(start).
 iknows(ui).
 iknows(snj).
 iknows(idi).
 iknows(sj).
 iknows(h).
 iknows(i).
 state_alice(ui,snj,bs,skubs,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_112,set_113,set_114,set_115,set_116,3).
 state_bs(bs,ui,snj,skubs,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_127,set_128,set_129,set_130,set_131,4).
 state_bob(snj,ui,bs,skubs,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_140,set_141,set_142,set_143,set_144,5).
 state_alice(ui,snj,bs,skubs,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_152,set_153,set_154,set_155,set_156,7).
 state_bs(bs,ui,snj,skubs,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_158,set_159,set_160,set_161,set_162,8).
 state_bob(snj,ui,bs,skubs,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_164,set_165,set_166,set_167,set_168,9)


section rules:

step step_0 (Ui,SNj,BS,SKubs,H,IDi,Sj,K,PWi,Xa,T1,T,Dummy_Set_29,Dummy_Set_31,Dummy_Set_32,Dummy_Set_33,Dummy_Set_34,SID) :=
 state_alice(Ui,SNj,BS,SKubs,H,0,IDi,Sj,K,PWi,Xa,T1,T,Dummy_Set_29,Dummy_Set_31,Dummy_Set_32,Dummy_Set_33,Dummy_Set_34,SID).
 iknows(start)
 =>
 state_alice(Ui,SNj,BS,SKubs,H,1,IDi,Sj,K,PWi,Xa,T1,T,Dummy_Set_29,Dummy_Set_31,Dummy_Set_32,Dummy_Set_33,Dummy_Set_34,SID).
 iknows(pair(Ui,pair(BS,scrypt(SKubs,pair(IDi,PWi))))).
 secret(Dummy_Set_29,subs,BS).
 secret(Dummy_Set_31,sub1,Dummy_Set_32).
 secret(Dummy_Set_33,sub2,Dummy_Set_34).
 contains(Xa,Dummy_Set_29).
 contains(PWi,Dummy_Set_31).
 contains(BS,Dummy_Set_32).
 contains(Ui,Dummy_Set_32).
 contains(SKubs,Dummy_Set_33).
 contains(BS,Dummy_Set_34).
 contains(Ui,Dummy_Set_34)

step step_1 (Ui,SNj,BS,SKubs,H,IDi,Sj,K,PWi,Xa,T1,Dummy_T,Set_29,Set_31,Set_32,Set_33,Set_34,SID,T) :=
 state_alice(Ui,SNj,BS,SKubs,H,1,IDi,Sj,K,PWi,Xa,T1,Dummy_T,Set_29,Set_31,Set_32,Set_33,Set_34,SID).
 iknows(pair(BS,pair(Ui,scrypt(SKubs,pair(xor(apply(H,pair(IDi,PWi)),apply(H,pair(K,Xa))),pair(IDi,pair(apply(H,PWi),apply(H,Xa))))))))
=[exists T]=>
 state_alice(Ui,SNj,BS,SKubs,H,2,IDi,Sj,K,PWi,Xa,T1,T,Set_29,Set_31,Set_32,Set_33,Set_34,SID).
 iknows(pair(Ui,pair(BS,pair(xor(apply(H,pair(IDi,PWi)),apply(H,pair(apply(H,Xa),T))),pair(apply(H,pair(xor(apply(H,pair(IDi,PWi)),apply(H,pair(K,Xa))),pair(apply(H,Xa),T))),T))))).
 witness(Ui,BS,alice_server,T)

step step_2 (BS,Ui,SNj,SKubs,H,IDi,Sj,PWi,Xa,T1,T,K,Dummy_Set_53,Dummy_Set_54,Dummy_Set_55,Dummy_Set_56,Dummy_Set_57,SID) :=
 state_bs(BS,Ui,SNj,SKubs,H,0,IDi,Sj,PWi,Xa,T1,T,K,Dummy_Set_53,Dummy_Set_54,Dummy_Set_55,Dummy_Set_56,Dummy_Set_57,SID).
 iknows(pair(Ui,pair(BS,scrypt(SKubs,pair(IDi,PWi)))))
 =>
 state_bs(BS,Ui,SNj,SKubs,H,1,IDi,Sj,PWi,Xa,T1,T,K,Dummy_Set_53,Dummy_Set_54,Dummy_Set_55,Dummy_Set_56,Dummy_Set_57,SID).
 secret(Dummy_Set_53,subs,BS).
 secret(Dummy_Set_54,sub1,Dummy_Set_55).
 secret(Dummy_Set_56,sub2,Dummy_Set_57).
 iknows(pair(BS,pair(Ui,scrypt(SKubs,pair(xor(apply(H,pair(IDi,PWi)),apply(H,pair(K,Xa))),pair(IDi,pair(apply(H,PWi),apply(H,Xa)))))))).
 contains(Xa,Dummy_Set_53).
 contains(PWi,Dummy_Set_54).
 contains(BS,Dummy_Set_55).
 contains(Ui,Dummy_Set_55).
 contains(SKubs,Dummy_Set_56).
 contains(BS,Dummy_Set_57).
 contains(Ui,Dummy_Set_57)

step step_3 (BS,Ui,SNj,SKubs,H,IDi,Sj,PWi,Xa,Dummy_T1,Dummy_T,K,Set_53,Set_54,Set_55,Set_56,Set_57,SID,T1,T) :=
 state_bs(BS,Ui,SNj,SKubs,H,1,IDi,Sj,PWi,Xa,Dummy_T1,Dummy_T,K,Set_53,Set_54,Set_55,Set_56,Set_57,SID).
 iknows(pair(Ui,pair(BS,pair(xor(apply(H,pair(IDi,PWi)),apply(H,pair(apply(H,Xa),T))),pair(apply(H,pair(xor(apply(H,pair(IDi,PWi)),apply(H,pair(K,Xa))),pair(apply(H,Xa),T))),T)))))
=[exists T1]=>
 state_bs(BS,Ui,SNj,SKubs,H,2,IDi,Sj,PWi,Xa,T1,T,K,Set_53,Set_54,Set_55,Set_56,Set_57,SID).
 iknows(pair(BS,pair(SNj,pair(xor(apply(H,pair(IDi,PWi)),apply(H,pair(apply(H,Xa),T))),apply(H,pair(xor(apply(H,pair(IDi,PWi)),apply(H,pair(apply(H,Xa),T))),pair(apply(H,pair(Xa,Sj)),T1))))))).
 witness(BS,SNj,bs_bob,T1).
 request(Ui,BS,alice_server,T,SID)

step step_4 (SNj,Ui,BS,SKubs,H,IDi,Sj,PWi,K,Xa,Yy,Dummy_T1,Dummy_T,Dummy_Set_76,Dummy_Set_77,Dummy_Set_78,Dummy_Set_79,Dummy_Set_80,SID,T1,T) :=
 state_bob(SNj,Ui,BS,SKubs,H,0,IDi,Sj,PWi,K,Xa,Yy,Dummy_T1,Dummy_T,Dummy_Set_76,Dummy_Set_77,Dummy_Set_78,Dummy_Set_79,Dummy_Set_80,SID).
 iknows(pair(BS,pair(SNj,pair(xor(apply(H,pair(IDi,PWi)),apply(H,pair(apply(H,Xa),T))),apply(H,pair(xor(apply(H,pair(IDi,PWi)),apply(H,pair(apply(H,Xa),T))),pair(apply(H,pair(Xa,Sj)),T1)))))))
 =>
 state_bob(SNj,Ui,BS,SKubs,H,1,IDi,Sj,PWi,K,Xa,Yy,T1,T,Dummy_Set_76,Dummy_Set_77,Dummy_Set_78,Dummy_Set_79,Dummy_Set_80,SID).
 secret(Dummy_Set_76,subs,BS).
 secret(Dummy_Set_77,sub1,Dummy_Set_78).
 secret(Dummy_Set_79,sub2,Dummy_Set_80).
 request(BS,SNj,bs_bob,T1,SID).
 contains(Xa,Dummy_Set_76).
 contains(PWi,Dummy_Set_77).
 contains(BS,Dummy_Set_78).
 contains(Ui,Dummy_Set_78).
 contains(SKubs,Dummy_Set_79).
 contains(BS,Dummy_Set_80).
 contains(Ui,Dummy_Set_80)


section properties:

property secrecy_of_subs (MGoal,ASGoal) :=
 [] ((secret(MGoal,subs,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_sub1_subs (MGoal,ASGoal) :=
 [] ((secret(MGoal,sub1_subs,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_sub1 (MGoal,ASGoal) :=
 [] ((secret(MGoal,sub1,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_sub2 (MGoal,ASGoal) :=
 [] ((secret(MGoal,sub2,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property authentication_on_alice_server (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,alice_server,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,alice_server,MGoal))
     /\ ((request(A1Goal,A2Goal,alice_server,MGoal,SID1)
           /\ request(A1Goal,A2Goal,alice_server,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_bs_bob (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,bs_bob,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,bs_bob,MGoal))
     /\ ((request(A1Goal,A2Goal,bs_bob,MGoal,SID1)
           /\ request(A1Goal,A2Goal,bs_bob,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state secrecy_of_subs (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,subs,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_sub1_subs (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sub1_subs,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_sub1 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sub1,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_sub2 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sub2,ASGoal) &
 not(contains(i,ASGoal))

attack_state authentication_on_alice_server (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,alice_server,MGoal,SID) &
 not(witness(A2Goal,A1Goal,alice_server,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_alice_server (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,alice_server,MGoal,SID1).
 request(A1Goal,A2Goal,alice_server,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_bs_bob (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,bs_bob,MGoal,SID) &
 not(witness(A2Goal,A1Goal,bs_bob,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_bs_bob (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,bs_bob,MGoal,SID1).
 request(A1Goal,A2Goal,bs_bob,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

