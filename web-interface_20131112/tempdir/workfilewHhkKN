role me(ME,AAA: agent, GK:symmetric_key, F1,F2,F3,F4: hash_func, SND, RCV: channel (dy) )
played_by ME def=
local 
      State : nat,  
      Rme, Rhss, Raaa, IDhss, Key  :text,
      Kma :message

init 
State :=0
transition
1.  State =0 /\ RCV(start)=|>
    State' :=2/\Rme':=new()
              /\SND(Rme')
2.  State =2 /\ RCV({F2(Raaa'.Rhss'.Rme)}_({F3(IDhss'.Rhss')}_GK).Raaa'.Rhss')
/\witness(ME,AAA,aaa_me,Raaa',Rhss')=|>
    State' :=4/\Key':=new()
              /\Kma':={F4(Key')}_({F3(IDhss'.Rhss')}_GK)
              /\secret(Kma',kma,{AAA,ME})

3. State =4 /\SND({F1(Raaa.Key')}_Kma)/\wrequest(ME,AAA,me_aaa,Raaa)=|>
State' :=6

end role

role aaa(ME,AAA : agent, GK:symmetric_key, F1,F2,F3,F4: hash_func, SND, RCV: channel (dy) )
played_by AAA def=
local 
      State : nat,  
      Rme, Rhss, Raaa, IDhss, Key :text,
      Kma :message

init 
State :=1

transition

1.  State =1 /\ RCV(Rme')=|>
    State':=3 /\ Raaa':=new()
              /\ IDhss':=new()
              /\ Rhss':=new()
               /\ SND({F2(Raaa'.Rhss'.Rme')}_({F3(IDhss'.Rhss')}_GK).Raaa'.Rhss')
               /\wrequest(AAA,ME,aaa_me,Raaa',Rhss')
2.State =3 /\RCV({F1(Raaa.Key')}_Kma')/\witness(AAA,ME,me_aaa,Raaa)=|>
  State' :=5/\Rhss':=new()
            /\IDhss':=new() 
            /\Kma':={F4(Key')}_({F3(IDhss'.Rhss')}_GK)
            /\secret(Kma',kma,{AAA,ME})

           
end role




role session(ME,AAA : agent,GK:symmetric_key, F1,F2,F3,F4:hash_func) 
def=
local
SA, RA, SB, RB: channel (dy)
composition
me(ME,AAA,GK,F1,F2,F3,F4,SA,RA)/\aaa(ME,AAA,GK,F1,F2,F3,F4,SB,RB)
end role

role enviroment() def=

const 
me_aaa, aaa_me, kma :protocol_id,
me, aaa: agent,
kmeaaa, kmei, kiaaa: symmetric_key,
f1,f2,f3,f4 :hash_func


intruder_knowledge ={me,aaa,kmei, kiaaa,f1,f2,f3,f4}
composition
session(me, aaa,kmeaaa,f1,f2,f3,f4)/\session(me, i,kmei,f1,f2,f3,f4)/\session( i,aaa, kiaaa,f1,f2,f3,f4)
end role

goal 
secrecy_of kma
authentication_on me_aaa
authentication_on aaa_me
end goal

enviroment()

