%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfilemMN936

section signature:

state_eke_Resp: agent * agent * symmetric_key * nat * text * text * text * public_key * set(agent) * nat -> fact
state_eke_Init: agent * agent * symmetric_key * nat * public_key * text * text * text * set(agent) * nat -> fact


section types:

sec_k2, nb, na, sec_k1: protocol_id
Na, Nb, K, Dummy_Nb, Dummy_K, Dummy_Na, dummy_nonce: text
Ea, Dummy_Ea, dummy_pk: public_key
set_76, set_74, set_70, set_59: set
State, 7, 6, 3, 4, SID, 2, 1, 0, Dummy_State, SID2, SID1: nat
Set_39, Dummy_Set_39, Set_20, Dummy_Set_20, ASGoal: set(agent)
start, MGoal: message
Kab, kab: symmetric_key
b, B, A, A2Goal, A1Goal, i, a: agent


section inits:

initial_state init1 := 
 iknows(start).
 iknows(a).
 iknows(b).
 iknows(i).
 state_eke_Init(a,b,kab,0,dummy_pk,dummy_nonce,dummy_nonce,dummy_nonce,set_59,3).
 state_eke_Resp(b,a,kab,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_pk,set_70,4).
 state_eke_Init(b,a,kab,0,dummy_pk,dummy_nonce,dummy_nonce,dummy_nonce,set_74,6).
 state_eke_Resp(a,b,kab,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_pk,set_76,7)


section rules:

step step_0 (A,B,Kab,Dummy_Ea,Na,Nb,K,Set_20,SID,Ea) :=
 state_eke_Init(A,B,Kab,0,Dummy_Ea,Na,Nb,K,Set_20,SID).
 iknows(start)
=[exists Ea]=>
 state_eke_Init(A,B,Kab,1,Ea,Na,Nb,K,Set_20,SID).
 iknows(scrypt(Kab,Ea))

step step_1 (A,B,Kab,Ea,Dummy_Na,Nb,Dummy_K,Dummy_Set_20,SID,Na,K) :=
 state_eke_Init(A,B,Kab,1,Ea,Dummy_Na,Nb,Dummy_K,Dummy_Set_20,SID).
 iknows(scrypt(Kab,crypt(Ea,K)))
=[exists Na]=>
 state_eke_Init(A,B,Kab,2,Ea,Na,Nb,K,Dummy_Set_20,SID).
 iknows(scrypt(K,Na)).
 secret(K,sec_k1,Dummy_Set_20).
 witness(A,B,na,Na).
 contains(A,Dummy_Set_20).
 contains(B,Dummy_Set_20)

step step_2 (A,B,Kab,Ea,Na,Dummy_Nb,K,Set_20,SID,Nb) :=
 state_eke_Init(A,B,Kab,2,Ea,Na,Dummy_Nb,K,Set_20,SID).
 iknows(scrypt(K,pair(Na,Nb)))
 =>
 state_eke_Init(A,B,Kab,3,Ea,Na,Nb,K,Set_20,SID).
 iknows(scrypt(K,Nb)).
 request(A,B,nb,Nb,SID)

step step_3 (B,A,Kab,Na,Nb,Dummy_K,Dummy_Ea,Dummy_Set_39,SID,K,Ea) :=
 state_eke_Resp(B,A,Kab,0,Na,Nb,Dummy_K,Dummy_Ea,Dummy_Set_39,SID).
 iknows(scrypt(Kab,Ea))
=[exists K]=>
 state_eke_Resp(B,A,Kab,1,Na,Nb,K,Ea,Dummy_Set_39,SID).
 iknows(scrypt(Kab,crypt(Ea,K))).
 secret(K,sec_k2,Dummy_Set_39).
 contains(A,Dummy_Set_39).
 contains(B,Dummy_Set_39)

step step_4 (B,A,Kab,Dummy_Na,Dummy_Nb,K,Ea,Set_39,SID,Na,Nb) :=
 state_eke_Resp(B,A,Kab,1,Dummy_Na,Dummy_Nb,K,Ea,Set_39,SID).
 iknows(scrypt(K,Na))
=[exists Nb]=>
 state_eke_Resp(B,A,Kab,2,Na,Nb,K,Ea,Set_39,SID).
 iknows(scrypt(K,pair(Na,Nb))).
 witness(B,A,nb,Nb)

step step_5 (B,A,Kab,Na,Nb,K,Ea,Set_39,SID) :=
 state_eke_Resp(B,A,Kab,2,Na,Nb,K,Ea,Set_39,SID).
 iknows(scrypt(K,Nb))
 =>
 state_eke_Resp(B,A,Kab,3,Na,Nb,K,Ea,Set_39,SID).
 request(B,A,na,Na,SID)


section properties:

property secrecy_of_sec_k1 (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_k1,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_sec_k2 (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_k2,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property authentication_on_nb (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,nb,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,nb,MGoal))
     /\ ((request(A1Goal,A2Goal,nb,MGoal,SID1)
           /\ request(A1Goal,A2Goal,nb,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_na (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,na,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,na,MGoal))
     /\ ((request(A1Goal,A2Goal,na,MGoal,SID1)
           /\ request(A1Goal,A2Goal,na,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state secrecy_of_sec_k1 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_k1,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_sec_k2 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_k2,ASGoal) &
 not(contains(i,ASGoal))

attack_state authentication_on_nb (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,nb,MGoal,SID) &
 not(witness(A2Goal,A1Goal,nb,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_nb (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,nb,MGoal,SID1).
 request(A1Goal,A2Goal,nb,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_na (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,na,MGoal,SID) &
 not(witness(A2Goal,A1Goal,na,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_na (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,na,MGoal,SID1).
 request(A1Goal,A2Goal,na,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

