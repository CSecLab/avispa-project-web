%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfileeNA3IM

section signature:

state_bob: agent * agent * nat * text * nat -> fact
state_alice: agent * agent * nat * text * nat -> fact


section types:

pong, ping: protocol_id
MGoal, start: message
Dummy_Na, dummy_nonce, Na: text
A2Goal, A1Goal, a, b, A, B, i: agent
SID, Dummy_State, 3, SID2, SID1, 1, State, 4, 2, 0, 10, 6: nat


section inits:

initial_state init1 := 
 iknows(start).
 iknows(a).
 iknows(b).
 iknows(i).
 state_alice(a,b,0,dummy_nonce,3).
 state_bob(b,a,1,dummy_nonce,4).
 state_alice(a,i,0,dummy_nonce,6).
 state_bob(b,i,1,dummy_nonce,10)


section rules:

step step_0 (A,B,Dummy_Na,SID,Na) :=
 state_alice(A,B,0,Dummy_Na,SID).
 iknows(start)
=[exists Na]=>
 state_alice(A,B,2,Na,SID).
 witness(A,B,ping,Na).
 iknows(pair(A,Na))

step step_1 (A,B,Na,SID) :=
 state_alice(A,B,2,Na,SID).
 iknows(Na)
 =>
 state_alice(A,B,4,Na,SID).
 request(B,A,pong,Na,SID)

step step_2 (B,A,Dummy_Na,SID,Na) :=
 state_bob(B,A,1,Dummy_Na,SID).
 iknows(pair(A,Na))
 =>
 state_bob(B,A,3,Na,SID).
 request(A,B,ping,Na,SID).
 witness(B,A,pong,Na).
 iknows(Na)


section properties:

property authentication_on_ping (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,ping,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,ping,MGoal))
     /\ ((request(A1Goal,A2Goal,ping,MGoal,SID1)
           /\ request(A1Goal,A2Goal,ping,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_pong (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,pong,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,pong,MGoal))
     /\ ((request(A1Goal,A2Goal,pong,MGoal,SID1)
           /\ request(A1Goal,A2Goal,pong,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state authentication_on_ping (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,ping,MGoal,SID) &
 not(witness(A2Goal,A1Goal,ping,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_ping (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,ping,MGoal,SID1).
 request(A1Goal,A2Goal,ping,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_pong (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,pong,MGoal,SID) &
 not(witness(A2Goal,A1Goal,pong,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_pong (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,pong,MGoal,SID1).
 request(A1Goal,A2Goal,pong,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

