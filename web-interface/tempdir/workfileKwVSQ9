%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Role of User
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
role initiator_User( User, Server   : agent,
				Snd, Rcv   	: channel (dy),
				Hash		: hash_func,
				K_UG    	: symmetric_key)

played_by User
def=
	local State : nat,
	PWi1 		: text,
	R1		: text,
	IDi1 		: text,
	Ni1,Ci1,Ci_2      : text,
	L,J,D		: text,
	RPW 		: text,
	Y, A, A_1, AID  : text,
	P_1, P_2, P_3, S: text

	const ky_pw, ky_r, ky_rpw, ky_hash, ky_xs, sec_a_pwd,ky_ci,ki_ci_2, ky_j,ky_l : protocol_id,
	session_a1, session_b1 : protocol_id,
	ky_hash, sec_K_hash : protocol_id 

	init  State := 0

	transition
	1. State = 0  /\ Rcv(start) =|> 
      		State':= 1 /\ IDi1' := new() /\ PWi1' := new() /\ RPW' := Hash(IDi1.PWi1)
              	/\ Snd(User.RPW)
				/\ witness(User, ky_pw, PWi1)
				/\ witness(User, ky_rpw, RPW)
				/\ witness(User, Server, ky_hash, Hash) 
				/\ secret(Hash,sec_K_hash,{User,Server})
				/\ secret(PWi1,sec_a_pwd,{User})

	
	2. State = 1 /\ Rcv({L'.Y'}_K_UG) =|>
		State' := 2 /\ P_1' := new() /\R1':= new()/\D':=new()/\ RPW':= R1.PWi1 /\ J':= xor(L,RPW) /\ Ci1 ':= P_1.J /\ AID' := xor(IDi1,Hash(Y.P_1.D))
		/\ Snd(AID.P_1.D.Ci1)
		/\ witness(User, ky_j, J) 
		/\ witness(User, ky_r, R1) 
		/\ witness(User, ky_l, L)


	3. State = 2 /\ Rcv(Ci1'.P_2')   =|>
		State' := 3 	/\ Ci_2' := Hash(xor(xor(Ci1,J),P_2))
		/\ witness(Server, ky_ci, Ci1) 
		/\ witness(Server, ki_ci_2, Ci_2) 
	
	4. State = 3 /\  Ci_2 = Ci1   =|>
		State' := 4 /\ S':= Hash(xor(Ci1,J)) /\ Snd(User.S')
		/\ secret(S,session_a1,{User,Server})
		
	%Sends Password Changes without server interaction
	5. State = 4  =|>
		State' := 5 /\ PWi1' := new() /\ RPW' := Hash(IDi1.PWi1) /\ J' := xor(L ,RPW)
		
	
 
end role


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Role of Server
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
role p_Server ( Server, User    : agent,
				Snd, Rcv     	: channel (dy),
				Hash	   		: hash_func,	     	
				K_UG        	: symmetric_key)
played_by Server
def=
	local State 		: nat,
	IDi1, IDU 	   		: text,
	Ni1	    			: text,
	J, L    			: text,
	K,Xs	    		: symmetric_key,
	RPW				  	: text,
	P_1	,P_2    		: text,
	Y, A    			: text,	
	S    				: text,
	AID, D, Ci1,Ci_2 	: text


	const k_ni, ky_pw, ky_hash, ky_xs,ky_rpw: protocol_id,
	sec_a_K_xs,  ky_ci, ki_ci_2, ky_j,ky_l	: protocol_id,
	sec_k_ni, session_a1, session_b1  	: protocol_id,
	ky_hash, sec_K_hash 					: protocol_id

	init State := 0
	
	transition
	1. State = 0 /\ Rcv(User.RPW') =|>
		State' := 1 /\ Ni1' := 0 /\ Xs' := new() /\ IDU' := IDi1.Ni1
		/\ J' := Hash(Xs.IDU)
		/\ L' := xor(J,RPW)
		/\ Snd({L.Y}_K_UG)
		/\ witness(Server, ky_xs, Xs) 
		/\ witness(Server, ky_j, J) 
		/\ witness(Server, ky_l, L) 
		/\ witness(User, ky_rpw, RPW)
		/\ witness(User, Server, ky_hash, Hash) 
		/\ witness(User, Server, k_ni, Ni1) 
		/\ secret(Hash,sec_K_hash,{User,Server})
		/\ secret(Ni1,sec_k_ni,{User,Server})
		/\ secret(Xs,sec_a_K_xs,{Server})


	2. State = 1 /\ Rcv(AID'.P_1'.D'.Ci1') =|>
		State' := 2 /\ IDi1' := xor(AID, Hash(Y.P_1.D))		
		/\IDU' := IDi1.Ni1
		/\ P_2' := new()
		/\Ci_2' := Hash(xor(xor(Ci1,J),P_2))
		/\ Snd(Ci_2.P_2)
		/\ witness(Server, ky_ci, Ci1) 
		/\ witness(Server, ki_ci_2, Ci_2) 
		

	3. State = 2  =|>
		State' := 3

	4. State = 3 /\ Rcv(User.S') =|>
		State' := 4
		/\ secret(S,session_b1,{User,Server})
end role



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Role of Session between User, Server, SN
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
role session( User, Server	: agent,
	      Hash		: hash_func,
	      K_UG 		: symmetric_key
	    )

def=
	local S_User, R_User, S_Server, R_Server : channel (dy)

	composition
		initiator_User(User, Server,  S_User, R_User, Hash, K_UG)
	   /\   p_Server(Server, User,  S_Server, R_Server, Hash, K_UG)
end role


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Environment Definition
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
role environment() def=
	
	const user, server	   : agent,
	      h, hi		   : hash_func,
	      kug, kia		   : symmetric_key
	      

	intruder_knowledge = {user, server,  kia
                       	     }

	composition 
		session(user, server,  h, kug)
	  /\	session(server, user, hi, kia)

end role


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% GOALS regarding  
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
goal
  	secrecy_of k_ni, ky_pw, ky_hash, ky_xs, ky_rpw, ky_ci, ki_ci_2, ky_j,ky_l, ky_r
	secrecy_of session_a1, session_b1,sec_K_hash, sec_a_K_xs
	authentication_on  sec_a_pwd, sec_k_ni, session_a1, session_b1

	
	weak_authentication_on ky_hash
	weak_authentication_on ky_xs
	weak_authentication_on ky_pw
	weak_authentication_on ky_rpw
	weak_authentication_on k_ni
	weak_authentication_on ky_r

end goal


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

environment()

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

