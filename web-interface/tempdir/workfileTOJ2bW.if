%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfileTOJ2bW

section signature:

state_server: agent * agent * hash_func * hash_func * nat * text * text * nat * text * text * text * message * message * message * message * message * message * text * nat -> fact
state_client: agent * agent * hash_func * hash_func * nat * text * text * nat * text * text * text * message * message * message * message * message * message * text * set(agent) * set(agent) * set(agent) * nat -> fact


section types:

sec_K, sec_KCS, sec_KSC, sec_secretC, k: protocol_id
ASGoal, Set_39, Set_38, Set_36, Dummy_Set_39, Dummy_Set_38, Dummy_Set_36: set(agent)
hash_, host_key, HostKey, Hash: hash_func
SID2, SID1, SID, g, 10, 8, 6, 2, State, G, 9, 7, 5, 3, 1, 4, Dummy_State: nat
MGoal, KCS, KSC, H, SID_, EGX, K, start, Dummy_EGX, EGY, Dummy_KSC, Dummy_KCS, Dummy_SID_, Dummy_H, Dummy_K, Dummy_EGY, dummy_msg: message
A2Goal, A1Goal, c, s, C, S, i: agent
letter_c, letter_d, SecretC, Y, NC, NS, LetterC, LetterD, secretC, SecretS, Dummy_SecretC, Dummy_Y, Dummy_SecretS, X, Dummy_X, Dummy_NS, Dummy_NC, dummy_nonce: text
set_100, set_99, set_131, set_130, set_129, set_127, set_126, set_125, set_101: set


section inits:

initial_state init1 := 
 iknows(start).
 iknows(c).
 iknows(s).
 iknows(hash_).
 iknows(host_key).
 iknows(g).
 iknows(letter_c).
 iknows(letter_d).
 iknows(inv(apply(host_key,i))).
 iknows(i).
 state_client(c,s,hash_,host_key,g,letter_c,letter_d,1,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_nonce,set_99,set_100,set_101,3).
 state_server(s,c,hash_,host_key,g,letter_c,letter_d,2,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_nonce,4).
 state_server(s,i,hash_,host_key,g,letter_c,letter_d,2,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_nonce,7).
 state_client(c,i,hash_,host_key,g,letter_c,letter_d,1,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_nonce,set_129,set_130,set_131,9)


section rules:

step step_0 (C,S,Hash,HostKey,G,LetterC,LetterD,Dummy_NC,NS,X,EGY,K,H,SID_,KCS,KSC,SecretS,Set_36,Set_38,Set_39,SID,NC) :=
 state_client(C,S,Hash,HostKey,G,LetterC,LetterD,1,Dummy_NC,NS,X,EGY,K,H,SID_,KCS,KSC,SecretS,Set_36,Set_38,Set_39,SID).
 iknows(start)
=[exists NC]=>
 state_client(C,S,Hash,HostKey,G,LetterC,LetterD,3,NC,NS,X,EGY,K,H,SID_,KCS,KSC,SecretS,Set_36,Set_38,Set_39,SID).
 iknows(NC)

step step_1 (C,S,Hash,HostKey,G,LetterC,LetterD,NC,Dummy_NS,Dummy_X,EGY,K,H,SID_,KCS,KSC,SecretS,Set_36,Set_38,Set_39,SID,NS,X) :=
 state_client(C,S,Hash,HostKey,G,LetterC,LetterD,3,NC,Dummy_NS,Dummy_X,EGY,K,H,SID_,KCS,KSC,SecretS,Set_36,Set_38,Set_39,SID).
 iknows(NS)
=[exists X]=>
 state_client(C,S,Hash,HostKey,G,LetterC,LetterD,5,NC,NS,X,EGY,K,H,SID_,KCS,KSC,SecretS,Set_36,Set_38,Set_39,SID).
 iknows(exp(G,X))

step step_2 (C,S,Hash,HostKey,G,LetterC,LetterD,NC,NS,X,Dummy_EGY,Dummy_K,Dummy_H,Dummy_SID_,Dummy_KCS,Dummy_KSC,SecretS,Dummy_Set_36,Dummy_Set_38,Dummy_Set_39,SID,EGY) :=
 state_client(C,S,Hash,HostKey,G,LetterC,LetterD,5,NC,NS,X,Dummy_EGY,Dummy_K,Dummy_H,Dummy_SID_,Dummy_KCS,Dummy_KSC,SecretS,Dummy_Set_36,Dummy_Set_38,Dummy_Set_39,SID).
 iknows(pair(apply(HostKey,S),pair(EGY,crypt(inv(apply(HostKey,S)),apply(Hash,pair(NC,pair(NS,pair(apply(HostKey,S),pair(exp(G,X),pair(EGY,exp(EGY,X)))))))))))
 =>
 state_client(C,S,Hash,HostKey,G,LetterC,LetterD,7,NC,NS,X,EGY,exp(EGY,X),apply(Hash,pair(NC,pair(NS,pair(apply(HostKey,S),pair(exp(G,X),pair(EGY,exp(EGY,X))))))),apply(Hash,pair(NC,pair(NS,pair(apply(HostKey,S),pair(exp(G,X),pair(EGY,exp(EGY,X))))))),apply(Hash,pair(exp(EGY,X),pair(apply(Hash,pair(NC,pair(NS,pair(apply(HostKey,S),pair(exp(G,X),pair(EGY,exp(EGY,X))))))),pair(LetterC,apply(Hash,pair(NC,pair(NS,pair(apply(HostKey,S),pair(exp(G,X),pair(EGY,exp(EGY,X))))))))))),apply(Hash,pair(exp(EGY,X),pair(apply(Hash,pair(NC,pair(NS,pair(apply(HostKey,S),pair(exp(G,X),pair(EGY,exp(EGY,X))))))),pair(LetterD,apply(Hash,pair(NC,pair(NS,pair(apply(HostKey,S),pair(exp(G,X),pair(EGY,exp(EGY,X))))))))))),SecretS,Dummy_Set_36,Dummy_Set_38,Dummy_Set_39,SID).
 secret(exp(EGY,X),sec_K,Dummy_Set_36).
 secret(apply(Hash,pair(exp(EGY,X),pair(apply(Hash,pair(NC,pair(NS,pair(apply(HostKey,S),pair(exp(G,X),pair(EGY,exp(EGY,X))))))),pair(LetterC,apply(Hash,pair(NC,pair(NS,pair(apply(HostKey,S),pair(exp(G,X),pair(EGY,exp(EGY,X))))))))))),sec_KCS,Dummy_Set_38).
 secret(apply(Hash,pair(exp(EGY,X),pair(apply(Hash,pair(NC,pair(NS,pair(apply(HostKey,S),pair(exp(G,X),pair(EGY,exp(EGY,X))))))),pair(LetterD,apply(Hash,pair(NC,pair(NS,pair(apply(HostKey,S),pair(exp(G,X),pair(EGY,exp(EGY,X))))))))))),sec_KSC,Dummy_Set_39).
 iknows(scrypt(apply(Hash,pair(exp(EGY,X),pair(apply(Hash,pair(NC,pair(NS,pair(apply(HostKey,S),pair(exp(G,X),pair(EGY,exp(EGY,X))))))),pair(LetterC,apply(Hash,pair(NC,pair(NS,pair(apply(HostKey,S),pair(exp(G,X),pair(EGY,exp(EGY,X))))))))))),secretC)).
 request(S,S,k,exp(EGY,X),SID).
 contains(C,Dummy_Set_36).
 contains(S,Dummy_Set_36).
 contains(C,Dummy_Set_38).
 contains(S,Dummy_Set_38).
 contains(C,Dummy_Set_39).
 contains(S,Dummy_Set_39)

step step_3 (C,S,Hash,HostKey,G,LetterC,LetterD,NC,NS,X,EGY,K,H,SID_,KCS,KSC,Dummy_SecretS,Set_36,Set_38,Set_39,SID,SecretS) :=
 state_client(C,S,Hash,HostKey,G,LetterC,LetterD,7,NC,NS,X,EGY,K,H,SID_,KCS,KSC,Dummy_SecretS,Set_36,Set_38,Set_39,SID).
 iknows(scrypt(KSC,SecretS))
 =>
 state_client(C,S,Hash,HostKey,G,LetterC,LetterD,9,NC,NS,X,EGY,K,H,SID_,KCS,KSC,SecretS,Set_36,Set_38,Set_39,SID)

step step_4 (S,C,Hash,HostKey,G,LetterC,LetterD,Dummy_NS,Dummy_NC,Y,EGX,K,H,SID_,KCS,KSC,SecretC,SID,NS,NC) :=
 state_server(S,C,Hash,HostKey,G,LetterC,LetterD,2,Dummy_NS,Dummy_NC,Y,EGX,K,H,SID_,KCS,KSC,SecretC,SID).
 iknows(NC)
=[exists NS]=>
 state_server(S,C,Hash,HostKey,G,LetterC,LetterD,6,NS,NC,Y,EGX,K,H,SID_,KCS,KSC,SecretC,SID).
 iknows(NS)

step step_5 (S,C,Hash,HostKey,G,LetterC,LetterD,NS,NC,Dummy_Y,Dummy_EGX,Dummy_K,Dummy_H,Dummy_SID_,Dummy_KCS,Dummy_KSC,SecretC,SID,Y,EGX) :=
 state_server(S,C,Hash,HostKey,G,LetterC,LetterD,6,NS,NC,Dummy_Y,Dummy_EGX,Dummy_K,Dummy_H,Dummy_SID_,Dummy_KCS,Dummy_KSC,SecretC,SID).
 iknows(EGX)
=[exists Y]=>
 state_server(S,C,Hash,HostKey,G,LetterC,LetterD,8,NS,NC,Y,EGX,exp(EGX,Y),apply(Hash,pair(NC,pair(NS,pair(apply(HostKey,S),pair(EGX,pair(exp(G,Y),exp(EGX,Y))))))),apply(Hash,pair(NC,pair(NS,pair(apply(HostKey,S),pair(EGX,pair(exp(G,Y),exp(EGX,Y))))))),apply(Hash,pair(exp(EGX,Y),pair(apply(Hash,pair(NC,pair(NS,pair(apply(HostKey,S),pair(EGX,pair(exp(G,Y),exp(EGX,Y))))))),pair(LetterC,apply(Hash,pair(NC,pair(NS,pair(apply(HostKey,S),pair(EGX,pair(exp(G,Y),exp(EGX,Y))))))))))),apply(Hash,pair(exp(EGX,Y),pair(apply(Hash,pair(NC,pair(NS,pair(apply(HostKey,S),pair(EGX,pair(exp(G,Y),exp(EGX,Y))))))),pair(LetterD,apply(Hash,pair(NC,pair(NS,pair(apply(HostKey,S),pair(EGX,pair(exp(G,Y),exp(EGX,Y))))))))))),SecretC,SID).
 iknows(pair(apply(HostKey,S),pair(exp(G,Y),crypt(inv(apply(HostKey,S)),apply(Hash,pair(NC,pair(NS,pair(apply(HostKey,S),pair(EGX,pair(exp(G,Y),exp(EGX,Y))))))))))).
 witness(S,S,k,exp(EGX,Y))

step step_6 (S,C,Hash,HostKey,G,LetterC,LetterD,NS,NC,Y,EGX,K,H,SID_,KCS,KSC,Dummy_SecretC,SID,SecretC) :=
 state_server(S,C,Hash,HostKey,G,LetterC,LetterD,8,NS,NC,Y,EGX,K,H,SID_,KCS,KSC,Dummy_SecretC,SID).
 iknows(scrypt(KCS,SecretC))
 =>
 state_server(S,C,Hash,HostKey,G,LetterC,LetterD,10,NS,NC,Y,EGX,K,H,SID_,KCS,KSC,SecretC,SID)


section properties:

property secrecy_of_sec_K (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_K,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_sec_KCS (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_KCS,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_sec_KSC (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_KSC,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property authentication_on_k (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,k,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,k,MGoal))
     /\ ((request(A1Goal,A2Goal,k,MGoal,SID1)
           /\ request(A1Goal,A2Goal,k,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state secrecy_of_sec_K (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_K,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_sec_KCS (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_KCS,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_sec_KSC (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_KSC,ASGoal) &
 not(contains(i,ASGoal))

attack_state authentication_on_k (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,k,MGoal,SID) &
 not(witness(A2Goal,A1Goal,k,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_k (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,k,MGoal,SID1).
 request(A1Goal,A2Goal,k,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

