%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfileoVqVd2KiCJ

section signature:

state_tag: agent * agent * text * text * hash_func * nat * text * text * message * message * message * message * set(agent) * set(agent) * set(agent) * nat -> fact
state_reader: agent * agent * hash_func * nat * text * text * text * text * message * message * message * message * set(agent) * nat -> fact


section types:

Dummy_Set_50, Dummy_Set_49, Dummy_Set_47, Dummy_Set_29, Set_50, Set_49, Set_47, Set_29: set(agent)
id, id2, sk, trk, rtk, rtid: protocol_id
Dummy_M3, Dummy_M2, Dummy_M1, Dummy_M4, dummy_msg, MGoal, M1, M2, M3, M4, start: message
Dummy_K, Dummy_ID, Dummy_Nt, Dummy_Nr, dummy_nonce, k, tid, idti, idri, kti, kri, Nr, Nt, ID, K: text
h, H: hash_func
6, 4, SID, Dummy_State, 3, SID2, SID1, State, 2, 1, 10: nat
A2Goal, A1Goal, T, R, tag, reader, i: agent
set_100, set_98, set_89, set_88, set_87, set_75, set_106, set_105, set_104, set_103, set_102, set_101: set


section inits:

initial_state init1 := 
 iknows(start).
 iknows(tag).
 iknows(reader).
 iknows(idti).
 iknows(idri).
 iknows(h).
 iknows(kti).
 iknows(kri).
 iknows(i).
 state_reader(tag,reader,h,1,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,set_75,3).
 state_tag(reader,tag,tid,k,h,1,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,set_87,set_88,set_89,4).
 state_reader(tag,i,h,1,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,set_98,6).
 state_tag(reader,i,idri,kri,h,1,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,set_104,set_105,set_106,10)


section rules:

step step_0 (R,T,H,Dummy_Nr,Nt,ID,K,M1,M2,M3,M4,Set_29,SID,Nr) :=
 state_reader(R,T,H,1,Dummy_Nr,Nt,ID,K,M1,M2,M3,M4,Set_29,SID).
 iknows(start)
=[exists Nr]=>
 state_reader(R,T,H,2,Nr,Nt,ID,K,M1,M2,M3,M4,Set_29,SID).
 iknows(Nr)

step step_1 (R,T,H,Dummy_Nr,Dummy_Nt,Dummy_ID,Dummy_K,M1,M2,M3,Dummy_M4,Dummy_Set_29,SID,Nr,ID,K) :=
 state_reader(R,T,H,2,Dummy_Nr,Dummy_Nt,Dummy_ID,Dummy_K,M1,M2,M3,Dummy_M4,Dummy_Set_29,SID).
 iknows(pair(apply(H,Dummy_ID),Nr))
=[exists ID,K]=>
 state_reader(R,T,H,3,Nr,Dummy_Nt,ID,K,M1,M2,M3,apply(H,pair(K,pair(Dummy_Nr,Dummy_Nt))),Dummy_Set_29,SID).
 iknows(apply(H,pair(K,pair(Dummy_Nr,Dummy_Nt)))).
 request(R,T,rtid,Dummy_ID,SID).
 request(R,T,rtk,Dummy_K,SID).
 witness(R,T,trk,K).
 contains(R,Dummy_Set_29).
 contains(T,Dummy_Set_29)

step step_2 (T,R,ID,K,H,Dummy_Nr,Dummy_Nt,Dummy_M1,Dummy_M2,Dummy_M3,M4,Dummy_Set_47,Dummy_Set_49,Set_50,SID,Nr,Nt) :=
 state_tag(T,R,ID,K,H,1,Dummy_Nr,Dummy_Nt,Dummy_M1,Dummy_M2,Dummy_M3,M4,Dummy_Set_47,Dummy_Set_49,Set_50,SID).
 iknows(Nr)
=[exists Nt]=>
 state_tag(T,R,ID,K,H,2,Nr,Nt,pair(apply(H,ID),Nr),xor(ID,Nt),apply(H,pair(ID,pair(K,pair(Nr,Nt)))),M4,Dummy_Set_47,Dummy_Set_49,Set_50,SID).
 iknows(pair(pair(apply(H,ID),Nr),pair(xor(ID,Nt),apply(H,pair(ID,pair(K,pair(Nr,Nt))))))).
 witness(T,R,rtid,ID).
 witness(T,R,rtk,K).
 contains(R,Dummy_Set_47).
 contains(T,Dummy_Set_47).
 contains(R,Dummy_Set_49).
 contains(T,Dummy_Set_49)

step step_3 (T,R,ID,Dummy_K,H,Nr,Nt,M1,M2,M3,M4,Set_47,Set_49,Dummy_Set_50,SID,K) :=
 state_tag(T,R,ID,Dummy_K,H,2,Nr,Nt,M1,M2,M3,M4,Set_47,Set_49,Dummy_Set_50,SID).
 iknows(apply(H,pair(K,pair(Nr,Nt))))
 =>
 state_tag(T,R,ID,K,H,3,Nr,Nt,M1,M2,M3,M4,Set_47,Set_49,Dummy_Set_50,SID).
 request(T,R,trk,K,SID).
 contains(R,Dummy_Set_50).
 contains(T,Dummy_Set_50)


section properties:

property authentication_on_rtid (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,rtid,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,rtid,MGoal))
     /\ ((request(A1Goal,A2Goal,rtid,MGoal,SID1)
           /\ request(A1Goal,A2Goal,rtid,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_rtk (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,rtk,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,rtk,MGoal))
     /\ ((request(A1Goal,A2Goal,rtk,MGoal,SID1)
           /\ request(A1Goal,A2Goal,rtk,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_trk (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,trk,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,trk,MGoal))
     /\ ((request(A1Goal,A2Goal,trk,MGoal,SID1)
           /\ request(A1Goal,A2Goal,trk,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state authentication_on_rtid (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,rtid,MGoal,SID) &
 not(witness(A2Goal,A1Goal,rtid,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_rtid (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,rtid,MGoal,SID1).
 request(A1Goal,A2Goal,rtid,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_rtk (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,rtk,MGoal,SID) &
 not(witness(A2Goal,A1Goal,rtk,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_rtk (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,rtk,MGoal,SID1).
 request(A1Goal,A2Goal,rtk,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_trk (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,trk,MGoal,SID) &
 not(witness(A2Goal,A1Goal,trk,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_trk (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,trk,MGoal,SID1).
 request(A1Goal,A2Goal,trk,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

