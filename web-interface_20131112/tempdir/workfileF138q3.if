%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfileF138q3

section signature:

state_doc: agent * agent * agent * text * message * message * message * public_key * public_key * public_key * symmetric_key * hash_func * nat * message * message * message * message * message * message * message * text * text * nat -> fact
state_hsp: agent * agent * agent * text * message * message * message * public_key * public_key * public_key * symmetric_key * hash_func * nat * message * message * message * message * message * message * message * message * message * message * message * message * message * text * text * text * text * text * text * text * text * nat -> fact
state_patient: agent * agent * agent * text * message * message * message * message * message * public_key * public_key * public_key * hash_func * nat * text * text * text * text * message * message * message * message * message * message * message * set(agent) * nat -> fact


section types:

set_149: set
K_BC, k_ab: symmetric_key
Dummy_Set_41, ASGoal, Set_41: set(agent)
sec_ifd_dhvalue: protocol_id
F1, f1: hash_func
Kb, Ka, Kc, kc, kb, ka: public_key
State, 12, 8, 5, SID, 4, Dummy_State, 3, 10, 9, 6, 2, 1, 0, 11, 7: nat
G, Y, Dummy_Z, Y1, N_HSP, N_DOC, Dummy_TS, Req_Id, Dummy_Serial_No, Treat_Type, Dummy_Treat_Type, Serial_No, Dummy_Req_Id, TS, Dummy_Y1, Dummy_Y, Dummy_N_DOC, Dummy_N_HSP, Dummy_X1, Dummy_X, dummy_nonce, g, X, X1, Z: text
C, A, B, a, b, c, i: agent
SERVUT, ID_A, ID_B, ID_C, Dummy_ACK, P1, Dummy_P2, R1, Dummy_R2, R11, R21, R2, Dummy_P1, P2, P3, K, Dummy_SERVUT, SK, ACK, Dummy_SK, UT, Dummy_P3, DS, Dummy_K, Dummy_R21, Dummy_R11, Dummy_R1, dummy_msg, MGoal, id_A, id_B, id_C, ds, ut, start: message


section inits:

initial_state init1 := 
 iknows(start).
 iknows(a).
 iknows(b).
 iknows(g).
 iknows(f1).
 iknows(ka).
 iknows(kb).
 iknows(kc).
 iknows(i).
 state_patient(a,b,c,g,id_A,id_B,id_C,ds,ut,kb,ka,kc,f1,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,set_149,3).
 state_hsp(b,a,c,g,id_A,id_B,id_C,ka,kb,kc,k_ab,f1,1,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,4).
 state_doc(c,a,b,g,id_A,id_B,id_C,kc,kb,ka,k_ab,f1,2,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_nonce,dummy_nonce,5)


section rules:

step step_0 (A,B,C,G,ID_A,ID_B,ID_C,DS,UT,Ka,Kb,Kc,F1,Dummy_X,Dummy_X1,N_HSP,N_DOC,Dummy_R1,Dummy_R11,R21,P3,K,SK,SERVUT,Set_41,SID,X,X1) :=
 state_patient(A,B,C,G,ID_A,ID_B,ID_C,DS,UT,Ka,Kb,Kc,F1,0,Dummy_X,Dummy_X1,N_HSP,N_DOC,Dummy_R1,Dummy_R11,R21,P3,K,SK,SERVUT,Set_41,SID).
 iknows(start)
=[exists X1,X]=>
 state_patient(A,B,C,G,ID_A,ID_B,ID_C,DS,UT,Ka,Kb,Kc,F1,4,X,X1,N_HSP,N_DOC,exp(G,X),exp(G,X1),R21,P3,K,SK,SERVUT,Set_41,SID).
 iknows(pair(ID_A,crypt(Kb,pair(exp(G,X1),pair(exp(G,X),pair(DS,UT))))))

step step_1 (A,B,C,G,ID_A,ID_B,ID_C,DS,UT,Ka,Kb,Kc,F1,X,X1,Dummy_N_HSP,N_DOC,R1,R11,Dummy_R21,P3,Dummy_K,SK,SERVUT,Set_41,SID,N_HSP,R21) :=
 state_patient(A,B,C,G,ID_A,ID_B,ID_C,DS,UT,Ka,Kb,Kc,F1,4,X,X1,Dummy_N_HSP,N_DOC,R1,R11,Dummy_R21,P3,Dummy_K,SK,SERVUT,Set_41,SID).
 iknows(pair(ID_B,pair(R21,scrypt(K,N_HSP))))
 =>
 state_patient(A,B,C,G,ID_A,ID_B,ID_C,DS,UT,Ka,Kb,Kc,F1,6,X,X1,N_HSP,N_DOC,R1,R11,R21,P3,exp(R21,X1),SK,SERVUT,Set_41,SID).
 iknows(scrypt(exp(R21,X1),N_HSP))

step step_2 (A,B,C,G,ID_A,ID_B,ID_C,DS,UT,Ka,Kb,Kc,F1,X,X1,N_HSP,Dummy_N_DOC,R1,R11,R21,Dummy_P3,Dummy_K,Dummy_SK,SERVUT,Dummy_Set_41,SID,N_DOC,P3,K) :=
 state_patient(A,B,C,G,ID_A,ID_B,ID_C,DS,UT,Ka,Kb,Kc,F1,6,X,X1,N_HSP,Dummy_N_DOC,R1,R11,R21,Dummy_P3,Dummy_K,Dummy_SK,SERVUT,Dummy_Set_41,SID).
 iknows(pair(scrypt(K,pair(ID_C,P3)),scrypt(SK,N_DOC)))
 =>
 state_patient(A,B,C,G,ID_A,ID_B,ID_C,DS,UT,Ka,Kb,Kc,F1,9,X,X1,N_HSP,N_DOC,R1,R11,R21,P3,K,exp(P3,X),SERVUT,Dummy_Set_41,SID).
 iknows(ID_A).
 secret(N_DOC,sec_ifd_dhvalue,Dummy_Set_41).
 contains(A,Dummy_Set_41).
 contains(C,Dummy_Set_41)

step step_3 (A,B,C,G,ID_A,ID_B,ID_C,DS,UT,Ka,Kb,Kc,F1,X,X1,N_HSP,N_DOC,R1,R11,R21,P3,K,SK,Dummy_SERVUT,Set_41,SID,SERVUT) :=
 state_patient(A,B,C,G,ID_A,ID_B,ID_C,DS,UT,Ka,Kb,Kc,F1,9,X,X1,N_HSP,N_DOC,R1,R11,R21,P3,K,SK,Dummy_SERVUT,Set_41,SID).
 iknows(scrypt(SK,pair(SERVUT,crypt(inv(Kb),apply(F1,SERVUT)))))
 =>
 state_patient(A,B,C,G,ID_A,ID_B,ID_C,DS,UT,Ka,Kb,Kc,F1,10,X,X1,N_HSP,N_DOC,R1,R11,R21,P3,K,SK,SERVUT,Set_41,SID)

step step_4 (B,A,C,G,ID_A,ID_B,ID_C,Kb,Ka,Kc,K_BC,F1,Dummy_P1,Dummy_R1,Dummy_R11,Dummy_R21,R2,P2,P3,Dummy_K,SK,ACK,UT,DS,SERVUT,Dummy_Y,Dummy_Y1,N_HSP,N_DOC,Req_Id,Treat_Type,Serial_No,TS,SID,R1,R11,Y,Y1) :=
 state_hsp(B,A,C,G,ID_A,ID_B,ID_C,Kb,Ka,Kc,K_BC,F1,1,Dummy_P1,Dummy_R1,Dummy_R11,Dummy_R21,R2,P2,P3,Dummy_K,SK,ACK,UT,DS,SERVUT,Dummy_Y,Dummy_Y1,N_HSP,N_DOC,Req_Id,Treat_Type,Serial_No,TS,SID).
 iknows(pair(ID_A,crypt(Kb,pair(R11,pair(R1,pair(DS,UT))))))
=[exists Y1,Y]=>
 state_hsp(B,A,C,G,ID_A,ID_B,ID_C,Kb,Ka,Kc,K_BC,F1,3,exp(G,Y),R1,R11,exp(G,Y1),R2,P2,P3,exp(R11,Y1),SK,ACK,UT,DS,SERVUT,Y,Y1,N_HSP,N_DOC,Req_Id,Treat_Type,Serial_No,TS,SID).
 iknows(pair(ID_B,scrypt(K_BC,pair(ID_A,pair(R1,exp(G,Y))))))

step step_5 (B,A,C,G,ID_A,ID_B,ID_C,Kb,Ka,Kc,K_BC,F1,P1,R1,R11,R21,Dummy_R2,Dummy_P2,P3,K,SK,ACK,UT,DS,SERVUT,Y,Y1,Dummy_N_HSP,Dummy_N_DOC,Req_Id,Treat_Type,Serial_No,TS,SID,R2,P2,N_HSP,N_DOC) :=
 state_hsp(B,A,C,G,ID_A,ID_B,ID_C,Kb,Ka,Kc,K_BC,F1,3,P1,R1,R11,R21,Dummy_R2,Dummy_P2,P3,K,SK,ACK,UT,DS,SERVUT,Y,Y1,Dummy_N_HSP,Dummy_N_DOC,Req_Id,Treat_Type,Serial_No,TS,SID).
 iknows(pair(ID_A,pair(ID_C,pair(scrypt(K_BC,pair(ID_B,pair(R2,P2))),scrypt(SK,N_DOC)))))
=[exists N_HSP]=>
 state_hsp(B,A,C,G,ID_A,ID_B,ID_C,Kb,Ka,Kc,K_BC,F1,5,P1,R1,R11,R21,R2,P2,P3,K,SK,ACK,UT,DS,SERVUT,Y,Y1,N_HSP,N_DOC,Req_Id,Treat_Type,Serial_No,TS,SID).
 iknows(pair(ID_B,pair(R21,scrypt(K,N_HSP))))

step step_6 (B,A,C,G,ID_A,ID_B,ID_C,Kb,Ka,Kc,K_BC,F1,P1,R1,R11,R21,R2,P2,Dummy_P3,Dummy_K,Dummy_SK,ACK,UT,DS,SERVUT,Y,Y1,Dummy_N_HSP,N_DOC,Req_Id,Treat_Type,Serial_No,TS,SID,K,N_HSP) :=
 state_hsp(B,A,C,G,ID_A,ID_B,ID_C,Kb,Ka,Kc,K_BC,F1,5,P1,R1,R11,R21,R2,P2,Dummy_P3,Dummy_K,Dummy_SK,ACK,UT,DS,SERVUT,Y,Y1,Dummy_N_HSP,N_DOC,Req_Id,Treat_Type,Serial_No,TS,SID).
 iknows(scrypt(K,N_HSP))
 =>
 state_hsp(B,A,C,G,ID_A,ID_B,ID_C,Kb,Ka,Kc,K_BC,F1,8,P1,R1,R11,R21,R2,P2,exp(R2,Y),K,exp(P2,Y),ACK,UT,DS,SERVUT,Y,Y1,N_HSP,N_DOC,Req_Id,Treat_Type,Serial_No,TS,SID).
 iknows(pair(scrypt(Dummy_K,pair(ID_C,exp(R2,Y))),scrypt(exp(P2,Y),N_DOC)))

step step_7 (B,A,C,G,ID_A,ID_B,ID_C,Kb,Ka,Kc,K_BC,F1,P1,R1,R11,R21,R2,P2,P3,K,SK,Dummy_ACK,UT,DS,Dummy_SERVUT,Y,Y1,N_HSP,N_DOC,Dummy_Req_Id,Dummy_Treat_Type,Dummy_Serial_No,Dummy_TS,SID,ACK,Req_Id,Treat_Type,Serial_No,TS) :=
 state_hsp(B,A,C,G,ID_A,ID_B,ID_C,Kb,Ka,Kc,K_BC,F1,8,P1,R1,R11,R21,R2,P2,P3,K,SK,Dummy_ACK,UT,DS,Dummy_SERVUT,Y,Y1,N_HSP,N_DOC,Dummy_Req_Id,Dummy_Treat_Type,Dummy_Serial_No,Dummy_TS,SID).
 iknows(ACK)
=[exists TS,Serial_No,Treat_Type,Req_Id]=>
 state_hsp(B,A,C,G,ID_A,ID_B,ID_C,Kb,Ka,Kc,K_BC,F1,12,P1,R1,R11,R21,R2,P2,P3,K,SK,ACK,UT,DS,pair(Req_Id,pair(UT,pair(Treat_Type,pair(Serial_No,pair(Dummy_TS,pair(ID_A,pair(ID_C,pair(DS,TS)))))))),Y,Y1,N_HSP,N_DOC,Req_Id,Treat_Type,Serial_No,TS,SID).
 iknows(scrypt(SK,pair(pair(Req_Id,pair(UT,pair(Treat_Type,pair(Serial_No,pair(Dummy_TS,pair(ID_A,pair(ID_C,pair(DS,TS)))))))),crypt(inv(Kb),apply(F1,pair(Req_Id,pair(UT,pair(Treat_Type,pair(Serial_No,pair(Dummy_TS,pair(ID_A,pair(ID_C,pair(DS,TS)))))))))))))

step step_8 (C,A,B,G,ID_A,ID_B,ID_C,Kc,Ka,Kb,K_BC,F1,Dummy_R1,Dummy_P1,Dummy_R2,Dummy_P2,Dummy_SK,ACK,SERVUT,Dummy_Z,Dummy_N_DOC,SID,R1,P1,Z,N_DOC) :=
 state_doc(C,A,B,G,ID_A,ID_B,ID_C,Kc,Ka,Kb,K_BC,F1,2,Dummy_R1,Dummy_P1,Dummy_R2,Dummy_P2,Dummy_SK,ACK,SERVUT,Dummy_Z,Dummy_N_DOC,SID).
 iknows(pair(ID_B,scrypt(K_BC,pair(ID_A,pair(R1,P1)))))
=[exists N_DOC,Z]=>
 state_doc(C,A,B,G,ID_A,ID_B,ID_C,Kc,Ka,Kb,K_BC,F1,7,R1,P1,exp(G,Z),exp(R1,Z),exp(P1,Z),ACK,SERVUT,Z,N_DOC,SID).
 iknows(pair(ID_A,pair(ID_C,pair(scrypt(K_BC,pair(ID_B,pair(exp(G,Z),exp(R1,Z)))),scrypt(Dummy_SK,N_DOC)))))

step step_9 (C,A,B,G,ID_A,ID_B,ID_C,Kc,Ka,Kb,K_BC,F1,R1,P1,R2,P2,Dummy_SK,Dummy_ACK,SERVUT,Z,Dummy_N_DOC,SID,ACK) :=
 state_doc(C,A,B,G,ID_A,ID_B,ID_C,Kc,Ka,Kb,K_BC,F1,7,R1,P1,R2,P2,Dummy_SK,Dummy_ACK,SERVUT,Z,Dummy_N_DOC,SID).
 iknows(ID_A)
=[exists ACK]=>
 state_doc(C,A,B,G,ID_A,ID_B,ID_C,Kc,Ka,Kb,K_BC,F1,10,R1,P1,R2,P2,Dummy_SK,ACK,SERVUT,Z,Dummy_N_DOC,SID).
 iknows(ACK)

step step_10 (C,A,B,G,ID_A,ID_B,ID_C,Kc,Ka,Kb,K_BC,F1,R1,P1,R2,P2,SK,ACK,Dummy_SERVUT,Z,N_DOC,SID,SERVUT) :=
 state_doc(C,A,B,G,ID_A,ID_B,ID_C,Kc,Ka,Kb,K_BC,F1,10,R1,P1,R2,P2,SK,ACK,Dummy_SERVUT,Z,N_DOC,SID).
 iknows(scrypt(SK,pair(SERVUT,crypt(inv(Kb),apply(F1,SERVUT)))))
 =>
 state_doc(C,A,B,G,ID_A,ID_B,ID_C,Kc,Ka,Kb,K_BC,F1,11,R1,P1,R2,P2,SK,ACK,SERVUT,Z,N_DOC,SID)


section properties:

property secrecy_of_sec_ifd_dhvalue (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_ifd_dhvalue,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))


section attack_states:

attack_state secrecy_of_sec_ifd_dhvalue (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_ifd_dhvalue,ASGoal) &
 not(contains(i,ASGoal))

