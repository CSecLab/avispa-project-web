%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfileiPIKO3

section signature:

state_server: agent * agent * agent * hash_func * hash_func * hash_func * symmetric_key * text * nat * text * text * message * message * message * message * message * set(agent) * set(agent) * nat -> fact
state_tag: agent * agent * agent * hash_func * hash_func * hash_func * symmetric_key * text * nat * text * text * message * message * message * message * message * nat -> fact
state_reader: agent * agent * agent * hash_func * hash_func * nat * text * message * message * nat -> fact


section types:

tidnew, knew, tag_server_hr, server_tag_hl: protocol_id
set_147, set_146, set_143, set_142, set_139, set_138, set_131, set_130: set
k, ki, K, Dummy_K: symmetric_key
12, 10, 8, State, 7, 17, 5, 16, 13, 11, 9, SID, 6, 3, 4, 2, 1, 0, Dummy_State, SID2, SID1: nat
Set_52, Set_50, Dummy_Set_52, Dummy_Set_50, ASGoal: set(agent)
A1, A2, H, TIDNew, KNew, Dummy_KNew, Dummy_TIDNew, Dummy_H, start, Dummy_A2, Dummy_A1, dummy_msg, MGoal: message
R1, R2, TIDOld, Dummy_TIDOld, Dummy_R2, Dummy_R1, dummy_nonce, tidold, tidi: text
a, s, b, A, S, B, A2Goal, A1Goal, i: agent
hl, Hash, HL, HR, Dummy_HR, Dummy_HL, h, hr: hash_func


section inits:

initial_state init1 := 
 iknows(start).
 iknows(a).
 iknows(s).
 iknows(b).
 iknows(h).
 iknows(ki).
 iknows(tidi).
 iknows(i).
 state_reader(a,s,b,hl,hr,0,dummy_nonce,dummy_msg,dummy_msg,3).
 state_tag(b,a,s,h,hl,hr,k,tidold,8,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,4).
 state_server(s,a,b,h,hl,hr,k,tidold,1,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,set_130,set_131,5).
 state_reader(a,s,b,hl,hr,0,dummy_nonce,dummy_msg,dummy_msg,7).
 state_tag(b,a,s,h,hl,hr,k,tidold,8,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,8).
 state_server(s,a,b,h,hl,hr,k,tidold,1,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,set_138,set_139,9).
 state_reader(a,s,i,hl,hr,0,dummy_nonce,dummy_msg,dummy_msg,11).
 state_server(s,a,i,h,hl,hr,ki,tidi,1,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,set_142,set_143,13).
 state_tag(b,i,s,h,hl,hr,ki,tidi,8,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,16).
 state_server(s,i,b,h,hl,hr,ki,tidi,1,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,set_146,set_147,17)


section rules:

step step_0 (A,S,B,HL,HR,Dummy_R1,A1,A2,SID,R1) :=
 state_reader(A,S,B,HL,HR,0,Dummy_R1,A1,A2,SID).
 iknows(start)
=[exists R1]=>
 state_reader(A,S,B,HL,HR,2,R1,A1,A2,SID).
 iknows(R1)

step step_1 (A,S,B,Dummy_HL,HR,R1,Dummy_A1,Dummy_A2,SID,HL,A1,A2) :=
 state_reader(A,S,B,Dummy_HL,HR,2,R1,Dummy_A1,Dummy_A2,SID).
 iknows(pair(A1,pair(A2,HL)))
 =>
 state_reader(A,S,B,HL,HR,4,R1,A1,A2,SID).
 iknows(pair(R1,pair(A1,pair(A2,HL))))

step step_2 (A,S,B,HL,Dummy_HR,R1,A1,A2,SID,HR) :=
 state_reader(A,S,B,HL,Dummy_HR,4,R1,A1,A2,SID).
 iknows(HR)
 =>
 state_reader(A,S,B,HL,HR,6,R1,A1,A2,SID).
 iknows(HR)

step step_3 (B,A,S,Hash,HL,HR,K,TIDOld,Dummy_R1,Dummy_R2,Dummy_A1,Dummy_A2,Dummy_H,TIDNew,KNew,SID,R1,R2) :=
 state_tag(B,A,S,Hash,HL,HR,K,TIDOld,8,Dummy_R1,Dummy_R2,Dummy_A1,Dummy_A2,Dummy_H,TIDNew,KNew,SID).
 iknows(R1)
=[exists R2]=>
 state_tag(B,A,S,Hash,HL,HR,K,TIDOld,10,R1,R2,xor(apply(Hash,xor(K,R1)),R2),xor(K,xor(R2,TIDOld)),apply(Hash,pair(TIDOld,pair(R1,apply(Hash,xor(K,xor(R2,TIDOld)))))),TIDNew,KNew,SID).
 iknows(pair(xor(apply(Hash,xor(K,R1)),R2),pair(xor(K,xor(R2,TIDOld)),HL))).
 witness(B,S,server_tag_hl,HL)

step step_4 (B,A,S,Hash,HL,HR,Dummy_K,Dummy_TIDOld,R1,R2,A1,A2,H,Dummy_TIDNew,Dummy_KNew,SID) :=
 state_tag(B,A,S,Hash,HL,HR,Dummy_K,Dummy_TIDOld,10,R1,R2,A1,A2,H,Dummy_TIDNew,Dummy_KNew,SID).
 iknows(HR)
 =>
 state_tag(B,A,S,Hash,HL,HR,apply(Hash,pair(Dummy_K,pair(R1,R2))),xor(Dummy_TIDOld,xor(R1,R2)),12,R1,R2,A1,A2,H,xor(Dummy_TIDOld,xor(R1,R2)),apply(Hash,pair(Dummy_K,pair(R1,R2))),SID).
 request(B,S,tag_server_hr,HR,SID)

step step_5 (S,A,B,Hash,HL,HR,K,Dummy_TIDOld,R1,Dummy_R2,Dummy_A1,Dummy_A2,Dummy_H,TIDNew,KNew,Set_50,Set_52,SID,A1,A2) :=
 state_server(S,A,B,Hash,HL,HR,K,Dummy_TIDOld,1,R1,Dummy_R2,Dummy_A1,Dummy_A2,Dummy_H,TIDNew,KNew,Set_50,Set_52,SID).
 iknows(pair(R1,pair(A1,pair(A2,HL))))
 =>
 state_server(S,A,B,Hash,HL,HR,K,xor(A2,xor(K,xor(A1,apply(Hash,xor(K,R1))))),3,R1,xor(A1,apply(Hash,xor(K,R1))),A1,A2,apply(Hash,pair(xor(A2,xor(K,xor(A1,apply(Hash,xor(K,R1))))),pair(R1,apply(Hash,xor(K,xor(xor(A1,apply(Hash,xor(K,R1))),xor(A2,xor(K,xor(A1,apply(Hash,xor(K,R1))))))))))),TIDNew,KNew,Set_50,Set_52,SID)

step step_6 (S,A,B,Hash,HL,HR,K,TIDOld,R1,R2,A1,A2,H,TIDNew,KNew,Set_50,Set_52,SID) :=
 state_server(S,A,B,Hash,HL,HR,K,TIDOld,3,R1,R2,A1,A2,H,TIDNew,KNew,Set_50,Set_52,SID).
 request(S,B,server_tag_hl,HL,SID)
 =>
 state_server(S,A,B,Hash,HL,HR,K,TIDOld,5,R1,R2,A1,A2,H,TIDNew,KNew,Set_50,Set_52,SID).
 iknows(HR)

step step_7 (S,A,B,Hash,HL,HR,Dummy_K,Dummy_TIDOld,R1,R2,A1,A2,H,Dummy_TIDNew,Dummy_KNew,Dummy_Set_50,Dummy_Set_52,SID) :=
 state_server(S,A,B,Hash,HL,HR,Dummy_K,Dummy_TIDOld,5,R1,R2,A1,A2,H,Dummy_TIDNew,Dummy_KNew,Dummy_Set_50,Dummy_Set_52,SID).
 witness(S,B,tag_server_hr,HR)
 =>
 state_server(S,A,B,Hash,HL,HR,apply(Hash,pair(Dummy_K,pair(R1,R2))),xor(Dummy_TIDOld,xor(R1,R2)),7,R1,R2,A1,A2,H,xor(Dummy_TIDOld,xor(R1,R2)),apply(Hash,pair(Dummy_K,pair(R1,R2))),Dummy_Set_50,Dummy_Set_52,SID).
 contains(S,Dummy_Set_50).
 contains(B,Dummy_Set_50).
 contains(S,Dummy_Set_52).
 contains(B,Dummy_Set_52)


section properties:

property secrecy_of_tidnew (MGoal,ASGoal) :=
 [] ((secret(MGoal,tidnew,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_knew (MGoal,ASGoal) :=
 [] ((secret(MGoal,knew,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property authentication_on_server_tag_hl (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,server_tag_hl,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,server_tag_hl,MGoal))
     /\ ((request(A1Goal,A2Goal,server_tag_hl,MGoal,SID1)
           /\ request(A1Goal,A2Goal,server_tag_hl,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_tag_server_hr (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,tag_server_hr,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,tag_server_hr,MGoal))
     /\ ((request(A1Goal,A2Goal,tag_server_hr,MGoal,SID1)
           /\ request(A1Goal,A2Goal,tag_server_hr,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state secrecy_of_tidnew (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,tidnew,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_knew (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,knew,ASGoal) &
 not(contains(i,ASGoal))

attack_state authentication_on_server_tag_hl (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,server_tag_hl,MGoal,SID) &
 not(witness(A2Goal,A1Goal,server_tag_hl,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_server_tag_hl (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,server_tag_hl,MGoal,SID1).
 request(A1Goal,A2Goal,server_tag_hl,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_tag_server_hr (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,tag_server_hr,MGoal,SID) &
 not(witness(A2Goal,A1Goal,tag_server_hr,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_tag_server_hr (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,tag_server_hr,MGoal,SID1).
 request(A1Goal,A2Goal,tag_server_hr,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

