%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfile3dw0zi

section signature:

state_acq: agent * agent * agent * agent * public_key * public_key * public_key * public_key * symmetric_key * hash_func * nat * text * crypt(inv(public_key),pair(text,pair(text,pair(text,text)))) * nat -> fact
state_issuer: agent * agent * agent * agent * public_key * public_key * public_key * public_key * symmetric_key * hash_func * nat * text * text * text * text * crypt(inv(public_key),pair(text,pair(text,text))) * crypt(inv(public_key),pair(text,text)) * crypt(inv(public_key),pair(text,pair(text,pair(text,text)))) * nat -> fact
state_payee: agent * agent * agent * agent * public_key * public_key * public_key * public_key * symmetric_key * hash_func * nat * text * text * text * crypt(inv(public_key),pair(text,text)) * crypt(inv(public_key),pair(text,pair(text,pair(text,text)))) * set(agent) * nat -> fact
state_payer: agent * agent * agent * agent * public_key * public_key * public_key * public_key * symmetric_key * hash_func * nat * text * text * text * text * text * text * text * crypt(inv(public_key),pair(text,pair(text,text))) * crypt(inv(public_key),pair(text,text)) * crypt(inv(public_key),pair(text,pair(text,pair(text,text)))) * nat -> fact


section types:

set_180, set_176, set_172, set_167, set_158: set
Dummy_Set_59, Set_59, ASGoal: set(agent)
MGoal, start: message
id: protocol_id
V: crypt(inv(public_key),pair(text,text))
M, Dummy_M: crypt(inv(public_key),pair(text,pair(text,text)))
IDb, R, J, P, T, Dummy_R, IDc, dummy_nonce, IDa: text
H, h: hash_func
Kbd, Kac, kac, kbd, kic, kid, kai, kbi: symmetric_key
PA, PB, PC, PD, dummy_pk, pa, pb, pc, pd: public_key
A, B, C, D, A2Goal, A1Goal, a, b, c, d, i: agent
State, 7, 5, 25, 24, 23, 21, 19, 18, 16, 15, 13, 11, 10, 9, 6, SID, 4, Dummy_State, 3, SID2, SID1, 2, 1, 0, 12: nat
CHECK, Dummy_CHECK: crypt(inv(public_key),pair(text,pair(text,pair(text,text))))


section inits:

initial_state init1 := 
 iknows(start).
 iknows(a).
 iknows(b).
 iknows(c).
 iknows(d).
 iknows(kai).
 iknows(kic).
 iknows(kbi).
 iknows(kid).
 iknows(h).
 iknows(i).
 state_payer(a,b,c,d,pa,pb,pc,pd,kac,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,crypt(inv(dummy_pk),pair(dummy_nonce,pair(dummy_nonce,dummy_nonce))),crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce)),crypt(inv(dummy_pk),pair(dummy_nonce,pair(dummy_nonce,pair(dummy_nonce,dummy_nonce)))),3).
 state_payee(b,a,c,d,pa,pb,pc,pd,kbd,h,1,dummy_nonce,dummy_nonce,dummy_nonce,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce)),crypt(inv(dummy_pk),pair(dummy_nonce,pair(dummy_nonce,pair(dummy_nonce,dummy_nonce)))),set_158,4).
 state_issuer(c,a,b,d,pa,pb,pc,pd,kac,h,5,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,crypt(inv(dummy_pk),pair(dummy_nonce,pair(dummy_nonce,dummy_nonce))),crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce)),crypt(inv(dummy_pk),pair(dummy_nonce,pair(dummy_nonce,pair(dummy_nonce,dummy_nonce)))),5).
 state_acq(d,a,b,c,pa,pb,pc,pd,kbd,h,10,dummy_nonce,crypt(inv(dummy_pk),pair(dummy_nonce,pair(dummy_nonce,pair(dummy_nonce,dummy_nonce)))),6).
 state_payee(b,i,c,d,pa,pb,pc,pd,kbd,h,1,dummy_nonce,dummy_nonce,dummy_nonce,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce)),crypt(inv(dummy_pk),pair(dummy_nonce,pair(dummy_nonce,pair(dummy_nonce,dummy_nonce)))),set_167,9).
 state_issuer(c,i,b,d,pa,pb,pc,pd,kic,h,5,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,crypt(inv(dummy_pk),pair(dummy_nonce,pair(dummy_nonce,dummy_nonce))),crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce)),crypt(inv(dummy_pk),pair(dummy_nonce,pair(dummy_nonce,pair(dummy_nonce,dummy_nonce)))),10).
 state_acq(d,i,b,c,pa,pb,pc,pd,kbd,h,10,dummy_nonce,crypt(inv(dummy_pk),pair(dummy_nonce,pair(dummy_nonce,pair(dummy_nonce,dummy_nonce)))),11).
 state_payer(a,i,c,d,pa,pb,pc,pd,kac,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,crypt(inv(dummy_pk),pair(dummy_nonce,pair(dummy_nonce,dummy_nonce))),crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce)),crypt(inv(dummy_pk),pair(dummy_nonce,pair(dummy_nonce,pair(dummy_nonce,dummy_nonce)))),13).
 state_issuer(c,a,i,d,pa,pb,pc,pd,kac,h,5,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,crypt(inv(dummy_pk),pair(dummy_nonce,pair(dummy_nonce,dummy_nonce))),crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce)),crypt(inv(dummy_pk),pair(dummy_nonce,pair(dummy_nonce,pair(dummy_nonce,dummy_nonce)))),15).
 state_acq(d,a,i,c,pa,pb,pc,pd,kid,h,10,dummy_nonce,crypt(inv(dummy_pk),pair(dummy_nonce,pair(dummy_nonce,pair(dummy_nonce,dummy_nonce)))),16).
 state_payer(a,b,i,d,pa,pb,pc,pd,kai,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,crypt(inv(dummy_pk),pair(dummy_nonce,pair(dummy_nonce,dummy_nonce))),crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce)),crypt(inv(dummy_pk),pair(dummy_nonce,pair(dummy_nonce,pair(dummy_nonce,dummy_nonce)))),18).
 state_payee(b,a,i,d,pa,pb,pc,pd,kbd,h,1,dummy_nonce,dummy_nonce,dummy_nonce,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce)),crypt(inv(dummy_pk),pair(dummy_nonce,pair(dummy_nonce,pair(dummy_nonce,dummy_nonce)))),set_176,19).
 state_acq(d,a,b,i,pa,pb,pc,pd,kbd,h,10,dummy_nonce,crypt(inv(dummy_pk),pair(dummy_nonce,pair(dummy_nonce,pair(dummy_nonce,dummy_nonce)))),21).
 state_payer(a,b,c,i,pa,pb,pc,pd,kac,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,crypt(inv(dummy_pk),pair(dummy_nonce,pair(dummy_nonce,dummy_nonce))),crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce)),crypt(inv(dummy_pk),pair(dummy_nonce,pair(dummy_nonce,pair(dummy_nonce,dummy_nonce)))),23).
 state_payee(b,a,c,i,pa,pb,pc,pd,kbi,h,1,dummy_nonce,dummy_nonce,dummy_nonce,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce)),crypt(inv(dummy_pk),pair(dummy_nonce,pair(dummy_nonce,pair(dummy_nonce,dummy_nonce)))),set_180,24).
 state_issuer(c,a,b,i,pa,pb,pc,pd,kac,h,5,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,crypt(inv(dummy_pk),pair(dummy_nonce,pair(dummy_nonce,dummy_nonce))),crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce)),crypt(inv(dummy_pk),pair(dummy_nonce,pair(dummy_nonce,pair(dummy_nonce,dummy_nonce)))),25)


section rules:

step step_0 (A,B,C,D,PA,PB,PC,PD,Kac,H,R,J,P,T,IDc,IDb,IDa,M,V,CHECK,SID) :=
 state_payer(A,B,C,D,PA,PB,PC,PD,Kac,H,0,R,J,P,T,IDc,IDb,IDa,M,V,CHECK,SID).
 iknows(start)
 =>
 state_payer(A,B,C,D,PA,PB,PC,PD,Kac,H,2,R,J,P,T,IDc,IDb,IDa,M,V,CHECK,SID).
 iknows(pair(A,pair(B,pair(PA,IDc))))

step step_1 (A,B,C,D,PA,PB,PC,PD,Kac,H,R,J,P,T,IDc,IDb,IDa,Dummy_M,V,CHECK,SID) :=
 state_payer(A,B,C,D,PA,PB,PC,PD,Kac,H,2,R,J,P,T,IDc,IDb,IDa,Dummy_M,V,CHECK,SID).
 iknows(pair(A,pair(B,pair(PB,crypt(PC,R)))))
 =>
 state_payer(A,B,C,D,PA,PB,PC,PD,Kac,H,4,R,J,P,T,IDc,IDb,IDa,crypt(inv(PA),pair(crypt(PC,R),pair(IDb,J))),V,CHECK,SID).
 iknows(pair(A,pair(B,crypt(PC,pair(Dummy_M,pair(PA,apply(H,pair(Dummy_M,Kac)))))))).
 witness(A,C,id,apply(H,pair(Dummy_M,Kac)))

step step_2 (A,B,C,D,PA,PB,PC,PD,Kac,H,R,J,P,T,IDc,IDb,IDa,M,V,Dummy_CHECK,SID) :=
 state_payer(A,B,C,D,PA,PB,PC,PD,Kac,H,4,R,J,P,T,IDc,IDb,IDa,M,V,Dummy_CHECK,SID).
 iknows(pair(A,pair(B,V)))
 =>
 state_payer(A,B,C,D,PA,PB,PC,PD,Kac,H,6,R,J,P,T,IDc,IDb,IDa,M,V,crypt(inv(PA),pair(P,pair(T,pair(J,apply(H,pair(Kac,IDa)))))),SID).
 iknows(pair(A,pair(B,crypt(PB,pair(V,Dummy_CHECK)))))

step step_3 (B,A,C,D,PA,PB,PC,PD,Kbd,H,IDc,Dummy_R,J,V,CHECK,Dummy_Set_59,SID,R) :=
 state_payee(B,A,C,D,PA,PB,PC,PD,Kbd,H,1,IDc,Dummy_R,J,V,CHECK,Dummy_Set_59,SID).
 iknows(pair(A,pair(B,pair(PA,IDc))))
=[exists R]=>
 state_payee(B,A,C,D,PA,PB,PC,PD,Kbd,H,3,IDc,R,J,V,CHECK,Dummy_Set_59,SID).
 iknows(pair(A,pair(B,pair(crypt(PC,Dummy_R),PB)))).
 secret(Dummy_R,id,Dummy_Set_59).
 contains(B,Dummy_Set_59).
 contains(C,Dummy_Set_59)

step step_4 (B,A,C,D,PA,PB,PC,PD,Kbd,H,IDc,R,J,V,CHECK,Set_59,SID) :=
 state_payee(B,A,C,D,PA,PB,PC,PD,Kbd,H,3,IDc,R,J,V,CHECK,Set_59,SID).
 iknows(pair(A,pair(B,crypt(PB,pair(V,CHECK)))))
 =>
 state_payee(B,A,C,D,PA,PB,PC,PD,Kbd,H,9,IDc,R,J,V,CHECK,Set_59,SID).
 request(C,B,id,apply(H,pair(R,J)),SID).
 iknows(pair(B,pair(D,crypt(PD,pair(CHECK,apply(H,pair(CHECK,Kbd))))))).
 witness(B,D,id,apply(H,pair(CHECK,Kbd)))

step step_5 (C,A,B,D,PA,PB,PC,PD,Kac,H,R,J,P,T,M,V,CHECK,SID) :=
 state_issuer(C,A,B,D,PA,PB,PC,PD,Kac,H,5,R,J,P,T,M,V,CHECK,SID).
 iknows(pair(A,pair(B,crypt(PC,pair(M,pair(PA,apply(H,pair(M,Kac)))))))).
 request(C,A,id,apply(H,pair(M,Kac)),SID)
 =>
 state_issuer(C,A,B,D,PA,PB,PC,PD,Kac,H,7,R,J,P,T,M,V,CHECK,SID).
 iknows(pair(A,pair(B,crypt(inv(PC),pair(apply(H,pair(R,J)),PA)))))

step step_6 (D,A,B,C,PA,PB,PC,PD,Kbd,H,IDb,CHECK,SID) :=
 state_acq(D,A,B,C,PA,PB,PC,PD,Kbd,H,10,IDb,CHECK,SID).
 iknows(pair(A,pair(B,crypt(PD,pair(CHECK,apply(H,pair(CHECK,Kbd)))))))
 =>
 state_acq(D,A,B,C,PA,PB,PC,PD,Kbd,H,12,IDb,CHECK,SID).
 request(D,B,id,apply(H,pair(CHECK,Kbd)),SID).
 iknows(pair(A,pair(B,crypt(inv(PD),pair(CHECK,IDb)))))


section properties:

property secrecy_of_id (MGoal,ASGoal) :=
 [] ((secret(MGoal,id,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property authentication_on_id (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,id,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,id,MGoal))
     /\ ((request(A1Goal,A2Goal,id,MGoal,SID1)
           /\ request(A1Goal,A2Goal,id,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state secrecy_of_id (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,id,ASGoal) &
 not(contains(i,ASGoal))

attack_state authentication_on_id (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,id,MGoal,SID) &
 not(witness(A2Goal,A1Goal,id,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_id (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,id,MGoal,SID1).
 request(A1Goal,A2Goal,id,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

