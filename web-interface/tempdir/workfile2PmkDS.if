%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfile2PmkDS

section signature:

state_tag: agent * agent * agent * symmetric_key * hash_func * text * nat * text * text * text * text * text * text * text * set(agent) * set(agent) * set(agent) * set(agent) * nat -> fact
state_server: agent * agent * agent * symmetric_key * hash_func * text * nat * text * text * text * text * text * text * text * set(agent) * set(agent) * set(agent) * set(agent) * nat -> fact
state_reader: agent * agent * agent * nat * text * text * text * text * nat -> fact


section types:

sec_id2, sec_k2, sec_idn2, sec_kn2, a3, a2, sec_id1, sec_k1, sec_idn1, sec_kn1: protocol_id
h, H: hash_func
k, ki, K, Dummy_K: symmetric_key
set_170, set_169, set_168, set_167, set_165, set_164, set_163, set_162, set_161, set_160, set_159, set_158, set_156, set_155, set_154, set_153, set_150, set_149, set_148, set_147, set_145, set_144, set_143, set_142, set_134, set_133, set_132, set_131, set_119, set_118, set_117, set_116: set
id, idi, A1, A2, A3, IDN, KN, R1, R2, ID, Dummy_KN, Dummy_IDN, Dummy_ID, Dummy_R2, Dummy_A3, Dummy_A2, Dummy_A1, Dummy_R1, dummy_nonce: text
17, 16, State, 12, 11, 9, 8, 7, 5, SID, 3, 2, 4, 1, 0, Dummy_State, SID2, SID1: nat
a, s, b, B, A, S, A2Goal, A1Goal, i: agent
Set_76, Set_75, Set_74, Set_73, Set_51, Set_50, Set_49, Set_47, Dummy_Set_76, Dummy_Set_75, Dummy_Set_74, Dummy_Set_73, Dummy_Set_51, Dummy_Set_50, Dummy_Set_49, Dummy_Set_47, ASGoal: set(agent)
start, MGoal: message


section inits:

initial_state init1 := 
 iknows(start).
 iknows(a).
 iknows(s).
 iknows(b).
 iknows(h).
 iknows(ki).
 iknows(idi).
 iknows(i).
 state_reader(a,s,b,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,3).
 state_server(s,a,b,k,h,id,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_116,set_117,set_118,set_119,4).
 state_tag(b,a,s,k,h,id,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_131,set_132,set_133,set_134,5).
 state_reader(a,s,b,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,7).
 state_server(s,a,b,k,h,id,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_142,set_143,set_144,set_145,8).
 state_tag(b,a,s,k,h,id,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_147,set_148,set_149,set_150,9).
 state_reader(a,s,i,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,11).
 state_server(s,a,i,ki,h,idi,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_153,set_154,set_155,set_156,12).
 state_server(s,i,b,ki,h,idi,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_162,set_163,set_164,set_165,16).
 state_tag(b,i,s,ki,h,idi,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_167,set_168,set_169,set_170,17)


section rules:

step step_0 (A,S,B,Dummy_R1,A1,A2,A3,SID,R1) :=
 state_reader(A,S,B,0,Dummy_R1,A1,A2,A3,SID).
 iknows(start)
=[exists R1]=>
 state_reader(A,S,B,1,R1,A1,A2,A3,SID).
 iknows(R1)

step step_1 (A,S,B,R1,Dummy_A1,Dummy_A2,A3,SID,A1,A2) :=
 state_reader(A,S,B,1,R1,Dummy_A1,Dummy_A2,A3,SID).
 iknows(pair(A1,A2))
 =>
 state_reader(A,S,B,2,R1,A1,A2,A3,SID).
 iknows(pair(R1,pair(A1,A2)))

step step_2 (A,S,B,R1,A1,A2,Dummy_A3,SID,A3) :=
 state_reader(A,S,B,2,R1,A1,A2,Dummy_A3,SID).
 iknows(A3)
 =>
 state_reader(A,S,B,3,R1,A1,A2,A3,SID).
 iknows(A3)

step step_3 (S,A,B,K,H,ID,R1,Dummy_R2,Dummy_A1,Dummy_A2,Dummy_A3,IDN,KN,Set_47,Set_49,Set_50,Set_51,SID,A1) :=
 state_server(S,A,B,K,H,ID,0,R1,Dummy_R2,Dummy_A1,Dummy_A2,Dummy_A3,IDN,KN,Set_47,Set_49,Set_50,Set_51,SID).
 iknows(pair(R1,pair(A1,A2)))
 =>
 state_server(S,A,B,K,H,ID,1,R1,xor(A1,apply(H,xor(K,R1))),A1,apply(H,pair(ID,pair(R1,pair(xor(A1,apply(H,xor(K,R1))),K)))),apply(H,xor(ID,xor(R1,xor(Dummy_R2,K)))),IDN,KN,Set_47,Set_49,Set_50,Set_51,SID).
 request(S,B,a2,apply(H,pair(ID,pair(R1,pair(xor(A1,apply(H,xor(K,R1))),K)))),SID).
 iknows(apply(H,xor(ID,xor(R1,xor(Dummy_R2,K)))))

step step_4 (S,A,B,Dummy_K,H,Dummy_ID,R1,R2,A1,A2,Dummy_A3,Dummy_IDN,Dummy_KN,Dummy_Set_47,Dummy_Set_49,Dummy_Set_50,Dummy_Set_51,SID) :=
 state_server(S,A,B,Dummy_K,H,Dummy_ID,1,R1,R2,A1,A2,Dummy_A3,Dummy_IDN,Dummy_KN,Dummy_Set_47,Dummy_Set_49,Dummy_Set_50,Dummy_Set_51,SID).
 witness(S,B,a3,A3)
 =>
 state_server(S,A,B,apply(H,pair(Dummy_K,pair(R1,R2))),H,apply(H,xor(Dummy_ID,xor(R1,R2))),2,R1,R2,A1,A2,Dummy_A3,apply(H,xor(Dummy_ID,xor(R1,R2))),apply(H,pair(Dummy_K,pair(R1,R2))),Dummy_Set_47,Dummy_Set_49,Dummy_Set_50,Dummy_Set_51,SID).
 secret(Dummy_ID,sec_id1,Dummy_Set_47).
 secret(Dummy_K,sec_k1,Dummy_Set_49).
 secret(apply(H,xor(Dummy_ID,xor(R1,R2))),sec_idn1,Dummy_Set_50).
 secret(apply(H,pair(Dummy_K,pair(R1,R2))),sec_kn1,Dummy_Set_51).
 contains(S,Dummy_Set_47).
 contains(B,Dummy_Set_47).
 contains(S,Dummy_Set_49).
 contains(B,Dummy_Set_49).
 contains(S,Dummy_Set_50).
 contains(B,Dummy_Set_50).
 contains(S,Dummy_Set_51).
 contains(B,Dummy_Set_51)

step step_5 (B,A,S,K,H,ID,Dummy_R1,Dummy_R2,Dummy_A1,Dummy_A2,A3,IDN,KN,Set_73,Set_74,Set_75,Set_76,SID,R1,R2) :=
 state_tag(B,A,S,K,H,ID,0,Dummy_R1,Dummy_R2,Dummy_A1,Dummy_A2,A3,IDN,KN,Set_73,Set_74,Set_75,Set_76,SID).
 iknows(R1)
=[exists R2]=>
 state_tag(B,A,S,K,H,ID,1,R1,R2,xor(apply(H,xor(K,R1)),R2),apply(H,pair(ID,pair(R1,pair(R2,K)))),A3,IDN,KN,Set_73,Set_74,Set_75,Set_76,SID).
 iknows(pair(xor(apply(H,xor(K,R1)),R2),apply(H,pair(ID,pair(R1,pair(R2,K)))))).
 witness(B,S,a2,apply(H,pair(ID,pair(R1,pair(R2,K)))))

step step_6 (B,A,S,Dummy_K,H,Dummy_ID,R1,R2,A1,A2,Dummy_A3,Dummy_IDN,Dummy_KN,Dummy_Set_73,Dummy_Set_74,Dummy_Set_75,Dummy_Set_76,SID) :=
 state_tag(B,A,S,Dummy_K,H,Dummy_ID,1,R1,R2,A1,A2,Dummy_A3,Dummy_IDN,Dummy_KN,Dummy_Set_73,Dummy_Set_74,Dummy_Set_75,Dummy_Set_76,SID).
 iknows(A3)
 =>
 state_tag(B,A,S,apply(H,pair(Dummy_K,pair(R1,R2))),H,apply(H,xor(Dummy_ID,xor(R1,R2))),2,R1,R2,A1,A2,apply(H,xor(Dummy_ID,xor(R1,xor(R2,Dummy_K)))),apply(H,xor(Dummy_ID,xor(R1,R2))),apply(H,pair(Dummy_K,pair(R1,R2))),Dummy_Set_73,Dummy_Set_74,Dummy_Set_75,Dummy_Set_76,SID).
 request(B,S,a3,apply(H,xor(Dummy_ID,xor(R1,xor(R2,Dummy_K)))),SID).
 secret(Dummy_ID,sec_id2,Dummy_Set_73).
 secret(Dummy_K,sec_k2,Dummy_Set_74).
 secret(apply(H,xor(Dummy_ID,xor(R1,R2))),sec_idn2,Dummy_Set_75).
 secret(apply(H,pair(Dummy_K,pair(R1,R2))),sec_kn2,Dummy_Set_76).
 contains(S,Dummy_Set_73).
 contains(B,Dummy_Set_73).
 contains(S,Dummy_Set_74).
 contains(B,Dummy_Set_74).
 contains(S,Dummy_Set_75).
 contains(B,Dummy_Set_75).
 contains(S,Dummy_Set_76).
 contains(B,Dummy_Set_76)


section properties:

property secrecy_of_sec_id1 (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_id1,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_sec_k1 (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_k1,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_sec_id2 (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_id2,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_sec_k2 (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_k2,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_sec_idn1 (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_idn1,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_sec_kn1 (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_kn1,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_sec_idn2 (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_idn2,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_sec_kn2 (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_kn2,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property authentication_on_a2 (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,a2,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,a2,MGoal))
     /\ ((request(A1Goal,A2Goal,a2,MGoal,SID1)
           /\ request(A1Goal,A2Goal,a2,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_a3 (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,a3,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,a3,MGoal))
     /\ ((request(A1Goal,A2Goal,a3,MGoal,SID1)
           /\ request(A1Goal,A2Goal,a3,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state secrecy_of_sec_id1 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_id1,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_sec_k1 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_k1,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_sec_id2 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_id2,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_sec_k2 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_k2,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_sec_idn1 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_idn1,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_sec_kn1 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_kn1,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_sec_idn2 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_idn2,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_sec_kn2 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_kn2,ASGoal) &
 not(contains(i,ASGoal))

attack_state authentication_on_a2 (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,a2,MGoal,SID) &
 not(witness(A2Goal,A1Goal,a2,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_a2 (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,a2,MGoal,SID1).
 request(A1Goal,A2Goal,a2,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_a3 (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,a3,MGoal,SID) &
 not(witness(A2Goal,A1Goal,a3,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_a3 (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,a3,MGoal,SID1).
 request(A1Goal,A2Goal,a3,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

