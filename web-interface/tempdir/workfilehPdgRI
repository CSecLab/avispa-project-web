role reader(R, T: agent,
             
            h:hash,
            SND, RCV: channel(dy))
played by R

def=

  local State: nat,
        R1, R2:text(fresh),
        ID,:text,

init state=0

transition

1. State = 0 /\ R1’ := new() /\ SND(R1')

2. State = 1   /\ Rcv(h(k',R1',R2').xor(R2',ID').h(ID',R1'))
               /\ request(T, R, tag_reader_ID, ID)
               /\ request(T, R, tag_reader_key, k) 

3. State=2 /\ SND(h(ID',R1',R2'))

           /\ request(R, T, tag_reader_ID, ID)
           /\ request(R, T, tag_reader_key, k) 





role tag(T,R: agent,
               h: hash,
               
               Snd,Rcv: channel(dy))
played_by T

def=

  local State   : nat,
        
        R1,R2 : text(fresh)
        ID,k:text

  const sec_k1 : protocol_id

  init  State := 0

  transition

   1. State = 0
      /\ Rcv(R1)
      =|> 
      State' := 1
      /\ R2' := new()
      /\ Snd(h(k,R1',R2').xor(R2',ID').h(ID',R1')) 
      /\ request( T, R, tag_reader_ID,ID')
      /\ secret(ID',id, {T, R, S})
      /\ secret (R2, id2, {T, S})

   2. State = 1
      /\ Rcv(h(ID',R1',R2'))
      
end role


goal

secrecy_of id
secrecy_of id2
authentication_on tag_reader_ID
authentication_on tag_reader_key

end goal