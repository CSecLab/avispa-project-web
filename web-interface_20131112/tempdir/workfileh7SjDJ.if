%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfileh7SjDJ

section signature:

state_target_SN: agent * agent * agent * hash_func * text * text * text * text * symmetric_key * symmetric_key * nat * text * text * text * text * text * text * text * text * text * text * text * text * pair(text,text) * pair(text,text) * pair(text,pair(text,text)) * text * text * text * text * text * text * text * nat -> fact
state_target_GW: agent * agent * agent * hash_func * text * text * text * text * symmetric_key * symmetric_key * nat * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * pair(text,text) * pair(text,pair(text,text)) * text * text * set(agent) * set(agent) * set(agent) * nat -> fact
state_user: agent * agent * agent * hash_func * text * text * text * text * symmetric_key * symmetric_key * nat * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * pair(text,text) * pair(text,text) * text * set(agent) * set(agent) * nat -> fact


section types:

MGoal, start: message
sec_i_pwd, gateway_sensor, sensor_gateway, sec_N_sensor, sec_Ts_sensor, sec_success, sec_i_Pwd, sec_i_NPwd, user_gateway, gateway_user, user_sensor, sensor_user: protocol_id
ck, mk, CK, MK: symmetric_key
set_196, set_195, set_194, set_177, set_176, set_229, set_228, set_227, set_225, set_224, set_221, set_220, set_219, set_217, set_216: set
Dummy_Req_Login, Rec_N_TS, Req_Login, Broad_N_TS, Reg_req, Dummy_Rec_N_TS: pair(text,text)
h, H: hash_func
4, SID, Dummy_State, 3, SID2, SID1, State, 2, 1, 0, 13, 12, 11, 9, 8, 7, 5: nat
Res_Login, Accept_Login, Dummy_Res_Login, Dummy_Accept_Login: pair(text,pair(text,text))
Dummy_Set_50, Dummy_Set_47, ASGoal, Set_102, Set_101, Set_99, Set_50, Set_47, Dummy_Set_102, Dummy_Set_101, Dummy_Set_99: set(agent)
A2Goal, A1Goal, u, gw, sn, U, GW, SN, i: agent
Dummy_T, Dummy_E, Dummy_X, Dummy_N, Dummy_NewPassword, Dummy_Tstamp1, Dummy_Kb, Dummy_R, Dummy_C, Dummy_D, Dummy_Root, Dummy_RNU, Dummy_Path, dummy_nonce, pwd_u_gw, sid, uid, PERMIT_LOGIN, XMA_sn_XMA_u, HMA_u, Tstamp5, Tstamp7, MA_sn, MA_u, Tstamp1, Tstamp3, Tstamp, M, SK, RNU, RNB, Path, Root, N, A, C, Biometric, Pwd, UID, SID_S, NPwd, Reg_resp, Succ_msg, X, E, R, T, SID_G, biometric, NewPassword, Kb, D, Recv_msg, Password, Dummy_SK, SID_U, Dummy_PERMIT_LOGIN, Dummy_M, Dummy_Succ_msg, Dummy_Tstamp: text


section inits:

initial_state init1 := 
 iknows(start).
 iknows(u).
 iknows(gw).
 iknows(sn).
 iknows(h).
 iknows(uid).
 iknows(sid).
 iknows(i).
 state_user(u,gw,sn,h,sid,uid,pwd_u_gw,biometric,mk,ck,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,pair(dummy_nonce,dummy_nonce),pair(dummy_nonce,dummy_nonce),dummy_nonce,set_176,set_177,3).
 state_target_GW(gw,u,sn,h,sid,uid,pwd_u_gw,biometric,mk,ck,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,pair(dummy_nonce,dummy_nonce),pair(dummy_nonce,pair(dummy_nonce,dummy_nonce)),dummy_nonce,dummy_nonce,set_194,set_195,set_196,4).
 state_target_SN(sn,u,gw,h,sid,uid,pwd_u_gw,biometric,mk,ck,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,pair(dummy_nonce,dummy_nonce),pair(dummy_nonce,dummy_nonce),pair(dummy_nonce,pair(dummy_nonce,dummy_nonce)),dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,5).
 state_user(u,gw,sn,h,sid,uid,pwd_u_gw,biometric,mk,ck,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,pair(dummy_nonce,dummy_nonce),pair(dummy_nonce,dummy_nonce),dummy_nonce,set_216,set_217,7).
 state_target_GW(gw,u,sn,h,sid,uid,pwd_u_gw,biometric,mk,ck,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,pair(dummy_nonce,dummy_nonce),pair(dummy_nonce,pair(dummy_nonce,dummy_nonce)),dummy_nonce,dummy_nonce,set_219,set_220,set_221,8).
 state_target_SN(sn,u,gw,h,sid,uid,pwd_u_gw,biometric,mk,ck,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,pair(dummy_nonce,dummy_nonce),pair(dummy_nonce,dummy_nonce),pair(dummy_nonce,pair(dummy_nonce,dummy_nonce)),dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,9).
 state_user(u,gw,sn,h,sid,uid,pwd_u_gw,biometric,mk,ck,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,pair(dummy_nonce,dummy_nonce),pair(dummy_nonce,dummy_nonce),dummy_nonce,set_224,set_225,11).
 state_target_GW(gw,u,sn,h,sid,uid,pwd_u_gw,biometric,mk,ck,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,pair(dummy_nonce,dummy_nonce),pair(dummy_nonce,pair(dummy_nonce,dummy_nonce)),dummy_nonce,dummy_nonce,set_227,set_228,set_229,12).
 state_target_SN(sn,u,gw,h,sid,uid,pwd_u_gw,biometric,mk,ck,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,pair(dummy_nonce,dummy_nonce),pair(dummy_nonce,dummy_nonce),pair(dummy_nonce,pair(dummy_nonce,dummy_nonce)),dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,13)


section rules:

step step_0 (U,GW,SN,H,SID_U,UID,Password,Biometric,MK,CK,SK,Path,RNU,Root,D,C,E,R,Recv_msg,A,Kb,Tstamp1,PERMIT_LOGIN,MA_u,Tstamp7,Reg_req,Req_Login,NewPassword,Dummy_Set_47,Dummy_Set_50,SID) :=
 state_user(U,GW,SN,H,SID_U,UID,Password,Biometric,MK,CK,0,SK,Path,RNU,Root,D,C,E,R,Recv_msg,A,Kb,Tstamp1,PERMIT_LOGIN,MA_u,Tstamp7,Reg_req,Req_Login,NewPassword,Dummy_Set_47,Dummy_Set_50,SID).
 iknows(start)
 =>
 state_user(U,GW,SN,H,SID_U,UID,Password,Biometric,MK,CK,1,SK,Path,RNU,Root,D,C,E,R,Recv_msg,A,Kb,Tstamp1,PERMIT_LOGIN,MA_u,Tstamp7,Reg_req,Req_Login,NewPassword,Dummy_Set_47,Dummy_Set_50,SID).
 iknows(pair(UID,scrypt(CK,pair(Password,Biometric)))).
 secret(Password,sec_i_Pwd,Dummy_Set_47).
 secret(Biometric,biometric,Dummy_Set_50).
 contains(GW,Dummy_Set_47).
 contains(U,Dummy_Set_47).
 contains(GW,Dummy_Set_50).
 contains(U,Dummy_Set_50)

step step_1 (U,GW,SN,H,SID_U,UID,Password,Biometric,MK,CK,SK,Dummy_Path,Dummy_RNU,Dummy_Root,Dummy_D,Dummy_C,E,Dummy_R,Recv_msg,A,Dummy_Kb,Dummy_Tstamp1,PERMIT_LOGIN,MA_u,Tstamp7,Reg_req,Dummy_Req_Login,NewPassword,Set_47,Set_50,SID,Path,RNU,Root,R,Tstamp1) :=
 state_user(U,GW,SN,H,SID_U,UID,Password,Biometric,MK,CK,1,SK,Dummy_Path,Dummy_RNU,Dummy_Root,Dummy_D,Dummy_C,E,Dummy_R,Recv_msg,A,Dummy_Kb,Dummy_Tstamp1,PERMIT_LOGIN,MA_u,Tstamp7,Reg_req,Dummy_Req_Login,NewPassword,Set_47,Set_50,SID).
 iknows(pair(UID,pair(E,Dummy_R)))
=[exists R,RNU,Root,Path,Tstamp1]=>
 state_user(U,GW,SN,H,SID_U,UID,Password,Biometric,MK,CK,2,SK,Path,RNU,Root,xor(R,apply(H,pair(Password,pair(apply(H,Biometric),UID)))),scrypt(apply(H,pair(xor(R,apply(H,pair(Password,pair(apply(H,Biometric),UID)))),Tstamp1)),pair(UID,pair(RNU,pair(Path,Root)))),E,R,Recv_msg,A,apply(H,pair(xor(R,apply(H,pair(Password,pair(apply(H,Biometric),UID)))),Tstamp1)),Tstamp1,PERMIT_LOGIN,MA_u,Tstamp7,Reg_req,pair(scrypt(apply(H,pair(xor(R,apply(H,pair(Password,pair(apply(H,Biometric),UID)))),Tstamp1)),pair(UID,pair(RNU,pair(Path,Root)))),Tstamp1),NewPassword,Set_47,Set_50,SID).
 iknows(pair(UID,pair(scrypt(apply(H,pair(xor(R,apply(H,pair(Password,pair(apply(H,Biometric),UID)))),Tstamp1)),pair(UID,pair(RNU,pair(Path,Root)))),Tstamp1))).
 witness(U,SN,user_sensor,pair(scrypt(apply(H,pair(xor(R,apply(H,pair(Password,pair(apply(H,Biometric),UID)))),Tstamp1)),pair(UID,pair(RNU,pair(Path,Root)))),Tstamp1))

step step_2 (U,GW,SN,H,SID_U,UID,Password,Biometric,MK,CK,SK,Path,RNU,Root,D,C,E,R,Recv_msg,A,Kb,Tstamp1,PERMIT_LOGIN,MA_u,Tstamp7,Reg_req,Req_Login,Dummy_NewPassword,Set_47,Set_50,SID,NewPassword) :=
 state_user(U,GW,SN,H,SID_U,UID,Password,Biometric,MK,CK,2,SK,Path,RNU,Root,D,C,E,R,Recv_msg,A,Kb,Tstamp1,PERMIT_LOGIN,MA_u,Tstamp7,Reg_req,Req_Login,Dummy_NewPassword,Set_47,Set_50,SID).
 iknows(pair(UID,pair(SID_U,scrypt(SK,RNU))))
=[exists NewPassword]=>
 state_user(U,GW,SN,H,SID_U,UID,Password,Biometric,MK,CK,3,SK,Path,RNU,Root,D,C,E,R,Recv_msg,A,Kb,Tstamp1,PERMIT_LOGIN,MA_u,Tstamp7,Reg_req,Req_Login,NewPassword,Set_47,Set_50,SID)

step step_3 (GW,U,SN,H,SID_G,UID,Pwd,Biometric,MK,CK,Path,Root,Dummy_N,M,RNU,RNB,Dummy_X,Dummy_E,Dummy_R,Dummy_T,MA_sn,MA_u,A,C,Tstamp1,Tstamp3,Tstamp5,Dummy_Tstamp,Dummy_Succ_msg,Reg_resp,Broad_N_TS,Accept_Login,NPwd,PERMIT_LOGIN,Dummy_Set_99,Dummy_Set_101,Dummy_Set_102,SID,N,X,Tstamp,Succ_msg) :=
 state_target_GW(GW,U,SN,H,SID_G,UID,Pwd,Biometric,MK,CK,0,Path,Root,Dummy_N,M,RNU,RNB,Dummy_X,Dummy_E,Dummy_R,Dummy_T,MA_sn,MA_u,A,C,Tstamp1,Tstamp3,Tstamp5,Dummy_Tstamp,Dummy_Succ_msg,Reg_resp,Broad_N_TS,Accept_Login,NPwd,PERMIT_LOGIN,Dummy_Set_99,Dummy_Set_101,Dummy_Set_102,SID).
 iknows(pair(UID,pair(Pwd,Biometric)))
=[exists Tstamp,N,X,Succ_msg]=>
 state_target_GW(GW,U,SN,H,SID_G,UID,Pwd,Biometric,MK,CK,1,Path,Root,N,M,RNU,RNB,X,apply(H,pair(apply(H,Biometric),Pwd)),xor(pair(apply(H,pair(UID,X)),apply(H,pair(Pwd,pair(apply(H,Biometric),UID))))),apply(H,Biometric),MA_sn,MA_u,A,C,Tstamp1,Tstamp3,Tstamp5,Tstamp,Succ_msg,Reg_resp,Broad_N_TS,Accept_Login,NPwd,PERMIT_LOGIN,Dummy_Set_99,Dummy_Set_101,Dummy_Set_102,SID).
 secret(Succ_msg,sec_success,Dummy_Set_99).
 iknows(Succ_msg).
 witness(GW,U,gateway_user,Succ_msg).
 request(U,GW,user_gateway,pair(UID,Pwd),SID).
 secret(N,sec_N_sensor,Dummy_Set_101).
 secret(Tstamp,sec_Ts_sensor,Dummy_Set_102).
 iknows(pair(UID,pair(apply(H,pair(apply(H,Biometric),Pwd)),xor(pair(apply(H,pair(UID,X)),apply(H,pair(Pwd,pair(apply(H,Biometric),UID)))))))).
 witness(GW,SN,gateway_sensor,pair(apply(H,pair(apply(H,Biometric),Pwd)),xor(pair(apply(H,pair(UID,X)),apply(H,pair(Pwd,pair(apply(H,Biometric),UID))))))).
 contains(U,Dummy_Set_99).
 contains(SN,Dummy_Set_101).
 contains(SN,Dummy_Set_102)

step step_4 (GW,U,SN,H,SID_G,UID,Pwd,Biometric,MK,CK,Path,Root,N,Dummy_M,RNU,RNB,X,E,R,T,MA_sn,MA_u,A,C,Tstamp1,Tstamp3,Tstamp5,Tstamp,Succ_msg,Reg_resp,Broad_N_TS,Dummy_Accept_Login,NPwd,Dummy_PERMIT_LOGIN,Set_99,Set_101,Set_102,SID,PERMIT_LOGIN) :=
 state_target_GW(GW,U,SN,H,SID_G,UID,Pwd,Biometric,MK,CK,1,Path,Root,N,Dummy_M,RNU,RNB,X,E,R,T,MA_sn,MA_u,A,C,Tstamp1,Tstamp3,Tstamp5,Tstamp,Succ_msg,Reg_resp,Broad_N_TS,Dummy_Accept_Login,NPwd,Dummy_PERMIT_LOGIN,Set_99,Set_101,Set_102,SID).
 iknows(pair(UID,pair(C,Tstamp1)))
=[exists PERMIT_LOGIN]=>
 state_target_GW(GW,U,SN,H,SID_G,UID,Pwd,Biometric,MK,CK,2,Path,Root,N,scrypt(MK,pair(RNU,pair(RNB,pair(Path,Root)))),RNU,RNB,X,E,R,T,MA_sn,MA_u,A,C,Tstamp1,Tstamp3,Tstamp5,Tstamp,Succ_msg,Reg_resp,Broad_N_TS,RNU,NPwd,PERMIT_LOGIN,Set_99,Set_101,Set_102,SID).
 request(SN,GW,sensor_gateway,RNU,SID).
 iknows(pair(PERMIT_LOGIN,pair(UID,pair(SID_G,scrypt(MK,pair(RNU,pair(RNB,pair(Path,Root)))))))).
 witness(GW,SN,gateway_sensor,pair(PERMIT_LOGIN,scrypt(MK,pair(RNU,pair(RNB,pair(Path,Root))))))

step step_5 (SN,U,GW,H,SID_S,UID,Pwd,Biometric,MK,CK,M,Dummy_SK,RNU,RNB,Path,Root,N,A,C,Tstamp,Tstamp1,Tstamp3,Dummy_Rec_N_TS,Req_Login,Dummy_Res_Login,MA_sn,MA_u,PERMIT_LOGIN,XMA_sn_XMA_u,HMA_u,Tstamp5,Tstamp7,SID) :=
 state_target_SN(SN,U,GW,H,SID_S,UID,Pwd,Biometric,MK,CK,0,M,Dummy_SK,RNU,RNB,Path,Root,N,A,C,Tstamp,Tstamp1,Tstamp3,Dummy_Rec_N_TS,Req_Login,Dummy_Res_Login,MA_sn,MA_u,PERMIT_LOGIN,XMA_sn_XMA_u,HMA_u,Tstamp5,Tstamp7,SID).
 iknows(pair(PERMIT_LOGIN,pair(UID,pair(SID_S,M))))
 =>
 state_target_SN(SN,U,GW,H,SID_S,UID,Pwd,Biometric,MK,CK,1,M,apply(H,pair(UID,pair(SID_S,pair(RNU,Root)))),RNU,RNB,Path,Root,N,A,C,Tstamp,Tstamp1,Tstamp3,pair(UID,pair(SID_S,M)),Req_Login,pair(SID_S,scrypt(apply(H,pair(UID,pair(SID_S,pair(RNU,Root)))),RNU)),MA_sn,MA_u,PERMIT_LOGIN,XMA_sn_XMA_u,HMA_u,Tstamp5,Tstamp7,SID).
 request(GW,SN,gateway_sensor,pair(UID,pair(SID_S,M)),SID).
 iknows(pair(UID,pair(SID_S,scrypt(apply(H,pair(UID,pair(SID_S,pair(RNU,Root)))),RNU)))).
 witness(SN,GW,sensor_gateway,pair(SID_S,scrypt(apply(H,pair(UID,pair(SID_S,pair(RNU,Root)))),RNU)))


section properties:

property authentication_on_gateway_sensor (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,gateway_sensor,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,gateway_sensor,MGoal))
     /\ ((request(A1Goal,A2Goal,gateway_sensor,MGoal,SID1)
           /\ request(A1Goal,A2Goal,gateway_sensor,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_gateway_user (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,gateway_user,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,gateway_user,MGoal))
     /\ ((request(A1Goal,A2Goal,gateway_user,MGoal,SID1)
           /\ request(A1Goal,A2Goal,gateway_user,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_user_sensor (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,user_sensor,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,user_sensor,MGoal))
     /\ ((request(A1Goal,A2Goal,user_sensor,MGoal,SID1)
           /\ request(A1Goal,A2Goal,user_sensor,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_user_gateway (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,user_gateway,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,user_gateway,MGoal))
     /\ ((request(A1Goal,A2Goal,user_gateway,MGoal,SID1)
           /\ request(A1Goal,A2Goal,user_gateway,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_sensor_gateway (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,sensor_gateway,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,sensor_gateway,MGoal))
     /\ ((request(A1Goal,A2Goal,sensor_gateway,MGoal,SID1)
           /\ request(A1Goal,A2Goal,sensor_gateway,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_sensor_user (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,sensor_user,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,sensor_user,MGoal))
     /\ ((request(A1Goal,A2Goal,sensor_user,MGoal,SID1)
           /\ request(A1Goal,A2Goal,sensor_user,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property secrecy_of_sec_i_Pwd (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_i_Pwd,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_sec_i_NPwd (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_i_NPwd,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_sec_N_sensor (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_N_sensor,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_biometric (MGoal,ASGoal) :=
 [] ((secret(MGoal,biometric,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_sec_Ts_sensor (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_Ts_sensor,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_sec_success (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_success,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))


section attack_states:

attack_state authentication_on_gateway_sensor (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,gateway_sensor,MGoal,SID) &
 not(witness(A2Goal,A1Goal,gateway_sensor,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_gateway_sensor (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,gateway_sensor,MGoal,SID1).
 request(A1Goal,A2Goal,gateway_sensor,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_gateway_user (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,gateway_user,MGoal,SID) &
 not(witness(A2Goal,A1Goal,gateway_user,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_gateway_user (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,gateway_user,MGoal,SID1).
 request(A1Goal,A2Goal,gateway_user,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_user_sensor (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,user_sensor,MGoal,SID) &
 not(witness(A2Goal,A1Goal,user_sensor,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_user_sensor (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,user_sensor,MGoal,SID1).
 request(A1Goal,A2Goal,user_sensor,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_user_gateway (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,user_gateway,MGoal,SID) &
 not(witness(A2Goal,A1Goal,user_gateway,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_user_gateway (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,user_gateway,MGoal,SID1).
 request(A1Goal,A2Goal,user_gateway,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_sensor_gateway (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,sensor_gateway,MGoal,SID) &
 not(witness(A2Goal,A1Goal,sensor_gateway,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_sensor_gateway (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,sensor_gateway,MGoal,SID1).
 request(A1Goal,A2Goal,sensor_gateway,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_sensor_user (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,sensor_user,MGoal,SID) &
 not(witness(A2Goal,A1Goal,sensor_user,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_sensor_user (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,sensor_user,MGoal,SID1).
 request(A1Goal,A2Goal,sensor_user,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state secrecy_of_sec_i_Pwd (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_i_Pwd,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_sec_i_NPwd (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_i_NPwd,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_sec_N_sensor (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_N_sensor,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_biometric (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,biometric,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_sec_Ts_sensor (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_Ts_sensor,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_sec_success (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_success,ASGoal) &
 not(contains(i,ASGoal))

