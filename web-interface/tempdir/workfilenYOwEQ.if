%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfilenYOwEQ

section signature:

state_role_A: agent * agent * text * text * hash_func * nat * text * text * text * nat -> fact
state_role_B: agent * agent * text * text * hash_func * nat * text * text * text * nat -> fact


section types:

auth_1: protocol_id
prng, hash_0, Prng: hash_func
const_1, Tr, Beta, Rr, Rtsj, Idj, Dummy_Tr, Dummy_Beta, Dummy_Rr, dummy_nonce: text
start, MGoal: message
State, 2, 1, 0, 4, SID, Dummy_State, 3, SID2, SID1: nat
A1Goal, alice, bob, B, A, i, A2Goal: agent


section inits:

initial_state init1 := 
 iknows(start).
 iknows(alice).
 iknows(i).
 state_role_B(bob,alice,const_1,const_1,prng,0,dummy_nonce,dummy_nonce,dummy_nonce,3).
 state_role_A(alice,bob,const_1,const_1,prng,0,dummy_nonce,dummy_nonce,dummy_nonce,4)


section rules:

step step_0 (B,A,Idj,Rtsj,Prng,Dummy_Rr,Dummy_Beta,Dummy_Tr,SID,Rr,Beta,Tr) :=
 state_role_B(B,A,Idj,Rtsj,Prng,0,Dummy_Rr,Dummy_Beta,Dummy_Tr,SID).
 iknows(pair(xor(Rr,Beta),xor(Idj,apply(Prng,xor(Rtsj,Rr)))))
=[exists Tr]=>
 state_role_B(B,A,Idj,Rtsj,Prng,1,Rr,Beta,Tr,SID).
 iknows(pair(xor(Rtsj,apply(Prng,xor(Idj,Tr))),xor(Tr,Beta)))

step step_1 (A,B,Idj,Rtsj,Prng,Dummy_Rr,Dummy_Beta,Tr,SID,Rr,Beta) :=
 state_role_A(A,B,Idj,Rtsj,Prng,0,Dummy_Rr,Dummy_Beta,Tr,SID).
 iknows(start)
=[exists Beta,Rr]=>
 state_role_A(A,B,Idj,Rtsj,Prng,1,Rr,Beta,Tr,SID).
 iknows(pair(xor(Rr,Beta),xor(Idj,apply(Prng,xor(Rtsj,Rr)))))

step step_2 (A,B,Idj,Rtsj,Prng,Rr,Beta,Dummy_Tr,SID,Tr) :=
 state_role_A(A,B,Idj,Rtsj,Prng,1,Rr,Beta,Dummy_Tr,SID).
 iknows(pair(xor(Rtsj,apply(Prng,xor(Idj,Tr))),xor(Tr,Beta)))
 =>
 state_role_A(A,B,Idj,Rtsj,Prng,2,Rr,Beta,Tr,SID)


section properties:

property authentication_on_auth_1 (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,auth_1,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,auth_1,MGoal))
     /\ ((request(A1Goal,A2Goal,auth_1,MGoal,SID1)
           /\ request(A1Goal,A2Goal,auth_1,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state authentication_on_auth_1 (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,auth_1,MGoal,SID) &
 not(witness(A2Goal,A1Goal,auth_1,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_auth_1 (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,auth_1,MGoal,SID1).
 request(A1Goal,A2Goal,auth_1,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

