%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfileVI3UWs

section signature:

state_reader: agent * agent * text * text * text * text * text * text * text * message * message * message * message * message * message * nat * set(agent) * nat -> fact
state_tag: agent * agent * text * text * text * text * text * text * text * message * message * message * message * message * message * nat * set(agent) * nat -> fact


section types:

authid, idtag, authK1: protocol_id
Dummy_Set_56, ASGoal, Set_30, Set_56, Dummy_Set_30: set(agent)
Dummy_State, 3, SID, SID2, SID1, 6, 4, 2, 0, State, 5, 1: nat
R, T, A2Goal, A1Goal, r, t, i: agent
Hello, K1, K2, K3, K4, IDen, IDS, k1, k2, k3, k4, iden, hello, ids, Dummy_IDS, dummy_nonce: text
A, Dummy_C, B, Dummy_B, C, Dummy_A, D, Dummy_N2, Dummy_N1, dummy_msg, MGoal, start, N1, N2: message
set_89, set_100: set


section inits:

initial_state init1 := 
 iknows(start).
 iknows(i).
 state_tag(t,r,hello,k1,k2,k3,k4,iden,ids,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,1,set_89,3).
 state_reader(r,t,hello,k1,k2,k3,k4,iden,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,0,set_100,4)


section rules:

step step_0 (T,R,Hello,K1,K2,K3,K4,IDen,IDS,A,B,C,D,N1,N2,Set_56,SID) :=
 state_tag(T,R,Hello,K1,K2,K3,K4,IDen,IDS,A,B,C,D,N1,N2,1,Set_56,SID).
 iknows(Hello)
 =>
 state_tag(T,R,Hello,K1,K2,K3,K4,IDen,IDS,A,B,C,D,N1,N2,3,Set_56,SID).
 iknows(IDS)

step step_1 (T,R,Hello,K1,K2,K3,K4,IDen,IDS,A,B,C,D,Dummy_N1,Dummy_N2,Dummy_Set_56,SID,N1,N2) :=
 state_tag(T,R,Hello,K1,K2,K3,K4,IDen,IDS,A,B,C,D,Dummy_N1,Dummy_N2,3,Dummy_Set_56,SID).
 iknows(pair(xor(xor(IDS,K1),N1),pair(xor(xor(IDS,K2),N1),xor(xor(IDS,K3),N2))))
 =>
 state_tag(T,R,Hello,K1,K2,K3,K4,IDen,IDS,A,B,C,D,N1,N2,5,Dummy_Set_56,SID).
 iknows(xor(xor(xor(IDS,IDen),xor(xor(xor(xor(IDS,K1),N1),IDS),K1)),xor(xor(xor(xor(IDS,K3),N2),IDS),K3))).
 secret(IDen,idtag,Dummy_Set_56).
 request(T,R,authK1,K1,SID).
 witness(T,R,authid,IDen).
 contains(R,Dummy_Set_56).
 contains(T,Dummy_Set_56)

step step_2 (T,R,Hello,K1,K2,K3,K4,IDen,IDS,Dummy_A,Dummy_B,Dummy_C,D,Dummy_N1,Dummy_N2,Set_56,SID,A,B,C) :=
 state_tag(T,R,Hello,K1,K2,K3,K4,IDen,IDS,Dummy_A,Dummy_B,Dummy_C,D,Dummy_N1,Dummy_N2,3,Set_56,SID).
 iknows(pair(A,pair(B,C)))
 =>
 state_tag(T,R,Hello,K1,K2,K3,K4,IDen,IDS,A,B,C,D,xor(xor(A,IDS),K1),xor(xor(C,IDS),K3),5,Set_56,SID).
 iknows(xor(xor(xor(IDS,IDen),xor(xor(A,IDS),K1)),xor(xor(C,IDS),K3)))

step step_3 (R,T,Hello,K1,K2,K3,K4,IDen,IDS,A,B,C,D,N1,N2,Set_30,SID) :=
 state_reader(R,T,Hello,K1,K2,K3,K4,IDen,IDS,A,B,C,D,N1,N2,0,Set_30,SID).
 iknows(start)
 =>
 state_reader(R,T,Hello,K1,K2,K3,K4,IDen,IDS,A,B,C,D,N1,N2,2,Set_30,SID).
 iknows(hello)

step step_4 (R,T,Hello,K1,K2,K3,K4,IDen,Dummy_IDS,Dummy_A,Dummy_B,Dummy_C,D,Dummy_N1,Dummy_N2,Set_30,SID,IDS,N1,N2) :=
 state_reader(R,T,Hello,K1,K2,K3,K4,IDen,Dummy_IDS,Dummy_A,Dummy_B,Dummy_C,D,Dummy_N1,Dummy_N2,2,Set_30,SID).
 iknows(IDS)
=[exists N2,N1]=>
 state_reader(R,T,Hello,K1,K2,K3,K4,IDen,IDS,xor(xor(IDS,K1),N1),xor(xor(IDS,K2),N1),xor(xor(IDS,K3),N2),D,N1,N2,4,Set_30,SID).
 iknows(pair(xor(xor(IDS,K1),N1),pair(xor(xor(IDS,K2),N1),xor(xor(IDS,K3),N2))))

step step_5 (R,T,Hello,K1,K2,K3,K4,IDen,IDS,A,B,C,D,N1,N2,Dummy_Set_30,SID) :=
 state_reader(R,T,Hello,K1,K2,K3,K4,IDen,IDS,A,B,C,D,N1,N2,4,Dummy_Set_30,SID).
 iknows(xor(xor(xor(IDS,IDen),N1),N2))
 =>
 state_reader(R,T,Hello,K1,K2,K3,K4,IDen,IDS,A,B,C,D,N1,N2,6,Dummy_Set_30,SID).
 secret(IDen,idtag,Dummy_Set_30).
 request(R,T,authid,IDen,SID).
 contains(R,Dummy_Set_30).
 contains(T,Dummy_Set_30)


section properties:

property secrecy_of_idtag (MGoal,ASGoal) :=
 [] ((secret(MGoal,idtag,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property authentication_on_authK1 (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,authK1,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,authK1,MGoal))
     /\ ((request(A1Goal,A2Goal,authK1,MGoal,SID1)
           /\ request(A1Goal,A2Goal,authK1,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_authid (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,authid,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,authid,MGoal))
     /\ ((request(A1Goal,A2Goal,authid,MGoal,SID1)
           /\ request(A1Goal,A2Goal,authid,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state secrecy_of_idtag (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,idtag,ASGoal) &
 not(contains(i,ASGoal))

attack_state authentication_on_authK1 (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,authK1,MGoal,SID) &
 not(witness(A2Goal,A1Goal,authK1,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_authK1 (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,authK1,MGoal,SID1).
 request(A1Goal,A2Goal,authK1,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_authid (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,authid,MGoal,SID) &
 not(witness(A2Goal,A1Goal,authid,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_authid (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,authid,MGoal,SID1).
 request(A1Goal,A2Goal,authid,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

