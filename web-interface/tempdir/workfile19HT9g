role ua(
                                               CA,AA,CS,DO,UA:agent,
                                                           K1:symmetric_key,
      SKca,SKuid,GSKuid,GPKuid,GPkaid,SKaid,SKuid1,UUKX1aid,SK,Kcu,Kau,PKxaid,PKaid:public_key,
                                                            H:hash_func,
                                                      SND,RCV:channel(dy))
           played_by UA def=
           local
           State:nat,
           Na,Nb,SP,UID,AID,UUID,GUID,User:text,
                                      M,CT,A:message
    const  ca_ua_nc,subs: protocol_id

           init 
           State:=0
           transition
           1.State=0  /\RCV(start)=|>
             State':=1/\SND({User}_K1)
           2.State=1  /\RCV({UID.GSKuid.GPKuid.H(UID.UUID.GUID)}_inv(Kcu))=|>
            State':=2 /\SND({UID.SKuid.H(UID.UUID.GUID)}_Kau)
           3.State=2  /\RCV({SKaid.PKaid}_UID)=|>
            State':=3 /\Na':=H(SKuid.SKaid)
                      /\SND({PKxaid.PKaid.A.M}_Na')
           4.State=3  /\RCV({PKxaid.PKaid.A.M.H(PKxaid.PKaid.A.M.GPKuid.SKuid.SKaid).GSKuid}_H(SKuid.SKaid.AID.PKxaid.         
       SP.H(UID.UUID.GUID)))=|>
            State':=4 /\secret({GSKuid.SKuid1},subs,{CA,UA})
           5.State=4  /\RCV({UUKX1aid}_inv(Kau))=|>
            State':=5 /\SK':=H(SKaid.UUKX1aid)
                      /\request(CA,UA,ca_ua_nc,{UID.GSKuid.GPKuid.H(UID.UUID.GUID)})
                        


end role


role ca(
         CA,AA,CS,DO,UA:agent,
                     K1:symmetric_key,
          GSKuid,GPKuid,Kcaa,Kcu,PKca:public_key,
                      H:hash_func,
                SND,RCV:channel(dy))
         played_by CA def=
         local
         State:nat,
         Na,Nb,SP,UID,User,UUID,GUID,AID:text,
                  CL,M:message
const  ua_ca_nb,ca_aa_nc,subs1: protocol_id

        init 
        State:=1
        transition
        1.State=1   /\RCV({User}_K1)=|>
          State':=2 /\Nb':=H(UID.UUID.GUID)
                    /\SND({UID.GSKuid.GPKuid.Nb'}_Kcu)
                    /\SND({SP.PKca}_Kcaa)
                    /\SND({AID}_Kcaa)
                    /\Secret({UID.H(UID.UUID.GUID)},subs1,UA)
                    /\Witness(CA,UA,ua_ca_nb,{UID.GSKuid.GPKuid.H(UID.UUID.GUID)})
                    /\Witness(CA,AA,ca_aa_nc,{AID,SP,PKca})
      

end role


role aa(

                                                 CA,AA,CS,DO,UA:agent,
                                                             K1:symmetric_key,
          GSKaid,UUKX1aid,CUKX1aid,PKaid,SKuid,Kaa,Kad,Kacs,Kau,PKca,Kcaa:public_key,
                                                              H:hash_func,
                                                        SND,RCV:channel(dy))
         played_by AA def=
         local
         State:nat,
                          AID,Na,Nb,SP,UID,UUID,GUID:text,
                                       A,M:message,
         SKaid,PKxaid,VKxaid,PKaid,VKX1aid:public_key
         const  aa_ca_id,aa_do_id,subs2: protocol_id
         init
         State:=1
         transition
         1.State=1   /\RCV({AID}_inv(Kcaa))=|>
           State':=2 /\SND({PKxaid.PKaid.A}_Kad)
         2.State=2   /\RCV({SP.PKca}_inv(Kcaa))=|>
           State':=3 /\PKaid':=H(SKuid.SKaid.AID.PKxaid.SP.H(UID.UUID.GUID))
                     /\SKuid':=H(SKuid.SKaid.AID.PKxaid.SP.H(UID.UUID.GUID))
                     /\SND({SKuid.A.CUKX1aid}_Kacs)
         3.State=3   /\RCV({UID.SKuid.H(UID.UUID.GUID)}_inv(Kaa))=|>
           State':=4  /\SND({SKaid.PKaid}_UID)
                      /\SND({UUKX1aid}_Kau)
                      /\Secret({SKuid',A},subs2,AA)
                      /\request(AA,CA,aa_ca_id,{AID,SP,PKca})
                      /\Witness(AA,DO,aa_do_id,{PKxaid.PKaid.A})
                   
           

end role       


role do(

            CA,AA,CS,DO,UA:agent,
                      K1:symmetric_key,
                     Kad,SKuid,AID,PKxaid,SKaid:public_key,
                         H:hash_func,
                   SND,RCV:channel(dy))
           played_by DO def=
           local
           State:nat,
           Na,Nb,SP,UID,UUID,GUID:text,
           PKaid:public_key,
           M,A:message
           const  aa_do_id: protocol_id

           init 
           State:=1
           transition
           1.State=1    /\RCV({PKxaid.PKaid.A}_inv(Kad))=|>
             State':=2  /\SND({PKxaid.PKaid.A.M}_H(SKuid.SKaid.AID.PKxaid.SP.H(UID.UUID.GUID)))
                        /\request(AA,DO,aa_do_id,{PKxaid.PKaid.A})
                        
   

end role



role cs(

            CA,AA,CS,DO,UA:agent,
                   K1:symmetric_key,
            GPKxaid,Kacs,PKaid,SKuid,SKaid,PKxaid,GPKuid,GSKuid:public_key,
                         H:hash_func,
                   SND,RCV:channel(dy))
           played_by CS def=
           local
           State:nat,
           Na,Nb,SP,UID,AID,UUID,GUID:text,
           
           M,TK,A,CT,CUKX1aid:message
     const  cs_ua_id,subs3: protocol_id
             
           init 
           State:=1
           transition
           1.State=1 /\RCV({PKxaid.PKaid.A.M}_H(SKuid.SKaid.AID.PKxaid.SP.H(UID.UUID.GUID)))=|>
           
         
                       State':=2 /\TK':=H(PKxaid.PKaid.A.M.GPKuid.SKuid.SKaid)
                      /\SND({PKxaid.PKaid.A.M.TK'.GSKuid}_H(SKuid.SKaid.AID.PKxaid.SP.H(UID.UUID.GUID))) 
                      /\SND({TK'}_GSKuid)
           3.State=2  /\RCV({SKuid.A.CUKX1aid}_inv(Kacs))=|>
            State':=3 /\CT':=H(CT,CUKX1aid)
                      /\Secret(TK',subs3,{CS,UA})
                      /\Witness(CS,UA,cs_ua_id,TK')

end role

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  role session(                                     
                                      CA,AA,CS,DO,UA:agent,
                                                  K1:symmetric_Key,
SKca,SKuid,GSKuid,GPkaid,SKaid,SKuid1,UUKX1aid,SK,Kcu,Kau,Kcaa,Kcu,GSKaid,UUIDX1aid,CUX1aid,PKaid,Kaa,Kad,Kacs,Kau, 
PKxaid,VKxaid,VKX1aid,Kad,Kacs,PKca:public_key,
                      
                                                   H:hash_func)
                                 def=
                                    local SCA,RCA,SAA,RAA,SCS,RCS,SDO,RDO,SUA,RUA:channel(dy)
                                     composition 
              ua(CA,AA,CS,DO,UA,K1,SKca,SKuid,GPKuid,PKaid,GSKuid,GPkaid,SKaid,SKuid1,UUIDX1aid,SK,Kcu,Kau,H,SCA,RCA,SAA,RAA,SCS,RCS,SDO)
            /\ca(CA,AA,CS,DO,UA,K1,GSKuid,GPKuid,Kcaa,Kcu,H,SCA,RCA,SAA,RAA,SUA,RUA)
            /\aa(CA,AA,CS,DO,UA,GSKaid,UUKX1aid,CUKX1aid,PKaid,SKuid,Kaa,Kad,Kacs,Kau,H,K1,SCA,RCA,SAA,RAA,SCS,SDO,SUA,RUA)
            /\do(CA,AA,CS,DO,UA,K1,Kad,H,SCS,RUA,RAA)
            /\cs(CA,AA,CS,DO,UA,K1,GPKxaid,Kacs,PKxaid,PKaid,GPKuid,SKuid,SKaid,GSKuid,H,SUA,RDO,RAA,RUA)
    end role
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
role environment() def=
                        const  ca_ua_nc,subs,ua_ca_nb,subs1,aa_ca_id,aa_do_id,subs2,cs_ua_id,subs3: protocol_id,
                                                   k1: symmetric_key,
                                       ca,aa,cs,do,ua:agent,
                                                   h : hash_func
     
                          intruder_knowledge = {ca,aa,cs,do,ua,k1,h}
                          composition
                            session(ca,aa,cs,do,ua,k1,h)
                          /\ session(ca,aa,cs,do,ua,k1,h)
                          /\ session(ca,aa,cs,do,ua,k1,h)
                          /\ session(ca,aa,cs,do,ua,k1,h)
                          /\ session(ca,aa,cs,do,ua,k1,h)

     end role 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 goal
          secrecy_of subs,subs1,subs2,subs3
	  authentication_on ca_ua_nc,ua_ca_nb,aa_ca_id,aa_do_id,cs_ua_id

end goal

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
environment()
              















              
















