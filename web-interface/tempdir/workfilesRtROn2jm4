role role_P(P:agent,S:agent,F:function,Ca:agent,SND,RCV:channel(dy))
played_by P
def=
local
State:nat,CP:text,Kca:public_key,N:text,Kp:public_key,Kps:symmetric_key,SSPs:text,Nonce1:text,H:function,Lifetime:text,Idps:text
init
State := 0
transition
1. State=0 /\ RCV(start) =|> State':=1 /\ Nonce1':=new() /\ SND(Nonce1') /\ CP':=new() /\ SND(CP')
5. State=1 /\ RCV({{Kps'.N'}_Kp'}_inv(Kca')) =|> State':=2 /\ secret(Kps',sec_2,{P,S})
6. State=2 /\ RCV(SSPs'.H(SSPs').Nonce1.Lifetime'.Idps'.{F(H(SSPs').Nonce1.Lifetime'.SSPs'.Idps')}_Kps) =|> State':=3 /\ secret(Kps',sec_2,{P,S})
end role
role role_S(S:agent,P:agent,F:function,H:function,Ca:agent,SND,RCV:channel(dy))
played_by S
def=
local
State:nat,CS:text,Kca:public_key,N:text,Ks:public_key,Kps:symmetric_key,SSPs:text,Nonce1:text,Lifetime:text,Idps:text
init
State := 0
transition
1. State=0 /\ RCV(Nonce1') =|> State':=1 /\ CS':=new() /\ SND(CS')
3. State=1 /\ RCV({{Kps'.N'}_Ks'}_inv(Kca')) =|> State':=2 /\ secret(Kps',sec_2,{P,S}) /\ Idps':=new() /\ SSPs':=new() /\ Lifetime':=new() /\ SND(SSPs'.H(SSPs').Nonce1.Lifetime'.Idps'.{F(H(SSPs').Nonce1.Lifetime'.SSPs'.Idps')}_Kps')
end role
role role_Ca(Ca:agent,S:agent,P:agent,SND,RCV:channel(dy))
played_by Ca
def=
local
State:nat,CS:text,Ks:public_key,CP:text,Kca:public_key,N:text,Kps:symmetric_key,Kp:public_key
init
State := 0
transition
2. State=0 /\ RCV(CS') =|> State':=1 /\ Kca':=new() /\ Ks':=new() /\ N':=new() /\ Kps':=new() /\ secret(Kps',sec_2,{P,S}) /\ SND({{Kps'.N'}_Ks'}_inv(Kca'))
4. State=1 /\ RCV(CP') =|> State':=2 /\ Kp':=new() /\ secret(Kps',sec_2,{P,S}) /\ SND({{Kps.N}_Kp'}_inv(Kca))
end role
role session1(S:agent,P:agent,F:function,H:function,Ca:agent)
def=
local
SND3,RCV3,SND2,RCV2,SND1,RCV1:channel(dy)
composition
role_S(S,P,F,H,Ca,SND3,RCV3) /\ role_Ca(Ca,S,P,SND2,RCV2) /\ role_P(P,S,F,Ca,SND1,RCV1)
end role
role environment()
def=
const
hash_0:function,const_1:function,proxy:agent,serveur:agent,certif:agent,auth_1:protocol_id,sec_2:protocol_id
intruder_knowledge = {proxy,certif,serveur}
composition
session1(serveur,proxy,const_1,const_1,certif)
end role
goal
authentication_on auth_1
secrecy_of sec_2
end goal
environment()