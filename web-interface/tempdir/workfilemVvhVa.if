%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfilemVvhVa

section signature:

state_control_center: agent * agent * agent * symmetric_key * hash_func * public_key * text * nat * text * text * text * text * text * text * text * text * text * text * text * text * text * set(text) * nat -> fact
state_ids_sensor: agent * agent * agent * symmetric_key * symmetric_key * hash_func * public_key * text * nat * text * text * text * text * text * text * text * text * text * text * text * text * text * set(text) * nat -> fact
state_smart_meter: agent * agent * agent * symmetric_key * hash_func * public_key * text * nat * text * text * text * text * text * text * text * text * text * text * text * set(text) * nat -> fact


section types:

Set_87, Set_61, Dummy_Set_87, Dummy_Set_61, Dummy_Set_33, Set_33: set(text)
a_b, b_c, c_b, b_a: protocol_id
set_151, set_143, set_125: set
ASGoal: set(agent)
start, MGoal: message
State, 5, SID, 4, 2, 1, 0, Dummy_State, 3, SID2, SID1: nat
X, SIDi, E, F, MIDi, D, O, SMi, K, W1, W2, Pr, IDcs, G, Y, Dummy_MIDi, Rb, Dummy_W1, Dummy_X, Dummy_E, Dummy_Rb, Dummy_IDcs, Dummy_F, Dummy_SIDi, Dummy_Y, Dummy_W2, Dummy_K, Dummy_SMi, Dummy_O, Dummy_D, Dummy_Ra, dummy_nonce, Ra, g: text
Ppub, Dummy_Ppub, ppub: public_key
H, h: hash_func
Sj, SK, Dummy_SK, kia, kai, kbi, kib, kci, kic, sj, sk: symmetric_key
A, B, C, A2Goal, A1Goal, a, b, c, i: agent


section inits:

initial_state init1 := 
 iknows(start).
 iknows(a).
 iknows(b).
 iknows(c).
 iknows(kia).
 iknows(kai).
 iknows(kbi).
 iknows(kib).
 iknows(kci).
 iknows(kic).
 iknows(i).
 state_smart_meter(a,b,c,sk,h,ppub,g,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_125,3).
 state_ids_sensor(b,a,c,sk,sj,h,ppub,g,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_143,4).
 state_control_center(c,a,b,sj,h,ppub,g,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_151,5)


section rules:

step step_0 (A,B,C,SK,H,Dummy_Ppub,G,MIDi,Dummy_Ra,Dummy_D,Dummy_O,Dummy_SMi,Dummy_K,W2,Y,SIDi,F,IDcs,Dummy_Set_33,SID,Ppub,Ra) :=
 state_smart_meter(A,B,C,SK,H,Dummy_Ppub,G,0,MIDi,Dummy_Ra,Dummy_D,Dummy_O,Dummy_SMi,Dummy_K,W2,Y,SIDi,F,IDcs,Dummy_Set_33,SID).
 iknows(Ppub)
=[exists Ra]=>
 state_smart_meter(A,B,C,SK,H,Ppub,G,1,MIDi,Ra,exp(G,Dummy_Ra),exp(Ppub,Dummy_Ra),xor(MIDi,apply(H,Dummy_O)),apply(H,pair(MIDi,pair(Dummy_O,exp(G,Dummy_Ra)))),W2,Y,SIDi,F,IDcs,Dummy_Set_33,SID).
 request(A,B,a_b,apply(H,pair(MIDi,pair(Dummy_O,exp(G,Dummy_Ra)))),SID).
 secret(Dummy_Set_33,a_b,A).
 iknows(pair(xor(MIDi,apply(H,Dummy_O)),pair(apply(H,pair(MIDi,pair(Dummy_O,exp(G,Dummy_Ra)))),exp(G,Dummy_Ra)))).
 contains(Dummy_Ra,Dummy_Set_33).
 contains(Dummy_O,Dummy_Set_33).
 contains(MIDi,Dummy_Set_33)

step step_1 (A,B,C,Dummy_SK,H,Ppub,G,MIDi,Ra,D,O,SMi,K,Dummy_W2,Dummy_Y,Dummy_SIDi,Dummy_F,Dummy_IDcs,Set_33,SID,SIDi,F,IDcs) :=
 state_smart_meter(A,B,C,Dummy_SK,H,Ppub,G,1,MIDi,Ra,D,O,SMi,K,Dummy_W2,Dummy_Y,Dummy_SIDi,Dummy_F,Dummy_IDcs,Set_33,SID).
 iknows(pair(SIDi,pair(F,pair(Y,IDcs))))
 =>
 state_smart_meter(A,B,C,exp(F,Ra),H,Ppub,G,2,MIDi,Ra,D,O,SMi,K,apply(H,pair(IDcs,pair(O,MIDi))),apply(H,pair(MIDi,pair(SIDi,pair(Dummy_SK,pair(F,apply(H,pair(IDcs,pair(O,MIDi)))))))),SIDi,F,IDcs,Set_33,SID).
 request(A,B,a_b,apply(H,pair(MIDi,pair(SIDi,pair(Dummy_SK,pair(F,apply(H,pair(IDcs,pair(O,MIDi)))))))),SID)

step step_2 (B,A,C,Sj,SK,H,Dummy_Ppub,G,Dummy_SIDi,Dummy_Rb,Dummy_F,Dummy_E,Dummy_X,Dummy_SMi,Dummy_K,D,W1,W2,IDcs,MIDi,Y,Dummy_Set_61,SID,Ppub,SIDi,Rb,SMi,K) :=
 state_ids_sensor(B,A,C,Sj,SK,H,Dummy_Ppub,G,0,Dummy_SIDi,Dummy_Rb,Dummy_F,Dummy_E,Dummy_X,Dummy_SMi,Dummy_K,D,W1,W2,IDcs,MIDi,Y,Dummy_Set_61,SID).
 iknows(Ppub).
 iknows(pair(SMi,pair(K,D)))
=[exists SIDi,Rb]=>
 state_ids_sensor(B,A,C,Sj,SK,H,Ppub,G,1,SIDi,Rb,exp(G,Dummy_Rb),exp(Ppub,Dummy_Rb),apply(H,pair(Dummy_SIDi,pair(Dummy_E,pair(Dummy_F,pair(SMi,pair(D,pair(K,Sj))))))),SMi,K,D,W1,W2,IDcs,MIDi,Y,Dummy_Set_61,SID).
 secret(Dummy_Set_61,b_c,B).
 request(B,C,b_c,apply(H,pair(Dummy_SIDi,pair(Dummy_E,pair(Dummy_F,pair(SMi,pair(D,pair(K,Sj))))))),SID).
 iknows(scrypt(Sj,pair(Dummy_SIDi,pair(Dummy_F,pair(apply(H,pair(Dummy_SIDi,pair(Dummy_E,pair(Dummy_F,pair(SMi,pair(D,pair(K,Sj))))))),pair(SMi,pair(D,K))))))).
 contains(Dummy_Rb,Dummy_Set_61).
 contains(Dummy_E,Dummy_Set_61)

step step_3 (B,A,C,Sj,Dummy_SK,H,Ppub,G,SIDi,Rb,F,E,X,SMi,K,D,Dummy_W1,W2,IDcs,MIDi,Dummy_Y,Set_61,SID) :=
 state_ids_sensor(B,A,C,Sj,Dummy_SK,H,Ppub,G,1,SIDi,Rb,F,E,X,SMi,K,D,Dummy_W1,W2,IDcs,MIDi,Dummy_Y,Set_61,SID).
 iknows(scrypt(Sj,pair(Dummy_W1,pair(W2,pair(IDcs,MIDi)))))
 =>
 state_ids_sensor(B,A,C,Sj,exp(D,Rb),H,Ppub,G,2,SIDi,Rb,F,E,X,SMi,K,D,apply(H,pair(IDcs,pair(E,pair(SIDi,Sj)))),W2,IDcs,MIDi,apply(H,pair(MIDi,pair(SIDi,pair(Dummy_SK,pair(F,W2))))),Set_61,SID).
 request(B,C,b_c,apply(H,pair(IDcs,pair(E,pair(SIDi,Sj)))),SID).
 iknows(pair(SIDi,pair(F,pair(apply(H,pair(MIDi,pair(SIDi,pair(Dummy_SK,pair(F,W2))))),IDcs)))).
 request(B,A,b_a,apply(H,pair(MIDi,pair(SIDi,pair(Dummy_SK,pair(F,W2))))),SID)

step step_4 (C,A,B,Sj,H,Dummy_Ppub,G,IDcs,Pr,D,O,SMi,K,W1,W2,X,SIDi,E,F,MIDi,Set_87,SID) :=
 state_control_center(C,A,B,Sj,H,Dummy_Ppub,G,0,IDcs,Pr,D,O,SMi,K,W1,W2,X,SIDi,E,F,MIDi,Set_87,SID).
 iknows(start)
 =>
 state_control_center(C,A,B,Sj,H,exp(G,Pr),G,1,IDcs,Pr,D,O,SMi,K,W1,W2,X,SIDi,E,F,MIDi,Set_87,SID).
 iknows(exp(G,Pr))

step step_5 (C,A,B,Sj,H,Ppub,G,IDcs,Pr,Dummy_D,Dummy_O,Dummy_SMi,Dummy_K,Dummy_W1,Dummy_W2,Dummy_X,Dummy_SIDi,Dummy_E,Dummy_F,Dummy_MIDi,Dummy_Set_87,SID,D,SMi,SIDi,F) :=
 state_control_center(C,A,B,Sj,H,Ppub,G,1,IDcs,Pr,Dummy_D,Dummy_O,Dummy_SMi,Dummy_K,Dummy_W1,Dummy_W2,Dummy_X,Dummy_SIDi,Dummy_E,Dummy_F,Dummy_MIDi,Dummy_Set_87,SID).
 iknows(scrypt(Sj,pair(SIDi,pair(F,pair(X,pair(SMi,pair(D,K)))))))
 =>
 state_control_center(C,A,B,Sj,H,Ppub,G,2,IDcs,Pr,D,exp(D,Pr),SMi,apply(H,pair(xor(SMi,apply(H,exp(D,Pr))),pair(exp(D,Pr),D))),apply(H,pair(IDcs,pair(exp(F,Pr),pair(SIDi,Sj)))),apply(H,pair(IDcs,pair(exp(D,Pr),xor(SMi,apply(H,exp(D,Pr)))))),apply(H,pair(SIDi,pair(exp(F,Pr),pair(F,pair(SMi,pair(D,pair(apply(H,pair(xor(SMi,apply(H,exp(D,Pr))),pair(exp(D,Pr),D))),Sj))))))),SIDi,exp(F,Pr),F,xor(SMi,apply(H,exp(D,Pr))),Dummy_Set_87,SID).
 request(C,B,c_b,apply(H,pair(SIDi,pair(exp(F,Pr),pair(F,pair(SMi,pair(D,pair(apply(H,pair(xor(SMi,apply(H,exp(D,Pr))),pair(exp(D,Pr),D))),Sj))))))),SID).
 request(C,B,c_b,apply(H,pair(xor(SMi,apply(H,exp(D,Pr))),pair(exp(D,Pr),D))),SID).
 secret(Dummy_Set_87,c_b,C).
 iknows(scrypt(Sj,pair(Dummy_W1,pair(Dummy_W2,pair(IDcs,Dummy_MIDi))))).
 request(C,B,c_b,apply(H,pair(IDcs,pair(exp(F,Pr),pair(SIDi,Sj)))),SID).
 request(C,B,c_b,apply(H,pair(IDcs,pair(exp(D,Pr),xor(SMi,apply(H,exp(D,Pr)))))),SID).
 contains(Pr,Dummy_Set_87).
 contains(exp(D,Pr),Dummy_Set_87).
 contains(xor(SMi,apply(H,exp(D,Pr))),Dummy_Set_87).
 contains(exp(F,Pr),Dummy_Set_87)


section properties:

property secrecy_of_a_b (MGoal,ASGoal) :=
 [] ((secret(MGoal,a_b,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_b_c (MGoal,ASGoal) :=
 [] ((secret(MGoal,b_c,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_c_b (MGoal,ASGoal) :=
 [] ((secret(MGoal,c_b,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_b_a (MGoal,ASGoal) :=
 [] ((secret(MGoal,b_a,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property authentication_on_a_b (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,a_b,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,a_b,MGoal))
     /\ ((request(A1Goal,A2Goal,a_b,MGoal,SID1)
           /\ request(A1Goal,A2Goal,a_b,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_b_c (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,b_c,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,b_c,MGoal))
     /\ ((request(A1Goal,A2Goal,b_c,MGoal,SID1)
           /\ request(A1Goal,A2Goal,b_c,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_c_b (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,c_b,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,c_b,MGoal))
     /\ ((request(A1Goal,A2Goal,c_b,MGoal,SID1)
           /\ request(A1Goal,A2Goal,c_b,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_b_a (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,b_a,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,b_a,MGoal))
     /\ ((request(A1Goal,A2Goal,b_a,MGoal,SID1)
           /\ request(A1Goal,A2Goal,b_a,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state secrecy_of_a_b (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,a_b,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_b_c (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,b_c,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_c_b (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,c_b,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_b_a (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,b_a,ASGoal) &
 not(contains(i,ASGoal))

attack_state authentication_on_a_b (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,a_b,MGoal,SID) &
 not(witness(A2Goal,A1Goal,a_b,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_a_b (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,a_b,MGoal,SID1).
 request(A1Goal,A2Goal,a_b,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_b_c (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,b_c,MGoal,SID) &
 not(witness(A2Goal,A1Goal,b_c,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_b_c (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,b_c,MGoal,SID1).
 request(A1Goal,A2Goal,b_c,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_c_b (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,c_b,MGoal,SID) &
 not(witness(A2Goal,A1Goal,c_b,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_c_b (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,c_b,MGoal,SID1).
 request(A1Goal,A2Goal,c_b,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_b_a (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,b_a,MGoal,SID) &
 not(witness(A2Goal,A1Goal,b_a,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_b_a (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,b_a,MGoal,SID1).
 request(A1Goal,A2Goal,b_a,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

