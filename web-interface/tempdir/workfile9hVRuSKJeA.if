%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfile9hVRuSKJeA

section signature:

state_bob: agent * agent * text * hash_func * symmetric_key * nat * text * message * message * message * message * message * message * symmetric_key * apply(hash_func,pair(message,message)) * apply(hash_func,pair(symmetric_key,message)) * set(agent) * nat -> fact
state_alice: agent * agent * text * hash_func * symmetric_key * nat * text * message * message * message * message * message * symmetric_key * apply(hash_func,pair(message,message)) * apply(hash_func,pair(symmetric_key,pair(message,message))) * set(agent) * nat -> fact


section types:

sec_b, na, nb, sec_a: protocol_id
Ha2, Dummy_Ha2: apply(hash_func,pair(symmetric_key,message))
h, F: hash_func
Dummy_Hb, Ha, Hb, Dummy_Ha: apply(hash_func,pair(message,message))
Dummy_Ea, dummy_nonce, g, Eb, G, Ea, Dummy_Eb: text
Dummy_State, 3, SID, SID2, SID1, 11, 9, 7, State, 10, 5, 8, 6, 4, 2, 1, 0: nat
set_88, set_117, set_116, set_115, set_113, set_105: set
ASGoal, Set_62, Set_37, Dummy_Set_62, Dummy_Set_37: set(agent)
Hb2, Dummy_Hb2: apply(hash_func,pair(symmetric_key,pair(message,message)))
A2Goal, A1Goal, a, b, B, A, i: agent
Dummy_Nb, Dummy_Gb, Dummy_Na, Dummy_Ga, dummy_msg, MGoal, Ga, Gb, Na, Nb, Nb2, SAS, start, Dummy_Nb2, Dummy_SAS: message
dummy_sk, kab, kai, kbi, SK, Ks, Dummy_SK: symmetric_key


section inits:

initial_state init1 := 
 iknows(start).
 iknows(a).
 iknows(b).
 iknows(h).
 iknows(g).
 iknows(kai).
 iknows(kbi).
 iknows(i).
 state_alice(a,b,g,h,kab,0,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_sk,dummy_msg,dummy_msg,set_88,3).
 state_bob(b,a,g,h,kab,1,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_sk,dummy_msg,dummy_msg,set_105,4).
 state_alice(a,i,g,h,kai,0,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_sk,dummy_msg,dummy_msg,set_113,6).
 state_bob(b,i,g,h,kbi,1,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_sk,dummy_msg,dummy_msg,set_117,10)


section rules:

step step_0 (A,B,G,F,Ks,Dummy_Ea,Dummy_Ga,Gb,Dummy_Na,Nb,SAS,SK,Hb,Hb2,Set_37,SID,Ea,Na) :=
 state_alice(A,B,G,F,Ks,0,Dummy_Ea,Dummy_Ga,Gb,Dummy_Na,Nb,SAS,SK,Hb,Hb2,Set_37,SID).
 iknows(start)
=[exists Na,Ea]=>
 state_alice(A,B,G,F,Ks,2,Ea,exp(G,Ea),Gb,Na,Nb,SAS,SK,Hb,Hb2,Set_37,SID).
 iknows(apply(F,pair(exp(G,Ea),Na)))

step step_1 (A,B,G,F,Ks,Ea,Ga,Gb,Na,Nb,SAS,SK,Dummy_Hb,Hb2,Set_37,SID,Hb) :=
 state_alice(A,B,G,F,Ks,2,Ea,Ga,Gb,Na,Nb,SAS,SK,Dummy_Hb,Hb2,Set_37,SID).
 iknows(Hb)
 =>
 state_alice(A,B,G,F,Ks,4,Ea,Ga,Gb,Na,Nb,SAS,SK,Hb,Hb2,Set_37,SID).
 iknows(pair(Ga,Na))

step step_2 (A,B,G,F,Ks,Ea,Ga,Dummy_Gb,Na,Dummy_Nb,SAS,Dummy_SK,Hb2,Set_37,SID,Gb,Nb) :=
 state_alice(A,B,G,F,Ks,4,Ea,Ga,Dummy_Gb,Na,Dummy_Nb,SAS,Dummy_SK,apply(F,pair(Gb,Nb)),Hb2,Set_37,SID).
 iknows(pair(Gb,Nb))
 =>
 state_alice(A,B,G,F,Ks,6,Ea,Ga,Gb,Na,Nb,SAS,exp(Gb,Ea),apply(F,pair(Gb,Nb)),Hb2,Set_37,SID).
 iknows(pair(xor(Na,Nb),apply(F,pair(Ks,xor(Na,Nb))))).
 witness(A,B,nb,xor(Na,Nb))

step step_3 (A,B,G,F,Ks,Ea,Ga,Gb,Dummy_Na,Nb,Dummy_SAS,SK,Hb,Hb2,Set_37,SID,Na) :=
 state_alice(A,B,G,F,Ks,6,Ea,Ga,Gb,Dummy_Na,Nb,Dummy_SAS,SK,Hb,Hb2,Set_37,SID).
 iknows(pair(xor(Nb,Dummy_Na),apply(F,pair(Ks,xor(Nb,Dummy_Na)))))
=[exists Na]=>
 state_alice(A,B,G,F,Ks,8,Ea,Ga,Gb,Na,Nb,xor(Nb,Dummy_Na),SK,Hb,Hb2,Set_37,SID).
 iknows(pair(Na,apply(F,pair(SK,Na)))).
 request(A,B,na,xor(Nb,Dummy_Na),SID)

step step_4 (A,B,G,F,Ks,Ea,Ga,Gb,Na,Dummy_Nb,SAS,SK,Hb,Dummy_Hb2,Dummy_Set_37,SID,Nb) :=
 state_alice(A,B,G,F,Ks,8,Ea,Ga,Gb,Na,Dummy_Nb,SAS,SK,Hb,Dummy_Hb2,Dummy_Set_37,SID).
 iknows(pair(Nb,apply(F,pair(SK,pair(Na,Nb)))))
 =>
 state_alice(A,B,G,F,Ks,10,Ea,Ga,Gb,Na,Nb,SAS,SK,Hb,apply(F,pair(SK,pair(Na,Nb))),Dummy_Set_37,SID).
 iknows(pair(Nb,apply(F,pair(SK,Nb)))).
 secret(SK,sec_a,Dummy_Set_37).
 contains(A,Dummy_Set_37).
 contains(B,Dummy_Set_37)

step step_5 (B,A,G,F,Ks,Dummy_Eb,Ga,Dummy_Gb,Na,Dummy_Nb,Nb2,SAS,SK,Dummy_Ha,Ha2,Set_62,SID,Eb,Nb,Ha) :=
 state_bob(B,A,G,F,Ks,1,Dummy_Eb,Ga,Dummy_Gb,Na,Dummy_Nb,Nb2,SAS,SK,Dummy_Ha,Ha2,Set_62,SID).
 iknows(Ha)
=[exists Nb,Eb]=>
 state_bob(B,A,G,F,Ks,3,Eb,Ga,exp(G,Eb),Na,Nb,Nb2,SAS,SK,Ha,Ha2,Set_62,SID).
 iknows(apply(F,pair(exp(G,Eb),Nb)))

step step_6 (B,A,G,F,Ks,Eb,Dummy_Ga,Gb,Dummy_Na,Nb,Nb2,SAS,Dummy_SK,Ha2,Set_62,SID,Ga,Na) :=
 state_bob(B,A,G,F,Ks,3,Eb,Dummy_Ga,Gb,Dummy_Na,Nb,Nb2,SAS,Dummy_SK,apply(F,pair(Ga,Na)),Ha2,Set_62,SID).
 iknows(pair(Ga,Na))
 =>
 state_bob(B,A,G,F,Ks,5,Eb,Ga,Gb,Na,Nb,Nb2,SAS,exp(Ga,Eb),apply(F,pair(Ga,Na)),Ha2,Set_62,SID).
 iknows(pair(Gb,Nb))

step step_7 (B,A,G,F,Ks,Eb,Ga,Gb,Na,Nb,Nb2,Dummy_SAS,SK,Ha,Ha2,Set_62,SID) :=
 state_bob(B,A,G,F,Ks,5,Eb,Ga,Gb,Na,Nb,Nb2,Dummy_SAS,SK,Ha,Ha2,Set_62,SID).
 iknows(pair(xor(Na,Nb),apply(F,pair(Ks,xor(Na,Nb)))))
 =>
 state_bob(B,A,G,F,Ks,7,Eb,Ga,Gb,Na,Nb,Nb2,xor(Na,Nb),SK,Ha,Ha2,Set_62,SID).
 iknows(pair(xor(pair(Nb,Na)),apply(F,pair(Ks,xor(pair(Nb,Na)))))).
 request(B,A,nb,xor(Na,Nb),SID).
 witness(B,A,na,xor(Nb,Na))

step step_8 (B,A,G,F,Ks,Eb,Ga,Gb,Dummy_Na,Dummy_Nb,Nb2,SAS,SK,Ha,Dummy_Ha2,Set_62,SID,Na,Nb) :=
 state_bob(B,A,G,F,Ks,7,Eb,Ga,Gb,Dummy_Na,Dummy_Nb,Nb2,SAS,SK,Ha,Dummy_Ha2,Set_62,SID).
 iknows(pair(Na,apply(F,pair(SK,Na))))
=[exists Nb]=>
 state_bob(B,A,G,F,Ks,9,Eb,Ga,Gb,Na,Nb,Nb2,SAS,SK,Ha,apply(F,pair(SK,Na)),Set_62,SID).
 iknows(pair(Nb,apply(F,pair(SK,pair(Na,Nb)))))

step step_9 (B,A,G,F,Ks,Eb,Ga,Gb,Na,Nb2,Dummy_Nb2,SAS,SK,Dummy_Ha,Ha2,Dummy_Set_62,SID) :=
 state_bob(B,A,G,F,Ks,9,Eb,Ga,Gb,Na,Nb2,Dummy_Nb2,SAS,SK,Dummy_Ha,Ha2,Dummy_Set_62,SID).
 iknows(pair(Nb2,apply(F,pair(SK,Nb2))))
 =>
 state_bob(B,A,G,F,Ks,11,Eb,Ga,Gb,Na,Nb2,Nb2,SAS,SK,apply(F,pair(SK,Nb2)),Ha2,Dummy_Set_62,SID).
 secret(SK,sec_b,Dummy_Set_62).
 contains(A,Dummy_Set_62).
 contains(B,Dummy_Set_62)


section properties:

property secrecy_of_sec_a (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_a,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_sec_b (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_b,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property authentication_on_na (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,na,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,na,MGoal))
     /\ ((request(A1Goal,A2Goal,na,MGoal,SID1)
           /\ request(A1Goal,A2Goal,na,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_nb (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,nb,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,nb,MGoal))
     /\ ((request(A1Goal,A2Goal,nb,MGoal,SID1)
           /\ request(A1Goal,A2Goal,nb,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state secrecy_of_sec_a (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_a,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_sec_b (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_b,ASGoal) &
 not(contains(i,ASGoal))

attack_state authentication_on_na (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,na,MGoal,SID) &
 not(witness(A2Goal,A1Goal,na,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_na (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,na,MGoal,SID1).
 request(A1Goal,A2Goal,na,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_nb (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,nb,MGoal,SID) &
 not(witness(A2Goal,A1Goal,nb,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_nb (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,nb,MGoal,SID1).
 request(A1Goal,A2Goal,nb,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

