%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfile2bnZYB

section signature:

state_server: agent * agent * hash_func * hash_func * nat * nat * message * message * message * message * message * message * message * message * set(agent) * nat -> fact
state_user: agent * agent * hash_func * hash_func * nat * nat * nat * message * message * message * message * message * message * set(agent) * set(agent) * set(agent) * set(agent) * nat -> fact


section types:

ea, eb, ehpasswd, s_a, en, ec3, ec2, ec1, a_s, ep: protocol_id
succ, h, Succ, H: hash_func
set_100, set_85, set_84, set_83, set_82, set_112, set_111, set_110, set_109, set_108: set
Dummy_C3, Dummy_C2, Dummy_C1, Dummy_P, Dummy_HashPasswd, dummy_msg, MGoal, HPasswd, HashPasswd, C1, C2, C3, P, F, B, start, Dummy_B, Dummy_F, Dummy_HPasswd: message
Dummy_Set_35, Dummy_Set_33, Dummy_Set_31, Dummy_Set_25, ASGoal, Set_55, Set_35, Set_33, Set_31, Set_25, Dummy_Set_55: set(agent)
A2Goal, A1Goal, a, s, S, A, i: agent
Dummy_State, 3, SID, dummy_nat, 7, 5, State, N, 4, 2, 1, 0, M, Dummy_N: nat


section inits:

initial_state init1 := 
 iknows(start).
 iknows(a).
 iknows(s).
 iknows(succ).
 iknows(h).
 iknows(i).
 state_user(a,s,succ,h,0,1,dummy_nat,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,set_82,set_83,set_84,set_85,3).
 state_server(s,a,succ,h,1,dummy_nat,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,set_100,4).
 state_server(s,i,succ,h,1,dummy_nat,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,set_112,7)


section rules:

step step_0 (A,S,Succ,H,N,M,Dummy_HashPasswd,HPasswd,C1,C2,C3,Dummy_P,Dummy_Set_25,Set_31,Set_33,Set_35,SID,P) :=
 state_user(A,S,Succ,H,0,N,M,Dummy_HashPasswd,HPasswd,C1,C2,C3,Dummy_P,Dummy_Set_25,Set_31,Set_33,Set_35,SID).
 iknows(start)
=[exists P]=>
 state_user(A,S,Succ,H,2,N,M,apply(H,apply(H,xor(P,1))),HPasswd,C1,C2,C3,P,Dummy_Set_25,Set_31,Set_33,Set_35,SID).
 iknows(A).
 secret(P,ep,Dummy_Set_25).
 witness(S,A,a_s,P).
 contains(A,Dummy_Set_25).
 contains(S,Dummy_Set_25)

step step_1 (A,S,Succ,H,N,M,HashPasswd,HPasswd,Dummy_C1,Dummy_C2,Dummy_C3,P,Set_25,Dummy_Set_31,Dummy_Set_33,Dummy_Set_35,SID) :=
 state_user(A,S,Succ,H,2,N,M,HashPasswd,HPasswd,Dummy_C1,Dummy_C2,Dummy_C3,P,Set_25,Dummy_Set_31,Dummy_Set_33,Dummy_Set_35,SID).
 iknows(M)
 =>
 state_user(A,S,Succ,H,4,N,M,HashPasswd,HPasswd,xor(apply(H,xor(P,M)),apply(H,apply(H,xor(P,M)))),xor(apply(H,xor(P,M)),apply(H,apply(H,xor(P,apply(Succ,M))))),apply(H,apply(H,apply(H,xor(P,apply(Succ,M))))),P,Set_25,Dummy_Set_31,Dummy_Set_33,Dummy_Set_35,SID).
 iknows(xor(apply(H,xor(P,M)),apply(H,apply(H,xor(P,M))))).
 secret(xor(apply(H,xor(P,M)),apply(H,apply(H,xor(P,M)))),ec1,Dummy_Set_31).
 secret(xor(apply(H,xor(P,M)),apply(H,apply(H,xor(P,apply(Succ,M))))),ec2,Dummy_Set_33).
 secret(apply(H,apply(H,apply(H,xor(P,apply(Succ,M))))),ec3,Dummy_Set_35).
 witness(S,A,a_s,xor(apply(H,xor(P,M)),apply(H,apply(H,xor(P,M))))).
 witness(S,A,a_s,xor(apply(H,xor(P,M)),apply(H,apply(H,xor(P,apply(Succ,M)))))).
 witness(S,A,a_s,apply(H,apply(H,apply(H,xor(P,apply(Succ,M)))))).
 contains(A,Dummy_Set_31).
 contains(S,Dummy_Set_31).
 contains(A,Dummy_Set_33).
 contains(S,Dummy_Set_33).
 contains(A,Dummy_Set_35).
 contains(S,Dummy_Set_35)

step step_2 (S,A,Succ,H,N,HPasswd,HashPasswd,C1,C2,C3,P,F,B,Dummy_Set_55,SID) :=
 state_server(S,A,Succ,H,1,N,HPasswd,HashPasswd,C1,C2,C3,P,F,B,Dummy_Set_55,SID).
 iknows(start)
 =>
 state_server(S,A,Succ,H,3,N,HPasswd,HashPasswd,C1,C2,C3,P,F,B,Dummy_Set_55,SID).
 iknows(N).
 secret(N,en,Dummy_Set_55).
 witness(A,S,s_a,N).
 contains(S,Dummy_Set_55).
 contains(A,Dummy_Set_55)

step step_3 (S,A,Succ,H,N,Dummy_HPasswd,HashPasswd,C1,C2,C3,P,F,B,Set_55,SID) :=
 state_server(S,A,Succ,H,3,N,Dummy_HPasswd,HashPasswd,C1,C2,C3,P,F,B,Set_55,SID).
 iknows(A)
 =>
 state_server(S,A,Succ,H,5,N,HashPasswd,HashPasswd,C1,C2,C3,P,F,B,Set_55,SID).
 wrequest(S,A,s_a,N,SID)

step step_4 (S,A,Succ,H,Dummy_N,Dummy_HPasswd,HashPasswd,C1,C2,B,P,Dummy_F,Dummy_B,Set_55,SID) :=
 state_server(S,A,Succ,H,5,Dummy_N,Dummy_HPasswd,HashPasswd,C1,C2,B,P,Dummy_F,Dummy_B,Set_55,SID).
 iknows(C1)
 =>
 state_server(S,A,Succ,H,7,apply(Succ,N),xor(C2,xor(C1,HPasswd)),HashPasswd,C1,C2,xor(C2,xor(C1,xor(C2,xor(C1,HPasswd)))),P,xor(C1,xor(C2,xor(C1,HPasswd))),xor(C2,xor(C1,xor(C2,xor(C1,HPasswd)))),Set_55,SID).
 wrequest(S,A,s_a,Dummy_N,SID)


section properties:

property weak_authentication_on_s_a (A1Goal,A2Goal,MGoal,SID) :=
 [] ((wrequest(A1Goal,A2Goal,s_a,MGoal,SID)
      /\ ~ equal(A2Goal,i))
     => witness(A2Goal,A1Goal,s_a,MGoal))

property weak_authentication_on_a_s (A1Goal,A2Goal,MGoal,SID) :=
 [] ((wrequest(A1Goal,A2Goal,a_s,MGoal,SID)
      /\ ~ equal(A2Goal,i))
     => witness(A2Goal,A1Goal,a_s,MGoal))

property secrecy_of_en (MGoal,ASGoal) :=
 [] ((secret(MGoal,en,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_ea (MGoal,ASGoal) :=
 [] ((secret(MGoal,ea,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_eb (MGoal,ASGoal) :=
 [] ((secret(MGoal,eb,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_ehpasswd (MGoal,ASGoal) :=
 [] ((secret(MGoal,ehpasswd,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_ep (MGoal,ASGoal) :=
 [] ((secret(MGoal,ep,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_ec1 (MGoal,ASGoal) :=
 [] ((secret(MGoal,ec1,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_ec2 (MGoal,ASGoal) :=
 [] ((secret(MGoal,ec2,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_ec3 (MGoal,ASGoal) :=
 [] ((secret(MGoal,ec3,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))


section attack_states:

attack_state weak_authentication_on_s_a (A1Goal,A2Goal,MGoal,SID) :=
 wrequest(A1Goal,A2Goal,s_a,MGoal,SID) &
 not(witness(A2Goal,A1Goal,s_a,MGoal)) &
 not(equal(A2Goal,i))

attack_state weak_authentication_on_a_s (A1Goal,A2Goal,MGoal,SID) :=
 wrequest(A1Goal,A2Goal,a_s,MGoal,SID) &
 not(witness(A2Goal,A1Goal,a_s,MGoal)) &
 not(equal(A2Goal,i))

attack_state secrecy_of_en (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,en,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_ea (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,ea,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_eb (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,eb,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_ehpasswd (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,ehpasswd,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_ep (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,ep,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_ec1 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,ec1,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_ec2 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,ec2,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_ec3 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,ec3,ASGoal) &
 not(contains(i,ASGoal))

