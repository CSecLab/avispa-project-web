%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfileEjqQ2U

section signature:

state_tag: agent * agent * symmetric_key * hash_func * text * text * nat * text * text * text * text * text * text * text * set(agent) * nat -> fact
state_reader: agent * agent * symmetric_key * hash_func * text * text * nat * text * text * text * text * text * text * text * set(agent) * nat -> fact


section types:

MGoal, start: message
sec_kj2, dj, cj, rj2, sec_kj1: protocol_id
Dummy_DJ, Dummy_YJ, Dummy_CJ, Dummy_BJ, Dummy_AJ, Dummy_TJ, Dummy_RJ2, Dummy_RJ1, dummy_nonce, idj, idi, yj, yi, AJ, BJ, CJ, DJ, RJ1, RJ2, TJ, IDJ, YJ: text
h, H: hash_func
kj, ki, KJ: symmetric_key
4, SID, Dummy_State, 3, SID2, SID1, 5, State, 6, 2, 1, 0, 13, 9, 7: nat
A2Goal, A1Goal, a, b, B, A, i: agent
set_98, set_84, set_110, set_109, set_108, set_106, set_104, set_102: set
Dummy_Set_31, ASGoal, Set_54, Set_31, Dummy_Set_54: set(agent)


section inits:

initial_state init1 := 
 iknows(start).
 iknows(a).
 iknows(b).
 iknows(h).
 iknows(ki).
 iknows(idi).
 iknows(yi).
 iknows(i).
 state_reader(a,b,kj,h,idj,yj,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_84,3).
 state_tag(b,a,kj,h,idj,yj,1,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_98,4).
 state_reader(a,b,kj,h,idj,yj,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_102,6).
 state_tag(b,a,kj,h,idj,yj,1,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_104,7).
 state_reader(a,i,ki,h,idi,yi,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_106,9).
 state_tag(b,i,ki,h,idi,yi,1,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_110,13)


section rules:

step step_0 (A,B,KJ,H,IDJ,YJ,Dummy_RJ1,RJ2,TJ,AJ,BJ,CJ,DJ,Set_31,SID,RJ1) :=
 state_reader(A,B,KJ,H,IDJ,YJ,0,Dummy_RJ1,RJ2,TJ,AJ,BJ,CJ,DJ,Set_31,SID).
 iknows(start)
=[exists RJ1]=>
 state_reader(A,B,KJ,H,IDJ,YJ,2,RJ1,RJ2,TJ,AJ,BJ,CJ,DJ,Set_31,SID).
 iknows(RJ1)

step step_1 (A,B,KJ,H,IDJ,YJ,RJ1,Dummy_RJ2,Dummy_TJ,Dummy_AJ,Dummy_BJ,Dummy_CJ,DJ,Dummy_Set_31,SID,TJ,AJ) :=
 state_reader(A,B,KJ,H,IDJ,YJ,2,RJ1,Dummy_RJ2,Dummy_TJ,Dummy_AJ,Dummy_BJ,Dummy_CJ,DJ,Dummy_Set_31,SID).
 iknows(pair(AJ,pair(BJ,TJ)))
 =>
 state_reader(A,B,KJ,H,IDJ,YJ,4,RJ1,xor(AJ,apply(H,xor(KJ,xor(RJ1,IDJ)))),TJ,AJ,apply(H,xor(IDJ,xor(xor(AJ,apply(H,xor(KJ,xor(RJ1,IDJ)))),xor(KJ,TJ)))),apply(H,xor(RJ1,xor(xor(AJ,apply(H,xor(KJ,xor(RJ1,IDJ)))),KJ))),DJ,Dummy_Set_31,SID).
 witness(A,B,cj,apply(H,xor(RJ1,xor(xor(AJ,apply(H,xor(KJ,xor(RJ1,IDJ)))),KJ)))).
 iknows(apply(H,xor(RJ1,xor(xor(AJ,apply(H,xor(KJ,xor(RJ1,IDJ)))),KJ)))).
 secret(KJ,sec_kj1,Dummy_Set_31).
 contains(A,Dummy_Set_31).
 contains(B,Dummy_Set_31)

step step_2 (A,B,KJ,H,IDJ,Dummy_YJ,RJ1,RJ2,TJ,AJ,BJ,CJ,Dummy_DJ,Set_31,SID,YJ) :=
 state_reader(A,B,KJ,H,IDJ,Dummy_YJ,4,RJ1,RJ2,TJ,AJ,BJ,CJ,Dummy_DJ,Set_31,SID).
 iknows(pair(YJ,DJ))
 =>
 state_reader(A,B,KJ,H,IDJ,YJ,6,RJ1,RJ2,TJ,AJ,BJ,CJ,apply(H,xor(YJ,xor(KJ,RJ1))),Set_31,SID).
 request(A,B,dj,apply(H,xor(YJ,xor(KJ,RJ1))),SID)

step step_3 (B,A,KJ,H,IDJ,YJ,Dummy_RJ1,Dummy_RJ2,Dummy_TJ,Dummy_AJ,Dummy_BJ,CJ,DJ,Dummy_Set_54,SID,RJ1,RJ2,TJ) :=
 state_tag(B,A,KJ,H,IDJ,YJ,1,Dummy_RJ1,Dummy_RJ2,Dummy_TJ,Dummy_AJ,Dummy_BJ,CJ,DJ,Dummy_Set_54,SID).
 iknows(RJ1)
=[exists TJ,RJ2]=>
 state_tag(B,A,KJ,H,IDJ,YJ,3,RJ1,RJ2,TJ,xor(RJ2,apply(H,xor(KJ,xor(RJ1,IDJ)))),apply(H,xor(IDJ,xor(RJ2,xor(KJ,TJ)))),CJ,DJ,Dummy_Set_54,SID).
 iknows(pair(xor(RJ2,apply(H,xor(KJ,xor(RJ1,IDJ)))),pair(apply(H,xor(IDJ,xor(RJ2,xor(KJ,TJ)))),TJ))).
 secret(KJ,sec_kj2,Dummy_Set_54).
 contains(B,Dummy_Set_54).
 contains(A,Dummy_Set_54)

step step_4 (B,A,KJ,H,IDJ,YJ,RJ1,RJ2,TJ,AJ,BJ,Dummy_CJ,Dummy_DJ,Set_54,SID) :=
 state_tag(B,A,KJ,H,IDJ,YJ,3,RJ1,RJ2,TJ,AJ,BJ,Dummy_CJ,Dummy_DJ,Set_54,SID).
 iknows(CJ)
 =>
 state_tag(B,A,KJ,H,IDJ,YJ,5,RJ1,RJ2,TJ,AJ,BJ,apply(H,xor(RJ1,xor(RJ2,KJ))),apply(H,xor(YJ,xor(KJ,RJ1))),Set_54,SID).
 request(B,A,cj,apply(H,xor(RJ1,xor(RJ2,KJ))),SID).
 iknows(pair(YJ,apply(H,xor(YJ,xor(KJ,RJ1))))).
 witness(B,A,dj,apply(H,xor(YJ,xor(KJ,RJ1))))


section properties:

property secrecy_of_sec_kj1 (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_kj1,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_sec_kj2 (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_kj2,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property authentication_on_cj (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,cj,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,cj,MGoal))
     /\ ((request(A1Goal,A2Goal,cj,MGoal,SID1)
           /\ request(A1Goal,A2Goal,cj,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_dj (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,dj,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,dj,MGoal))
     /\ ((request(A1Goal,A2Goal,dj,MGoal,SID1)
           /\ request(A1Goal,A2Goal,dj,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state secrecy_of_sec_kj1 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_kj1,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_sec_kj2 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_kj2,ASGoal) &
 not(contains(i,ASGoal))

attack_state authentication_on_cj (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,cj,MGoal,SID) &
 not(witness(A2Goal,A1Goal,cj,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_cj (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,cj,MGoal,SID1).
 request(A1Goal,A2Goal,cj,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_dj (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,dj,MGoal,SID) &
 not(witness(A2Goal,A1Goal,dj,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_dj (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,dj,MGoal,SID1).
 request(A1Goal,A2Goal,dj,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

