%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfileSdJ7kq

section signature:

state_ss: agent * agent * symmetric_key * nat * text * text * set(agent) * nat -> fact
state_uac: agent * agent * symmetric_key * nat * text * text * set(agent) * nat -> fact


section types:

ns, uac_ss_ns, ss_uac_nu, nu: protocol_id
5, 3, 1, State, 13, 4, 9, 7, 6, 2, 0, SID, Dummy_State: nat
Nu, Ns, Dummy_Ns, Dummy_Nu, dummy_nonce: text
set_73, set_72, set_71, set_69, set_67, set_65, set_61, set_53: set
Set_36, Set_17, Dummy_Set_36, Dummy_Set_17, ASGoal: set(agent)
UAC, SS, ss, uac, i: agent
start, MGoal: message
kus, kiu, kis, Kus, kui: symmetric_key


section inits:

initial_state init1 := 
 iknows(start).
 iknows(uac).
 iknows(ss).
 iknows(kui).
 iknows(kis).
 iknows(i).
 state_uac(uac,ss,kus,0,dummy_nonce,dummy_nonce,set_53,3).
 state_ss(ss,uac,kus,1,dummy_nonce,dummy_nonce,set_61,4).
 state_uac(ss,uac,kus,0,dummy_nonce,dummy_nonce,set_65,6).
 state_ss(uac,ss,kus,1,dummy_nonce,dummy_nonce,set_67,7).
 state_uac(uac,i,kui,0,dummy_nonce,dummy_nonce,set_69,9).
 state_ss(ss,i,kis,1,dummy_nonce,dummy_nonce,set_73,13)


section rules:

step step_0 (UAC,SS,Kus,Dummy_Nu,Ns,Dummy_Set_17,SID,Nu) :=
 state_uac(UAC,SS,Kus,0,Dummy_Nu,Ns,Dummy_Set_17,SID).
 iknows(start)
=[exists Nu]=>
 state_uac(UAC,SS,Kus,2,Nu,Ns,Dummy_Set_17,SID).
 iknows(pair(UAC,pair(SS,Nu))).
 secret(Nu,nu,Dummy_Set_17).
 contains(UAC,Dummy_Set_17).
 contains(SS,Dummy_Set_17)

step step_1 (UAC,SS,Kus,Nu,Dummy_Ns,Set_17,SID,Ns) :=
 state_uac(UAC,SS,Kus,2,Nu,Dummy_Ns,Set_17,SID).
 iknows(pair(SS,pair(UAC,pair(Nu,Ns))))
 =>
 state_uac(UAC,SS,Kus,4,Nu,Ns,Set_17,SID).
 iknows(pair(UAC,pair(SS,Ns)))

step step_2 (SS,UAC,Kus,Dummy_Nu,Dummy_Ns,Dummy_Set_36,SID,Nu,Ns) :=
 state_ss(SS,UAC,Kus,1,Dummy_Nu,Dummy_Ns,Dummy_Set_36,SID).
 iknows(pair(UAC,pair(SS,Nu)))
=[exists Ns]=>
 state_ss(SS,UAC,Kus,3,Nu,Ns,Dummy_Set_36,SID).
 iknows(pair(SS,pair(UAC,pair(Nu,Ns)))).
 secret(Ns,ns,Dummy_Set_36).
 contains(UAC,Dummy_Set_36).
 contains(SS,Dummy_Set_36)

step step_3 (SS,UAC,Kus,Nu,Ns,Set_36,SID) :=
 state_ss(SS,UAC,Kus,3,Nu,Ns,Set_36,SID).
 iknows(pair(UAC,pair(SS,Ns)))
 =>
 state_ss(SS,UAC,Kus,5,Nu,Ns,Set_36,SID)


section properties:

property secrecy_of_nu (MGoal,ASGoal) :=
 [] ((secret(MGoal,nu,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_ns (MGoal,ASGoal) :=
 [] ((secret(MGoal,ns,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))


section attack_states:

attack_state secrecy_of_nu (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,nu,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_ns (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,ns,ASGoal) &
 not(contains(i,ASGoal))

