%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfilekv3Ogf

section signature:

state_bob: agent * agent * symmetric_key * hash_func * hash_func * nat * text * text * message * message * message * set(agent) * nat -> fact
state_alice: agent * agent * symmetric_key * hash_func * hash_func * nat * text * text * message * message * message * nat -> fact


section types:

set_87, set_86, set_81: set
k1, bob_alice_na, bob_alice_nb: protocol_id
Set_44, Dummy_Set_44, ASGoal: set(agent)
K1, M, H, Dummy_H, Dummy_K1, dummy_msg, start, MGoal: message
Nb, Na, Dummy_Nb, Dummy_Na, dummy_nonce: text
5, 10, State, 6, 4, SID, Dummy_State, 3, 2, SID2, SID1, 1, 0: nat
Hash, Succ, h, succ: hash_func
K, kab, kai, kib: symmetric_key
A, B, A2Goal, A1Goal, a, b, i: agent


section inits:

initial_state init1 := 
 iknows(start).
 iknows(a).
 iknows(b).
 iknows(h).
 iknows(succ).
 iknows(kai).
 iknows(kib).
 iknows(i).
 state_alice(a,b,kab,h,succ,0,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,3).
 state_bob(b,a,kab,h,succ,1,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,set_81,4).
 state_alice(a,i,kai,h,succ,0,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,6).
 state_bob(b,i,kib,h,succ,1,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,set_87,10)


section rules:

step step_0 (A,B,K,Hash,Succ,Dummy_Na,Nb,K1,M,H,SID,Na) :=
 state_alice(A,B,K,Hash,Succ,0,Dummy_Na,Nb,K1,M,H,SID).
 iknows(start)
=[exists Na]=>
 state_alice(A,B,K,Hash,Succ,2,Na,Nb,K1,M,H,SID).
 iknows(scrypt(K,Na))

step step_1 (A,B,K,Hash,Succ,Dummy_Na,Dummy_Nb,Dummy_K1,M,H,SID,Na,Nb) :=
 state_alice(A,B,K,Hash,Succ,2,Dummy_Na,Dummy_Nb,Dummy_K1,M,H,SID).
 iknows(scrypt(K,Nb))
=[exists Na]=>
 state_alice(A,B,K,Hash,Succ,4,Na,Nb,apply(Hash,pair(Dummy_Na,Nb)),M,H,SID).
 iknows(pair(scrypt(apply(Hash,pair(Dummy_Na,Nb)),pair(Nb,Na)),apply(Succ,M))).
 witness(A,B,bob_alice_nb,Nb)

step step_2 (A,B,K,Hash,Succ,Na,Nb,K1,M,Dummy_H,SID,H) :=
 state_alice(A,B,K,Hash,Succ,4,Na,Nb,K1,M,Dummy_H,SID).
 iknows(scrypt(K,pair(H,Na)))
 =>
 state_alice(A,B,K,Hash,Succ,6,Na,Nb,K1,M,H,SID).
 request(B,A,bob_alice_na,Na,SID)

step step_3 (B,A,K,Hash,Succ,Dummy_Nb,Dummy_Na,Dummy_K1,M,H,Dummy_Set_44,SID,Nb,Na) :=
 state_bob(B,A,K,Hash,Succ,1,Dummy_Nb,Dummy_Na,Dummy_K1,M,H,Dummy_Set_44,SID).
 iknows(scrypt(K,Na))
=[exists Nb]=>
 state_bob(B,A,K,Hash,Succ,3,Nb,Na,apply(Hash,pair(Na,Nb)),M,H,Dummy_Set_44,SID).
 iknows(scrypt(K,Nb)).
 secret(apply(Hash,pair(Na,Nb)),k1,Dummy_Set_44).
 contains(A,Dummy_Set_44).
 contains(B,Dummy_Set_44)

step step_4 (B,A,K,Hash,Succ,Nb,Dummy_Na,K1,M,Dummy_H,Set_44,SID,Na) :=
 state_bob(B,A,K,Hash,Succ,3,Nb,Dummy_Na,K1,M,Dummy_H,Set_44,SID).
 iknows(pair(scrypt(K1,pair(Nb,Na)),apply(Succ,M)))
 =>
 state_bob(B,A,K,Hash,Succ,5,Nb,Na,K1,M,apply(Succ,M),Set_44,SID).
 request(B,A,bob_alice_nb,Nb,SID).
 iknows(scrypt(K,pair(apply(Succ,M),Na))).
 witness(B,A,bob_alice_na,Na)


section properties:

property secrecy_of_k1 (MGoal,ASGoal) :=
 [] ((secret(MGoal,k1,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property authentication_on_bob_alice_nb (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,bob_alice_nb,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,bob_alice_nb,MGoal))
     /\ ((request(A1Goal,A2Goal,bob_alice_nb,MGoal,SID1)
           /\ request(A1Goal,A2Goal,bob_alice_nb,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_bob_alice_na (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,bob_alice_na,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,bob_alice_na,MGoal))
     /\ ((request(A1Goal,A2Goal,bob_alice_na,MGoal,SID1)
           /\ request(A1Goal,A2Goal,bob_alice_na,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state secrecy_of_k1 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,k1,ASGoal) &
 not(contains(i,ASGoal))

attack_state authentication_on_bob_alice_nb (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,bob_alice_nb,MGoal,SID) &
 not(witness(A2Goal,A1Goal,bob_alice_nb,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_bob_alice_nb (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,bob_alice_nb,MGoal,SID1).
 request(A1Goal,A2Goal,bob_alice_nb,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_bob_alice_na (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,bob_alice_na,MGoal,SID) &
 not(witness(A2Goal,A1Goal,bob_alice_na,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_bob_alice_na (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,bob_alice_na,MGoal,SID1).
 request(A1Goal,A2Goal,bob_alice_na,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

