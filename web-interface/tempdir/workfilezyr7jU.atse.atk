
----------------
  AtSe Summary  
----------------

  Protocol file: /home/avispa/web-interface-computation/./tempdir/workfilezyr7jU.if
  Attack found : NO

  Analysed   : 0 states
  Reachable  : 0 states
  Translation: 18.53 seconds
  Computation: 0.00 seconds


---------------------------------------------
            Internal System State            
  (initial state after reading the if file)  
---------------------------------------------

Intruder state :
----------------

Intruder Knowledge :  start i ha cs u 


Interpreted protocol specification :
------------------------------------

Role useri played by (u,17):
| start => n23(Ni1).
|      {dummy_nonce.{n23(Ni1).dummy_nonce.{dummy_nonce.dummy_nonce}_ha.dummy_nonce}_ha}_ha.
|      xor(dummy_nonce,{xor().n23(Ni1).n23(Tsi).00}_ha).
|      xor(dummy_nonce,{xor().n23(Ni1).n23(Tsi).11}_ha).
|      {dummy_nonce.dummy_nonce}_ha.n23(Tsi)
|    & Secret(dummy_nonce,set_182);  Add u to set_182;  Add s to set_182;
|    & Add cs to set_182;

Role serverj played by (s,16):
| fi.pij.cidi.gi.pidi.tsi => fi.pij.cidi.gi.pidi.tsi.xor().
|      {n21(Ni2).dummy_nonce.pij.tsi}_ha.
|      xor(dummy_nonce,{dummy_nonce.n21(Ni2).tsi.00}_ha).
|      xor(dummy_nonce,{dummy_nonce.n21(Ni2).tsi.11}_ha).
|      {dummy_nonce.dummy_nonce}_ha
|    & Secret(dummy_nonce,set_180);  Add u to set_180;  Add s to set_180;
|    & Add cs to set_180;

Role controlserver played by (cs,15):
| fi.pij.cidi.gi.pidi.tsi.ji.ki.li.mi.psidj
|   => xor(fi,xor(n19(Ni3),xor({xor(li,{{psidj.dummy_nonce}_ha.xor(ji,{psidj.dummy_nonce}_ha).tsi.00}_ha).xor(ji,{psidj.dummy_nonce}_ha).{psidj.dummy_nonce}_ha}_ha,{pidi.dummy_nonce}_ha))).
|      {xor(fi,xor(n19(Ni3),{pidi.dummy_nonce}_ha))}_ha.
|      xor(ji,xor(n19(Ni3),xor({xor(cidi,{{pidi.dummy_nonce}_ha.xor(fi,{pidi.dummy_nonce}_ha).tsi.00}_ha).xor(fi,{pidi.dummy_nonce}_ha).{pidi.dummy_nonce}_ha}_ha,{psidj.dummy_nonce}_ha))).
|      {xor(ji,xor(n19(Ni3),{psidj.dummy_nonce}_ha))}_ha

Role useri played by (u,13):
| start => n17(Ni1).
|      {dummy_nonce.{n17(Ni1).dummy_nonce.{dummy_nonce.dummy_nonce}_ha.dummy_nonce}_ha}_ha.
|      xor(dummy_nonce,{xor().n17(Ni1).n17(Tsi).00}_ha).
|      xor(dummy_nonce,{xor().n17(Ni1).n17(Tsi).11}_ha).
|      {dummy_nonce.dummy_nonce}_ha.n17(Tsi)
|    & Secret(dummy_nonce,set_177);  Add u to set_177;  Add s to set_177;
|    & Add cs to set_177;

Role serverj played by (s,12):
| fi.pij.cidi.gi.pidi.tsi => fi.pij.cidi.gi.pidi.tsi.xor().
|      {n15(Ni2).dummy_nonce.pij.tsi}_ha.
|      xor(dummy_nonce,{dummy_nonce.n15(Ni2).tsi.00}_ha).
|      xor(dummy_nonce,{dummy_nonce.n15(Ni2).tsi.11}_ha).
|      {dummy_nonce.dummy_nonce}_ha
|    & Secret(dummy_nonce,set_175);  Add u to set_175;  Add s to set_175;
|    & Add cs to set_175;

Role controlserver played by (cs,11):
| fi.pij.cidi.gi.pidi.tsi.ji.ki.li.mi.psidj
|   => xor(fi,xor(n13(Ni3),xor({xor(li,{{psidj.dummy_nonce}_ha.xor(ji,{psidj.dummy_nonce}_ha).tsi.00}_ha).xor(ji,{psidj.dummy_nonce}_ha).{psidj.dummy_nonce}_ha}_ha,{pidi.dummy_nonce}_ha))).
|      {xor(fi,xor(n13(Ni3),{pidi.dummy_nonce}_ha))}_ha.
|      xor(ji,xor(n13(Ni3),xor({xor(cidi,{{pidi.dummy_nonce}_ha.xor(fi,{pidi.dummy_nonce}_ha).tsi.00}_ha).xor(fi,{pidi.dummy_nonce}_ha).{pidi.dummy_nonce}_ha}_ha,{psidj.dummy_nonce}_ha))).
|      {xor(ji,xor(n13(Ni3),{psidj.dummy_nonce}_ha))}_ha

Role useri played by (u,9):
| start => n11(Ni1).
|      {dummy_nonce.{n11(Ni1).dummy_nonce.{dummy_nonce.dummy_nonce}_ha.dummy_nonce}_ha}_ha.
|      xor(dummy_nonce,{xor().n11(Ni1).n11(Tsi).00}_ha).
|      xor(dummy_nonce,{xor().n11(Ni1).n11(Tsi).11}_ha).
|      {dummy_nonce.dummy_nonce}_ha.n11(Tsi)
|    & Secret(dummy_nonce,set_172);  Add u to set_172;  Add s to set_172;
|    & Add cs to set_172;

Role serverj played by (s,8):
| fi.pij.cidi.gi.pidi.tsi => fi.pij.cidi.gi.pidi.tsi.xor().
|      {n9(Ni2).dummy_nonce.pij.tsi}_ha.
|      xor(dummy_nonce,{dummy_nonce.n9(Ni2).tsi.00}_ha).
|      xor(dummy_nonce,{dummy_nonce.n9(Ni2).tsi.11}_ha).
|      {dummy_nonce.dummy_nonce}_ha
|    & Secret(dummy_nonce,set_170);  Add u to set_170;  Add s to set_170;
|    & Add cs to set_170;

Role controlserver played by (cs,7):
| fi.pij.cidi.gi.pidi.tsi.ji.ki.li.mi.psidj
|   => xor(fi,xor(n7(Ni3),xor({xor(li,{{psidj.dummy_nonce}_ha.xor(ji,{psidj.dummy_nonce}_ha).tsi.00}_ha).xor(ji,{psidj.dummy_nonce}_ha).{psidj.dummy_nonce}_ha}_ha,{pidi.dummy_nonce}_ha))).
|      {xor(fi,xor(n7(Ni3),{pidi.dummy_nonce}_ha))}_ha.
|      xor(ji,xor(n7(Ni3),xor({xor(cidi,{{pidi.dummy_nonce}_ha.xor(fi,{pidi.dummy_nonce}_ha).tsi.00}_ha).xor(fi,{pidi.dummy_nonce}_ha).{pidi.dummy_nonce}_ha}_ha,{psidj.dummy_nonce}_ha))).
|      {xor(ji,xor(n7(Ni3),{psidj.dummy_nonce}_ha))}_ha

Role useri played by (u,5):
| start => n5(Ni1).
|      {dummy_nonce.{n5(Ni1).dummy_nonce.{dummy_nonce.dummy_nonce}_ha.dummy_nonce}_ha}_ha.
|      xor(dummy_nonce,{xor().n5(Ni1).n5(Tsi).00}_ha).
|      xor(dummy_nonce,{xor().n5(Ni1).n5(Tsi).11}_ha).
|      {dummy_nonce.dummy_nonce}_ha.n5(Tsi)
|    & Secret(dummy_nonce,set_158);  Add u to set_158;  Add s to set_158;
|    & Add cs to set_158;

Role serverj played by (s,4):
| fi.pij.cidi.gi.pidi.tsi => fi.pij.cidi.gi.pidi.tsi.xor().
|      {n3(Ni2).dummy_nonce.pij.tsi}_ha.
|      xor(dummy_nonce,{dummy_nonce.n3(Ni2).tsi.00}_ha).
|      xor(dummy_nonce,{dummy_nonce.n3(Ni2).tsi.11}_ha).
|      {dummy_nonce.dummy_nonce}_ha
|    & Secret(dummy_nonce,set_149);  Add u to set_149;  Add s to set_149;
|    & Add cs to set_149;

Role controlserver played by (cs,3):
| fi.pij.cidi.gi.pidi.tsi.ji.ki.li.mi.psidj
|   => xor(n1(Ni3),xor(fi,xor({xor(li,{{psidj.dummy_nonce}_ha.xor(ji,{psidj.dummy_nonce}_ha).tsi.00}_ha).xor(ji,{psidj.dummy_nonce}_ha).{psidj.dummy_nonce}_ha}_ha,{pidi.dummy_nonce}_ha))).
|      {xor(n1(Ni3),xor(fi,{pidi.dummy_nonce}_ha))}_ha.
|      xor(n1(Ni3),xor(ji,xor({xor(cidi,{{pidi.dummy_nonce}_ha.xor(fi,{pidi.dummy_nonce}_ha).tsi.00}_ha).xor(fi,{pidi.dummy_nonce}_ha).{pidi.dummy_nonce}_ha}_ha,{psidj.dummy_nonce}_ha))).
|      {xor(n1(Ni3),xor(ji,{psidj.dummy_nonce}_ha))}_ha


Some Remarks :
--------------

- The syntax of protocol steps is
   "Received Msg" => "Sent Msg"  [Equalities] & Inequalities & IF facts
- A Role is a tree where steps are unary nodes and choice points are n-ary nodes
- The Initial System state is the state of cl-atse at the begining of the search
  for attacks, and represents both the intruder and honest participants state.
- See the cl-atse's subsection in the user-manual for more details.

