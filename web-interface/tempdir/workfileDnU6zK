identifiers
P, S, Ca : user;
Kca,Ks,Kp : public_key;
Kps : symmetric_key;
SSPs,Nonce1, Lifetime, CS,CP,Idps,N : number;
F,H : function;
messages
1. P -> S : Nonce1
2. S -> Ca : CS
3. Ca -> S : {{Kps,N}Ks}Kca'
4. P ->Ca : CP
5. Ca -> P : {{Kps,N}Kp}Kca'
6. S -> P : SSPs,H(SSPs), Nonce1,Lifetime,Idps,{F(H(SSPs), Nonce1,Lifetime,SSPs,Idps)}Kps
knowledge
P : S,F,Ca;
S : P,F,H,Ca;
Ca : S,P;
session_instances
[P:proxy,Ca:certif,S:serveur,Kps:key1,Kca:key2,Ks:key3,Kp:key4];
intruder_knowledge
proxy,certif,serveur;
goal
P authenticates S on Idps;
secrecy_of Kps [Ca,S];
secrecy_of Kps [Ca,P]; 