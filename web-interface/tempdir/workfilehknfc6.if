%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfilehknfc6

section signature:

state_bob: agent * agent * symmetric_key * nat * text * nat -> fact
state_alice: agent * agent * symmetric_key * nat * text * nat -> fact


section types:

MGoal: message
Dummy_Na, dummy_nonce, Na: text
kab, Kab: symmetric_key
A2Goal, A1Goal, a, b, A, B, i: agent
Dummy_State, 3, SID, SID2, SID1, 1, State, 2, 0, 7, 6, 4: nat


section inits:

initial_state init1 := 
 iknows(i).
 state_alice(a,b,kab,0,dummy_nonce,3).
 state_bob(a,b,kab,1,dummy_nonce,4).
 state_alice(b,a,kab,0,dummy_nonce,6).
 state_bob(b,a,kab,1,dummy_nonce,7)


section rules:

step step_0 (A,B,Kab,Dummy_Na,SID,Na) :=
 state_alice(A,B,Kab,0,Dummy_Na,SID).
 iknows(Na)
 =>
 state_alice(A,B,Kab,2,Na,SID).
 iknows(scrypt(Kab,Na))

step step_1 (B,A,Kab,Dummy_Na,SID,Na) :=
 state_bob(B,A,Kab,1,Dummy_Na,SID).
 iknows(Na)
 =>
 state_bob(B,A,Kab,3,Na,SID).
 iknows(scrypt(Kab,Na))


section properties:

property authentication_on_bob_alice_na (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,bob_alice_na,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,bob_alice_na,MGoal))
     /\ ((request(A1Goal,A2Goal,bob_alice_na,MGoal,SID1)
           /\ request(A1Goal,A2Goal,bob_alice_na,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state authentication_on_bob_alice_na (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,bob_alice_na,MGoal,SID) &
 not(witness(A2Goal,A1Goal,bob_alice_na,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_bob_alice_na (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,bob_alice_na,MGoal,SID1).
 request(A1Goal,A2Goal,bob_alice_na,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

