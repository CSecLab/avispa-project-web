%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfile1Szz0E

section signature:

state_bob: agent * agent * symmetric_key * nat * text * nat -> fact
state_alice: agent * agent * symmetric_key * nat * text * nat -> fact


section types:

ASGoal: set(agent)
alice_bob_na, k: protocol_id
MGoal, start: message
Dummy_Na, dummy_nonce, Na: text
10, 6, 4, SID, 3, 1, State, 0: nat
kab, kai, kib, K: symmetric_key
a, b, A, B, i: agent


section inits:

initial_state init1 := 
 iknows(start).
 iknows(a).
 iknows(b).
 iknows(kai).
 iknows(kib).
 iknows(i).
 state_alice(a,b,kab,0,dummy_nonce,3).
 state_bob(b,a,kab,1,dummy_nonce,4).
 state_alice(a,i,kai,0,dummy_nonce,6).
 state_bob(b,i,kib,1,dummy_nonce,10)


section rules:

step step_0 (A,B,K,State,Dummy_Na,SID,Na) :=
 state_alice(A,B,K,State,Dummy_Na,SID).
 iknows(start)
=[exists Na]=>
 state_alice(A,B,K,State,Na,SID).
 iknows(Na)

step step_1 (B,A,K,State,Dummy_Na,SID,Na) :=
 state_bob(B,A,K,State,Dummy_Na,SID).
 iknows(Na)
 =>
 state_bob(B,A,K,State,Na,SID).
 iknows(scrypt(K,Na))


section properties:

property secrecy_of_k (MGoal,ASGoal) :=
 [] ((secret(MGoal,k,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))


section attack_states:

attack_state secrecy_of_k (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,k,ASGoal) &
 not(contains(i,ASGoal))

