%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfilelRuZLv

section signature:

state_host: agent * agent * agent * public_key * public_key * public_key * hash_func * nat * crypt(public_key,crypt(inv(public_key),pair(text,pair(text,text)))) * text * text * text * text * text * text * nat -> fact
state_board: agent * agent * agent * public_key * public_key * public_key * hash_func * nat * crypt(public_key,crypt(inv(public_key),pair(agent,pair(agent,pair(text,pair(text,pair(text,text))))))) * text * text * text * text * text * pair(text,pair(text,pair(crypt(public_key,crypt(inv(public_key),pair(agent,pair(agent,pair(text,pair(text,pair(text,text))))))),crypt(public_key,crypt(inv(public_key),pair(text,pair(text,text))))))) * crypt(inv(public_key),hash_func) * nat -> fact
state_user: agent * agent * agent * public_key * public_key * public_key * hash_func * nat * crypt(public_key,crypt(inv(public_key),pair(agent,pair(agent,pair(text,pair(text,pair(text,text))))))) * crypt(public_key,crypt(inv(public_key),pair(text,pair(text,text)))) * text * text * text * text * text * text * set(agent) * set(agent) * set(agent) * nat -> fact


section types:

user_host_s1: protocol_id
Sig, Dummy_Sig: crypt(inv(public_key),hash_func)
Rq, Dummy_Rq: pair(text,pair(text,pair(crypt(public_key,crypt(inv(public_key),pair(agent,pair(agent,pair(text,pair(text,pair(text,text))))))),crypt(public_key,crypt(inv(public_key),pair(text,pair(text,text)))))))
Rqt, Dummy_Rqt: crypt(public_key,crypt(inv(public_key),pair(text,pair(text,text))))
Rqh, Dummy_Rqh: crypt(public_key,crypt(inv(public_key),pair(agent,pair(agent,pair(text,pair(text,pair(text,text)))))))
hf, Hash, dummy_hash: hash_func
5, State, 4, 2, 17, 16, 13, 11, 8, 7, SID, 3, 1, Dummy_State: nat
ID, S2, O, A, S1, N1, N2, N3, Dummy_S2, Dummy_ID, Dummy_N3, Dummy_N2, Dummy_N1, Dummy_S1, Dummy_A, Dummy_O, dummy_nonce: text
set_146, set_145, set_144, set_141, set_140, set_139, set_136, set_135, set_134, set_107, set_106, set_105: set
Set_34, Set_32, Set_29, Dummy_Set_34, Dummy_Set_32, Dummy_Set_29, ASGoal: set(agent)
start, MGoal: message
u, h, b, U, H, B, dummy_agent, i: agent
kb, ki, Ku, Kh, Kb, dummy_pk, ku, kh: public_key


section inits:

initial_state init1 := 
 iknows(start).
 iknows(u).
 iknows(h).
 iknows(b).
 iknows(hf).
 iknows(ku).
 iknows(kh).
 iknows(kb).
 iknows(ki).
 iknows(i).
 state_user(u,h,b,ku,kh,kb,hf,1,crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_agent,pair(dummy_agent,pair(dummy_nonce,pair(dummy_nonce,pair(dummy_nonce,dummy_nonce))))))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,pair(dummy_nonce,dummy_nonce)))),dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_105,set_106,set_107,3).
 state_board(b,u,h,ku,kh,kb,hf,2,crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_agent,pair(dummy_agent,pair(dummy_nonce,pair(dummy_nonce,pair(dummy_nonce,dummy_nonce))))))),dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,pair(dummy_nonce,pair(dummy_nonce,pair(crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_agent,pair(dummy_agent,pair(dummy_nonce,pair(dummy_nonce,pair(dummy_nonce,dummy_nonce))))))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,pair(dummy_nonce,dummy_nonce))))))),crypt(inv(dummy_pk),dummy_hash),4).
 state_host(h,u,b,ku,kh,kb,hf,3,crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,pair(dummy_nonce,dummy_nonce)))),dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,5).
 state_user(u,i,b,ku,ki,kb,hf,1,crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_agent,pair(dummy_agent,pair(dummy_nonce,pair(dummy_nonce,pair(dummy_nonce,dummy_nonce))))))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,pair(dummy_nonce,dummy_nonce)))),dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_134,set_135,set_136,7).
 state_board(b,u,i,ku,ki,kb,hf,2,crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_agent,pair(dummy_agent,pair(dummy_nonce,pair(dummy_nonce,pair(dummy_nonce,dummy_nonce))))))),dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,pair(dummy_nonce,pair(dummy_nonce,pair(crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_agent,pair(dummy_agent,pair(dummy_nonce,pair(dummy_nonce,pair(dummy_nonce,dummy_nonce))))))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,pair(dummy_nonce,dummy_nonce))))))),crypt(inv(dummy_pk),dummy_hash),8).
 state_user(u,h,i,ku,kh,ki,hf,1,crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_agent,pair(dummy_agent,pair(dummy_nonce,pair(dummy_nonce,pair(dummy_nonce,dummy_nonce))))))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,pair(dummy_nonce,dummy_nonce)))),dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_139,set_140,set_141,11).
 state_host(h,u,i,ku,kh,ki,hf,3,crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,pair(dummy_nonce,dummy_nonce)))),dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,13).
 state_board(b,i,h,ki,kh,kb,hf,2,crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_agent,pair(dummy_agent,pair(dummy_nonce,pair(dummy_nonce,pair(dummy_nonce,dummy_nonce))))))),dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,pair(dummy_nonce,pair(dummy_nonce,pair(crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_agent,pair(dummy_agent,pair(dummy_nonce,pair(dummy_nonce,pair(dummy_nonce,dummy_nonce))))))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,pair(dummy_nonce,dummy_nonce))))))),crypt(inv(dummy_pk),dummy_hash),16).
 state_host(h,i,b,ki,kh,kb,hf,3,crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,pair(dummy_nonce,dummy_nonce)))),dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,17)


section rules:

step step_0 (U,H,B,Ku,Kh,Kb,Hash,Dummy_Rqh,Dummy_Rqt,Dummy_O,Dummy_A,Dummy_S1,Dummy_N1,Dummy_N2,Dummy_N3,Dummy_Set_29,Dummy_Set_32,Dummy_Set_34,SID,O,A,S1,N1,N2,N3) :=
 state_user(U,H,B,Ku,Kh,Kb,Hash,1,Dummy_Rqh,Dummy_Rqt,Dummy_O,Dummy_A,Dummy_S1,Dummy_N1,Dummy_N2,Dummy_N3,Dummy_Set_29,Dummy_Set_32,Dummy_Set_34,SID).
 iknows(start)
=[exists N3,N2,N1,S1,A,O]=>
 state_user(U,H,B,Ku,Kh,Kb,Hash,3,crypt(Kh,crypt(inv(Ku),pair(U,pair(H,pair(O,pair(A,pair(S1,N1))))))),crypt(Kb,crypt(inv(Ku),pair(S1,pair(N2,N3)))),O,A,S1,N1,N2,N3,Dummy_Set_29,Dummy_Set_32,Dummy_Set_34,SID).
 iknows(pair(crypt(Kh,crypt(inv(Ku),pair(U,pair(H,pair(O,pair(A,pair(S1,N1))))))),crypt(Kb,crypt(inv(Ku),pair(S1,pair(N2,N3)))))).
 secret(N2,n2,Dummy_Set_29).
 secret(N3,n3,Dummy_Set_32).
 secret(N1,n1,Dummy_Set_34).
 contains(U,Dummy_Set_29).
 contains(B,Dummy_Set_29).
 contains(U,Dummy_Set_32).
 contains(B,Dummy_Set_32).
 contains(U,Dummy_Set_34).
 contains(H,Dummy_Set_34)

step step_1 (B,U,H,Ku,Kh,Kb,Hash,Dummy_Rqh,Dummy_ID,Dummy_S1,Dummy_S2,Dummy_N2,Dummy_N3,Dummy_Rq,Dummy_Sig,SID,Rqh,ID,S1,S2,N2,N3) :=
 state_board(B,U,H,Ku,Kh,Kb,Hash,2,Dummy_Rqh,Dummy_ID,Dummy_S1,Dummy_S2,Dummy_N2,Dummy_N3,Dummy_Rq,Dummy_Sig,SID).
 iknows(pair(Rqh,crypt(Kb,crypt(inv(Ku),pair(S1,pair(N2,N3))))))
=[exists S2,ID]=>
 state_board(B,U,H,Ku,Kh,Kb,Hash,4,Rqh,ID,S1,S2,N2,N3,pair(ID,pair(S2,pair(Rqh,crypt(Kb,crypt(inv(Ku),pair(S1,pair(N2,N3))))))),crypt(inv(Kb),apply(Hash,pair(ID,pair(S2,pair(Rqh,crypt(Kb,crypt(inv(Ku),pair(S1,pair(N2,N3))))))))),SID).
 iknows(pair(pair(ID,pair(S2,pair(Rqh,crypt(Kb,crypt(inv(Ku),pair(S1,pair(N2,N3))))))),crypt(inv(Kb),apply(Hash,pair(ID,pair(S2,pair(Rqh,crypt(Kb,crypt(inv(Ku),pair(S1,pair(N2,N3))))))))))).
 iknows(pair(pair(ID,pair(S2,pair(Rqh,crypt(Kb,crypt(inv(Ku),pair(S1,pair(N2,N3))))))),crypt(inv(Kb),apply(Hash,pair(ID,pair(S2,pair(Rqh,crypt(Kb,crypt(inv(Ku),pair(S1,pair(N2,N3)))))))))))

step step_2 (H,U,B,Ku,Kh,Kb,Hash,Rqt,Dummy_ID,Dummy_S2,Dummy_O,Dummy_A,Dummy_S1,Dummy_N1,SID,ID,S2,O,A,S1,N1) :=
 state_host(H,U,B,Ku,Kh,Kb,Hash,3,Rqt,Dummy_ID,Dummy_S2,Dummy_O,Dummy_A,Dummy_S1,Dummy_N1,SID).
 iknows(pair(ID,pair(S2,pair(crypt(Kh,crypt(inv(Ku),pair(U,pair(H,pair(O,pair(A,pair(S1,N1))))))),Rqt))))
 =>
 state_host(H,U,B,Ku,Kh,Kb,Hash,5,Rqt,ID,S2,O,A,S1,N1,SID)


section properties:

property secrecy_of_n1 (MGoal,ASGoal) :=
 [] ((secret(MGoal,n1,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_n2 (MGoal,ASGoal) :=
 [] ((secret(MGoal,n2,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_n3 (MGoal,ASGoal) :=
 [] ((secret(MGoal,n3,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))


section attack_states:

attack_state secrecy_of_n1 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,n1,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_n2 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,n2,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_n3 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,n3,ASGoal) &
 not(contains(i,ASGoal))

