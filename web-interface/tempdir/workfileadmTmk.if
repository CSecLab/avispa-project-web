%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfileadmTmk

section signature:

state_host2: agent * agent * public_key * public_key * hash_func * nat * crypt(inv(public_key),hash_func) * crypt(public_key,message) * hash_func * crypt(public_key,message) * message * public_key * public_key * text * nat -> fact
state_owner: agent * agent * public_key * public_key * hash_func * nat * agent * text * text * text * message * message * message * crypt(inv(public_key),hash_func) * crypt(public_key,pair(text,agent)) * public_key * public_key * set(agent) * set(agent) * nat -> fact


section types:

Dummy_Set_34, Dummy_Set_31, Set_34, Set_31: set(agent)
host2_owner_r2, host2_owner_d2, d2, r2, owner_host2_sigma0: protocol_id
set_96, set_95, set_77, set_76: set
X0: crypt(public_key,pair(text,agent))
Sigma0, Dummy_Sigma0: crypt(inv(public_key),hash_func)
6, State, 4, SID, Dummy_State, 3, 1, 0, SID2, SID1: nat
Chain, Hash, Dummy_Chain, dummy_hash, h: hash_func
Dummy_R2, dummy_nonce, R0, R1, R2: text
Dummy_M1, V0, V2, dummy_pk, V1, M1, v0, v2, vi: public_key
H0, H2, dummy_agent, A2Goal, A1Goal, h0, h2, H1, i: agent
Dummy_D2, dummy_msg, start, MGoal, D1, D2, O1: message
PO1, PO0: crypt(public_key,message)


section inits:

initial_state init1 := 
 iknows(start).
 iknows(h0).
 iknows(h2).
 iknows(v0).
 iknows(v2).
 iknows(vi).
 iknows(h).
 iknows(i).
 state_owner(h0,h2,v0,v2,h,0,dummy_agent,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,crypt(inv(dummy_pk),dummy_hash),crypt(dummy_pk,pair(dummy_nonce,dummy_agent)),dummy_pk,dummy_pk,set_76,set_77,3).
 state_host2(h2,h0,v0,v2,h,0,crypt(inv(dummy_pk),dummy_hash),crypt(dummy_pk,dummy_msg),dummy_hash,crypt(dummy_pk,dummy_msg),dummy_msg,dummy_pk,dummy_pk,dummy_nonce,4).
 state_owner(h0,i,v0,vi,h,0,dummy_agent,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,crypt(inv(dummy_pk),dummy_hash),crypt(dummy_pk,pair(dummy_nonce,dummy_agent)),dummy_pk,dummy_pk,set_95,set_96,6)


section rules:

step step_0 (H0,H2,V0,V2,Hash,H1,R0,R1,R2,D1,D2,O1,Sigma0,X0,V1,M1,Set_31,Set_34,SID) :=
 state_owner(H0,H2,V0,V2,Hash,0,H1,R0,R1,R2,D1,D2,O1,Sigma0,X0,V1,M1,Set_31,Set_34,SID).
 iknows(start)
 =>
 state_owner(H0,H2,V0,V2,Hash,0,H1,R0,R1,R2,D1,D2,O1,Sigma0,X0,V1,M1,Set_31,Set_34,SID).
 iknows(pair(crypt(inv(V0),pair(crypt(V0,pair(crypt(inv(V1),pair(D1,pair(M1,Sigma0))),R1)),pair(apply(Hash,pair(crypt(inv(V0),pair(crypt(V0,pair(R0,Sigma0)),apply(Hash,pair(R0,pair(H1,H2))))),pair(R1,pair(H2,H0)))),M1))),Sigma0)).
 witness(H0,H2,owner_host2_sigma0,Sigma0)

step step_1 (H0,H2,V0,V2,Hash,H1,R0,R1,R2,D1,D2,O1,Sigma0,X0,V1,M1,Dummy_Set_31,Dummy_Set_34,SID) :=
 state_owner(H0,H2,V0,V2,Hash,1,H1,R0,R1,R2,D1,D2,O1,Sigma0,X0,V1,M1,Dummy_Set_31,Dummy_Set_34,SID).
 iknows(pair(crypt(V0,pair(crypt(inv(V1),pair(D2,Sigma0)),R2)),pair(apply(Hash,pair(crypt(inv(V0),pair(crypt(V0,pair(crypt(inv(V1),pair(D1,pair(M1,Sigma0))),R1)),pair(apply(Hash,pair(crypt(inv(V0),pair(crypt(V0,pair(R0,Sigma0)),apply(Hash,pair(R0,pair(H1,H2))))),pair(R1,pair(H2,H0)))),M1))),pair(R2,H0))),Sigma0)))
 =>
 state_owner(H0,H2,V0,V2,Hash,1,H1,R0,R1,R2,D1,D2,O1,Sigma0,X0,V1,M1,Dummy_Set_31,Dummy_Set_34,SID).
 contains(H2,Dummy_Set_31).
 contains(H0,Dummy_Set_31).
 contains(H2,Dummy_Set_34).
 contains(H0,Dummy_Set_34)

step step_2 (H2,H0,V0,V2,Hash,Dummy_Sigma0,PO1,Dummy_Chain,PO0,Dummy_D2,Dummy_M1,V1,Dummy_R2,SID,Sigma0,Chain,D2,M1,R2) :=
 state_host2(H2,H0,V0,V2,Hash,0,Dummy_Sigma0,PO1,Dummy_Chain,PO0,Dummy_D2,Dummy_M1,V1,Dummy_R2,SID).
 iknows(pair(crypt(inv(V0),pair(PO1,pair(Chain,M1))),Sigma0))
=[exists R2,D2]=>
 state_host2(H2,H0,V0,V2,Hash,0,Sigma0,PO1,Chain,PO0,D2,M1,V1,R2,SID).
 request(H2,H0,owner_host2_sigma0,Sigma0,SID).
 iknows(pair(crypt(V0,pair(crypt(inv(V1),pair(D2,Dummy_Sigma0)),R2)),pair(apply(Hash,pair(crypt(inv(V0),pair(PO1,pair(Chain,M1))),pair(R2,H0))),Sigma0)))


section properties:

property authentication_on_owner_host2_sigma0 (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,owner_host2_sigma0,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,owner_host2_sigma0,MGoal))
     /\ ((request(A1Goal,A2Goal,owner_host2_sigma0,MGoal,SID1)
           /\ request(A1Goal,A2Goal,owner_host2_sigma0,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state authentication_on_owner_host2_sigma0 (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,owner_host2_sigma0,MGoal,SID) &
 not(witness(A2Goal,A1Goal,owner_host2_sigma0,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_owner_host2_sigma0 (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,owner_host2_sigma0,MGoal,SID1).
 request(A1Goal,A2Goal,owner_host2_sigma0,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

