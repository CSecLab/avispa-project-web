%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfileQF3XVw

section signature:

state_lwAKE_Resp: agent * agent * symmetric_key * symmetric_key * text * nat * text * text * set(agent) * set(agent) * set(agent) * nat -> fact
state_lwAKE_Init: agent * agent * symmetric_key * symmetric_key * text * nat * text * text * set(agent) * set(agent) * set(agent) * nat -> fact


section types:

Dummy_Set_46, Dummy_Set_45, Dummy_Set_44, Dummy_Set_26, Dummy_Set_25, Dummy_Set_23, ASGoal, Set_46, Set_45, Set_44, Set_26, Set_25, Set_23: set(agent)
MGoal, start: message
sec_tid2, sec_kba2, sec_kba1, nb, na, sec_tid1, sec_kab2, sec_kab1: protocol_id
Dummy_Nb, Dummy_Na, Dummy_TID, dummy_nonce, tid, Na, Nb, TID: text
k1, k2, kai1, kai2, kbi1, kbi2, K1, K2: symmetric_key
A2Goal, A1Goal, a, b, B, A, i: agent
6, 4, SID, Dummy_State, 3, SID2, SID1, State, 19, 2, 1, 15, 0, 13, 9, 7: nat
set_100, set_99, set_97, set_96, set_95, set_89, set_88, set_87, set_76, set_75, set_74, set_129, set_128, set_127, set_126, set_125, set_124, set_123, set_122, set_121, set_119, set_118, set_117, set_115, set_114, set_113, set_112, set_111, set_110, set_109, set_108, set_107, set_105, set_104, set_103, set_101: set


section inits:

initial_state init1 := 
 iknows(start).
 iknows(a).
 iknows(b).
 iknows(kai1).
 iknows(kbi1).
 iknows(kai2).
 iknows(kbi2).
 iknows(i).
 state_lwAKE_Init(a,b,k1,k2,tid,0,dummy_nonce,dummy_nonce,set_74,set_75,set_76,3).
 state_lwAKE_Resp(b,a,k1,k2,tid,0,dummy_nonce,dummy_nonce,set_87,set_88,set_89,4).
 state_lwAKE_Init(b,a,k1,k2,tid,0,dummy_nonce,dummy_nonce,set_95,set_96,set_97,6).
 state_lwAKE_Resp(a,b,k1,k2,tid,0,dummy_nonce,dummy_nonce,set_99,set_100,set_101,7).
 state_lwAKE_Init(a,i,kai1,kai2,tid,0,dummy_nonce,dummy_nonce,set_103,set_104,set_105,9).
 state_lwAKE_Resp(a,i,kai1,kai2,tid,0,dummy_nonce,dummy_nonce,set_113,set_114,set_115,13).
 state_lwAKE_Init(b,i,kbi1,kbi2,tid,0,dummy_nonce,dummy_nonce,set_117,set_118,set_119,15).
 state_lwAKE_Resp(b,i,kbi1,kbi2,tid,0,dummy_nonce,dummy_nonce,set_127,set_128,set_129,19)


section rules:

step step_0 (A,B,K1,K2,Dummy_TID,Dummy_Na,Nb,Dummy_Set_23,Dummy_Set_25,Dummy_Set_26,SID,Na) :=
 state_lwAKE_Init(A,B,K1,K2,Dummy_TID,0,Dummy_Na,Nb,Dummy_Set_23,Dummy_Set_25,Dummy_Set_26,SID).
 iknows(start)
=[exists Na]=>
 state_lwAKE_Init(A,B,K1,K2,xor(Dummy_TID,Na),1,Na,Nb,Dummy_Set_23,Dummy_Set_25,Dummy_Set_26,SID).
 iknows(pair(scrypt(K1,Na),scrypt(K2,xor(Dummy_TID,Na)))).
 witness(A,B,na,Na).
 secret(K1,sec_kab1,Dummy_Set_23).
 secret(K2,sec_kab2,Dummy_Set_25).
 secret(xor(Dummy_TID,Na),sec_tid1,Dummy_Set_26).
 contains(A,Dummy_Set_23).
 contains(B,Dummy_Set_23).
 contains(A,Dummy_Set_25).
 contains(B,Dummy_Set_25).
 contains(A,Dummy_Set_26).
 contains(B,Dummy_Set_26)

step step_1 (A,B,K1,K2,TID,Dummy_Na,Dummy_Nb,Set_23,Set_25,Set_26,SID,Na,Nb) :=
 state_lwAKE_Init(A,B,K1,K2,TID,1,Dummy_Na,Dummy_Nb,Set_23,Set_25,Set_26,SID).
 iknows(pair(scrypt(TID,xor(K2,Nb)),scrypt(K2,xor(xor(K1,Na),Nb))))
 =>
 state_lwAKE_Init(A,B,K1,K2,TID,2,Na,Nb,Set_23,Set_25,Set_26,SID).
 request(A,B,nb,Nb,SID)

step step_2 (B,A,K1,K2,Dummy_TID,Dummy_Na,Dummy_Nb,Dummy_Set_44,Dummy_Set_45,Dummy_Set_46,SID,Na,Nb) :=
 state_lwAKE_Resp(B,A,K1,K2,Dummy_TID,0,Dummy_Na,Dummy_Nb,Dummy_Set_44,Dummy_Set_45,Dummy_Set_46,SID).
 iknows(pair(scrypt(K1,Na),scrypt(K2,TID)))
=[exists Nb]=>
 state_lwAKE_Resp(B,A,K1,K2,xor(Dummy_TID,Na),1,Na,Nb,Dummy_Set_44,Dummy_Set_45,Dummy_Set_46,SID).
 witness(B,A,nb,Nb).
 iknows(pair(scrypt(Dummy_TID,xor(K2,Nb)),scrypt(K2,xor(xor(K1,Na),Nb)))).
 secret(K1,sec_kba1,Dummy_Set_44).
 secret(K2,sec_kba2,Dummy_Set_45).
 secret(xor(Dummy_TID,Na),sec_tid1,Dummy_Set_46).
 request(B,A,na,Na,SID).
 contains(A,Dummy_Set_44).
 contains(B,Dummy_Set_44).
 contains(A,Dummy_Set_45).
 contains(B,Dummy_Set_45).
 contains(A,Dummy_Set_46).
 contains(B,Dummy_Set_46)


section properties:

property secrecy_of_sec_kab1 (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_kab1,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_sec_kab2 (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_kab2,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_sec_kba1 (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_kba1,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_sec_kba2 (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_kba2,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_sec_tid1 (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_tid1,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_sec_tid2 (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_tid2,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property authentication_on_nb (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,nb,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,nb,MGoal))
     /\ ((request(A1Goal,A2Goal,nb,MGoal,SID1)
           /\ request(A1Goal,A2Goal,nb,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_na (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,na,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,na,MGoal))
     /\ ((request(A1Goal,A2Goal,na,MGoal,SID1)
           /\ request(A1Goal,A2Goal,na,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state secrecy_of_sec_kab1 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_kab1,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_sec_kab2 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_kab2,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_sec_kba1 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_kba1,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_sec_kba2 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_kba2,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_sec_tid1 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_tid1,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_sec_tid2 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_tid2,ASGoal) &
 not(contains(i,ASGoal))

attack_state authentication_on_nb (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,nb,MGoal,SID) &
 not(witness(A2Goal,A1Goal,nb,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_nb (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,nb,MGoal,SID1).
 request(A1Goal,A2Goal,nb,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_na (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,na,MGoal,SID) &
 not(witness(A2Goal,A1Goal,na,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_na (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,na,MGoal,SID1).
 request(A1Goal,A2Goal,na,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

