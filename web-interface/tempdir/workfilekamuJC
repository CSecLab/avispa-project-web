%%Initial phase
role userp1(U, CS: agent,      
		 Hash : hash_func,
         Snd, Rcv: channel(dy))
played_by U def=

local State : nat, Bee, Pi, Idi,Ai ,Ci ,Di, Pid: text

	
const    bi : text
	init State := 0
	
transition
	1. State = 0 /\ Rcv(start) =|> 
		State':= 1 /\   Pi':= new() /\ Idi' := new() /\ Bee':=new() /\ Ai':= Hash(Bee'.Pi') /\ Snd(Idi'.Ai'.Bee') /\secret(Bee',be,{U,CS})
	
	2. State = 2 /\ Rcv(bi) =|> 
		State' := 3 /\ Ci':= Hash(Idi'.Ai') /\  Pid':=Hash(Idi'.Bee') /\ Di' := xor(bi,Hash(xor(Pid',Ai')))
	 
	

end role

%%%%%%%%%%%%%%%%%%%%%%
role controlserver(U, CS: agent,					
					Hash : hash_func,
					Snd, Rcv: channel(dy))
played_by CS def=
	local State : nat,	Bi , X, Pid: text
		
		
	const  bee,idi,ai: text
					
	init State :=1 
transition	
	1. State = 1 /\ Rcv(idi.ai.bee) =|> 
		State' := 2 /\ X':=new() /\ Pid' := Hash(idi.bee) /\ Bi':= Hash(Pid'.X) /\ Snd(Bi')
	

end role

%%%%%%%%%
role session (U, CS: agent, Hash : hash_func)
def=
	local Su, Ru , SCS, RCS : channel(dy)
	composition 
	controlserver( u, cs , Hash , Su , Ru ) /\ userp1(u, cs,Hash, SCS, RCS)
end role
%%%%%%
goal

  secrecy_of be
  

end goal
%%%%%%%%%


role environment()
def=
	const u,cs:agent,
	Hash:hash_func,
	be : protocol_id
	
	intruder_knowledge = {u,cs,Hash}
	
	composition
		session(u, cs, Hash)

end role


environment()
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%Login Phase

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%Authentication Phase