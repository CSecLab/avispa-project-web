%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfile60o477

section signature:

state_user: agent * agent * agent * symmetric_key * symmetric_key * hash_func * nat * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * set(text) * set(agent) * set(symmetric_key) * set(agent) * set(text) * set(agent) * set(text) * set(agent) * set(text) * set(agent) * set(text) * nat -> fact
state_basestation: agent * agent * agent * symmetric_key * symmetric_key * hash_func * nat * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * set(text) * set(agent) * set(symmetric_key) * set(agent) * set(text) * set(agent) * set(text) * set(agent) * set(text) * set(agent) * set(text) * nat -> fact
state_sensornode: agent * agent * agent * symmetric_key * hash_func * nat * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * set(text) * set(agent) * set(symmetric_key) * set(agent) * set(text) * set(agent) * set(text) * set(agent) * set(text) * set(agent) * set(text) * nat -> fact


section types:

MGoal, start: message
sensornode_user, sensornode_basestation, basestation_user, user_basestation, user_sensornode, subs1, subs2, subs3, subs4, subs5, subs6: protocol_id
Dummy_Set_131, Set_131, Set_92, Dummy_Set_49, Set_49, Dummy_Set_92: set(symmetric_key)
Dummy_State, 3, SID, SID2, SID1, 13, 12, State, 11, 9, 8, 7, 5, 2, 1, 0, 4: nat
h, H: hash_func
mkui, mksj, MKsj, MKui: symmetric_key
set_192, set_191, set_190, set_189, set_188, set_187, set_186, set_185, set_184, set_183, set_182, set_333, set_332, set_331, set_330, set_329, set_328, set_327, set_326, set_325, set_324, set_323, set_321, set_320, set_319, set_318, set_317, set_316, set_315, set_314, set_313, set_312, set_311, set_309, set_308, set_307, set_306, set_305, set_304, set_303, set_302, set_301, set_300, set_299, set_297, set_296, set_295, set_294, set_293, set_292, set_291, set_290, set_289, set_288, set_287, set_285, set_284, set_283, set_282, set_281, set_280, set_279, set_278, set_277, set_276, set_275, set_273, set_272, set_271, set_270, set_269, set_268, set_267, set_266, set_265, set_264, set_263, set_248, set_247, set_246, set_245, set_244, set_243, set_242, set_241, set_240, set_239, set_238, set_221, set_220, set_219, set_218, set_217, set_216, set_215, set_214, set_213, set_212, set_211: set
Dummy_T1, dummy_nonce, rpwi, rui, si, zi, kui, kj, rnui, tj, t1, t2, apmi, gidi, kbs, snj, ui, Ui, APMi, GIdi, RPWi, RMui, T1, T2, Si, Zi, Rui, Kui, Ni, PWi, UKi, SNj, Tj, Kj, Kbs, M3, Dummy_RPWi, Dummy_M3, Dummy_UKi, RNuj, Dummy_Kui, Dummy_T2, Dummy_RMui: text
A2Goal, A1Goal, sn, bs, u, SN, BS, U, i: agent
Dummy_Set_133, Dummy_Set_129, Set_139, Set_137, Set_135, Set_133, Set_129, Set_100, Set_98, Set_96, Set_94, Set_90, Dummy_Set_57, Set_57, Dummy_Set_55, Set_55, Dummy_Set_53, Set_53, Dummy_Set_51, Set_51, Dummy_Set_46, Set_46, Dummy_Set_100, Dummy_Set_98, Dummy_Set_96, Dummy_Set_94, Dummy_Set_90, Dummy_Set_139, Dummy_Set_137, Dummy_Set_135: set(text)
Dummy_Set_132, Dummy_Set_130, ASGoal, Set_138, Set_136, Set_134, Set_132, Set_130, Set_99, Set_97, Set_95, Set_93, Set_91, Dummy_Set_56, Set_56, Dummy_Set_54, Set_54, Dummy_Set_52, Set_52, Dummy_Set_50, Set_50, Dummy_Set_47, Set_47, Dummy_Set_99, Dummy_Set_97, Dummy_Set_95, Dummy_Set_93, Dummy_Set_91, Dummy_Set_138, Dummy_Set_136, Dummy_Set_134: set(agent)


section inits:

initial_state init1 := 
 iknows(start).
 iknows(u).
 iknows(bs).
 iknows(sn).
 iknows(h).
 iknows(snj).
 iknows(ui).
 iknows(i).
 state_sensornode(sn,u,bs,mksj,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_182,set_183,set_184,set_185,set_186,set_187,set_188,set_189,set_190,set_191,set_192,3).
 state_basestation(u,bs,sn,mksj,mkui,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_211,set_212,set_213,set_214,set_215,set_216,set_217,set_218,set_219,set_220,set_221,4).
 state_user(bs,u,sn,mksj,mkui,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_238,set_239,set_240,set_241,set_242,set_243,set_244,set_245,set_246,set_247,set_248,5).
 state_sensornode(u,sn,bs,mksj,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_263,set_264,set_265,set_266,set_267,set_268,set_269,set_270,set_271,set_272,set_273,7).
 state_basestation(sn,bs,u,mksj,mkui,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_275,set_276,set_277,set_278,set_279,set_280,set_281,set_282,set_283,set_284,set_285,8).
 state_user(bs,sn,u,mksj,mkui,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_287,set_288,set_289,set_290,set_291,set_292,set_293,set_294,set_295,set_296,set_297,9).
 state_sensornode(u,sn,bs,mksj,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_299,set_300,set_301,set_302,set_303,set_304,set_305,set_306,set_307,set_308,set_309,11).
 state_basestation(sn,bs,u,mksj,mkui,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_311,set_312,set_313,set_314,set_315,set_316,set_317,set_318,set_319,set_320,set_321,12).
 state_user(bs,sn,u,mksj,mkui,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_323,set_324,set_325,set_326,set_327,set_328,set_329,set_330,set_331,set_332,set_333,13)


section rules:

step step_0 (SN,BS,U,MKsj,H,SNj,Tj,Kj,Kbs,Ui,APMi,GIdi,RPWi,RMui,Dummy_T1,T2,Si,Zi,Rui,Kui,Ni,PWi,UKi,Dummy_Set_129,Dummy_Set_130,Dummy_Set_131,Dummy_Set_132,Dummy_Set_133,Dummy_Set_134,Dummy_Set_135,Dummy_Set_136,Dummy_Set_137,Dummy_Set_138,Dummy_Set_139,SID,T1) :=
 state_sensornode(SN,BS,U,MKsj,H,0,SNj,Tj,Kj,Kbs,Ui,APMi,GIdi,RPWi,RMui,Dummy_T1,T2,Si,Zi,Rui,Kui,Ni,PWi,UKi,Dummy_Set_129,Dummy_Set_130,Dummy_Set_131,Dummy_Set_132,Dummy_Set_133,Dummy_Set_134,Dummy_Set_135,Dummy_Set_136,Dummy_Set_137,Dummy_Set_138,Dummy_Set_139,SID).
 iknows(start)
=[exists T1]=>
 state_sensornode(SN,BS,U,MKsj,H,1,SNj,Tj,Kj,Kbs,Ui,APMi,GIdi,RPWi,RMui,T1,T2,Si,Zi,Rui,Kui,Ni,PWi,UKi,Dummy_Set_129,Dummy_Set_130,Dummy_Set_131,Dummy_Set_132,Dummy_Set_133,Dummy_Set_134,Dummy_Set_135,Dummy_Set_136,Dummy_Set_137,Dummy_Set_138,Dummy_Set_139,SID).
 secret(Dummy_Set_129,subs1,Dummy_Set_130).
 secret(Dummy_Set_131,subs2,Dummy_Set_132).
 secret(Dummy_Set_133,subs3,Dummy_Set_134).
 secret(Dummy_Set_135,subs4,Dummy_Set_136).
 secret(Dummy_Set_137,subs5,Dummy_Set_138).
 secret(Dummy_Set_139,subs6,U).
 iknows(pair(SN,pair(BS,pair(SNj,pair(Tj,scrypt(MKsj,pair(Kj,pair(SNj,Tj)))))))).
 witness(SN,BS,sensornode_basestation,T1).
 contains(Kj,Dummy_Set_129).
 contains(SN,Dummy_Set_130).
 contains(BS,Dummy_Set_130).
 contains(MKsj,Dummy_Set_131).
 contains(SN,Dummy_Set_132).
 contains(BS,Dummy_Set_132).
 contains(RMui,Dummy_Set_133).
 contains(U,Dummy_Set_134).
 contains(BS,Dummy_Set_134).
 contains(Kbs,Dummy_Set_135).
 contains(SN,Dummy_Set_136).
 contains(BS,Dummy_Set_136).
 contains(APMi,Dummy_Set_137).
 contains(GIdi,Dummy_Set_137).
 contains(U,Dummy_Set_138).
 contains(BS,Dummy_Set_138).
 contains(PWi,Dummy_Set_139).
 contains(Ni,Dummy_Set_139)

step step_1 (SN,BS,U,MKsj,H,SNj,Tj,Kj,Kbs,Ui,APMi,GIdi,RPWi,Dummy_RMui,Dummy_T1,Dummy_T2,Si,Zi,Rui,Kui,Ni,PWi,UKi,Set_129,Set_130,Set_131,Set_132,Set_133,Set_134,Set_135,Set_136,Set_137,Set_138,Set_139,SID,RMui,T1,T2) :=
 state_sensornode(SN,BS,U,MKsj,H,1,SNj,Tj,Kj,Kbs,Ui,APMi,GIdi,RPWi,Dummy_RMui,Dummy_T1,Dummy_T2,Si,Zi,Rui,Kui,Ni,PWi,UKi,Set_129,Set_130,Set_131,Set_132,Set_133,Set_134,Set_135,Set_136,Set_137,Set_138,Set_139,SID).
 iknows(pair(BS,pair(SN,pair(SNj,pair(Ui,pair(scrypt(MKsj,pair(SNj,pair(Ui,pair(xor(pair(APMi,GIdi)),pair(apply(H,pair(apply(H,pair(PWi,Ni)),pair(GIdi,RMui))),pair(T1,T2)))))),scrypt(Kj,pair(SNj,pair(Ui,pair(GIdi,T1))))))))))
 =>
 state_sensornode(SN,BS,U,MKsj,H,2,SNj,Tj,Kj,Kbs,Ui,APMi,GIdi,RPWi,RMui,T1,T2,Si,Zi,Rui,Kui,Ni,PWi,UKi,Set_129,Set_130,Set_131,Set_132,Set_133,Set_134,Set_135,Set_136,Set_137,Set_138,Set_139,SID).
 request(BS,SN,sensornode_basestation,T2,SID)

step step_2 (SN,BS,U,MKsj,H,SNj,Tj,Kj,Kbs,Ui,APMi,GIdi,RPWi,Dummy_RMui,Dummy_T1,T2,Si,Zi,Rui,Kui,Ni,PWi,UKi,Set_129,Set_130,Set_131,Set_132,Set_133,Set_134,Set_135,Set_136,Set_137,Set_138,Set_139,SID,RMui,T1) :=
 state_sensornode(SN,BS,U,MKsj,H,2,SNj,Tj,Kj,Kbs,Ui,APMi,GIdi,RPWi,Dummy_RMui,Dummy_T1,T2,Si,Zi,Rui,Kui,Ni,PWi,UKi,Set_129,Set_130,Set_131,Set_132,Set_133,Set_134,Set_135,Set_136,Set_137,Set_138,Set_139,SID).
 iknows(pair(U,pair(SN,pair(SNj,pair(Ui,pair(Zi,pair(Si,pair(scrypt(apply(H,pair(SNj,pair(Ui,pair(Kbs,Kj)))),pair(SNj,pair(Ui,pair(apply(H,pair(apply(H,pair(PWi,Ni)),pair(GIdi,RMui))),pair(GIdi,pair(T1,pair(Si,Zi))))))),apply(H,pair(T1,pair(Si,Zi)))))))))))
 =>
 state_sensornode(SN,BS,U,MKsj,H,3,SNj,Tj,Kj,Kbs,Ui,APMi,GIdi,RPWi,RMui,T1,T2,Si,Zi,Rui,Kui,Ni,PWi,UKi,Set_129,Set_130,Set_131,Set_132,Set_133,Set_134,Set_135,Set_136,Set_137,Set_138,Set_139,SID).
 request(U,SN,user_sensornode,T1,SID)

step step_3 (BS,SN,U,MKsj,MKui,H,RPWi,RMui,Rui,Kbs,Dummy_Kui,Si,Zi,T2,APMi,GIdi,Ni,PWi,UKi,SNj,Ui,Kj,Tj,T1,M3,Set_90,Set_91,Set_92,Set_93,Set_94,Set_95,Set_96,Set_97,Set_98,Set_99,Set_100,SID) :=
 state_basestation(BS,SN,U,MKsj,MKui,H,0,RPWi,RMui,Rui,Kbs,Dummy_Kui,Si,Zi,T2,APMi,GIdi,Ni,PWi,UKi,SNj,Ui,Kj,Tj,T1,M3,Set_90,Set_91,Set_92,Set_93,Set_94,Set_95,Set_96,Set_97,Set_98,Set_99,Set_100,SID).
 iknows(pair(SN,pair(BS,pair(SNj,pair(Tj,scrypt(MKsj,pair(Kj,pair(SNj,Tj))))))))
 =>
 state_basestation(BS,SN,U,MKsj,MKui,H,1,RPWi,RMui,Rui,Kbs,apply(H,pair(SNj,pair(Ui,pair(Kbs,Kj)))),Si,Zi,T2,APMi,GIdi,Ni,PWi,UKi,SNj,Ui,Kj,Tj,T1,M3,Set_90,Set_91,Set_92,Set_93,Set_94,Set_95,Set_96,Set_97,Set_98,Set_99,Set_100,SID)

step step_4 (BS,SN,U,MKsj,MKui,H,RPWi,Dummy_RMui,Rui,Kbs,Kui,Si,Zi,T2,APMi,GIdi,Ni,PWi,UKi,SNj,Ui,Kj,Tj,T1,M3,Dummy_Set_90,Dummy_Set_91,Dummy_Set_92,Dummy_Set_93,Dummy_Set_94,Dummy_Set_95,Dummy_Set_96,Dummy_Set_97,Dummy_Set_98,Dummy_Set_99,Dummy_Set_100,SID,RMui) :=
 state_basestation(BS,SN,U,MKsj,MKui,H,1,RPWi,Dummy_RMui,Rui,Kbs,Kui,Si,Zi,T2,APMi,GIdi,Ni,PWi,UKi,SNj,Ui,Kj,Tj,T1,M3,Dummy_Set_90,Dummy_Set_91,Dummy_Set_92,Dummy_Set_93,Dummy_Set_94,Dummy_Set_95,Dummy_Set_96,Dummy_Set_97,Dummy_Set_98,Dummy_Set_99,Dummy_Set_100,SID).
 iknows(pair(U,pair(BS,scrypt(MKui,pair(Ui,pair(apply(H,pair(PWi,Ni)),pair(GIdi,RMui)))))))
 =>
 state_basestation(BS,SN,U,MKsj,MKui,H,2,RPWi,RMui,Rui,Kbs,Kui,Si,Zi,T2,APMi,GIdi,Ni,PWi,UKi,SNj,Ui,Kj,Tj,T1,M3,Dummy_Set_90,Dummy_Set_91,Dummy_Set_92,Dummy_Set_93,Dummy_Set_94,Dummy_Set_95,Dummy_Set_96,Dummy_Set_97,Dummy_Set_98,Dummy_Set_99,Dummy_Set_100,SID).
 iknows(pair(BS,pair(U,scrypt(MKui,pair(Ui,pair(GIdi,pair(apply(H,pair(apply(H,pair(PWi,Ni)),pair(GIdi,RMui))),pair(H,apply(H,pair(PWi,Ni)))))))))).
 secret(Dummy_Set_90,subs1,Dummy_Set_91).
 secret(Dummy_Set_92,subs2,Dummy_Set_93).
 secret(Dummy_Set_94,subs3,Dummy_Set_95).
 secret(Dummy_Set_96,subs4,Dummy_Set_97).
 secret(Dummy_Set_98,subs5,Dummy_Set_99).
 secret(Dummy_Set_100,subs6,U).
 request(SN,BS,sensornode_basestation,Tj,SID).
 contains(Kj,Dummy_Set_90).
 contains(SN,Dummy_Set_91).
 contains(BS,Dummy_Set_91).
 contains(MKsj,Dummy_Set_92).
 contains(SN,Dummy_Set_93).
 contains(BS,Dummy_Set_93).
 contains(RMui,Dummy_Set_94).
 contains(U,Dummy_Set_95).
 contains(BS,Dummy_Set_95).
 contains(Kbs,Dummy_Set_96).
 contains(SN,Dummy_Set_97).
 contains(BS,Dummy_Set_97).
 contains(APMi,Dummy_Set_98).
 contains(GIdi,Dummy_Set_98).
 contains(U,Dummy_Set_99).
 contains(BS,Dummy_Set_99).
 contains(PWi,Dummy_Set_100).
 contains(Ni,Dummy_Set_100)

step step_5 (BS,SN,U,MKsj,MKui,H,RPWi,Dummy_RMui,Rui,Kbs,Kui,Si,Zi,Dummy_T2,APMi,GIdi,Ni,PWi,Dummy_UKi,SNj,Ui,Kj,Tj,Dummy_T1,Dummy_M3,Set_90,Set_91,Set_92,Set_93,Set_94,Set_95,Set_96,Set_97,Set_98,Set_99,Set_100,SID,RMui,T2,T1) :=
 state_basestation(BS,SN,U,MKsj,MKui,H,2,RPWi,Dummy_RMui,Rui,Kbs,Kui,Si,Zi,Dummy_T2,APMi,GIdi,Ni,PWi,Dummy_UKi,SNj,Ui,Kj,Tj,Dummy_T1,Dummy_M3,Set_90,Set_91,Set_92,Set_93,Set_94,Set_95,Set_96,Set_97,Set_98,Set_99,Set_100,SID).
 iknows(pair(U,pair(BS,pair(Ui,pair(apply(H,pair(apply(H,pair(apply(H,pair(PWi,Ni)),pair(GIdi,RMui))),T1)),T1)))))
=[exists T2]=>
 state_basestation(BS,SN,U,MKsj,MKui,H,3,RPWi,RMui,Rui,Kbs,Kui,Si,Zi,T2,APMi,GIdi,Ni,PWi,apply(H,pair(Rui,pair(Ui,pair(T1,T2)))),SNj,Ui,Kj,Tj,T1,xor(APMi,GIdi),Set_90,Set_91,Set_92,Set_93,Set_94,Set_95,Set_96,Set_97,Set_98,Set_99,Set_100,SID).
 iknows(pair(BS,pair(U,pair(scrypt(Dummy_UKi,pair(Si,pair(Zi,pair(Kui,SNj)))),pair(T2,T1))))).
 iknows(pair(BS,pair(SN,pair(SNj,pair(Ui,pair(scrypt(MKsj,pair(SNj,pair(Ui,pair(xor(APMi,GIdi),pair(Rui,pair(T1,T2)))))),scrypt(Kj,pair(SNj,pair(Ui,pair(GIdi,T1)))))))))).
 witness(BS,SN,sensornode_basestation,T2).
 request(U,BS,user_basestation,T1,SID)

step step_6 (U,BS,SN,MKsj,MKui,H,Ui,Dummy_RPWi,APMi,Dummy_RMui,Ni,PWi,UKi,Rui,Kui,SNj,Si,Zi,Kj,Kbs,GIdi,RNuj,T1,T2,Set_46,Set_47,Set_49,Set_50,Set_51,Set_52,Set_53,Set_54,Set_55,Set_56,Set_57,SID,RMui) :=
 state_user(U,BS,SN,MKsj,MKui,H,0,Ui,Dummy_RPWi,APMi,Dummy_RMui,Ni,PWi,UKi,Rui,Kui,SNj,Si,Zi,Kj,Kbs,GIdi,RNuj,T1,T2,Set_46,Set_47,Set_49,Set_50,Set_51,Set_52,Set_53,Set_54,Set_55,Set_56,Set_57,SID).
 iknows(start)
=[exists RMui]=>
 state_user(U,BS,SN,MKsj,MKui,H,1,Ui,apply(H,pair(PWi,Ni)),APMi,RMui,Ni,PWi,UKi,Rui,Kui,SNj,Si,Zi,Kj,Kbs,GIdi,RNuj,T1,T2,Set_46,Set_47,Set_49,Set_50,Set_51,Set_52,Set_53,Set_54,Set_55,Set_56,Set_57,SID).
 iknows(pair(U,pair(BS,scrypt(MKui,pair(Ui,pair(apply(H,pair(PWi,Ni)),pair(GIdi,RMui)))))))

step step_7 (U,BS,SN,MKsj,MKui,H,Ui,RPWi,APMi,Dummy_RMui,Ni,PWi,UKi,Rui,Kui,SNj,Si,Zi,Kj,Kbs,GIdi,RNuj,Dummy_T1,T2,Dummy_Set_46,Dummy_Set_47,Dummy_Set_49,Dummy_Set_50,Dummy_Set_51,Dummy_Set_52,Dummy_Set_53,Dummy_Set_54,Dummy_Set_55,Dummy_Set_56,Dummy_Set_57,SID,RMui,T1) :=
 state_user(U,BS,SN,MKsj,MKui,H,1,Ui,RPWi,APMi,Dummy_RMui,Ni,PWi,UKi,Rui,Kui,SNj,Si,Zi,Kj,Kbs,GIdi,RNuj,Dummy_T1,T2,Dummy_Set_46,Dummy_Set_47,Dummy_Set_49,Dummy_Set_50,Dummy_Set_51,Dummy_Set_52,Dummy_Set_53,Dummy_Set_54,Dummy_Set_55,Dummy_Set_56,Dummy_Set_57,SID).
 iknows(pair(BS,pair(U,scrypt(MKui,pair(Ui,pair(GIdi,pair(apply(H,pair(apply(H,pair(PWi,Ni)),pair(GIdi,RMui))),pair(H,apply(H,pair(PWi,Ni))))))))))
=[exists T1]=>
 state_user(U,BS,SN,MKsj,MKui,H,2,Ui,RPWi,APMi,RMui,Ni,PWi,UKi,Rui,Kui,SNj,Si,Zi,Kj,Kbs,GIdi,RNuj,T1,T2,Dummy_Set_46,Dummy_Set_47,Dummy_Set_49,Dummy_Set_50,Dummy_Set_51,Dummy_Set_52,Dummy_Set_53,Dummy_Set_54,Dummy_Set_55,Dummy_Set_56,Dummy_Set_57,SID).
 secret(Dummy_Set_46,subs1,Dummy_Set_47).
 secret(Dummy_Set_49,subs2,Dummy_Set_50).
 secret(Dummy_Set_51,subs3,Dummy_Set_52).
 secret(Dummy_Set_53,subs4,Dummy_Set_54).
 secret(Dummy_Set_55,subs5,Dummy_Set_56).
 secret(Dummy_Set_57,subs6,U).
 iknows(pair(U,pair(BS,pair(Ui,pair(apply(H,pair(apply(H,pair(apply(H,pair(PWi,Ni)),pair(GIdi,Dummy_RMui))),T1)),T1))))).
 witness(U,BS,user_basestation,T1).
 contains(Kj,Dummy_Set_46).
 contains(SN,Dummy_Set_47).
 contains(BS,Dummy_Set_47).
 contains(MKsj,Dummy_Set_49).
 contains(SN,Dummy_Set_50).
 contains(BS,Dummy_Set_50).
 contains(RMui,Dummy_Set_51).
 contains(U,Dummy_Set_52).
 contains(BS,Dummy_Set_52).
 contains(Kbs,Dummy_Set_53).
 contains(SN,Dummy_Set_54).
 contains(BS,Dummy_Set_54).
 contains(APMi,Dummy_Set_55).
 contains(GIdi,Dummy_Set_55).
 contains(U,Dummy_Set_56).
 contains(BS,Dummy_Set_56).
 contains(PWi,Dummy_Set_57).
 contains(Ni,Dummy_Set_57)

step step_8 (U,BS,SN,MKsj,MKui,H,Ui,RPWi,APMi,Dummy_RMui,Ni,PWi,Dummy_UKi,Rui,Dummy_Kui,SNj,Si,Zi,Kj,Kbs,GIdi,RNuj,Dummy_T1,Dummy_T2,Set_46,Set_47,Set_49,Set_50,Set_51,Set_52,Set_53,Set_54,Set_55,Set_56,Set_57,SID,RMui,T1,T2) :=
 state_user(U,BS,SN,MKsj,MKui,H,2,Ui,RPWi,APMi,Dummy_RMui,Ni,PWi,Dummy_UKi,Rui,Dummy_Kui,SNj,Si,Zi,Kj,Kbs,GIdi,RNuj,Dummy_T1,Dummy_T2,Set_46,Set_47,Set_49,Set_50,Set_51,Set_52,Set_53,Set_54,Set_55,Set_56,Set_57,SID).
 iknows(pair(BS,pair(U,pair(scrypt(apply(H,pair(apply(H,pair(apply(H,pair(PWi,Ni)),pair(GIdi,RMui))),pair(Ui,pair(T1,T2)))),pair(Si,pair(Zi,pair(SNj,apply(H,pair(SNj,pair(Ui,pair(Kbs,Kj)))))))),pair(T2,T1)))))
 =>
 state_user(U,BS,SN,MKsj,MKui,H,3,Ui,RPWi,APMi,RMui,Ni,PWi,apply(H,pair(Rui,pair(Ui,pair(T1,T2)))),Rui,apply(H,pair(SNj,pair(Ui,pair(Kbs,Kj)))),SNj,Si,Zi,Kj,Kbs,GIdi,RNuj,T1,T2,Set_46,Set_47,Set_49,Set_50,Set_51,Set_52,Set_53,Set_54,Set_55,Set_56,Set_57,SID).
 iknows(pair(U,pair(SN,pair(SNj,pair(Ui,pair(Zi,pair(Si,pair(scrypt(apply(H,pair(SNj,pair(Ui,pair(Kbs,Kj)))),pair(SNj,pair(Ui,pair(Rui,pair(GIdi,pair(T1,pair(Si,Zi))))))),apply(H,pair(T1,pair(Si,Zi))))))))))).
 witness(U,SN,user_sensornode,T1)


section properties:

property secrecy_of_subs1 (MGoal,ASGoal) :=
 [] ((secret(MGoal,subs1,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_subs2 (MGoal,ASGoal) :=
 [] ((secret(MGoal,subs2,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_subs3 (MGoal,ASGoal) :=
 [] ((secret(MGoal,subs3,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_subs4 (MGoal,ASGoal) :=
 [] ((secret(MGoal,subs4,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_subs5 (MGoal,ASGoal) :=
 [] ((secret(MGoal,subs5,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_subs6 (MGoal,ASGoal) :=
 [] ((secret(MGoal,subs6,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property authentication_on_sensornode_basestation (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,sensornode_basestation,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,sensornode_basestation,MGoal))
     /\ ((request(A1Goal,A2Goal,sensornode_basestation,MGoal,SID1)
           /\ request(A1Goal,A2Goal,sensornode_basestation,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_user_basestation (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,user_basestation,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,user_basestation,MGoal))
     /\ ((request(A1Goal,A2Goal,user_basestation,MGoal,SID1)
           /\ request(A1Goal,A2Goal,user_basestation,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_user_sensornode (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,user_sensornode,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,user_sensornode,MGoal))
     /\ ((request(A1Goal,A2Goal,user_sensornode,MGoal,SID1)
           /\ request(A1Goal,A2Goal,user_sensornode,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_sensornode_user (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,sensornode_user,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,sensornode_user,MGoal))
     /\ ((request(A1Goal,A2Goal,sensornode_user,MGoal,SID1)
           /\ request(A1Goal,A2Goal,sensornode_user,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state secrecy_of_subs1 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,subs1,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_subs2 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,subs2,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_subs3 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,subs3,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_subs4 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,subs4,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_subs5 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,subs5,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_subs6 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,subs6,ASGoal) &
 not(contains(i,ASGoal))

attack_state authentication_on_sensornode_basestation (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,sensornode_basestation,MGoal,SID) &
 not(witness(A2Goal,A1Goal,sensornode_basestation,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_sensornode_basestation (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,sensornode_basestation,MGoal,SID1).
 request(A1Goal,A2Goal,sensornode_basestation,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_user_basestation (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,user_basestation,MGoal,SID) &
 not(witness(A2Goal,A1Goal,user_basestation,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_user_basestation (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,user_basestation,MGoal,SID1).
 request(A1Goal,A2Goal,user_basestation,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_user_sensornode (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,user_sensornode,MGoal,SID) &
 not(witness(A2Goal,A1Goal,user_sensornode,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_user_sensornode (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,user_sensornode,MGoal,SID1).
 request(A1Goal,A2Goal,user_sensornode,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_sensornode_user (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,sensornode_user,MGoal,SID) &
 not(witness(A2Goal,A1Goal,sensornode_user,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_sensornode_user (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,sensornode_user,MGoal,SID1).
 request(A1Goal,A2Goal,sensornode_user,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

