%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfileFZz0CE

section signature:

state_party3: agent * agent * agent * nat * nat * public_key * public_key * public_key * public_key * public_key * public_key * public_key * symmetric_key * nat * set(agent) * nat -> fact
state_party2: agent * agent * agent * nat * nat * public_key * public_key * public_key * public_key * public_key * public_key * public_key * symmetric_key * nat * set(agent) * nat -> fact
state_party1: agent * agent * agent * nat * nat * nat * public_key * public_key * public_key * public_key * public_key * public_key * public_key * symmetric_key * set(agent) * nat -> fact


section types:

party2_party3_xa3, party3_party2_xa2, party3_party2_y, party3_party2_x, k, party1_party3_ya3, party2_party1_x: protocol_id
MGoal, start: message
set_95, set_124, set_122, set_121, set_115, set_108: set
ASGoal, Set_72, Set_54, Set_30, Dummy_Set_72, Dummy_Set_54, Dummy_Set_30: set(agent)
dummy_sk, K, Dummy_K: symmetric_key
dummy_pk, X, Y, Z, Ya3, Za2, Xa2, Xa3, Dummy_Z, Dummy_Xa2, Dummy_Y, Dummy_Xa3, Dummy_Ya3, Dummy_X: public_key
A2Goal, A1Goal, p3, p2, P3, P1, P2, p1, i: agent
3, SID, dummy_nat, SID2, SID1, g, A3, State, G, A2, 2, 9, 1, 8, 0, Dummy_A3, 5, A1, Dummy_A2, 4, Dummy_A1, Dummy_State: nat


section inits:

initial_state init1 := 
 iknows(start).
 iknows(p1).
 iknows(p2).
 iknows(p3).
 iknows(g).
 iknows(i).
 state_party1(p1,p2,p3,g,0,dummy_nat,dummy_pk,dummy_pk,dummy_pk,dummy_pk,dummy_pk,dummy_pk,dummy_pk,dummy_sk,set_95,3).
 state_party2(p2,p3,p1,g,0,dummy_pk,dummy_pk,dummy_pk,dummy_pk,dummy_pk,dummy_pk,dummy_pk,dummy_sk,dummy_nat,set_108,4).
 state_party3(p3,p1,p2,g,0,dummy_pk,dummy_pk,dummy_pk,dummy_pk,dummy_pk,dummy_pk,dummy_pk,dummy_sk,dummy_nat,set_115,5).
 state_party2(p2,p3,i,g,0,dummy_pk,dummy_pk,dummy_pk,dummy_pk,dummy_pk,dummy_pk,dummy_pk,dummy_sk,dummy_nat,set_122,8).
 state_party3(p3,i,p2,g,0,dummy_pk,dummy_pk,dummy_pk,dummy_pk,dummy_pk,dummy_pk,dummy_pk,dummy_sk,dummy_nat,set_124,9)


section rules:

step step_0 (P1,P2,P3,G,Dummy_A1,Dummy_X,Y,Z,Ya3,Za2,Xa2,Xa3,K,Set_30,SID,A1) :=
 state_party1(P1,P2,P3,G,0,Dummy_A1,Dummy_X,Y,Z,Ya3,Za2,Xa2,Xa3,K,Set_30,SID).
 iknows(start)
=[exists A1]=>
 state_party1(P1,P2,P3,G,1,A1,exp(G,A1),Y,Z,Ya3,Za2,Xa2,Xa3,K,Set_30,SID).
 iknows(exp(G,A1)).
 witness(P1,P2,party2_party1_x,exp(G,A1))

step step_1 (P1,P2,P3,G,A1,X,Y,Z,Dummy_Ya3,Za2,Xa2,Dummy_Xa3,Dummy_K,Dummy_Set_30,SID,Ya3,Xa3) :=
 state_party1(P1,P2,P3,G,1,A1,X,Y,Z,Dummy_Ya3,Za2,Xa2,Dummy_Xa3,Dummy_K,Dummy_Set_30,SID).
 iknows(pair(Xa3,Ya3))
 =>
 state_party1(P1,P2,P3,G,2,A1,X,Y,Z,Ya3,Za2,Xa2,Xa3,exp(Ya3,A1),Dummy_Set_30,SID).
 request(P1,P3,party1_party3_ya3,Ya3,SID).
 secret(exp(Ya3,A1),k,Dummy_Set_30).
 contains(P1,Dummy_Set_30).
 contains(P2,Dummy_Set_30).
 contains(P3,Dummy_Set_30)

step step_2 (P2,P3,P1,G,Dummy_X,Dummy_Y,Z,Ya3,Za2,Dummy_Xa2,Xa3,K,Dummy_A2,Set_54,SID,X,A2) :=
 state_party2(P2,P3,P1,G,0,Dummy_X,Dummy_Y,Z,Ya3,Za2,Dummy_Xa2,Xa3,K,Dummy_A2,Set_54,SID).
 iknows(X)
=[exists A2]=>
 state_party2(P2,P3,P1,G,1,X,exp(G,A2),Z,Ya3,Za2,exp(X,A2),Xa3,K,A2,Set_54,SID).
 request(P2,p1,party2_party1_x,X,SID).
 iknows(pair(X,pair(exp(G,A2),exp(X,A2)))).
 witness(P2,P3,party3_party2_x,X).
 witness(P2,P3,party3_party2_y,exp(G,A2)).
 witness(P2,P3,party3_party2_xa2,exp(X,A2))

step step_3 (P2,P3,P1,G,X,Y,Z,Dummy_Ya3,Za2,Xa2,Dummy_Xa3,Dummy_K,A2,Dummy_Set_54,SID,Ya3,Xa3) :=
 state_party2(P2,P3,P1,G,1,X,Y,Z,Dummy_Ya3,Za2,Xa2,Dummy_Xa3,Dummy_K,A2,Dummy_Set_54,SID).
 iknows(pair(Xa3,Ya3))
 =>
 state_party2(P2,P3,P1,G,2,X,Y,Z,Ya3,Za2,Xa2,Xa3,exp(Xa3,A2),A2,Dummy_Set_54,SID).
 secret(exp(Xa3,A2),k,Dummy_Set_54).
 contains(P1,Dummy_Set_54).
 contains(P2,Dummy_Set_54).
 contains(P3,Dummy_Set_54)

step step_4 (P3,P1,P2,G,Dummy_X,Dummy_Y,Dummy_Z,Dummy_Ya3,Za2,Dummy_Xa2,Dummy_Xa3,Dummy_K,Dummy_A3,Dummy_Set_72,SID,X,Y,Xa2,A3) :=
 state_party3(P3,P1,P2,G,0,Dummy_X,Dummy_Y,Dummy_Z,Dummy_Ya3,Za2,Dummy_Xa2,Dummy_Xa3,Dummy_K,Dummy_A3,Dummy_Set_72,SID).
 iknows(pair(X,pair(Y,Xa2)))
=[exists A3]=>
 state_party3(P3,P1,P2,G,1,X,Y,exp(G,A3),exp(Y,A3),Za2,Xa2,exp(X,A3),exp(Xa2,A3),A3,Dummy_Set_72,SID).
 request(P3,P2,party3_party2_x,X,SID).
 request(P3,P2,party3_party2_y,Y,SID).
 request(P3,P2,party3_party2_xa2,Xa2,SID).
 secret(exp(Xa2,A3),k,Dummy_Set_72).
 iknows(pair(exp(X,A3),exp(Y,A3))).
 witness(P3,P1,party1_party3_ya3,exp(Y,A3)).
 contains(P1,Dummy_Set_72).
 contains(P2,Dummy_Set_72).
 contains(P3,Dummy_Set_72)


section properties:

property secrecy_of_k (MGoal,ASGoal) :=
 [] ((secret(MGoal,k,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property authentication_on_party1_party3_ya3 (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,party1_party3_ya3,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,party1_party3_ya3,MGoal))
     /\ ((request(A1Goal,A2Goal,party1_party3_ya3,MGoal,SID1)
           /\ request(A1Goal,A2Goal,party1_party3_ya3,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_party3_party2_x (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,party3_party2_x,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,party3_party2_x,MGoal))
     /\ ((request(A1Goal,A2Goal,party3_party2_x,MGoal,SID1)
           /\ request(A1Goal,A2Goal,party3_party2_x,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_party3_party2_y (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,party3_party2_y,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,party3_party2_y,MGoal))
     /\ ((request(A1Goal,A2Goal,party3_party2_y,MGoal,SID1)
           /\ request(A1Goal,A2Goal,party3_party2_y,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_party3_party2_xa2 (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,party3_party2_xa2,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,party3_party2_xa2,MGoal))
     /\ ((request(A1Goal,A2Goal,party3_party2_xa2,MGoal,SID1)
           /\ request(A1Goal,A2Goal,party3_party2_xa2,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_party2_party1_x (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,party2_party1_x,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,party2_party1_x,MGoal))
     /\ ((request(A1Goal,A2Goal,party2_party1_x,MGoal,SID1)
           /\ request(A1Goal,A2Goal,party2_party1_x,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state secrecy_of_k (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,k,ASGoal) &
 not(contains(i,ASGoal))

attack_state authentication_on_party1_party3_ya3 (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,party1_party3_ya3,MGoal,SID) &
 not(witness(A2Goal,A1Goal,party1_party3_ya3,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_party1_party3_ya3 (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,party1_party3_ya3,MGoal,SID1).
 request(A1Goal,A2Goal,party1_party3_ya3,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_party3_party2_x (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,party3_party2_x,MGoal,SID) &
 not(witness(A2Goal,A1Goal,party3_party2_x,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_party3_party2_x (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,party3_party2_x,MGoal,SID1).
 request(A1Goal,A2Goal,party3_party2_x,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_party3_party2_y (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,party3_party2_y,MGoal,SID) &
 not(witness(A2Goal,A1Goal,party3_party2_y,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_party3_party2_y (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,party3_party2_y,MGoal,SID1).
 request(A1Goal,A2Goal,party3_party2_y,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_party3_party2_xa2 (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,party3_party2_xa2,MGoal,SID) &
 not(witness(A2Goal,A1Goal,party3_party2_xa2,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_party3_party2_xa2 (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,party3_party2_xa2,MGoal,SID1).
 request(A1Goal,A2Goal,party3_party2_xa2,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_party2_party1_x (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,party2_party1_x,MGoal,SID) &
 not(witness(A2Goal,A1Goal,party2_party1_x,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_party2_party1_x (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,party2_party1_x,MGoal,SID1).
 request(A1Goal,A2Goal,party2_party1_x,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

