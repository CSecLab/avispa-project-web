%%%%%%%%%%%%%%%%%%%%%%%%%%Mobile%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

role mobile (

    UE,WAP,EHSS,AAA              : agent,
    F1, F2,F3           : hash_func,
    HMAC                : hash_func,
    MK_UE, MK_WAP       : symmetric_key, 
    SND,RCV             : channel (dy))

played_by UE def=

  local
    R_UE,R_WAP                             : text,
    ID_UE, SSID, R_HSS, T_EXP              : text,
    MAC1  : hash(hash(symmetric_key.text.text.text.text).message),
    MAC2  : hash(hash(symmetric_key.text.text.text.text).message),
    Q_I   : hash(symmetric_key.text.text.text.text),
    K_WAP,K_UE : message,
    State            : nat 

  const
    request_id,
    respond_id,
    success     : text,
    sec_qi1,
    sec_mk_ue,
    sec_mk_wap, 
    at_rand,
    at_rand2    : protocol_id
 
  init 
    State := 2 
  
  transition

  1. State   = 3
       /\ RCV(request_id)
     =|>
     State' := 5
       /\ ID_UE' := new()
       /\ SSID'  := new()
       /\ R_HSS' := new()
       /\ R_UE'  := new()
       /\ T_EXP' := new()
       /\ SND(respond_id.ID_UE'.SSID'.R_HSS'.T_EXP'.R_UE')

  2. State   = 5
       /\ RCV(K_WAP'.MAC1')
       /\ K_WAP'  = F2(SSID'.R_UE'.R_WAP')
       /\ Q_I'    = F3(MK.ID_UE'.SSID'.R_HSS'.T_EXP')
       /\ MAC1'  = HMAC(PRF_SHA1(Q_I').K_WAP')
     =|>
     State' := 7
       
       /\ K_UE'  := F1(ID_UE'.R_UE'.R_WAP')
       /\ MAC2'  := HMAC(PRF_SHA1(Q_I').K_UE')
       /\ SND(K_UE'.MAC2')
       /\ request(UE,WAP,at_rand,Q_I')
       /\ witness(UE,WAP,at_rand2,Q_I')
       /\ secret(Q_I',sec_qi1,{UE,WAP})
       

  3. State   = 7 /\ RCV(success) =|>
     State' := 9 

end role

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%WAP%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

role wap (

    UE,WAP              : agent,
    F1, F2, F3          : hash_func,
    PRF_SHA1            : hash_func,
    HMAC                : hash_func,
    MK_UE, MK_WAP       : symmetric_key, 
    SND,RCV             : channel (dy))
played_by WAP def=

  local
    R_UE,R_WAP          : text,
    ID_UE, SSID, R_HSS, T_EXP              : text,
    MAC1 : hash(hash(symmetric_key.text.text.text.text).message),
    MAC2 : hash(hash(symmetric_key.text.text.text.text).message),
    Q_I  : hash(symmetric_key.text.text.text.text),
    K_WAP,K_UE : message,
    State            : nat

  const
    request_id,
    respond_id,
    success     : text,
    sec_qi2, 
    sec_mk_ue,
    sec_mk_wap,
    at_rand,
    at_rand2    : protocol_id
 

  init 
    State := 3 

  transition

  1. State   = 4
       /\ RCV(start)
     =|>
     State' := 6
       /\ SND(request_id)

  2. State   = 6
       /\ RCV(respond_id.ID_UE'.SSID'.R_HSS'.T_EXP'.R_UE')
     =|>
     State' := 8
       /\ R_WAP' := new()
       /\ K_WAP'   := F2(SSID'.R_UE'.R_WAP')
       /\ Q_I'     := F3(MK.ID_UE'.SSID'.R_HSS'.T_EXP')
       /\ MAC1'    := HMAC(Q_I.K_WAP')
       /\ SND(K_WAP'.MAC1')
       /\ witness(UE,WAP,at_rand,Q_I')
       /\ secret(Q_I',sec_qi2,{UE,WAP})
       

  3. State   = 8
       /\ RCV(K_UE'.MAC2')
       /\ K_UE'  = F1(ID_UE'.R_UE'.R_WAP')
       /\ MAC2' = HMAC(Q_I.K_UE')
     =|>
     State' := 10
       /\ SND(success)
       /\ request(UE,WAP,at_rand2,Q_I)

end role

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%eHSS%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
role ehss (

    UE,WAP,eHSS,AAA     : agent,
    MK_UE, MK_WAP       : symmetric_key, 
    SND,RCV             : channel (dy))
played_by EHSS def=

  local
 ID_UE, SSID, R_HSS, T_EXP              : text,
 Q_I  : hash(symmetric_key.text.text.text.text),
State            : nat

const
    request_id,
    respond_id,
    success     : text,
    sec_qi2,
    sec_mk_ue,
    sec_mk_wap, 
    at_rand,
    at_rand2    : protocol_id

init 
State := 0

1. State   = 0
       /\ RCV(request_id)
     =|>
     State' := 2
       /\ ID_UE' := new()
       /\ SSID'  := new()
       /\ R_HSS' := new()
       /\ R_UE'  := new()
       /\ T_EXP' := new()
       /\ SND(respond_id.ID_UE'.SSID'.R_HSS'.T_EXP'.R_UE')
       /\ Q_I'     := F3(MK_WAP.ID_UE'.SSID'.R_HSS'.T_EXP')
       /\ T_I'     := (MK_UE.Q_I'.SSID'.ID_UE'.R_HSS'.T_EXP')
2. State := 3
       /\ SND(request_id)
       /\ secret(MK_UE,sec_mk_ue,{UE,EHSS})
       /\ secret(MK_WAP,sec_mk_wap,{UE,EHSS,AAA})

 end role

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%AAA%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

role AAA (

    UE,WAP,eHSS,AAA     : agent,
    MK_UE,MK_WAP        : symmetric_key, 
    SND,RCV             : channel (dy))
played_by aaa def=

  local

State            : nat

const
    request_id,
    respond_id,
    success     : text,
    sec_qi2,
    sec_mk_ue,
    sec_mk_wap, 
    at_rand,
    at_rand2    : protocol_id

init 
    State := 1 

 1. State   = 1
       /\ RCV(start)
     =|>
     State' := 3
       /\ SND(request_id)
       /\ secret(MK_WAP,sec_mk_wap,{UE,EHSS,AAA})
end role

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%SESSION%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

role session(
    UE,WAP,EHSS,AAA  : agent,
    F1,F2,F3         : hash_func,
    HMAC             : hash_func,
    MK_UE,MK_WAP     : symmetric_key)
def=

local
    SNDUE, RCVUE, SNDWAP, RCVWAP, SNDEHSS,RCVEHSS,SNDAAA, RCVAAA  : channel (dy)

const 
    at_rand,at_rand2       : protocol_id

  composition
     mobile(UE,WAP,EHSS,AAA,F1,F2,F3,HMAC,MK_UE,MK_WAP,SNDUE,RCVUE)
  /\ wap(UE,WAP.EHSS,AAA,F1,F2,F3,HMAC,MK_UE,MK_WAP,SNDWAP,RCVWAP)
/\ ehss(UE,WAP,EHSS,AAA,F1,F2,F3,HMAC,MK_UE,MK_WAP,SNDEHSS,RCVEHSS)
/\ aaa(UE,WAP,EHSS,AAA,F1,F2,F3,HMAC,MK_UE,MK_WAP,SNDAAA,RCVAAA)

end role

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%Environement%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

role environment() def=

  const 
    ue,wap,ehss,aaa         : agent,
    kps,kis                 : symmetric_key, % !!one per user   !!
    f1,f2,f3                : hash_func,
    hmac                    : hash_func

  intruder_knowledge = {ue,wap,ehss,aaa,i,f1,f2,f3,prf_sha1,hmac

                       }
 
  composition
     session(ue,wap,ehss,aaa,f1,f2,f3,prf_sha1,hmac,kps)
%  /\ session(ue,wap,f1,f2,f3,prf_sha1,hmac,kps)
% /\ session(i,wap,f1,f2,f3,prf_sha1,hmac,kis)

end role



goal

  %secrecy_of Q_I, MK_UE,MK_WAP
  secrecy_of sec_qi1, sec_qi2, sec_MK_UE, sec_MK_WAP

  %Mobile authenticates WAP on at_rand
  authentication_on at_rand
  %WAP authenticates Mobile on at_rand2
  authentication_on at_rand2

end goal



environment()
