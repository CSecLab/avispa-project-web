%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfileXDqZ1Q

section signature:

state_server: agent * agent * symmetric_key * hash_func * hash_func * hash_func * nat * text * text * text * text * apply(hash_func,pair(symmetric_key,pair(agent,pair(text,text)))) * apply(hash_func,pair(apply(hash_func,pair(symmetric_key,pair(agent,pair(text,text)))),text)) * set(agent) * set(agent) * nat -> fact
state_client: agent * agent * symmetric_key * hash_func * hash_func * hash_func * nat * text * text * text * text * apply(hash_func,pair(symmetric_key,pair(agent,pair(text,text)))) * apply(hash_func,pair(apply(hash_func,pair(symmetric_key,pair(agent,pair(text,text)))),text)) * set(agent) * set(agent) * nat -> fact


section types:

dummy_msg, start, MGoal: message
auths, autha, sec_PSK, sec_AK: protocol_id
AuthA, Dummy_AuthA, Dummy_AuthS, AuthS: apply(hash_func,pair(apply(hash_func,pair(symmetric_key,pair(agent,pair(text,text)))),text))
AK, Dummy_AK: apply(hash_func,pair(symmetric_key,pair(agent,pair(text,text))))
T, Ns, Nc, ID, Dummy_ID, Dummy_Nc, Dummy_Ns, Dummy_T, dummy_nonce: text
PRF, MICA, MICS, prf, mica, mics: hash_func
PSK, psk_ps, psk_pi, psk_is: symmetric_key
6, State, 4, SID, 3, Dummy_State, 2, 1, 0, 10: nat
Dummy_A, A, S, a, s, i: agent
Dummy_Set_51, Dummy_Set_50, Dummy_Set_30, Dummy_Set_28, Set_30, Set_28, ASGoal, Set_51, Set_50: set(agent)
set_98, set_97, set_90, set_89, set_75, set_74, set_105, set_104, set_103, set_102, set_101, set_100: set


section inits:

initial_state init1 := 
 iknows(start).
 iknows(a).
 iknows(s).
 iknows(mica).
 iknows(mics).
 iknows(prf).
 iknows(psk_pi).
 iknows(psk_is).
 iknows(i).
 state_client(a,s,psk_ps,prf,mica,mics,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,set_74,set_75,3).
 state_server(s,a,psk_ps,prf,mica,mics,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,set_89,set_90,4).
 state_client(a,i,psk_pi,prf,mica,mics,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,set_97,set_98,6).
 state_server(s,i,psk_is,prf,mica,mics,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,set_104,set_105,10)


section rules:

step step_0 (A,S,PSK,PRF,MICA,MICS,T,Ns,Nc,ID,AK,AuthS,Set_28,Set_30,SID) :=
 state_client(A,S,PSK,PRF,MICA,MICS,0,T,Ns,Nc,ID,AK,AuthS,Set_28,Set_30,SID).
 iknows(start)
 =>
 state_client(A,S,PSK,PRF,MICA,MICS,1,T,Ns,Nc,ID,AK,AuthS,Set_28,Set_30,SID).
 iknows(A)

step step_1 (A,S,PSK,PRF,MICA,MICS,Dummy_T,Dummy_Ns,Dummy_Nc,ID,Dummy_AK,AuthS,Dummy_Set_28,Dummy_Set_30,SID,T,Ns,Nc) :=
 state_client(A,S,PSK,PRF,MICA,MICS,1,Dummy_T,Dummy_Ns,Dummy_Nc,ID,Dummy_AK,AuthS,Dummy_Set_28,Dummy_Set_30,SID).
 iknows(pair(Ns,pair(T,S)))
=[exists Nc]=>
 state_client(A,S,PSK,PRF,MICA,MICS,2,T,Ns,Nc,ID,apply(PRF,pair(PSK,pair(S,T))),AuthS,Dummy_Set_28,Dummy_Set_30,SID).
 iknows(pair(Nc,apply(MICA,pair(apply(PRF,pair(PSK,pair(S,T))),Ns)))).
 secret(PSK,sec_PSK,Dummy_Set_28).
 secret(apply(PRF,pair(PSK,pair(S,T))),sec_AK,Dummy_Set_30).
 contains(A,Dummy_Set_28).
 contains(A,Dummy_Set_30)

step step_2 (A,S,PSK,PRF,MICA,MICS,T,Ns,Dummy_Nc,Dummy_ID,Dummy_AK,Dummy_AuthS,Set_28,Set_30,SID,Nc,ID,AK) :=
 state_client(A,S,PSK,PRF,MICA,MICS,2,T,Ns,Dummy_Nc,Dummy_ID,Dummy_AK,Dummy_AuthS,Set_28,Set_30,SID).
 iknows(pair(ID,apply(MICS,pair(AK,Nc))))
 =>
 state_client(A,S,PSK,PRF,MICA,MICS,3,T,Ns,Nc,ID,AK,apply(MICS,pair(AK,Nc)),Set_28,Set_30,SID)

step step_3 (S,Dummy_A,PSK,PRF,MICA,MICS,Dummy_T,Dummy_Ns,Nc,ID,Dummy_AK,AuthA,Set_50,Set_51,SID,A,T,Ns) :=
 state_server(S,Dummy_A,PSK,PRF,MICA,MICS,0,Dummy_T,Dummy_Ns,Nc,ID,Dummy_AK,AuthA,Set_50,Set_51,SID).
 iknows(A)
=[exists T,Ns]=>
 state_server(S,A,PSK,PRF,MICA,MICS,1,T,Ns,Nc,ID,apply(PRF,pair(PSK,pair(S,T))),AuthA,Set_50,Set_51,SID).
 iknows(pair(Ns,pair(T,S)))

step step_4 (S,A,PSK,PRF,MICA,MICS,T,Dummy_Ns,Dummy_Nc,Dummy_ID,Dummy_AK,Dummy_AuthA,Dummy_Set_50,Dummy_Set_51,SID,Ns,Nc,ID,AK) :=
 state_server(S,A,PSK,PRF,MICA,MICS,1,T,Dummy_Ns,Dummy_Nc,Dummy_ID,Dummy_AK,Dummy_AuthA,Dummy_Set_50,Dummy_Set_51,SID).
 iknows(pair(Nc,apply(MICA,pair(AK,Ns))))
=[exists ID]=>
 state_server(S,A,PSK,PRF,MICA,MICS,2,T,Ns,Nc,ID,AK,apply(MICA,pair(AK,Ns)),Dummy_Set_50,Dummy_Set_51,SID).
 iknows(pair(ID,apply(MICS,pair(AK,Nc)))).
 secret(PSK,sec_PSK,Dummy_Set_50).
 secret(AK,sec_AK,Dummy_Set_51).
 contains(S,Dummy_Set_50).
 contains(S,Dummy_Set_51)


section properties:

property secrecy_of_sec_PSK (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_PSK,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_sec_AK (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_AK,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))


section attack_states:

attack_state secrecy_of_sec_PSK (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_PSK,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_sec_AK (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_AK,ASGoal) &
 not(contains(i,ASGoal))

