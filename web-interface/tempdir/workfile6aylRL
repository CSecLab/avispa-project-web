%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Role of the payer
role payer     (Pr,B		:agent,
		Skb 		:symmetric_key,
		Id,Bi,Payee_id	:text,
		Hash		:hash_func,
		Snd,Rcv		:channel(dy))
played_by Pr def=
	local State 		: nat,
	NPr,NB,Tspr,Tsb	     	: text,
	KB,KPr	     		: public_key,
	Amount,Alpha,Beta,Payment_success	: message
const payer,bank,npr,skb,payer_bank_npr,payer_bank_skb		:protocol_id
init State := 0
transition
1.	State  = 0 	/\ Rcv(start)	 =|>
	State':= 2  	/\ Tspr':=new()
		   	/\ NPr' :=new()
		   	/\ Snd({Id.Bi.Tspr'.NPr'}_KB)
		  	/\ secret(Tspr',NPr',{payer,bank})
		   	/\ witness(Pr,B,payer_bank_npr,{npr})

2.	State   = 2	/\ Rcv({Skb.Tsb'.NB'}_KPr) =|>
	State' := 4 	/\ Tspr'    :=new()
		   	/\ NPr'     :=new()
			/\ Alpha'   :=Hash(Skb.Amount.Payee_id.Tspr'.NPr')
			/\ Snd({Amount.Payee_id.Tspr'.NPr'.Alpha'}_Skb)
		   	/\ secret(Tspr',NPr',Skb,{payer,bank})
		   	/\ witness(Pr,B,payer_bank_npr,payer_bank_skb,{npr},{skb})

3.	State	 = 4	/\ Rcv({Payment_success.Amount.Payee_id.Tspr.NPr.Tsb.NB.Beta}_Skb) =|>
	State'  := 6	/\ Beta' :=Hash(Skb.Payment_success.Amount.Payee_id.Tspr.NPr.Tsb.NB)
end role
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Role of the Bank
role bank      (Pr,B		:agent,
		Skb 		:symmetric_key,
		Id,Bi,Payee_id	:text,
		Hash		:hash_func,
		Snd,Rcv		:channel(dy))
played_by B def=
	local State		: nat,
	NPr,NB,Tsb,Tspr	    	: text,
	KB,KPr	    		: public_key,
	Amount,Alpha,Beta,Payment_success	     : message
const payer,bank,nb,npr,skb,bank_payer_nb,bank_payer_skb,payer_bank_skb,payer_bank_npr	:protocol_id
init State := 1
transition
1. 	State	 = 1	/\ Rcv(start) =|>
	State'	:= 3	/\ Tsb':=new()
		   	/\ NB':=new()
		   	/\ Snd({Skb.Tsb'.NB'}_KPr)
		   	/\ secret(Tsb',NB',{payer,bank})
		   	/\ witness(Pr,B,bank_payer_nb,{nb})

2.	State	 = 3	/\ Rcv({Id.Bi.Tspr.NPr}_KB) =|>
	State'	:= 5 	/\ Tspr':=new()
			/\ NPr':=new()
			/\ Tsb':=new()
			/\ NB':=new()
			/\ Beta' :=Hash(Skb.Payment_success.Amount.Payee_id.Tspr'.NPr'.Tsb'.NB')
			/\ Snd({Payment_success.Amount.Payee_id.Tspr'.NPr'.Tsb'.NB'.Beta'}_Skb)
			/\ secret(Tspr',NPr',Tsb',NB',{payer,bank})
			
			/\ witness(Pr,B,bank_payer_nb,payer_bank_npr)	
			/\ witness(Pr,B,bank_payer_skb,payer_bank_skb,{skb})
	
3.	State	= 5	/\ Rcv({Amount.Payee_id.Tspr.NPr.Alpha}_Skb) =|>
	State' := 7	/\ Alpha'  :=Hash(Skb.Amount.Payee_id.Tspr.NPr)
end role
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% role Session
role session( Pr,B		:agent,
	      Skb 		:symmetric_key,
	      Id,Bi,Payee_id	:text,
	      Hash		:hash_func)

def=
local SPr,SB,Rpr,RB	:channel(dy)
composition
payer(Pr,B,Skb,Id,Bi,Payee_id,H1,H2,SPr,Rpr) /\
bank(Pr,B,Skb,Id,Bi,Payee_id,H1,H2,SB,RB)
end role
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%Role Environment
role environment()
def=
local Hash	: hash_func
const
prr,ba,i	:agent,
skbb 		:symmetric_key,
idp,bi1,paye_id	:text,
payer_bank_NPr,payer_bank_Skb,bank_payer_NB,bank_payer_Skb :protocol_id
intruder_knowledge ={prr,ba,skbb,idp,bi1}
composition
session(prr,ba,skbb,idp,bi1,paye_id,Hash)
/\session(i,prr,skbb,idp,bi1,paye_id,Hash)
/\session(ba,i,skbb,idp,bi1,paye_id,Hash)
end role
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%Goal	
goal
secrecy_of nb,npr,skb,h1,h2
authentication_on bank_payer_nb,bank_payer_skb,payer_bank_skb,payer_bank_npr
end goal
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Call of the Main role:
environment()
	
	      
