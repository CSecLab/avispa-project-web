%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfile2J2trd

section signature:

state_bob: agent * agent * text * hash_func * public_key * public_key * text * text * text * text * text * apply(hash_func,pair(text,pair(text,pair(text,message)))) * message * nat * set(agent) * set(agent) * nat -> fact
state_alice: agent * agent * text * hash_func * public_key * public_key * text * text * text * text * text * message * apply(hash_func,pair(text,pair(text,pair(text,message)))) * nat * set(agent) * set(agent) * nat -> fact


section types:

sec_b_SK, sk1, sk2, sec_a_SK: protocol_id
Dummy_SK, SK: apply(hash_func,pair(text,pair(text,pair(text,message))))
ka, kb, ki, Kb, Ka: public_key
f, F: hash_func
Dummy_Set_37, Dummy_Set_31, ASGoal, Set_57, Set_56, Set_37, Set_31, Dummy_Set_57, Dummy_Set_56: set(agent)
Dummy_KEr, dummy_msg, MGoal, KEi, start, KEr, Dummy_KEi: message
Dummy_Nr, Dummy_SA2, Dummy_DHX, Dummy_SA1, Dummy_Ni, dummy_nonce, g, h, Nr, DHY, Ni, SA1, SA2, G, DHX, Dummy_DHY: text
Dummy_State, 3, SID, SID2, SID1, State, 9, 4, 2, 1, 13, 0, 7, 6: nat
A2Goal, A1Goal, a, b, B, A, i: agent
set_86, set_85, set_123, set_122, set_121, set_120, set_119, set_118, set_116, set_115, set_113, set_112, set_110, set_109, set_102, set_101: set


section inits:

initial_state init1 := 
 iknows(start).
 iknows(g).
 iknows(f).
 iknows(a).
 iknows(b).
 iknows(ka).
 iknows(kb).
 iknows(ki).
 iknows(inv(ki)).
 iknows(i).
 state_alice(a,b,h,f,ka,kb,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,0,set_85,set_86,3).
 state_bob(b,a,h,f,kb,ka,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,1,set_101,set_102,4).
 state_alice(a,b,g,f,ka,kb,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,0,set_109,set_110,6).
 state_bob(b,a,g,f,kb,ka,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,1,set_112,set_113,7).
 state_alice(a,i,g,f,ka,ki,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,0,set_115,set_116,9).
 state_bob(b,i,g,f,kb,ki,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,1,set_122,set_123,13)


section rules:

step step_0 (A,B,G,F,Ka,Kb,Dummy_Ni,Dummy_SA1,SA2,Dummy_DHX,Nr,KEr,SK,Set_31,Set_37,SID,Ni,SA1,DHX) :=
 state_alice(A,B,G,F,Ka,Kb,Dummy_Ni,Dummy_SA1,SA2,Dummy_DHX,Nr,KEr,SK,0,Set_31,Set_37,SID).
 iknows(start)
=[exists Ni,DHX,SA1]=>
 state_alice(A,B,G,F,Ka,Kb,Ni,SA1,SA2,DHX,Nr,KEr,SK,2,Set_31,Set_37,SID).
 iknows(pair(SA1,pair(exp(G,DHX),Ni)))

step step_1 (A,B,G,F,Ka,Kb,Ni,SA1,Dummy_SA2,DHX,Dummy_Nr,Dummy_KEr,Dummy_SK,Set_31,Set_37,SID,SA2,Nr,KEr) :=
 state_alice(A,B,G,F,Ka,Kb,Ni,SA1,Dummy_SA2,DHX,Dummy_Nr,Dummy_KEr,Dummy_SK,2,Set_31,Set_37,SID).
 iknows(pair(SA1,pair(KEr,Nr)))
=[exists SA2]=>
 state_alice(A,B,G,F,Ka,Kb,Ni,SA1,SA2,DHX,Nr,KEr,apply(F,pair(Ni,pair(Nr,pair(SA1,exp(KEr,DHX))))),4,Set_31,Set_37,SID).
 iknows(scrypt(apply(F,pair(Ni,pair(Nr,pair(SA1,exp(KEr,DHX))))),pair(A,pair(crypt(inv(Ka),pair(SA1,pair(exp(G,DHX),pair(Ni,Nr)))),SA2)))).
 witness(A,B,sk2,apply(F,pair(Ni,pair(Nr,pair(SA1,exp(KEr,DHX))))))

step step_2 (A,B,G,F,Ka,Kb,Ni,SA1,SA2,DHX,Nr,KEr,SK,Dummy_Set_31,Set_37,SID) :=
 state_alice(A,B,G,F,Ka,Kb,Ni,SA1,SA2,DHX,Nr,KEr,SK,4,Dummy_Set_31,Set_37,SID).
 iknows(scrypt(SK,pair(B,pair(crypt(inv(Kb),pair(SA1,pair(KEr,pair(Nr,Ni)))),SA2))))
 =>
 state_alice(A,B,G,F,Ka,Kb,Ni,SA1,SA2,DHX,Nr,KEr,SK,9,Dummy_Set_31,Set_37,SID).
 secret(SK,sec_a_SK,Dummy_Set_31).
 request(A,B,sk1,SK,SID).
 contains(A,Dummy_Set_31).
 contains(B,Dummy_Set_31)

step step_3 (A,B,G,F,Ka,Kb,Dummy_Ni,Dummy_SA1,SA2,Dummy_DHX,Nr,KEr,SK,Set_31,Set_37,SID,Ni,SA1,DHX) :=
 state_alice(A,B,G,F,Ka,Kb,Dummy_Ni,Dummy_SA1,SA2,Dummy_DHX,Nr,KEr,SK,0,Set_31,Set_37,SID).
 iknows(start)
=[exists Ni,DHX,SA1]=>
 state_alice(A,B,G,F,Ka,Kb,Ni,SA1,SA2,DHX,Nr,KEr,SK,2,Set_31,Set_37,SID).
 iknows(pair(SA1,pair(exp(G,DHX),Ni)))

step step_4 (A,B,G,F,Ka,Kb,Ni,SA1,Dummy_SA2,DHX,Dummy_Nr,Dummy_KEr,Dummy_SK,Set_31,Set_37,SID,SA2,Nr,KEr) :=
 state_alice(A,B,G,F,Ka,Kb,Ni,SA1,Dummy_SA2,DHX,Dummy_Nr,Dummy_KEr,Dummy_SK,2,Set_31,Set_37,SID).
 iknows(pair(SA1,pair(KEr,Nr)))
=[exists SA2]=>
 state_alice(A,B,G,F,Ka,Kb,Ni,SA1,SA2,DHX,Nr,KEr,apply(F,pair(Ni,pair(Nr,pair(SA1,exp(KEr,DHX))))),4,Set_31,Set_37,SID).
 iknows(scrypt(apply(F,pair(Ni,pair(Nr,pair(SA1,exp(KEr,DHX))))),pair(A,pair(crypt(inv(Ka),pair(SA1,pair(exp(G,DHX),pair(Ni,Nr)))),SA2)))).
 witness(A,B,sk2,apply(F,pair(Ni,pair(Nr,pair(SA1,exp(KEr,DHX))))))

step step_5 (A,B,G,F,Ka,Kb,Ni,SA1,SA2,DHX,Nr,KEr,SK,Set_31,Dummy_Set_37,SID) :=
 state_alice(A,B,G,F,Ka,Kb,Ni,SA1,SA2,DHX,Nr,KEr,SK,4,Set_31,Dummy_Set_37,SID).
 iknows(scrypt(SK,pair(B,pair(crypt(inv(Kb),pair(SA1,pair(KEr,pair(Nr,Ni)))),SA2))))
 =>
 state_alice(A,B,G,F,Ka,Kb,Ni,SA1,SA2,DHX,Nr,KEr,SK,9,Set_31,Dummy_Set_37,SID).
 secret(SK,sec_a_SK,Dummy_Set_37).
 request(A,B,sk1,SK,SID).
 contains(A,Dummy_Set_37).
 contains(B,Dummy_Set_37)

step step_6 (B,A,G,F,Kb,Ka,Dummy_Ni,Dummy_SA1,SA2,Dummy_Nr,Dummy_DHY,Dummy_SK,Dummy_KEi,Set_56,Set_57,SID,Ni,SA1,Nr,DHY,KEi) :=
 state_bob(B,A,G,F,Kb,Ka,Dummy_Ni,Dummy_SA1,SA2,Dummy_Nr,Dummy_DHY,Dummy_SK,Dummy_KEi,1,Set_56,Set_57,SID).
 iknows(pair(SA1,pair(KEi,Ni)))
=[exists Nr,DHY]=>
 state_bob(B,A,G,F,Kb,Ka,Ni,SA1,SA2,Nr,DHY,apply(F,pair(Ni,pair(Nr,pair(SA1,exp(KEi,DHY))))),KEi,3,Set_56,Set_57,SID).
 iknows(pair(SA1,pair(exp(G,DHY),Nr))).
 witness(B,A,sk1,apply(F,pair(Ni,pair(Nr,pair(SA1,exp(KEi,DHY))))))

step step_7 (B,A,G,F,Kb,Ka,Ni,SA1,Dummy_SA2,Nr,DHY,SK,KEi,Dummy_Set_56,Set_57,SID,SA2) :=
 state_bob(B,A,G,F,Kb,Ka,Ni,SA1,Dummy_SA2,Nr,DHY,SK,KEi,3,Dummy_Set_56,Set_57,SID).
 iknows(scrypt(SK,pair(A,pair(crypt(inv(Ka),pair(SA1,pair(KEi,pair(Ni,Nr)))),SA2))))
 =>
 state_bob(B,A,G,F,Kb,Ka,Ni,SA1,SA2,Nr,DHY,SK,KEi,9,Dummy_Set_56,Set_57,SID).
 iknows(scrypt(SK,pair(B,pair(crypt(inv(Kb),pair(SA1,pair(exp(G,DHY),pair(Nr,Ni)))),SA2)))).
 secret(SK,sec_b_SK,Dummy_Set_56).
 request(B,A,sk2,SK,SID).
 contains(A,Dummy_Set_56).
 contains(B,Dummy_Set_56)

step step_8 (B,A,G,F,Kb,Ka,Dummy_Ni,Dummy_SA1,SA2,Dummy_Nr,Dummy_DHY,Dummy_SK,Dummy_KEi,Set_56,Set_57,SID,Ni,SA1,Nr,DHY,KEi) :=
 state_bob(B,A,G,F,Kb,Ka,Dummy_Ni,Dummy_SA1,SA2,Dummy_Nr,Dummy_DHY,Dummy_SK,Dummy_KEi,1,Set_56,Set_57,SID).
 iknows(pair(SA1,pair(KEi,Ni)))
=[exists Nr,DHY]=>
 state_bob(B,A,G,F,Kb,Ka,Ni,SA1,SA2,Nr,DHY,apply(F,pair(Ni,pair(Nr,pair(SA1,exp(KEi,DHY))))),KEi,3,Set_56,Set_57,SID).
 iknows(pair(SA1,pair(exp(G,DHY),Nr))).
 witness(B,A,sk1,apply(F,pair(Ni,pair(Nr,pair(SA1,exp(KEi,DHY))))))

step step_9 (B,A,G,F,Kb,Ka,Ni,SA1,Dummy_SA2,Nr,DHY,SK,KEi,Set_56,Dummy_Set_57,SID,SA2) :=
 state_bob(B,A,G,F,Kb,Ka,Ni,SA1,Dummy_SA2,Nr,DHY,SK,KEi,3,Set_56,Dummy_Set_57,SID).
 iknows(scrypt(SK,pair(A,pair(crypt(inv(Ka),pair(SA1,pair(KEi,pair(Ni,Nr)))),SA2))))
 =>
 state_bob(B,A,G,F,Kb,Ka,Ni,SA1,SA2,Nr,DHY,SK,KEi,9,Set_56,Dummy_Set_57,SID).
 iknows(scrypt(SK,pair(B,pair(crypt(inv(Kb),pair(SA1,pair(exp(G,DHY),pair(Nr,Ni)))),SA2)))).
 secret(SK,sec_b_SK,Dummy_Set_57).
 request(B,A,sk2,SK,SID).
 contains(A,Dummy_Set_57).
 contains(B,Dummy_Set_57)


section properties:

property secrecy_of_sec_a_SK (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_a_SK,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_sec_b_SK (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_b_SK,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property authentication_on_sk1 (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,sk1,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,sk1,MGoal))
     /\ ((request(A1Goal,A2Goal,sk1,MGoal,SID1)
           /\ request(A1Goal,A2Goal,sk1,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_sk2 (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,sk2,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,sk2,MGoal))
     /\ ((request(A1Goal,A2Goal,sk2,MGoal,SID1)
           /\ request(A1Goal,A2Goal,sk2,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state secrecy_of_sec_a_SK (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_a_SK,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_sec_b_SK (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_b_SK,ASGoal) &
 not(contains(i,ASGoal))

attack_state authentication_on_sk1 (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,sk1,MGoal,SID) &
 not(witness(A2Goal,A1Goal,sk1,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_sk1 (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,sk1,MGoal,SID1).
 request(A1Goal,A2Goal,sk1,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_sk2 (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,sk2,MGoal,SID) &
 not(witness(A2Goal,A1Goal,sk2,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_sk2 (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,sk2,MGoal,SID1).
 request(A1Goal,A2Goal,sk2,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

