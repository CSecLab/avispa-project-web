%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfileYeoxRM

section signature:

state_responder: agent * agent * public_key * nat * public_key * text * text * text * set(text) * set(agent) * nat -> fact
state_initiator: agent * agent * public_key * nat * public_key * text * text * text * set(text) * set(agent) * nat -> fact


section types:

Set_38, Dummy_Set_38, Set_23, Dummy_Set_23: set(text)
sub2, b_a, a_b, sub1: protocol_id
Ks, Na, CHKSUM, Dummy_Ks, Dummy_CHKSUM, Dummy_Na, dummy_nonce: text
set_82, set_81, set_79, set_78, set_73, set_72, set_61, set_60: set
State, 7, 6, 4, SID, 2, 1, 0, Dummy_State, 3, SID2, SID1: nat
Set_39, Dummy_Set_39, Set_24, Dummy_Set_24, ASGoal: set(agent)
start, MGoal: message
Ku, Kca, dummy_pk, kca: public_key
A, B, A2Goal, A1Goal, i, a, b: agent


section inits:

initial_state init1 := 
 iknows(start).
 iknows(a).
 iknows(b).
 iknows(i).
 state_initiator(a,b,kca,0,dummy_pk,dummy_nonce,dummy_nonce,dummy_nonce,set_60,set_61,3).
 state_responder(b,a,kca,0,dummy_pk,dummy_nonce,dummy_nonce,dummy_nonce,set_72,set_73,4).
 state_initiator(a,b,kca,0,dummy_pk,dummy_nonce,dummy_nonce,dummy_nonce,set_78,set_79,6).
 state_responder(b,a,kca,0,dummy_pk,dummy_nonce,dummy_nonce,dummy_nonce,set_81,set_82,7)


section rules:

step step_0 (A,B,Kca,Ku,Ks,Dummy_Na,Dummy_CHKSUM,Set_23,Set_24,SID,Na,CHKSUM) :=
 state_initiator(A,B,Kca,0,Ku,Ks,Dummy_Na,Dummy_CHKSUM,Set_23,Set_24,SID).
 iknows(start)
=[exists CHKSUM,Na]=>
 state_initiator(A,B,Kca,1,Ku,Ks,Na,CHKSUM,Set_23,Set_24,SID).
 iknows(pair(crypt(inv(Kca),Ku),crypt(inv(Ku),pair(Na,CHKSUM)))).
 witness(A,B,a_b,Na)

step step_1 (A,B,Kca,Ku,Dummy_Ks,Dummy_Na,CHKSUM,Dummy_Set_23,Dummy_Set_24,SID,Ks,Na) :=
 state_initiator(A,B,Kca,1,Ku,Dummy_Ks,Dummy_Na,CHKSUM,Dummy_Set_23,Dummy_Set_24,SID).
 iknows(crypt(Ku,pair(Ks,Na)))
 =>
 state_initiator(A,B,Kca,2,Ku,Ks,Na,CHKSUM,Dummy_Set_23,Dummy_Set_24,SID).
 secret(Dummy_Set_23,sub1,Dummy_Set_24).
 request(B,A,b_a,Ks,SID).
 contains(Ks,Dummy_Set_23).
 contains(A,Dummy_Set_24).
 contains(B,Dummy_Set_24)

step step_2 (B,A,Kca,Ku,Dummy_Ks,Dummy_Na,Dummy_CHKSUM,Dummy_Set_38,Dummy_Set_39,SID,Ks,Na,CHKSUM) :=
 state_responder(B,A,Kca,0,Ku,Dummy_Ks,Dummy_Na,Dummy_CHKSUM,Dummy_Set_38,Dummy_Set_39,SID).
 iknows(pair(crypt(inv(Kca),Ku),crypt(inv(Ku),pair(Na,CHKSUM))))
=[exists Ks]=>
 state_responder(B,A,Kca,1,Ku,Ks,Na,CHKSUM,Dummy_Set_38,Dummy_Set_39,SID).
 request(A,B,a_b,Na,SID).
 secret(Dummy_Set_38,sub1,Dummy_Set_39).
 iknows(crypt(Ku,pair(Ks,Na))).
 witness(B,A,b_a,Ks).
 contains(Ks,Dummy_Set_38).
 contains(A,Dummy_Set_39).
 contains(B,Dummy_Set_39)


section properties:

property secrecy_of_sub1 (MGoal,ASGoal) :=
 [] ((secret(MGoal,sub1,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property authentication_on_a_b (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,a_b,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,a_b,MGoal))
     /\ ((request(A1Goal,A2Goal,a_b,MGoal,SID1)
           /\ request(A1Goal,A2Goal,a_b,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_b_a (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,b_a,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,b_a,MGoal))
     /\ ((request(A1Goal,A2Goal,b_a,MGoal,SID1)
           /\ request(A1Goal,A2Goal,b_a,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state secrecy_of_sub1 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sub1,ASGoal) &
 not(contains(i,ASGoal))

attack_state authentication_on_a_b (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,a_b,MGoal,SID) &
 not(witness(A2Goal,A1Goal,a_b,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_a_b (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,a_b,MGoal,SID1).
 request(A1Goal,A2Goal,a_b,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_b_a (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,b_a,MGoal,SID) &
 not(witness(A2Goal,A1Goal,b_a,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_b_a (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,b_a,MGoal,SID1).
 request(A1Goal,A2Goal,b_a,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

