%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfilegjdyJs9FL2

section signature:

state_role_U: agent * agent * agent * text * text * text * text * text * text * text * text * text * text * hash_func * hash_func * hash_func * hash_func * hash_func * public_key * nat * text * text * pair(text,text) * pair(text,text) * pair(text,text) * pair(text,text) * symmetric_key * pair(text,pair(text,pair(text,text))) * set(agent) * nat -> fact
state_role_M: agent * agent * agent * text * hash_func * hash_func * hash_func * hash_func * hash_func * public_key * public_key * nat * text * text * text * text * text * text * text * text * text * text * pair(text,text) * pair(text,text) * pair(text,text) * pair(text,text) * pair(text,pair(text,pair(text,text))) * symmetric_key * crypt(public_key,text) * nat -> fact
state_role_H: agent * agent * agent * text * text * text * text * text * text * text * text * hash_func * hash_func * hash_func * hash_func * hash_func * public_key * public_key * nat * text * text * text * text * text * symmetric_key * set(agent) * nat -> fact


section types:

ImsiEnc: crypt(public_key,text)
MGoal, start: message
auth_1, sec_2, ue_mme_vf1, ue_hss_vf4, mme_ue_vf2: protocol_id
Dummy_Xvf1, Xvf1: pair(text,pair(text,pair(text,text)))
Dummy_Xvf5, Dummy_Xvf4, Dummy_Xvf3, Dummy_Xvf2, Xvf2, Xvf3, Xvf4, Xvf5: pair(text,text)
Pkh, Pkm, dummy_pk, pkh, pkm: public_key
F1, F2, F3, F4, F5, f1, f2, f3, f4, f5, hash_0: hash_func
Dummy_EK, EK, dummy_sk: symmetric_key
Dummy_K, K, AMF, PEK, Vf1, Vf2, Dummy_PSQN, Vf3, Dummy_IMSI, Vf4, Dummy_SQN, Vf5, Dummy_SNID, Dummy_RAND, Dummy_Vf5, Dummy_Vf4, Dummy_Vf3, Dummy_Vf2, Dummy_Vf1, Dummy_AMF, dummy_nonce, RAND, SQN, IMSI, vf1, vf3, vf4, vf5, pek, const_1, rand, SNID, psqn, snid, k, ki, amf, imsi, PSQN, vf2: text
Dummy_Set_111, ASGoal, Set_42, Set_111, Dummy_Set_42: set(agent)
H, M, U, A2Goal, A1Goal, ue, hss, mme, i: agent
4, SID, Dummy_State, 3, SID2, SID1, State, 2, 1, 0, 5: nat
set_174, set_202: set


section inits:

initial_state init1 := 
 iknows(start).
 iknows(ki).
 iknows(snid).
 iknows(f1).
 iknows(f2).
 iknows(f3).
 iknows(f4).
 iknows(f5).
 iknows(pkh).
 iknows(pkm).
 iknows(i).
 state_role_H(hss,mme,ue,k,amf,pek,vf1,vf2,vf3,vf4,vf5,f1,f2,f3,f4,f5,pkh,pkm,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_sk,set_174,3).
 state_role_M(mme,hss,ue,snid,f1,f2,f3,f4,f5,pkh,pkm,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,pair(dummy_nonce,dummy_nonce),pair(dummy_nonce,dummy_nonce),pair(dummy_nonce,dummy_nonce),pair(dummy_nonce,dummy_nonce),pair(dummy_nonce,pair(dummy_nonce,pair(dummy_nonce,dummy_nonce))),dummy_sk,crypt(dummy_pk,dummy_nonce),4).
 state_role_U(ue,hss,mme,imsi,pek,psqn,k,amf,vf1,vf2,vf3,vf4,vf5,f1,f2,f3,f4,f5,pkh,0,dummy_nonce,dummy_nonce,pair(dummy_nonce,dummy_nonce),pair(dummy_nonce,dummy_nonce),pair(dummy_nonce,dummy_nonce),pair(dummy_nonce,dummy_nonce),dummy_sk,pair(dummy_nonce,pair(dummy_nonce,pair(dummy_nonce,dummy_nonce))),set_202,5)


section rules:

step step_0 (H,M,U,K,Dummy_AMF,PEK,Dummy_Vf1,Dummy_Vf2,Dummy_Vf3,Dummy_Vf4,Dummy_Vf5,F1,F2,F3,F4,F5,Pkh,Pkm,Dummy_RAND,Dummy_SNID,Dummy_SQN,Dummy_IMSI,Dummy_PSQN,Dummy_EK,Dummy_Set_111,SID,AMF,RAND,SNID,SQN,IMSI,PSQN) :=
 state_role_H(H,M,U,K,Dummy_AMF,PEK,Dummy_Vf1,Dummy_Vf2,Dummy_Vf3,Dummy_Vf4,Dummy_Vf5,F1,F2,F3,F4,F5,Pkh,Pkm,0,Dummy_RAND,Dummy_SNID,Dummy_SQN,Dummy_IMSI,Dummy_PSQN,Dummy_EK,Dummy_Set_111,SID).
 iknows(pair(crypt(Pkh,pair(IMSI,PSQN)),crypt(Pkh,SNID)))
=[exists AMF,RAND,SQN]=>
 state_role_H(H,M,U,K,AMF,PEK,apply(F1,pair(K,pair(SQN,pair(RAND,Dummy_AMF)))),apply(F2,pair(K,RAND)),apply(F3,pair(K,RAND)),apply(F4,pair(K,RAND)),apply(F5,pair(K,RAND)),F1,F2,F3,F4,F5,Pkh,Pkm,1,RAND,SNID,SQN,IMSI,PSQN,xor(PEK,PSQN),Dummy_Set_111,SID).
 iknows(crypt(Pkm,pair(RAND,pair(apply(F2,pair(K,RAND)),pair(apply(F3,pair(K,RAND)),pair(apply(F4,pair(K,RAND)),pair(xor(SQN,apply(F5,pair(K,RAND))),pair(AMF,pair(apply(F1,pair(K,pair(SQN,pair(RAND,Dummy_AMF)))),xor(PEK,PSQN)))))))))).
 secret(apply(F2,pair(K,RAND)),vf2,Dummy_Set_111).
 contains(U,Dummy_Set_111).
 contains(H,Dummy_Set_111)

step step_1 (M,H,U,SNID,F1,F2,F3,F4,F5,Pkh,Pkm,IMSI,AMF,SQN,K,Dummy_RAND,Vf1,Vf2,Vf3,Vf4,Vf5,Xvf2,Xvf3,Xvf4,Xvf5,Xvf1,EK,ImsiEnc,SID,RAND) :=
 state_role_M(M,H,U,SNID,F1,F2,F3,F4,F5,Pkh,Pkm,0,IMSI,AMF,SQN,K,Dummy_RAND,Vf1,Vf2,Vf3,Vf4,Vf5,Xvf2,Xvf3,Xvf4,Xvf5,Xvf1,EK,ImsiEnc,SID).
 iknows(ImsiEnc)
=[exists RAND]=>
 state_role_M(M,H,U,SNID,F1,F2,F3,F4,F5,Pkh,Pkm,1,IMSI,AMF,SQN,K,RAND,Vf1,Vf2,Vf3,Vf4,Vf5,Xvf2,Xvf3,Xvf4,Xvf5,Xvf1,EK,ImsiEnc,SID).
 iknows(pair(ImsiEnc,crypt(Pkh,SNID)))

step step_2 (M,H,U,SNID,F1,F2,F3,F4,F5,Pkh,Pkm,IMSI,Dummy_AMF,Dummy_SQN,K,Dummy_RAND,Vf1,Vf2,Vf3,Vf4,Vf5,Dummy_Xvf2,Dummy_Xvf3,Dummy_Xvf4,Dummy_Xvf5,Dummy_Xvf1,Dummy_EK,ImsiEnc,SID,AMF,SQN,RAND,Xvf2,Xvf3,Xvf4,Xvf5,Xvf1,EK) :=
 state_role_M(M,H,U,SNID,F1,F2,F3,F4,F5,Pkh,Pkm,1,IMSI,Dummy_AMF,Dummy_SQN,K,Dummy_RAND,Vf1,Vf2,Vf3,Vf4,Vf5,Dummy_Xvf2,Dummy_Xvf3,Dummy_Xvf4,Dummy_Xvf5,Dummy_Xvf1,Dummy_EK,ImsiEnc,SID).
 iknows(crypt(Pkm,pair(RAND,pair(apply(F2,Xvf2),pair(apply(F3,Xvf3),pair(apply(F4,Xvf4),pair(xor(SQN,apply(F5,Xvf5)),pair(AMF,pair(apply(F1,Xvf1),EK)))))))))
 =>
 state_role_M(M,H,U,SNID,F1,F2,F3,F4,F5,Pkh,Pkm,2,IMSI,AMF,SQN,K,RAND,Vf1,Vf2,Vf3,Vf4,Vf5,Xvf2,Xvf3,Xvf4,Xvf5,Xvf1,EK,ImsiEnc,SID).
 iknows(scrypt(EK,pair(RAND,pair(xor(SQN,apply(F5,Xvf5)),pair(AMF,apply(F1,Xvf1)))))).
 request(M,U,ue_mme_vf1,apply(F1,Xvf1),SID)

step step_3 (M,H,U,SNID,F1,F2,F3,F4,F5,Pkh,Pkm,IMSI,AMF,SQN,Dummy_K,Dummy_RAND,Vf1,Vf2,Vf3,Vf4,Vf5,Xvf2,Xvf3,Xvf4,Xvf5,Xvf1,EK,ImsiEnc,SID,K,RAND) :=
 state_role_M(M,H,U,SNID,F1,F2,F3,F4,F5,Pkh,Pkm,2,IMSI,AMF,SQN,Dummy_K,Dummy_RAND,Vf1,Vf2,Vf3,Vf4,Vf5,Xvf2,Xvf3,Xvf4,Xvf5,Xvf1,EK,ImsiEnc,SID).
 iknows(scrypt(EK,apply(F2,pair(Dummy_K,Dummy_RAND))))
=[exists RAND,K]=>
 state_role_M(M,H,U,SNID,F1,F2,F3,F4,F5,Pkh,Pkm,3,IMSI,AMF,SQN,K,RAND,Vf1,Vf2,Vf3,Vf4,Vf5,Xvf2,Xvf3,Xvf4,Xvf5,Xvf1,EK,ImsiEnc,SID).
 witness(M,U,mme_ue_vf2,apply(F2,pair(K,RAND)))

step step_4 (U,H,M,IMSI,PEK,Dummy_PSQN,K,AMF,Vf1,Vf2,Vf3,Vf4,Vf5,F1,F2,F3,F4,F5,Pkh,SQN,RAND,Xvf2,Xvf3,Xvf4,Xvf5,Dummy_EK,Xvf1,Dummy_Set_42,SID,PSQN) :=
 state_role_U(U,H,M,IMSI,PEK,Dummy_PSQN,K,AMF,Vf1,Vf2,Vf3,Vf4,Vf5,F1,F2,F3,F4,F5,Pkh,0,SQN,RAND,Xvf2,Xvf3,Xvf4,Xvf5,Dummy_EK,Xvf1,Dummy_Set_42,SID).
 iknows(start)
=[exists PSQN]=>
 state_role_U(U,H,M,IMSI,PEK,PSQN,K,AMF,Vf1,Vf2,Vf3,Vf4,Vf5,F1,F2,F3,F4,F5,Pkh,1,SQN,RAND,Xvf2,Xvf3,Xvf4,Xvf5,xor(PEK,PSQN),Xvf1,Dummy_Set_42,SID).
 iknows(crypt(Pkh,pair(IMSI,Dummy_PSQN))).
 secret(IMSI,imsi,Dummy_Set_42).
 contains(H,Dummy_Set_42).
 contains(U,Dummy_Set_42)

step step_5 (U,H,M,IMSI,PEK,PSQN,K,Dummy_AMF,Dummy_Vf1,Vf2,Vf3,Vf4,Vf5,F1,F2,F3,F4,F5,Pkh,Dummy_SQN,Dummy_RAND,Xvf2,Xvf3,Xvf4,Dummy_Xvf5,EK,Dummy_Xvf1,Set_42,SID,AMF,Vf1,SQN,RAND,Xvf5,Xvf1) :=
 state_role_U(U,H,M,IMSI,PEK,PSQN,K,Dummy_AMF,Dummy_Vf1,Vf2,Vf3,Vf4,Vf5,F1,F2,F3,F4,F5,Pkh,1,Dummy_SQN,Dummy_RAND,Xvf2,Xvf3,Xvf4,Dummy_Xvf5,EK,Dummy_Xvf1,Set_42,SID).
 iknows(scrypt(EK,pair(RAND,pair(xor(SQN,apply(F5,Xvf5)),pair(AMF,apply(F1,Xvf1))))))
=[exists Vf1]=>
 state_role_U(U,H,M,IMSI,PEK,PSQN,K,AMF,Vf1,Vf2,Vf3,Vf4,Vf5,F1,F2,F3,F4,F5,Pkh,2,SQN,RAND,Xvf2,Xvf3,Xvf4,Xvf5,EK,Xvf1,Set_42,SID).
 iknows(scrypt(EK,apply(F2,pair(K,RAND)))).
 request(U,M,mme_ue_vf2,apply(F2,pair(K,RAND)),SID).
 witness(U,M,ue_mme_vf1,Vf1)


section properties:

property authentication_on_mme_ue_vf2 (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,mme_ue_vf2,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,mme_ue_vf2,MGoal))
     /\ ((request(A1Goal,A2Goal,mme_ue_vf2,MGoal,SID1)
           /\ request(A1Goal,A2Goal,mme_ue_vf2,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_ue_mme_vf1 (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,ue_mme_vf1,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,ue_mme_vf1,MGoal))
     /\ ((request(A1Goal,A2Goal,ue_mme_vf1,MGoal,SID1)
           /\ request(A1Goal,A2Goal,ue_mme_vf1,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property secrecy_of_imsi (MGoal,ASGoal) :=
 [] ((secret(MGoal,imsi,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_vf2 (MGoal,ASGoal) :=
 [] ((secret(MGoal,vf2,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))


section attack_states:

attack_state authentication_on_mme_ue_vf2 (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,mme_ue_vf2,MGoal,SID) &
 not(witness(A2Goal,A1Goal,mme_ue_vf2,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_mme_ue_vf2 (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,mme_ue_vf2,MGoal,SID1).
 request(A1Goal,A2Goal,mme_ue_vf2,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_ue_mme_vf1 (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,ue_mme_vf1,MGoal,SID) &
 not(witness(A2Goal,A1Goal,ue_mme_vf1,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_ue_mme_vf1 (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,ue_mme_vf1,MGoal,SID1).
 request(A1Goal,A2Goal,ue_mme_vf1,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state secrecy_of_imsi (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,imsi,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_vf2 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,vf2,ASGoal) &
 not(contains(i,ASGoal))

