%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfileZefipP

section signature:

state_payee: agent * agent * agent * hash_func * symmetric_key * symmetric_key * nat * symmetric_key * symmetric_key * text * text * text * apply(hash_func,pair(nat,nat)) * nat * nat * nat * text * text * text * text * text * nat * apply(hash_func,symmetric_key) * scrypt(symmetric_key,pair(text,text)) * scrypt(symmetric_key,pair(text,pair(text,pair(text,text)))) * text * text * text * set(agent) * set(agent) * set(agent) * set(agent) * nat -> fact
state_payeeMno: agent * agent * agent * agent * hash_func * symmetric_key * symmetric_key * set(symmetric_key) * nat * symmetric_key * symmetric_key * text * text * text * text * nat * apply(hash_func,pair(nat,nat)) * text * text * text * text * text * scrypt(symmetric_key,pair(text,text)) * scrypt(symmetric_key,pair(text,pair(text,pair(text,text)))) * apply(hash_func,symmetric_key) * set(nat) * nat * nat * nat * nat * set(agent) * set(agent) * nat -> fact
state_timeStamper: agent * agent * agent * hash_func * nat * scrypt(symmetric_key,pair(text,text)) * scrypt(symmetric_key,pair(text,pair(text,pair(text,text)))) * pair(text,pair(text,pair(text,text))) * apply(hash_func,symmetric_key) * text * text * text * text * apply(hash_func,pair(nat,nat)) * symmetric_key * symmetric_key * text * nat * apply(hash_func,pair(nat,nat)) * text * text * nat * nat * nat -> fact
state_payerMno: agent * agent * agent * agent * hash_func * symmetric_key * symmetric_key * set(symmetric_key) * nat * symmetric_key * symmetric_key * text * text * text * text * nat * apply(hash_func,pair(nat,nat)) * text * text * text * text * text * apply(hash_func,pair(nat,nat)) * nat * nat * nat * nat * scrypt(symmetric_key,pair(text,text)) * scrypt(symmetric_key,pair(text,pair(text,pair(text,text)))) * set(agent) * set(agent) * set(agent) * nat -> fact
state_payer: agent * agent * agent * hash_func * symmetric_key * symmetric_key * nat * symmetric_key * symmetric_key * text * text * text * apply(hash_func,pair(nat,nat)) * nat * nat * nat * text * nat * apply(hash_func,pair(nat,nat)) * scrypt(symmetric_key,pair(text,text)) * apply(hash_func,symmetric_key) * text * text * nat * text * text * text * text * text * scrypt(symmetric_key,pair(text,pair(text,pair(text,text)))) * set(agent) * set(agent) * set(pair(agent,agent)) * nat -> fact


section types:

ControlSet, Dummy_ControlSet: set(nat)
KeyRing2, Dummy_KeyRing2, Dummy_KeyRing1, KeyRing1: set(symmetric_key)
set_354, set_353, set_352, set_351, set_340, set_339, set_338, set_326, set_325, set_324, set_294, set_293, set_292, set_288, set_287: set
Dummy_Set_56, Set_56: set(pair(agent,agent))
Set_192, Set_188, Dummy_Set_103, Dummy_Set_101, Dummy_Set_98, Dummy_Set_97, Dummy_Set_192, Set_144, Dummy_Set_188, Set_143, Set_142, Dummy_Set_144, Dummy_Set_143, Dummy_Set_142, Dummy_Set_51, Set_103, Dummy_Set_49, Set_101, Set_98, Set_97, ASGoal, Set_51, Set_49: set(agent)
dummy_msg, MGoal, start: message
startMsg, idPayee, y1, y2, rcvMsg, securKey, idPayer, x1, x2, description: protocol_id
State, Timestamp2, AIPe, PINPe, PNPe, NONCE, Dummy_PINPe, 7, SID, 5, Dummy_AIPe, Dummy_PNPe, 6, Timestamp1, AIPr, PINPr, PNPr, Dummy_Timestamp2, Dummy_Timestamp1, 4, Dummy_NONCE, 9, Dummy_AIPr, Dummy_PINPr, Dummy_PNPr, Dummy_State, 3, dummy_nat, 1, 8, 2, 0, Timestamp: nat
Y1, Y2, KMM, K12, Dummy_Y1, Dummy_Y2, X1, X2, K11, Dummy_X2, Dummy_X1, dummy_sk, k11, k12, k2, kmm, K2: symmetric_key
Hash, h: hash_func
IDPe, IDPr, Dummy_IDPe, Dummy_IDPr: apply(hash_func,pair(nat,nat))
AMOUNT, DATE, DESC, IDMno, TID, R, Success_failed, Yes_no, Received, Dummy_Received, StartPayment, Dummy_Yes_no, Dummy_DESC, Dummy_DATE, Dummy_AMOUNT, Dummy_IDMno, Dummy_TID, Dummy_TIDreq, Dummy_PeIDreq, Dummy_R, Dummy_StartPayment, Dummy_Success_failed, TIDreq, PeIDreq, dummy_nonce: text
SecuredKey, Dummy_SecuredKey: apply(hash_func,symmetric_key)
PartialPaymentParams: pair(text,pair(text,pair(text,text)))
TSC, PrM, PeM, Pe, Pr, A2Goal, A1Goal, pe, pr, tsc, peM, prM, i: agent
SecuredPaymentParams, Dummy_SecuredPaymentParams: scrypt(symmetric_key,pair(text,pair(text,pair(text,text))))
SecuredParams, Dummy_SecuredParams: scrypt(symmetric_key,pair(text,text))


section inits:

initial_state init1 := 
 iknows(start).
 iknows(pe).
 iknows(pr).
 iknows(tsc).
 iknows(peM).
 iknows(prM).
 iknows(i).
 state_payer(pr,pe,prM,h,k11,k2,0,dummy_sk,dummy_sk,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_nat,dummy_nat,dummy_nat,dummy_nonce,dummy_nat,dummy_msg,scrypt(dummy_sk,pair(dummy_nonce,dummy_nonce)),dummy_msg,dummy_nonce,dummy_nonce,dummy_nat,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,scrypt(dummy_sk,pair(dummy_nonce,pair(dummy_nonce,pair(dummy_nonce,dummy_nonce)))),set_292,set_293,set_294,3).
 state_payerMno(prM,pr,peM,tsc,h,k11,kmm,set_287,1,dummy_sk,dummy_sk,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nat,dummy_msg,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_nat,dummy_nat,dummy_nat,dummy_nat,scrypt(dummy_sk,pair(dummy_nonce,dummy_nonce)),scrypt(dummy_sk,pair(dummy_nonce,pair(dummy_nonce,pair(dummy_nonce,dummy_nonce)))),set_324,set_325,set_326,4).
 state_timeStamper(tsc,prM,peM,h,0,scrypt(dummy_sk,pair(dummy_nonce,dummy_nonce)),scrypt(dummy_sk,pair(dummy_nonce,pair(dummy_nonce,pair(dummy_nonce,dummy_nonce)))),pair(dummy_nonce,pair(dummy_nonce,pair(dummy_nonce,dummy_nonce))),dummy_msg,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_sk,dummy_sk,dummy_nonce,dummy_nat,dummy_msg,dummy_nonce,dummy_nonce,dummy_nat,dummy_nat,5).
 state_payeeMno(peM,pe,prM,tsc,h,k12,kmm,set_288,1,dummy_sk,dummy_sk,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nat,dummy_msg,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,scrypt(dummy_sk,pair(dummy_nonce,dummy_nonce)),scrypt(dummy_sk,pair(dummy_nonce,pair(dummy_nonce,pair(dummy_nonce,dummy_nonce)))),dummy_msg,set_338,dummy_nat,dummy_nat,dummy_nat,dummy_nat,set_339,set_340,6).
 state_payee(pe,pr,peM,h,k12,k2,0,dummy_sk,dummy_sk,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_nat,dummy_nat,dummy_nat,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nat,dummy_msg,scrypt(dummy_sk,pair(dummy_nonce,dummy_nonce)),scrypt(dummy_sk,pair(dummy_nonce,pair(dummy_nonce,pair(dummy_nonce,dummy_nonce)))),dummy_nonce,dummy_nonce,dummy_nonce,set_351,set_352,set_353,set_354,7)


section rules:

step step_0 (Pr,Pe,PrM,Hash,K11,K2,X1,X2,Success_failed,StartPayment,Yes_no,Dummy_IDPr,Dummy_PNPr,Dummy_PINPr,Dummy_AIPr,R,NONCE,IDPe,SecuredParams,SecuredKey,TID,IDMno,Timestamp,AMOUNT,DATE,DESC,PeIDreq,TIDreq,SecuredPaymentParams,Set_49,Set_51,Set_56,SID,PNPr,PINPr,AIPr) :=
 state_payer(Pr,Pe,PrM,Hash,K11,K2,0,X1,X2,Success_failed,StartPayment,Yes_no,Dummy_IDPr,Dummy_PNPr,Dummy_PINPr,Dummy_AIPr,R,NONCE,IDPe,SecuredParams,SecuredKey,TID,IDMno,Timestamp,AMOUNT,DATE,DESC,PeIDreq,TIDreq,SecuredPaymentParams,Set_49,Set_51,Set_56,SID).
 iknows(start)
=[exists AIPr,PINPr,PNPr]=>
 state_payer(Pr,Pe,PrM,Hash,K11,K2,2,X1,X2,Success_failed,StartPayment,Yes_no,apply(Hash,pair(PNPr,PINPr)),PNPr,PINPr,AIPr,R,NONCE,IDPe,SecuredParams,SecuredKey,TID,IDMno,Timestamp,AMOUNT,DATE,DESC,PeIDreq,TIDreq,SecuredPaymentParams,Set_49,Set_51,Set_56,SID).
 iknows(scrypt(K11,pair(PNPr,pair(apply(Hash,pair(PNPr,PINPr)),AIPr)))).
 witness(Pr,PrM,idPayer,apply(Hash,pair(PNPr,PINPr)))

step step_1 (Pr,Pe,PrM,Hash,K11,K2,Dummy_X1,Dummy_X2,Dummy_Success_failed,StartPayment,Yes_no,IDPr,PNPr,PINPr,AIPr,R,NONCE,IDPe,SecuredParams,SecuredKey,TID,IDMno,Timestamp,AMOUNT,DATE,DESC,PeIDreq,TIDreq,SecuredPaymentParams,Dummy_Set_49,Dummy_Set_51,Set_56,SID,X1,X2,Success_failed) :=
 state_payer(Pr,Pe,PrM,Hash,K11,K2,2,Dummy_X1,Dummy_X2,Dummy_Success_failed,StartPayment,Yes_no,IDPr,PNPr,PINPr,AIPr,R,NONCE,IDPe,SecuredParams,SecuredKey,TID,IDMno,Timestamp,AMOUNT,DATE,DESC,PeIDreq,TIDreq,SecuredPaymentParams,Dummy_Set_49,Dummy_Set_51,Set_56,SID).
 iknows(scrypt(K11,Success_failed))
=[exists X2,X1]=>
 state_payer(Pr,Pe,PrM,Hash,K11,K2,3,X1,X2,Success_failed,StartPayment,Yes_no,IDPr,PNPr,PINPr,AIPr,R,NONCE,IDPe,SecuredParams,SecuredKey,TID,IDMno,Timestamp,AMOUNT,DATE,DESC,PeIDreq,TIDreq,SecuredPaymentParams,Dummy_Set_49,Dummy_Set_51,Set_56,SID).
 iknows(scrypt(K11,pair(X1,X2))).
 secret(X1,x1,Dummy_Set_49).
 secret(X2,x2,Dummy_Set_51).
 contains(Pr,Dummy_Set_49).
 contains(PrM,Dummy_Set_49).
 contains(Pr,Dummy_Set_51).
 contains(PrM,Dummy_Set_51)

step step_2 (Pr,Pe,PrM,Hash,K11,K2,X1,X2,Success_failed,Dummy_StartPayment,Yes_no,IDPr,PNPr,PINPr,AIPr,Dummy_R,NONCE,IDPe,SecuredParams,SecuredKey,TID,IDMno,Timestamp,AMOUNT,DATE,DESC,Dummy_PeIDreq,Dummy_TIDreq,SecuredPaymentParams,Set_49,Set_51,Set_56,SID,StartPayment,R,PeIDreq,TIDreq) :=
 state_payer(Pr,Pe,PrM,Hash,K11,K2,3,X1,X2,Success_failed,Dummy_StartPayment,Yes_no,IDPr,PNPr,PINPr,AIPr,Dummy_R,NONCE,IDPe,SecuredParams,SecuredKey,TID,IDMno,Timestamp,AMOUNT,DATE,DESC,Dummy_PeIDreq,Dummy_TIDreq,SecuredPaymentParams,Set_49,Set_51,Set_56,SID).
 iknows(scrypt(K11,StartPayment))
=[exists PeIDreq,TIDreq,R]=>
 state_payer(Pr,Pe,PrM,Hash,K11,K2,4,X1,X2,Success_failed,StartPayment,Yes_no,IDPr,PNPr,PINPr,AIPr,R,NONCE,IDPe,SecuredParams,SecuredKey,TID,IDMno,Timestamp,AMOUNT,DATE,DESC,PeIDreq,TIDreq,SecuredPaymentParams,Set_49,Set_51,Set_56,SID).
 iknows(pair(R,pair(TIDreq,PeIDreq)))

step step_3 (Pr,Pe,PrM,Hash,K11,K2,X1,X2,Success_failed,StartPayment,Yes_no,IDPr,PNPr,PINPr,AIPr,R,Dummy_NONCE,Dummy_IDPe,Dummy_SecuredParams,SecuredKey,Dummy_TID,Dummy_IDMno,Timestamp,Dummy_AMOUNT,Dummy_DATE,Dummy_DESC,PeIDreq,TIDreq,SecuredPaymentParams,Set_49,Set_51,Dummy_Set_56,SID,NONCE,IDPe,TID,IDMno,AMOUNT,DATE,DESC) :=
 state_payer(Pr,Pe,PrM,Hash,K11,K2,4,X1,X2,Success_failed,StartPayment,Yes_no,IDPr,PNPr,PINPr,AIPr,R,Dummy_NONCE,Dummy_IDPe,Dummy_SecuredParams,SecuredKey,Dummy_TID,Dummy_IDMno,Timestamp,Dummy_AMOUNT,Dummy_DATE,Dummy_DESC,PeIDreq,TIDreq,SecuredPaymentParams,Set_49,Set_51,Dummy_Set_56,SID).
 iknows(scrypt(K2,pair(IDPe,pair(TID,IDMno))))
=[exists DATE,DESC,AMOUNT,NONCE]=>
 state_payer(Pr,Pe,PrM,Hash,K11,K2,6,X1,X2,Success_failed,StartPayment,Yes_no,IDPr,PNPr,PINPr,AIPr,R,NONCE,IDPe,scrypt(K2,pair(R,DESC)),SecuredKey,TID,IDMno,Timestamp,AMOUNT,DATE,DESC,PeIDreq,TIDreq,SecuredPaymentParams,Set_49,Set_51,Dummy_Set_56,SID).
 iknows(pair(scrypt(X1,pair(IDPe,pair(IDMno,pair(R,pair(TID,pair(AMOUNT,pair(DATE,pair(NONCE,pair(apply(Hash,pair(IDPe,pair(IDMno,pair(R,pair(TID,pair(AMOUNT,pair(DATE,NONCE))))))),scrypt(K2,pair(R,DESC))))))))))),pair(1,IDPr))).
 secret(DESC,description,Dummy_Set_56).
 contains(pair(Pr,Pe),Dummy_Set_56)

step step_4 (Pr,Pe,PrM,Hash,K11,K2,X1,X2,Success_failed,StartPayment,Dummy_Yes_no,IDPr,PNPr,PINPr,AIPr,R,Dummy_NONCE,IDPe,SecuredParams,Dummy_SecuredKey,TID,IDMno,Timestamp,AMOUNT,DATE,DESC,PeIDreq,TIDreq,Dummy_SecuredPaymentParams,Set_49,Set_51,Set_56,SID,Yes_no,NONCE,SecuredKey,SecuredPaymentParams) :=
 state_payer(Pr,Pe,PrM,Hash,K11,K2,6,X1,X2,Success_failed,StartPayment,Dummy_Yes_no,IDPr,PNPr,PINPr,AIPr,R,Dummy_NONCE,IDPe,SecuredParams,Dummy_SecuredKey,TID,IDMno,Timestamp,AMOUNT,DATE,DESC,PeIDreq,TIDreq,Dummy_SecuredPaymentParams,Set_49,Set_51,Set_56,SID).
 iknows(scrypt(X2,pair(Yes_no,pair(NONCE,pair(SecuredKey,pair(apply(Hash,pair(IDPe,pair(IDMno,pair(R,pair(TID,pair(AMOUNT,pair(DATE,NONCE))))))),SecuredPaymentParams))))))
 =>
 state_payer(Pr,Pe,PrM,Hash,K11,K2,7,X1,X2,Success_failed,StartPayment,Yes_no,IDPr,PNPr,PINPr,AIPr,R,NONCE,IDPe,SecuredParams,SecuredKey,TID,IDMno,Timestamp,AMOUNT,DATE,DESC,PeIDreq,TIDreq,SecuredPaymentParams,Set_49,Set_51,Set_56,SID)

step step_5 (PrM,Pr,PeM,TSC,Hash,K11,KMM,KeyRing1,X1,X2,Dummy_Success_failed,Yes_no,StartPayment,R,NONCE,IDPe,TID,IDMno,AMOUNT,DATE,DESC,Dummy_IDPr,Dummy_PNPr,PINPr,Dummy_AIPr,Timestamp1,SecuredParams,SecuredPaymentParams,Set_142,Set_143,Set_144,SID,Success_failed,IDPr,PNPr,AIPr) :=
 state_payerMno(PrM,Pr,PeM,TSC,Hash,K11,KMM,KeyRing1,1,X1,X2,Dummy_Success_failed,Yes_no,StartPayment,R,NONCE,IDPe,TID,IDMno,AMOUNT,DATE,DESC,Dummy_IDPr,Dummy_PNPr,PINPr,Dummy_AIPr,Timestamp1,SecuredParams,SecuredPaymentParams,Set_142,Set_143,Set_144,SID).
 iknows(scrypt(K11,pair(PNPr,pair(IDPr,AIPr))))
=[exists Success_failed]=>
 state_payerMno(PrM,Pr,PeM,TSC,Hash,K11,KMM,KeyRing1,3,X1,X2,Success_failed,Yes_no,StartPayment,R,NONCE,IDPe,TID,IDMno,AMOUNT,DATE,DESC,IDPr,PNPr,PINPr,AIPr,Timestamp1,SecuredParams,SecuredPaymentParams,Set_142,Set_143,Set_144,SID).
 iknows(scrypt(K11,Success_failed)).
 wrequest(PrM,Pr,idPayer,IDPr,SID)

step step_6 (PrM,Pr,PeM,TSC,Hash,K11,KMM,Dummy_KeyRing1,Dummy_X1,Dummy_X2,Success_failed,Yes_no,Dummy_StartPayment,R,NONCE,IDPe,TID,IDMno,AMOUNT,DATE,DESC,IDPr,PNPr,PINPr,AIPr,Timestamp1,SecuredParams,SecuredPaymentParams,Dummy_Set_142,Dummy_Set_143,Dummy_Set_144,SID,X1,X2,StartPayment) :=
 state_payerMno(PrM,Pr,PeM,TSC,Hash,K11,KMM,Dummy_KeyRing1,3,Dummy_X1,Dummy_X2,Success_failed,Yes_no,Dummy_StartPayment,R,NONCE,IDPe,TID,IDMno,AMOUNT,DATE,DESC,IDPr,PNPr,PINPr,AIPr,Timestamp1,SecuredParams,SecuredPaymentParams,Dummy_Set_142,Dummy_Set_143,Dummy_Set_144,SID).
 iknows(scrypt(K11,pair(X1,X2))) &
 not(contains(X1,Dummy_KeyRing1)) &
 not(contains(X2,Dummy_KeyRing1))
=[exists StartPayment]=>
 state_payerMno(PrM,Pr,PeM,TSC,Hash,K11,KMM,Dummy_KeyRing1,4,X1,X2,Success_failed,Yes_no,StartPayment,R,NONCE,IDPe,TID,IDMno,AMOUNT,DATE,DESC,IDPr,PNPr,PINPr,AIPr,Timestamp1,SecuredParams,SecuredPaymentParams,Dummy_Set_142,Dummy_Set_143,Dummy_Set_144,SID).
 iknows(scrypt(K11,StartPayment)).
 secret(StartPayment,startMsg,Dummy_Set_142).
 secret(X1,x1,Dummy_Set_143).
 secret(X2,x2,Dummy_Set_144).
 contains(X1,Dummy_KeyRing1).
 contains(X2,Dummy_KeyRing1).
 contains(PrM,Dummy_Set_142).
 contains(Pr,Dummy_Set_142).
 contains(PrM,Dummy_Set_143).
 contains(Pr,Dummy_Set_143).
 contains(PrM,Dummy_Set_144).
 contains(Pr,Dummy_Set_144)

step step_7 (PrM,Pr,PeM,TSC,Hash,K11,KMM,KeyRing1,X1,X2,Success_failed,Yes_no,StartPayment,Dummy_R,Dummy_NONCE,Dummy_IDPe,Dummy_TID,Dummy_IDMno,Dummy_AMOUNT,Dummy_DATE,DESC,IDPr,PNPr,PINPr,AIPr,Timestamp1,Dummy_SecuredParams,SecuredPaymentParams,Set_142,Set_143,Set_144,SID,R,NONCE,IDPe,TID,IDMno,AMOUNT,DATE,SecuredParams) :=
 state_payerMno(PrM,Pr,PeM,TSC,Hash,K11,KMM,KeyRing1,4,X1,X2,Success_failed,Yes_no,StartPayment,Dummy_R,Dummy_NONCE,Dummy_IDPe,Dummy_TID,Dummy_IDMno,Dummy_AMOUNT,Dummy_DATE,DESC,IDPr,PNPr,PINPr,AIPr,Timestamp1,Dummy_SecuredParams,SecuredPaymentParams,Set_142,Set_143,Set_144,SID).
 iknows(pair(scrypt(X1,pair(IDPe,pair(IDMno,pair(R,pair(TID,pair(AMOUNT,pair(DATE,pair(NONCE,pair(apply(Hash,pair(IDPe,pair(IDMno,pair(R,pair(TID,pair(AMOUNT,pair(DATE,NONCE))))))),SecuredParams))))))))),pair(1,IDPr)))
 =>
 state_payerMno(PrM,Pr,PeM,TSC,Hash,K11,KMM,KeyRing1,5,X1,X2,Success_failed,Yes_no,StartPayment,R,NONCE,IDPe,TID,IDMno,AMOUNT,DATE,DESC,IDPr,PNPr,PINPr,AIPr,Timestamp1,SecuredParams,SecuredPaymentParams,Set_142,Set_143,Set_144,SID).
 iknows(apply(Hash,pair(scrypt(X1,pair(IDPe,pair(IDMno,pair(R,pair(TID,pair(AMOUNT,pair(DATE,pair(NONCE,pair(apply(Hash,pair(IDPe,pair(IDMno,pair(R,pair(TID,pair(AMOUNT,pair(DATE,NONCE))))))),SecuredParams))))))))),pair(1,IDPr))))

step step_8 (PrM,Pr,PeM,TSC,Hash,K11,KMM,KeyRing1,X1,X2,Success_failed,Yes_no,StartPayment,R,NONCE,IDPe,TID,IDMno,AMOUNT,DATE,DESC,IDPr,PNPr,PINPr,AIPr,Dummy_Timestamp1,SecuredParams,SecuredPaymentParams,Set_142,Set_143,Set_144,SID,Timestamp1) :=
 state_payerMno(PrM,Pr,PeM,TSC,Hash,K11,KMM,KeyRing1,5,X1,X2,Success_failed,Yes_no,StartPayment,R,NONCE,IDPe,TID,IDMno,AMOUNT,DATE,DESC,IDPr,PNPr,PINPr,AIPr,Dummy_Timestamp1,SecuredParams,SecuredPaymentParams,Set_142,Set_143,Set_144,SID).
 iknows(Timestamp1)
 =>
 state_payerMno(PrM,Pr,PeM,TSC,Hash,K11,KMM,KeyRing1,7,X1,X2,Success_failed,Yes_no,StartPayment,R,NONCE,IDPe,TID,IDMno,AMOUNT,DATE,DESC,IDPr,PNPr,PINPr,AIPr,Timestamp1,SecuredParams,SecuredPaymentParams,Set_142,Set_143,Set_144,SID).
 iknows(pair(R,pair(IDPe,pair(TID,pair(AMOUNT,pair(DATE,SecuredParams))))))

step step_9 (PrM,Pr,PeM,TSC,Hash,K11,KMM,KeyRing1,X1,X2,Success_failed,Dummy_Yes_no,StartPayment,R,Dummy_NONCE,IDPe,TID,IDMno,AMOUNT,DATE,DESC,IDPr,PNPr,PINPr,AIPr,Timestamp1,SecuredParams,Dummy_SecuredPaymentParams,Set_142,Set_143,Set_144,SID,Yes_no,NONCE,SecuredPaymentParams) :=
 state_payerMno(PrM,Pr,PeM,TSC,Hash,K11,KMM,KeyRing1,7,X1,X2,Success_failed,Dummy_Yes_no,StartPayment,R,Dummy_NONCE,IDPe,TID,IDMno,AMOUNT,DATE,DESC,IDPr,PNPr,PINPr,AIPr,Timestamp1,SecuredParams,Dummy_SecuredPaymentParams,Set_142,Set_143,Set_144,SID).
 iknows(pair(Yes_no,pair(TID,pair(AMOUNT,pair(DATE,SecuredPaymentParams)))))
=[exists NONCE]=>
 state_payerMno(PrM,Pr,PeM,TSC,Hash,K11,KMM,KeyRing1,9,X1,X2,Success_failed,Yes_no,StartPayment,R,NONCE,IDPe,TID,IDMno,AMOUNT,DATE,DESC,IDPr,PNPr,PINPr,AIPr,Timestamp1,SecuredParams,SecuredPaymentParams,Set_142,Set_143,Set_144,SID).
 iknows(scrypt(X2,pair(Yes_no,pair(NONCE,pair(apply(Hash,KMM),pair(apply(Hash,pair(IDPe,pair(IDMno,pair(R,pair(TID,pair(AMOUNT,pair(DATE,NONCE))))))),SecuredPaymentParams))))))

step step_10 (TSC,PrM,PeM,Hash,Dummy_SecuredParams,SecuredPaymentParams,PartialPaymentParams,SecuredKey,Yes_no,Dummy_AMOUNT,Dummy_DATE,DESC,Dummy_IDPr,Dummy_X1,Y2,Dummy_R,Dummy_NONCE,Dummy_IDPe,Dummy_TID,Dummy_IDMno,Dummy_Timestamp1,Timestamp2,SID,SecuredParams,AMOUNT,DATE,IDPr,X1,R,NONCE,IDPe,TID,IDMno,Timestamp1) :=
 state_timeStamper(TSC,PrM,PeM,Hash,0,Dummy_SecuredParams,SecuredPaymentParams,PartialPaymentParams,SecuredKey,Yes_no,Dummy_AMOUNT,Dummy_DATE,DESC,Dummy_IDPr,Dummy_X1,Y2,Dummy_R,Dummy_NONCE,Dummy_IDPe,Dummy_TID,Dummy_IDMno,Dummy_Timestamp1,Timestamp2,SID).
 iknows(apply(Hash,pair(scrypt(X1,pair(IDPe,pair(IDMno,pair(R,pair(TID,pair(AMOUNT,pair(DATE,pair(NONCE,pair(apply(Hash,pair(IDPe,pair(IDMno,pair(R,pair(TID,pair(AMOUNT,pair(DATE,NONCE))))))),SecuredParams))))))))),pair(1,IDPr))))
=[exists Timestamp1]=>
 state_timeStamper(TSC,PrM,PeM,Hash,2,SecuredParams,SecuredPaymentParams,PartialPaymentParams,SecuredKey,Yes_no,AMOUNT,DATE,DESC,IDPr,X1,Y2,R,NONCE,IDPe,TID,IDMno,Timestamp1,Timestamp2,SID).
 iknows(Timestamp1)

step step_11 (TSC,PrM,PeM,Hash,SecuredParams,Dummy_SecuredPaymentParams,PartialPaymentParams,Dummy_SecuredKey,Dummy_Yes_no,AMOUNT,DATE,DESC,IDPr,X1,Dummy_Y2,R,Dummy_NONCE,IDPe,TID,IDMno,Timestamp1,Dummy_Timestamp2,SID,SecuredPaymentParams,SecuredKey,Yes_no,Y2,NONCE,Timestamp2) :=
 state_timeStamper(TSC,PrM,PeM,Hash,2,SecuredParams,Dummy_SecuredPaymentParams,PartialPaymentParams,Dummy_SecuredKey,Dummy_Yes_no,AMOUNT,DATE,DESC,IDPr,X1,Dummy_Y2,R,Dummy_NONCE,IDPe,TID,IDMno,Timestamp1,Dummy_Timestamp2,SID).
 iknows(apply(Hash,scrypt(Y2,pair(Yes_no,pair(NONCE,pair(SecuredKey,pair(apply(Hash,pair(R,pair(TID,pair(AMOUNT,pair(DATE,pair(SecuredParams,NONCE)))))),SecuredPaymentParams)))))))
=[exists Timestamp2]=>
 state_timeStamper(TSC,PrM,PeM,Hash,4,SecuredParams,SecuredPaymentParams,PartialPaymentParams,SecuredKey,Yes_no,AMOUNT,DATE,DESC,IDPr,X1,Y2,R,NONCE,IDPe,TID,IDMno,Timestamp1,Timestamp2,SID).
 iknows(Timestamp2)

step step_12 (PeM,Pe,PrM,TSC,Hash,K12,KMM,KeyRing2,Y1,Y2,Dummy_Success_failed,Yes_no,Received,R,NONCE,Dummy_IDPe,TID,IDMno,AMOUNT,DATE,DESC,SecuredParams,SecuredPaymentParams,SecuredKey,ControlSet,Dummy_PNPe,PINPe,Dummy_AIPe,Timestamp2,Set_188,Set_192,SID,Success_failed,IDPe,PNPe,AIPe) :=
 state_payeeMno(PeM,Pe,PrM,TSC,Hash,K12,KMM,KeyRing2,1,Y1,Y2,Dummy_Success_failed,Yes_no,Received,R,NONCE,Dummy_IDPe,TID,IDMno,AMOUNT,DATE,DESC,SecuredParams,SecuredPaymentParams,SecuredKey,ControlSet,Dummy_PNPe,PINPe,Dummy_AIPe,Timestamp2,Set_188,Set_192,SID).
 iknows(scrypt(K12,pair(PNPe,pair(IDPe,AIPe))))
=[exists Success_failed]=>
 state_payeeMno(PeM,Pe,PrM,TSC,Hash,K12,KMM,KeyRing2,3,Y1,Y2,Success_failed,Yes_no,Received,R,NONCE,IDPe,TID,IDMno,AMOUNT,DATE,DESC,SecuredParams,SecuredPaymentParams,SecuredKey,ControlSet,PNPe,PINPe,AIPe,Timestamp2,Set_188,Set_192,SID).
 iknows(scrypt(K12,Success_failed)).
 wrequest(PeM,Pe,idPayee,IDPe,SID)

step step_13 (PeM,Pe,PrM,TSC,Hash,K12,KMM,Dummy_KeyRing2,Dummy_Y1,Dummy_Y2,Success_failed,Yes_no,Received,R,NONCE,IDPe,TID,IDMno,AMOUNT,DATE,DESC,SecuredParams,SecuredPaymentParams,SecuredKey,ControlSet,PNPe,PINPe,AIPe,Timestamp2,Set_188,Set_192,SID,Y1,Y2) :=
 state_payeeMno(PeM,Pe,PrM,TSC,Hash,K12,KMM,Dummy_KeyRing2,3,Dummy_Y1,Dummy_Y2,Success_failed,Yes_no,Received,R,NONCE,IDPe,TID,IDMno,AMOUNT,DATE,DESC,SecuredParams,SecuredPaymentParams,SecuredKey,ControlSet,PNPe,PINPe,AIPe,Timestamp2,Set_188,Set_192,SID).
 iknows(scrypt(K12,pair(Y1,Y2))) &
 not(contains(Y1,Dummy_KeyRing2)) &
 not(contains(Y2,Dummy_KeyRing2))
 =>
 state_payeeMno(PeM,Pe,PrM,TSC,Hash,K12,KMM,Dummy_KeyRing2,4,Y1,Y2,Success_failed,Yes_no,Received,R,NONCE,IDPe,TID,IDMno,AMOUNT,DATE,DESC,SecuredParams,SecuredPaymentParams,SecuredKey,ControlSet,PNPe,PINPe,AIPe,Timestamp2,Set_188,Set_192,SID).
 contains(Y1,Dummy_KeyRing2).
 contains(Y2,Dummy_KeyRing2)

step step_14 (PeM,Pe,PrM,TSC,Hash,K12,KMM,KeyRing2,Y1,Y2,Success_failed,Yes_no,Received,Dummy_R,Dummy_NONCE,Dummy_IDPe,Dummy_TID,IDMno,Dummy_AMOUNT,Dummy_DATE,DESC,Dummy_SecuredParams,SecuredPaymentParams,Dummy_SecuredKey,ControlSet,PNPe,PINPe,AIPe,Timestamp2,Dummy_Set_188,Set_192,SID,R,NONCE,IDPe,TID,AMOUNT,DATE,SecuredParams) :=
 state_payeeMno(PeM,Pe,PrM,TSC,Hash,K12,KMM,KeyRing2,4,Y1,Y2,Success_failed,Yes_no,Received,Dummy_R,Dummy_NONCE,Dummy_IDPe,Dummy_TID,IDMno,Dummy_AMOUNT,Dummy_DATE,DESC,Dummy_SecuredParams,SecuredPaymentParams,Dummy_SecuredKey,ControlSet,PNPe,PINPe,AIPe,Timestamp2,Dummy_Set_188,Set_192,SID).
 iknows(pair(R,pair(IDPe,pair(TID,pair(AMOUNT,pair(DATE,SecuredParams))))))
=[exists NONCE]=>
 state_payeeMno(PeM,Pe,PrM,TSC,Hash,K12,KMM,KeyRing2,5,Y1,Y2,Success_failed,Yes_no,Received,R,NONCE,IDPe,TID,IDMno,AMOUNT,DATE,DESC,SecuredParams,SecuredPaymentParams,apply(Hash,KMM),ControlSet,PNPe,PINPe,AIPe,Timestamp2,Dummy_Set_188,Set_192,SID).
 iknows(pair(scrypt(Y1,pair(R,pair(TID,pair(AMOUNT,pair(DATE,pair(SecuredParams,pair(NONCE,pair(apply(Hash,pair(R,pair(TID,pair(AMOUNT,pair(DATE,pair(SecuredParams,NONCE)))))),apply(Hash,KMM))))))))),1)).
 secret(apply(Hash,KMM),securKey,Dummy_Set_188).
 contains(PeM,Dummy_Set_188).
 contains(Pe,Dummy_Set_188)

step step_15 (PeM,Pe,PrM,TSC,Hash,K12,KMM,KeyRing2,Y1,Y2,Success_failed,Dummy_Yes_no,Received,R,NONCE,IDPe,TID,IDMno,AMOUNT,DATE,DESC,SecuredParams,Dummy_SecuredPaymentParams,SecuredKey,ControlSet,PNPe,PINPe,AIPe,Timestamp2,Set_188,Set_192,SID,Yes_no,SecuredPaymentParams) :=
 state_payeeMno(PeM,Pe,PrM,TSC,Hash,K12,KMM,KeyRing2,5,Y1,Y2,Success_failed,Dummy_Yes_no,Received,R,NONCE,IDPe,TID,IDMno,AMOUNT,DATE,DESC,SecuredParams,Dummy_SecuredPaymentParams,SecuredKey,ControlSet,PNPe,PINPe,AIPe,Timestamp2,Set_188,Set_192,SID).
 iknows(scrypt(Y2,pair(Yes_no,pair(NONCE,pair(SecuredKey,pair(apply(Hash,pair(R,pair(TID,pair(AMOUNT,pair(DATE,pair(SecuredParams,NONCE)))))),SecuredPaymentParams))))))
 =>
 state_payeeMno(PeM,Pe,PrM,TSC,Hash,K12,KMM,KeyRing2,7,Y1,Y2,Success_failed,Yes_no,Received,R,NONCE,IDPe,TID,IDMno,AMOUNT,DATE,DESC,SecuredParams,SecuredPaymentParams,SecuredKey,ControlSet,PNPe,PINPe,AIPe,Timestamp2,Set_188,Set_192,SID).
 iknows(apply(Hash,scrypt(Y2,pair(Yes_no,pair(NONCE,pair(SecuredKey,pair(apply(Hash,pair(R,pair(TID,pair(AMOUNT,pair(DATE,pair(SecuredParams,NONCE)))))),SecuredPaymentParams)))))))

step step_16 (PeM,Pe,PrM,TSC,Hash,K12,KMM,KeyRing2,Y1,Y2,Success_failed,Yes_no,Received,R,NONCE,IDPe,TID,IDMno,AMOUNT,DATE,DESC,SecuredParams,SecuredPaymentParams,SecuredKey,Dummy_ControlSet,PNPe,PINPe,AIPe,Dummy_Timestamp2,Set_188,Set_192,SID,Timestamp2) :=
 state_payeeMno(PeM,Pe,PrM,TSC,Hash,K12,KMM,KeyRing2,7,Y1,Y2,Success_failed,Yes_no,Received,R,NONCE,IDPe,TID,IDMno,AMOUNT,DATE,DESC,SecuredParams,SecuredPaymentParams,SecuredKey,Dummy_ControlSet,PNPe,PINPe,AIPe,Dummy_Timestamp2,Set_188,Set_192,SID).
 iknows(Timestamp2)
 =>
 state_payeeMno(PeM,Pe,PrM,TSC,Hash,K12,KMM,KeyRing2,8,Y1,Y2,Success_failed,Yes_no,Received,R,NONCE,IDPe,TID,IDMno,AMOUNT,DATE,DESC,SecuredParams,SecuredPaymentParams,SecuredKey,Dummy_ControlSet,PNPe,PINPe,AIPe,Timestamp2,Set_188,Set_192,SID).
 iknows(pair(Yes_no,pair(TID,pair(AMOUNT,pair(DATE,SecuredPaymentParams))))).
 contains(1,Dummy_ControlSet)

step step_17 (PeM,Pe,PrM,TSC,Hash,K12,KMM,KeyRing2,Y1,Y2,Success_failed,Yes_no,Dummy_Received,R,Dummy_NONCE,IDPe,TID,IDMno,AMOUNT,DATE,DESC,SecuredParams,SecuredPaymentParams,SecuredKey,ControlSet,PNPe,PINPe,AIPe,Timestamp2,Set_188,Dummy_Set_192,SID,Received,NONCE) :=
 state_payeeMno(PeM,Pe,PrM,TSC,Hash,K12,KMM,KeyRing2,8,Y1,Y2,Success_failed,Yes_no,Dummy_Received,R,Dummy_NONCE,IDPe,TID,IDMno,AMOUNT,DATE,DESC,SecuredParams,SecuredPaymentParams,SecuredKey,ControlSet,PNPe,PINPe,AIPe,Timestamp2,Set_188,Dummy_Set_192,SID).
 contains(1,ControlSet)
=[exists Received,NONCE]=>
 state_payeeMno(PeM,Pe,PrM,TSC,Hash,K12,KMM,KeyRing2,9,Y1,Y2,Success_failed,Yes_no,Received,R,NONCE,IDPe,TID,IDMno,AMOUNT,DATE,DESC,SecuredParams,SecuredPaymentParams,SecuredKey,ControlSet,PNPe,PINPe,AIPe,Timestamp2,Set_188,Dummy_Set_192,SID).
 iknows(scrypt(Y2,pair(Received,pair(NONCE,pair(apply(Hash,KMM),apply(Hash,pair(R,pair(TID,pair(AMOUNT,pair(DATE,pair(SecuredParams,NONCE))))))))))).
 secret(Received,rcvMsg,Dummy_Set_192).
 contains(PeM,Dummy_Set_192).
 contains(Pe,Dummy_Set_192).
 contains(1,ControlSet)

step step_18 (Pe,Pr,PeM,Hash,K12,K2,Y1,Y2,Success_failed,Yes_no,Received,Dummy_IDPe,Dummy_PNPe,Dummy_PINPe,Dummy_AIPe,R,TID,AMOUNT,DATE,DESC,NONCE,SecuredKey,SecuredParams,SecuredPaymentParams,IDMno,PeIDreq,TIDreq,Set_97,Set_98,Set_101,Set_103,SID,PNPe,PINPe,AIPe) :=
 state_payee(Pe,Pr,PeM,Hash,K12,K2,0,Y1,Y2,Success_failed,Yes_no,Received,Dummy_IDPe,Dummy_PNPe,Dummy_PINPe,Dummy_AIPe,R,TID,AMOUNT,DATE,DESC,NONCE,SecuredKey,SecuredParams,SecuredPaymentParams,IDMno,PeIDreq,TIDreq,Set_97,Set_98,Set_101,Set_103,SID).
 iknows(start)
=[exists AIPe,PINPe,PNPe]=>
 state_payee(Pe,Pr,PeM,Hash,K12,K2,2,Y1,Y2,Success_failed,Yes_no,Received,apply(Hash,pair(PNPe,PINPe)),PNPe,PINPe,AIPe,R,TID,AMOUNT,DATE,DESC,NONCE,SecuredKey,SecuredParams,SecuredPaymentParams,IDMno,PeIDreq,TIDreq,Set_97,Set_98,Set_101,Set_103,SID).
 iknows(scrypt(K12,pair(PNPe,pair(apply(Hash,pair(PNPe,PINPe)),AIPe)))).
 witness(Pe,PeM,idPayee,apply(Hash,pair(PNPe,PINPe)))

step step_19 (Pe,Pr,PeM,Hash,K12,K2,Dummy_Y1,Dummy_Y2,Dummy_Success_failed,Yes_no,Received,IDPe,PNPe,PINPe,AIPe,R,TID,AMOUNT,DATE,DESC,NONCE,SecuredKey,SecuredParams,SecuredPaymentParams,IDMno,PeIDreq,TIDreq,Dummy_Set_97,Dummy_Set_98,Set_101,Set_103,SID,Y1,Y2,Success_failed) :=
 state_payee(Pe,Pr,PeM,Hash,K12,K2,2,Dummy_Y1,Dummy_Y2,Dummy_Success_failed,Yes_no,Received,IDPe,PNPe,PINPe,AIPe,R,TID,AMOUNT,DATE,DESC,NONCE,SecuredKey,SecuredParams,SecuredPaymentParams,IDMno,PeIDreq,TIDreq,Dummy_Set_97,Dummy_Set_98,Set_101,Set_103,SID).
 iknows(scrypt(K12,Success_failed))
=[exists Y2,Y1]=>
 state_payee(Pe,Pr,PeM,Hash,K12,K2,3,Y1,Y2,Success_failed,Yes_no,Received,IDPe,PNPe,PINPe,AIPe,R,TID,AMOUNT,DATE,DESC,NONCE,SecuredKey,SecuredParams,SecuredPaymentParams,IDMno,PeIDreq,TIDreq,Dummy_Set_97,Dummy_Set_98,Set_101,Set_103,SID).
 iknows(scrypt(K12,pair(Y1,Y2))).
 secret(Y1,y1,Dummy_Set_97).
 secret(Y2,y2,Dummy_Set_98).
 contains(Pe,Dummy_Set_97).
 contains(PeM,Dummy_Set_97).
 contains(Pe,Dummy_Set_98).
 contains(PeM,Dummy_Set_98)

step step_20 (Pe,Pr,PeM,Hash,K12,K2,Y1,Y2,Success_failed,Yes_no,Received,IDPe,PNPe,PINPe,AIPe,Dummy_R,Dummy_TID,AMOUNT,DATE,DESC,NONCE,SecuredKey,SecuredParams,SecuredPaymentParams,Dummy_IDMno,Dummy_PeIDreq,Dummy_TIDreq,Set_97,Set_98,Set_101,Set_103,SID,R,TID,IDMno,PeIDreq,TIDreq) :=
 state_payee(Pe,Pr,PeM,Hash,K12,K2,3,Y1,Y2,Success_failed,Yes_no,Received,IDPe,PNPe,PINPe,AIPe,Dummy_R,Dummy_TID,AMOUNT,DATE,DESC,NONCE,SecuredKey,SecuredParams,SecuredPaymentParams,Dummy_IDMno,Dummy_PeIDreq,Dummy_TIDreq,Set_97,Set_98,Set_101,Set_103,SID).
 iknows(pair(R,pair(TIDreq,PeIDreq)))
=[exists TID,IDMno]=>
 state_payee(Pe,Pr,PeM,Hash,K12,K2,4,Y1,Y2,Success_failed,Yes_no,Received,IDPe,PNPe,PINPe,AIPe,R,TID,AMOUNT,DATE,DESC,NONCE,SecuredKey,SecuredParams,SecuredPaymentParams,IDMno,PeIDreq,TIDreq,Set_97,Set_98,Set_101,Set_103,SID).
 iknows(scrypt(K2,pair(IDPe,pair(TID,IDMno))))

step step_21 (Pe,Pr,PeM,Hash,K12,K2,Y1,Y2,Success_failed,Dummy_Yes_no,Received,IDPe,PNPe,PINPe,AIPe,R,TID,Dummy_AMOUNT,Dummy_DATE,DESC,Dummy_NONCE,Dummy_SecuredKey,Dummy_SecuredParams,Dummy_SecuredPaymentParams,IDMno,PeIDreq,TIDreq,Set_97,Set_98,Dummy_Set_101,Set_103,SID,Yes_no,AMOUNT,DATE,NONCE,SecuredKey,SecuredParams) :=
 state_payee(Pe,Pr,PeM,Hash,K12,K2,4,Y1,Y2,Success_failed,Dummy_Yes_no,Received,IDPe,PNPe,PINPe,AIPe,R,TID,Dummy_AMOUNT,Dummy_DATE,DESC,Dummy_NONCE,Dummy_SecuredKey,Dummy_SecuredParams,Dummy_SecuredPaymentParams,IDMno,PeIDreq,TIDreq,Set_97,Set_98,Dummy_Set_101,Set_103,SID).
 iknows(pair(scrypt(Y1,pair(R,pair(TID,pair(AMOUNT,pair(DATE,pair(SecuredParams,pair(NONCE,pair(apply(Hash,pair(R,pair(TID,pair(AMOUNT,pair(DATE,pair(SecuredParams,NONCE)))))),SecuredKey)))))))),1))
=[exists Yes_no]=>
 state_payee(Pe,Pr,PeM,Hash,K12,K2,6,Y1,Y2,Success_failed,Yes_no,Received,IDPe,PNPe,PINPe,AIPe,R,TID,AMOUNT,DATE,DESC,NONCE,SecuredKey,SecuredParams,scrypt(K2,pair(Yes_no,pair(TID,pair(AMOUNT,DATE)))),IDMno,PeIDreq,TIDreq,Set_97,Set_98,Dummy_Set_101,Set_103,SID).
 iknows(scrypt(Y2,pair(Yes_no,pair(NONCE,pair(SecuredKey,pair(apply(Hash,pair(R,pair(TID,pair(AMOUNT,pair(DATE,pair(SecuredParams,NONCE)))))),scrypt(K2,pair(Yes_no,pair(TID,pair(AMOUNT,DATE)))))))))).
 secret(SecuredKey,securKey,Dummy_Set_101).
 contains(Pe,Dummy_Set_101).
 contains(PeM,Dummy_Set_101)

step step_22 (Pe,Pr,PeM,Hash,K12,K2,Y1,Y2,Success_failed,Yes_no,Dummy_Received,IDPe,PNPe,PINPe,AIPe,R,TID,AMOUNT,DATE,DESC,Dummy_NONCE,SecuredKey,SecuredParams,SecuredPaymentParams,IDMno,PeIDreq,TIDreq,Set_97,Set_98,Set_101,Dummy_Set_103,SID,Received,NONCE) :=
 state_payee(Pe,Pr,PeM,Hash,K12,K2,6,Y1,Y2,Success_failed,Yes_no,Dummy_Received,IDPe,PNPe,PINPe,AIPe,R,TID,AMOUNT,DATE,DESC,Dummy_NONCE,SecuredKey,SecuredParams,SecuredPaymentParams,IDMno,PeIDreq,TIDreq,Set_97,Set_98,Set_101,Dummy_Set_103,SID).
 iknows(scrypt(Y2,pair(Received,pair(NONCE,pair(SecuredKey,apply(Hash,pair(R,pair(TID,pair(AMOUNT,pair(DATE,pair(SecuredParams,NONCE)))))))))))
 =>
 state_payee(Pe,Pr,PeM,Hash,K12,K2,8,Y1,Y2,Success_failed,Yes_no,Received,IDPe,PNPe,PINPe,AIPe,R,TID,AMOUNT,DATE,DESC,NONCE,SecuredKey,SecuredParams,SecuredPaymentParams,IDMno,PeIDreq,TIDreq,Set_97,Set_98,Set_101,Dummy_Set_103,SID).
 secret(Received,rcvMsg,Dummy_Set_103).
 contains(Pe,Dummy_Set_103).
 contains(PeM,Dummy_Set_103)


section properties:

property secrecy_of_x1 (MGoal,ASGoal) :=
 [] ((secret(MGoal,x1,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_x2 (MGoal,ASGoal) :=
 [] ((secret(MGoal,x2,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_y1 (MGoal,ASGoal) :=
 [] ((secret(MGoal,y1,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_y2 (MGoal,ASGoal) :=
 [] ((secret(MGoal,y2,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_startMsg (MGoal,ASGoal) :=
 [] ((secret(MGoal,startMsg,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_rcvMsg (MGoal,ASGoal) :=
 [] ((secret(MGoal,rcvMsg,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_securKey (MGoal,ASGoal) :=
 [] ((secret(MGoal,securKey,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_description (MGoal,ASGoal) :=
 [] ((secret(MGoal,description,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property weak_authentication_on_idPayer (A1Goal,A2Goal,MGoal,SID) :=
 [] ((wrequest(A1Goal,A2Goal,idPayer,MGoal,SID)
      /\ ~ equal(A2Goal,i))
     => witness(A2Goal,A1Goal,idPayer,MGoal))

property weak_authentication_on_idPayee (A1Goal,A2Goal,MGoal,SID) :=
 [] ((wrequest(A1Goal,A2Goal,idPayee,MGoal,SID)
      /\ ~ equal(A2Goal,i))
     => witness(A2Goal,A1Goal,idPayee,MGoal))


section attack_states:

attack_state secrecy_of_x1 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,x1,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_x2 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,x2,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_y1 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,y1,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_y2 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,y2,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_startMsg (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,startMsg,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_rcvMsg (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,rcvMsg,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_securKey (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,securKey,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_description (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,description,ASGoal) &
 not(contains(i,ASGoal))

attack_state weak_authentication_on_idPayer (A1Goal,A2Goal,MGoal,SID) :=
 wrequest(A1Goal,A2Goal,idPayer,MGoal,SID) &
 not(witness(A2Goal,A1Goal,idPayer,MGoal)) &
 not(equal(A2Goal,i))

attack_state weak_authentication_on_idPayee (A1Goal,A2Goal,MGoal,SID) :=
 wrequest(A1Goal,A2Goal,idPayee,MGoal,SID) &
 not(witness(A2Goal,A1Goal,idPayee,MGoal)) &
 not(equal(A2Goal,i))

