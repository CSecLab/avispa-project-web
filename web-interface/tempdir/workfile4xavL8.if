%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfile4xavL8

section signature:

state_kgc: agent * agent * agent * agent * hash_func * nat * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * nat -> fact
state_cn: agent * agent * agent * agent * public_key * hash_func * nat * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * set(agent) * nat -> fact
state_ha: agent * agent * agent * agent * public_key * hash_func * nat * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * nat -> fact
state_mn: agent * agent * agent * agent * public_key * hash_func * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * nat * set(agent) * nat -> fact


section types:

set_185, set_167: set
MGoal, start: message
Hashv, has: hash_func
Kcn, kcn, ki: public_key
Dummy_Set_109, Dummy_Set_39, ASGoal, Set_39, Set_109: set(agent)
bu, ba, n0, n1: protocol_id
6, SID, 5, State, 4, Dummy_State, 3, 1, 10, 8, 0, 9, 7, 2: nat
MN, CN, HA, KGC, mn1, cn1, ha1, kgc1, i: agent
CNA, Dcn, RPP, KGCA, Blt, N0, Msglen, Type, DcnReq, SIDCN, BU, BA, K1, N1, N2, Dummy_BA, Dummy_N1, Dummy_BU, Dummy_N0, Dummy_KGCA, Dummy_CNA, Dummy_OldCoA, Dummy_HoA, CoA, Dummy_HAA, HAA, Dummy_CoA, HoA, OldCoA, dummy_nonce: text


section inits:

initial_state init1 := 
 iknows(start).
 iknows(mn1).
 iknows(cn1).
 iknows(ha1).
 iknows(kgc1).
 iknows(kcn).
 iknows(ki).
 iknows(has).
 iknows(i).
 state_mn(mn1,cn1,ha1,kgc1,kcn,has,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,0,set_167,3).
 state_ha(kgc1,mn1,cn1,ha1,kcn,has,1,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,4).
 state_cn(cn1,mn1,ha1,kgc1,kcn,has,2,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_185,5).
 state_kgc(kgc1,mn1,cn1,ha1,has,4,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,6)


section rules:

step step_0 (MN,KGC,CN,HA,Kcn,Hashv,Dummy_CoA,Dummy_HAA,Dummy_HoA,Dummy_OldCoA,Dummy_CNA,RPP,Dcn,Dummy_KGCA,Blt,Dummy_N0,BA,BU,Msglen,Type,DcnReq,SIDCN,K1,N1,N2,Dummy_Set_39,SID,CoA,HAA,HoA,OldCoA,CNA,KGCA,N0) :=
 state_mn(MN,KGC,CN,HA,Kcn,Hashv,Dummy_CoA,Dummy_HAA,Dummy_HoA,Dummy_OldCoA,Dummy_CNA,RPP,Dcn,Dummy_KGCA,Blt,Dummy_N0,BA,BU,Msglen,Type,DcnReq,SIDCN,K1,N1,N2,0,Dummy_Set_39,SID).
 iknows(start)
=[exists KGCA,HoA,CNA,OldCoA,HAA,CoA,N0]=>
 state_mn(MN,KGC,CN,HA,Kcn,Hashv,CoA,HAA,HoA,OldCoA,CNA,RPP,Dcn,KGCA,Blt,N0,BA,BU,Msglen,Type,DcnReq,SIDCN,K1,N1,N2,6,Dummy_Set_39,SID).
 iknows(pair(CoA,pair(HAA,pair(HoA,pair(OldCoA,pair(CNA,pair(crypt(Kcn,N0),KGCA))))))).
 iknows(pair(CoA,pair(CNA,pair(OldCoA,pair(crypt(Kcn,N0),KGCA))))).
 secret(N0,n0,Dummy_Set_39).
 contains(MN,Dummy_Set_39).
 contains(HA,Dummy_Set_39).
 contains(CN,Dummy_Set_39)

step step_1 (MN,KGC,CN,HA,Kcn,Hashv,Dummy_CoA,HAA,HoA,OldCoA,Dummy_CNA,RPP,Dcn,KGCA,Blt,N0,BA,Dummy_BU,Msglen,Type,DcnReq,SIDCN,K1,Dummy_N1,N2,Set_39,SID,CoA,CNA,BU,N1) :=
 state_mn(MN,KGC,CN,HA,Kcn,Hashv,Dummy_CoA,HAA,HoA,OldCoA,Dummy_CNA,RPP,Dcn,KGCA,Blt,N0,BA,Dummy_BU,Msglen,Type,DcnReq,SIDCN,K1,Dummy_N1,N2,6,Set_39,SID).
 iknows(pair(CNA,pair(CoA,apply(Hashv,pair(N0,N1)))))
=[exists BU]=>
 state_mn(MN,KGC,CN,HA,Kcn,Hashv,CoA,HAA,HoA,OldCoA,CNA,RPP,Dcn,KGCA,Blt,N0,BA,BU,Msglen,Type,DcnReq,SIDCN,K1,N1,N2,8,Set_39,SID).
 iknows(pair(CoA,pair(CNA,pair(crypt(Kcn,N1),BU))))

step step_2 (MN,KGC,CN,HA,Kcn,Hashv,CoA,HAA,HoA,OldCoA,CNA,RPP,Dcn,KGCA,Blt,N0,Dummy_BA,BU,Msglen,Type,DcnReq,SIDCN,K1,N1,N2,Set_39,SID,BA) :=
 state_mn(MN,KGC,CN,HA,Kcn,Hashv,CoA,HAA,HoA,OldCoA,CNA,RPP,Dcn,KGCA,Blt,N0,Dummy_BA,BU,Msglen,Type,DcnReq,SIDCN,K1,N1,N2,8,Set_39,SID).
 iknows(pair(CNA,pair(CoA,BA)))
 =>
 state_mn(MN,KGC,CN,HA,Kcn,Hashv,CoA,HAA,HoA,OldCoA,CNA,RPP,Dcn,KGCA,Blt,N0,BA,BU,Msglen,Type,DcnReq,SIDCN,K1,N1,N2,10,Set_39,SID).
 iknows(pair(CNA,CoA))

step step_3 (HA,MN,KGC,CN,Kcn,Hashv,Dummy_CoA,Dummy_HAA,Dummy_HoA,Dummy_OldCoA,Dummy_CNA,RPP,Dummy_KGCA,Blt,Dummy_N0,Msglen,Type,Dcn,DcnReq,SIDCN,K1,BU,BA,N1,N2,SID,CoA,HAA,HoA,OldCoA,CNA,KGCA,N0) :=
 state_ha(HA,MN,KGC,CN,Kcn,Hashv,1,Dummy_CoA,Dummy_HAA,Dummy_HoA,Dummy_OldCoA,Dummy_CNA,RPP,Dummy_KGCA,Blt,Dummy_N0,Msglen,Type,Dcn,DcnReq,SIDCN,K1,BU,BA,N1,N2,SID).
 iknows(pair(CoA,pair(HAA,pair(HoA,pair(OldCoA,pair(CNA,pair(crypt(Kcn,N0),KGCA)))))))
 =>
 state_ha(HA,MN,KGC,CN,Kcn,Hashv,3,CoA,HAA,HoA,OldCoA,CNA,RPP,KGCA,Blt,N0,Msglen,Type,Dcn,DcnReq,SIDCN,K1,BU,BA,N1,N2,SID).
 iknows(pair(HoA,pair(CNA,pair(OldCoA,pair(crypt(Kcn,N0),KGCA)))))

step step_4 (CN,MN,HA,KGC,Kcn,Hashv,CoA,HAA,Dummy_HoA,Dummy_OldCoA,Dummy_CNA,Dcn,RPP,Dummy_KGCA,Blt,Dummy_N0,Msglen,Type,DcnReq,SIDCN,BU,BA,K1,N1,N2,Set_109,SID,HoA,OldCoA,CNA,KGCA,N0) :=
 state_cn(CN,MN,HA,KGC,Kcn,Hashv,2,CoA,HAA,Dummy_HoA,Dummy_OldCoA,Dummy_CNA,Dcn,RPP,Dummy_KGCA,Blt,Dummy_N0,Msglen,Type,DcnReq,SIDCN,BU,BA,K1,N1,N2,Set_109,SID).
 iknows(pair(HoA,pair(CNA,pair(OldCoA,pair(crypt(Kcn,N0),KGCA)))))
 =>
 state_cn(CN,MN,HA,KGC,Kcn,Hashv,3,CoA,HAA,HoA,OldCoA,CNA,Dcn,RPP,KGCA,Blt,N0,Msglen,Type,DcnReq,SIDCN,BU,BA,K1,N1,N2,Set_109,SID)

step step_5 (CN,MN,HA,KGC,Kcn,Hashv,Dummy_CoA,HAA,HoA,Dummy_OldCoA,Dummy_CNA,Dcn,RPP,Dummy_KGCA,Blt,Dummy_N0,Msglen,Type,DcnReq,SIDCN,BU,BA,K1,N1,N2,Set_109,SID,CoA,OldCoA,CNA,KGCA,N0) :=
 state_cn(CN,MN,HA,KGC,Kcn,Hashv,3,Dummy_CoA,HAA,HoA,Dummy_OldCoA,Dummy_CNA,Dcn,RPP,Dummy_KGCA,Blt,Dummy_N0,Msglen,Type,DcnReq,SIDCN,BU,BA,K1,N1,N2,Set_109,SID).
 iknows(pair(CoA,pair(CNA,pair(OldCoA,pair(crypt(Kcn,N0),KGCA)))))
 =>
 state_cn(CN,MN,HA,KGC,Kcn,Hashv,5,CoA,HAA,HoA,OldCoA,CNA,Dcn,RPP,KGCA,Blt,N0,Msglen,Type,DcnReq,SIDCN,BU,BA,K1,N1,N2,Set_109,SID).
 iknows(pair(CNA,pair(KGCA,DcnReq)))

step step_6 (CN,MN,HA,KGC,Kcn,Hashv,Dummy_CoA,HAA,HoA,OldCoA,Dummy_CNA,Dcn,RPP,KGCA,Blt,N0,Msglen,Type,DcnReq,SIDCN,BU,BA,K1,Dummy_N1,N2,Dummy_Set_109,SID,CoA,CNA,N1) :=
 state_cn(CN,MN,HA,KGC,Kcn,Hashv,5,Dummy_CoA,HAA,HoA,OldCoA,Dummy_CNA,Dcn,RPP,KGCA,Blt,N0,Msglen,Type,DcnReq,SIDCN,BU,BA,K1,Dummy_N1,N2,Dummy_Set_109,SID).
 iknows(pair(KGCA,pair(Dummy_CNA,Dcn)))
=[exists CoA,CNA,N1]=>
 state_cn(CN,MN,HA,KGC,Kcn,Hashv,7,CoA,HAA,HoA,OldCoA,CNA,Dcn,RPP,KGCA,Blt,N0,Msglen,Type,DcnReq,SIDCN,BU,BA,K1,N1,N2,Dummy_Set_109,SID).
 iknows(pair(Dummy_CNA,pair(Dummy_CoA,apply(Hashv,pair(N0,N1))))).
 secret(N1,n1,Dummy_Set_109).
 contains(MN,Dummy_Set_109).
 contains(CN,Dummy_Set_109)

step step_7 (CN,MN,HA,KGC,Kcn,Hashv,CoA,HAA,HoA,OldCoA,CNA,Dcn,RPP,KGCA,Blt,N0,Msglen,Type,DcnReq,SIDCN,Dummy_BU,Dummy_BA,K1,N1,N2,Set_109,SID,BU,BA) :=
 state_cn(CN,MN,HA,KGC,Kcn,Hashv,7,CoA,HAA,HoA,OldCoA,CNA,Dcn,RPP,KGCA,Blt,N0,Msglen,Type,DcnReq,SIDCN,Dummy_BU,Dummy_BA,K1,N1,N2,Set_109,SID).
 iknows(pair(CoA,pair(CNA,pair(crypt(Kcn,N1),BU))))
=[exists BA]=>
 state_cn(CN,MN,HA,KGC,Kcn,Hashv,9,CoA,HAA,HoA,OldCoA,CNA,Dcn,RPP,KGCA,Blt,N0,Msglen,Type,DcnReq,SIDCN,BU,BA,K1,N1,N2,Set_109,SID).
 iknows(pair(CNA,pair(CoA,BA)))

step step_8 (KGC,MN,CN,HA,Hashv,CoA,HAA,HoA,OldCoA,Dummy_CNA,RPP,Dummy_KGCA,Blt,N0,Msglen,Type,Dcn,DcnReq,SIDCN,K1,N1,BU,BA,N2,SID,CNA,KGCA) :=
 state_kgc(KGC,MN,CN,HA,Hashv,4,CoA,HAA,HoA,OldCoA,Dummy_CNA,RPP,Dummy_KGCA,Blt,N0,Msglen,Type,Dcn,DcnReq,SIDCN,K1,N1,BU,BA,N2,SID).
 iknows(pair(CNA,pair(KGCA,DcnReq)))
 =>
 state_kgc(KGC,MN,CN,HA,Hashv,6,CoA,HAA,HoA,OldCoA,CNA,RPP,KGCA,Blt,N0,Msglen,Type,Dcn,DcnReq,SIDCN,K1,N1,BU,BA,N2,SID).
 iknows(pair(KGCA,pair(CNA,Dcn)))


section properties:

property secrecy_of_n0 (MGoal,ASGoal) :=
 [] ((secret(MGoal,n0,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_n1 (MGoal,ASGoal) :=
 [] ((secret(MGoal,n1,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))


section attack_states:

attack_state secrecy_of_n0 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,n0,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_n1 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,n1,ASGoal) &
 not(contains(i,ASGoal))

