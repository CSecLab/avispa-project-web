%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfiletFL3ZG

section signature:

state_server: agent * agent * symmetric_key * hash_func * nat * text * text * text * text * text * text * text * text * text * text * text * set(agent) * set(agent) * nat -> fact
state_user: agent * agent * symmetric_key * hash_func * nat * text * text * text * text * text * text * text * text * text * text * text * set(text) * set(agent) * set(symmetric_key) * set(agent) * nat -> fact


section types:

Dummy_Set_31, Set_31: set(text)
MGoal, start: message
s1, s2, u_a, u_b: protocol_id
Dummy_State, 3, SID, SID2, SID1, 5, State, 8, 6, 4, 2, 1, 0: nat
set_94, set_93, set_92, set_91, set_112, set_111: set
dummy_hash, h, H: hash_func
dummy_sk, SKUs: symmetric_key
Dummy_PWi, dummy_nonce, PWi, Ni, Y, X, Na, CID, Bi, Ci, Nb, HPWi, Ack, Dummy_Nb, Dummy_X, Ni_2, PWi_2, Dummy_PWi_2, Dummy_Ni_2, Dummy_Ci, Dummy_Bi, Dummy_CID, Dummy_Na, Dummy_Y, Dummy_Ni: text
A2Goal, A1Goal, u, s, U, S, i: agent
Dummy_Set_32, ASGoal, Set_61, Set_60, Set_35, Set_32, Dummy_Set_61, Dummy_Set_60, Dummy_Set_35: set(agent)
Set_34, Dummy_Set_34: set(symmetric_key)


section inits:

initial_state init1 := 
 iknows(start).
 iknows(u).
 iknows(s).
 iknows(h).
 iknows(i).
 state_user(u,s,dummy_sk,dummy_hash,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_91,set_92,set_93,set_94,3).
 state_server(s,u,dummy_sk,dummy_hash,1,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_111,set_112,4)


section rules:

step step_0 (U,S,SKUs,H,Dummy_PWi,Ni,Y,Na,CID,Bi,Ci,Nb,Ack,Ni_2,PWi_2,Dummy_Set_31,Dummy_Set_32,Dummy_Set_34,Dummy_Set_35,SID,PWi) :=
 state_user(U,S,SKUs,H,0,Dummy_PWi,Ni,Y,Na,CID,Bi,Ci,Nb,Ack,Ni_2,PWi_2,Dummy_Set_31,Dummy_Set_32,Dummy_Set_34,Dummy_Set_35,SID).
 iknows(start)
=[exists PWi]=>
 state_user(U,S,SKUs,H,2,PWi,Ni,Y,Na,CID,Bi,Ci,Nb,Ack,Ni_2,PWi_2,Dummy_Set_31,Dummy_Set_32,Dummy_Set_34,Dummy_Set_35,SID).
 iknows(scrypt(SKUs,PWi)).
 secret(Dummy_Set_31,s1,Dummy_Set_32).
 secret(Dummy_Set_34,s2,Dummy_Set_35).
 contains(PWi,Dummy_Set_31).
 contains(U,Dummy_Set_32).
 contains(S,Dummy_Set_32).
 contains(SKUs,Dummy_Set_34).
 contains(U,Dummy_Set_35).
 contains(S,Dummy_Set_35)

step step_1 (U,S,SKUs,H,PWi,Dummy_Ni,Dummy_Y,Na,CID,Bi,Ci,Nb,Ack,Ni_2,PWi_2,Set_31,Set_32,Set_34,Set_35,SID,Ni,Y) :=
 state_user(U,S,SKUs,H,2,PWi,Dummy_Ni,Dummy_Y,Na,CID,Bi,Ci,Nb,Ack,Ni_2,PWi_2,Set_31,Set_32,Set_34,Set_35,SID).
 iknows(scrypt(SKUs,pair(PWi,pair(H,pair(Ni,Y)))))
 =>
 state_user(U,S,SKUs,H,4,PWi,Ni,Y,Na,CID,Bi,Ci,Nb,Ack,Ni_2,PWi_2,Set_31,Set_32,Set_34,Set_35,SID)

step step_2 (U,S,SKUs,H,Dummy_PWi,Dummy_Ni,Dummy_Y,Dummy_Na,Dummy_CID,Dummy_Bi,Dummy_Ci,Nb,Ack,Ni_2,PWi_2,Set_31,Set_32,Set_34,Set_35,SID,PWi,Ni,Y,Na) :=
 state_user(U,S,SKUs,H,4,Dummy_PWi,Dummy_Ni,Dummy_Y,Dummy_Na,Dummy_CID,Dummy_Bi,Dummy_Ci,Nb,Ack,Ni_2,PWi_2,Set_31,Set_32,Set_34,Set_35,SID).
 iknows(scrypt(SKUs,pair(PWi,pair(H,pair(Ni,Y)))))
=[exists Na]=>
 state_user(U,S,SKUs,H,6,PWi,Ni,Y,Na,xor(apply(H,PWi),apply(H,xor(Ni,xor(Y,Na)))),apply(H,xor(xor(apply(H,PWi),apply(H,xor(Ni,xor(Y,Na)))),apply(H,Dummy_PWi))),apply(H,xor(Na,xor(Ni,xor(apply(H,xor(xor(apply(H,PWi),apply(H,xor(Ni,xor(Y,Na)))),apply(H,Dummy_PWi))),Y)))),Nb,Ack,Ni_2,PWi_2,Set_31,Set_32,Set_34,Set_35,SID).
 witness(U,S,u_a,Na).
 iknows(pair(xor(apply(H,PWi),apply(H,xor(Ni,xor(Y,Na)))),pair(Ni,pair(apply(H,xor(Na,xor(Ni,xor(apply(H,xor(xor(apply(H,PWi),apply(H,xor(Ni,xor(Y,Na)))),apply(H,Dummy_PWi))),Y)))),Na))))

step step_3 (U,S,SKUs,H,PWi,Dummy_Ni,Y,Na,CID,Bi,Ci,Nb,Ack,Dummy_Ni_2,Dummy_PWi_2,Set_31,Set_32,Set_34,Set_35,SID,PWi_2) :=
 state_user(U,S,SKUs,H,6,PWi,Dummy_Ni,Y,Na,CID,Bi,Ci,Nb,Ack,Dummy_Ni_2,Dummy_PWi_2,Set_31,Set_32,Set_34,Set_35,SID)
=[exists PWi_2]=>
 state_user(U,S,SKUs,H,8,PWi,xor(Ni,xor(apply(H,PWi),apply(H,PWi_2))),Y,Na,CID,Bi,Ci,Nb,Ack,xor(xor(Ni,xor(apply(H,PWi),apply(H,PWi_2))),xor(apply(H,PWi),apply(H,PWi_2))),PWi_2,Set_31,Set_32,Set_34,Set_35,SID)

step step_4 (S,U,SKUs,H,Dummy_PWi,Dummy_Ni,Dummy_Y,Dummy_X,Na,CID,Bi,Ci,Nb,HPWi,Ack,Dummy_Set_60,Dummy_Set_61,SID,PWi,Y,X) :=
 state_server(S,U,SKUs,H,1,Dummy_PWi,Dummy_Ni,Dummy_Y,Dummy_X,Na,CID,Bi,Ci,Nb,HPWi,Ack,Dummy_Set_60,Dummy_Set_61,SID).
 iknows(scrypt(SKUs,PWi))
=[exists Y,X]=>
 state_server(S,U,SKUs,H,3,PWi,xor(PWi,X),Y,X,Na,CID,Bi,Ci,Nb,HPWi,Ack,Dummy_Set_60,Dummy_Set_61,SID).
 secret(X,s1,Dummy_Set_60).
 secret(Y,s2,Dummy_Set_61).
 iknows(scrypt(SKUs,pair(PWi,pair(H,pair(xor(PWi,X),Y))))).
 contains(S,Dummy_Set_60).
 contains(U,Dummy_Set_61).
 contains(S,Dummy_Set_61)

step step_5 (S,U,SKUs,H,PWi,Dummy_Ni,Y,X,Dummy_Na,Dummy_CID,Bi,Dummy_Ci,Dummy_Nb,HPWi,Ack,Set_60,Set_61,SID,Ni,Na,CID,Ci,Nb) :=
 state_server(S,U,SKUs,H,3,PWi,Dummy_Ni,Y,X,Dummy_Na,Dummy_CID,Bi,Dummy_Ci,Dummy_Nb,HPWi,Ack,Set_60,Set_61,SID).
 iknows(pair(CID,pair(Ni,pair(Ci,Na))))
=[exists Nb]=>
 state_server(S,U,SKUs,H,5,PWi,Ni,Y,X,Na,CID,Bi,Ci,Nb,HPWi,Ack,Set_60,Set_61,SID).
 request(S,U,u_a,Na,SID)


section properties:

property secrecy_of_s1 (MGoal,ASGoal) :=
 [] ((secret(MGoal,s1,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_s2 (MGoal,ASGoal) :=
 [] ((secret(MGoal,s2,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property authentication_on_u_a (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,u_a,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,u_a,MGoal))
     /\ ((request(A1Goal,A2Goal,u_a,MGoal,SID1)
           /\ request(A1Goal,A2Goal,u_a,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_u_b (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,u_b,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,u_b,MGoal))
     /\ ((request(A1Goal,A2Goal,u_b,MGoal,SID1)
           /\ request(A1Goal,A2Goal,u_b,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state secrecy_of_s1 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,s1,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_s2 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,s2,ASGoal) &
 not(contains(i,ASGoal))

attack_state authentication_on_u_a (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,u_a,MGoal,SID) &
 not(witness(A2Goal,A1Goal,u_a,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_u_a (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,u_a,MGoal,SID1).
 request(A1Goal,A2Goal,u_a,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_u_b (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,u_b,MGoal,SID) &
 not(witness(A2Goal,A1Goal,u_b,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_u_b (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,u_b,MGoal,SID1).
 request(A1Goal,A2Goal,u_b,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

