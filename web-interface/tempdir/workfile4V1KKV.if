%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfile4V1KKV

section signature:

state_userB: agent * agent * public_key * public_key * nat * text * text * text * text * text * set(agent) * nat -> fact
state_userA: agent * agent * public_key * public_key * nat * text * text * text * text * text * set(agent) * nat -> fact


section types:

a_b_n1, b_a_n2, a_b_ks, s1: protocol_id
set_83, set_81, set_79, set_78, set_74, set_65: set
M, IDa, N1, N2, Ks, Dummy_Ks, Dummy_N2, Dummy_N1, dummy_nonce: text
3, State, 9, 7, 2, 4, SID, 1, 0, Dummy_State, SID2, SID1: nat
Set_42, Dummy_Set_42, Set_24, Dummy_Set_24, ASGoal: set(agent)
start, MGoal: message
KUb, KUa, kua, kub: public_key
A, B, A2Goal, A1Goal, a, b, i: agent


section inits:

initial_state init1 := 
 iknows(start).
 iknows(a).
 iknows(b).
 iknows(kua).
 iknows(kub).
 iknows(i).
 state_userA(a,b,kua,kub,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_65,3).
 state_userB(b,a,kua,kub,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_74,4).
 state_userB(b,i,kua,kub,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_79,7).
 state_userA(a,i,kua,kub,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_81,9)


section rules:

step step_0 (A,B,KUa,KUb,IDa,Dummy_N1,N2,Ks,M,Dummy_Set_24,SID,N1) :=
 state_userA(A,B,KUa,KUb,0,IDa,Dummy_N1,N2,Ks,M,Dummy_Set_24,SID).
 iknows(start)
=[exists N1]=>
 state_userA(A,B,KUa,KUb,1,IDa,N1,N2,Ks,M,Dummy_Set_24,SID).
 secret(IDa,s1,Dummy_Set_24).
 iknows(crypt(KUb,pair(IDa,N1))).
 witness(A,B,a_b_n1,N1).
 contains(A,Dummy_Set_24).
 contains(B,Dummy_Set_24)

step step_1 (A,B,KUa,KUb,IDa,Dummy_N1,Dummy_N2,Dummy_Ks,M,Set_24,SID,N1,N2,Ks) :=
 state_userA(A,B,KUa,KUb,1,IDa,Dummy_N1,Dummy_N2,Dummy_Ks,M,Set_24,SID).
 iknows(crypt(KUa,pair(N1,N2)))
=[exists Ks]=>
 state_userA(A,B,KUa,KUb,2,IDa,N1,N2,Ks,M,Set_24,SID).
 iknows(crypt(KUb,N2)).
 iknows(crypt(inv(KUb),crypt(inv(KUa),Ks))).
 witness(A,B,a_b_ks,Ks).
 request(B,A,b_a_n2,N2,SID)

step step_2 (B,A,KUa,KUb,IDa,Dummy_N1,Dummy_N2,Ks,M,Dummy_Set_42,SID,N1,N2) :=
 state_userB(B,A,KUa,KUb,0,IDa,Dummy_N1,Dummy_N2,Ks,M,Dummy_Set_42,SID).
 iknows(crypt(KUb,pair(IDa,N1)))
=[exists N2]=>
 state_userB(B,A,KUa,KUb,1,IDa,N1,N2,Ks,M,Dummy_Set_42,SID).
 secret(IDa,s1,Dummy_Set_42).
 iknows(crypt(KUa,pair(N1,N2))).
 witness(B,A,b_a_n2,N2).
 contains(A,Dummy_Set_42).
 contains(B,Dummy_Set_42)

step step_3 (B,A,KUa,KUb,IDa,N1,Dummy_N2,Ks,M,Set_42,SID,N2) :=
 state_userB(B,A,KUa,KUb,1,IDa,N1,Dummy_N2,Ks,M,Set_42,SID).
 iknows(crypt(KUb,N2))
 =>
 state_userB(B,A,KUa,KUb,2,IDa,N1,N2,Ks,M,Set_42,SID)

step step_4 (B,A,KUa,KUb,IDa,N1,N2,Dummy_Ks,M,Set_42,SID,Ks) :=
 state_userB(B,A,KUa,KUb,2,IDa,N1,N2,Dummy_Ks,M,Set_42,SID).
 iknows(crypt(inv(KUb),crypt(inv(KUa),Ks)))
 =>
 state_userB(B,A,KUa,KUb,3,IDa,N1,N2,Ks,M,Set_42,SID).
 request(A,B,a_b_n1,N1,SID).
 request(A,B,a_b_ks,Ks,SID)


section properties:

property secrecy_of_s1 (MGoal,ASGoal) :=
 [] ((secret(MGoal,s1,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property authentication_on_a_b_n1 (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,a_b_n1,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,a_b_n1,MGoal))
     /\ ((request(A1Goal,A2Goal,a_b_n1,MGoal,SID1)
           /\ request(A1Goal,A2Goal,a_b_n1,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_a_b_ks (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,a_b_ks,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,a_b_ks,MGoal))
     /\ ((request(A1Goal,A2Goal,a_b_ks,MGoal,SID1)
           /\ request(A1Goal,A2Goal,a_b_ks,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_b_a_n2 (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,b_a_n2,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,b_a_n2,MGoal))
     /\ ((request(A1Goal,A2Goal,b_a_n2,MGoal,SID1)
           /\ request(A1Goal,A2Goal,b_a_n2,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state secrecy_of_s1 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,s1,ASGoal) &
 not(contains(i,ASGoal))

attack_state authentication_on_a_b_n1 (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,a_b_n1,MGoal,SID) &
 not(witness(A2Goal,A1Goal,a_b_n1,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_a_b_n1 (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,a_b_n1,MGoal,SID1).
 request(A1Goal,A2Goal,a_b_n1,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_a_b_ks (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,a_b_ks,MGoal,SID) &
 not(witness(A2Goal,A1Goal,a_b_ks,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_a_b_ks (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,a_b_ks,MGoal,SID1).
 request(A1Goal,A2Goal,a_b_ks,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_b_a_n2 (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,b_a_n2,MGoal,SID) &
 not(witness(A2Goal,A1Goal,b_a_n2,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_b_a_n2 (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,b_a_n2,MGoal,SID1).
 request(A1Goal,A2Goal,b_a_n2,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

