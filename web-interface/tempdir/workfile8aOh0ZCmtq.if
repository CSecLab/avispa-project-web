%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfile8aOh0ZCmtq

section signature:

state_server: agent * agent * agent * agent * agent * text * text * text * text * public_key * public_key * public_key * public_key * hash_func * message * message * message * set(pair(text,public_key)) * symmetric_key * nat * message * message * text * text * text * text * text * text * scrypt(hash_func,pair(text,text)) * set(agent) * nat -> fact
state_edgerouter: agent * agent * agent * agent * text * text * text * text * public_key * public_key * public_key * public_key * hash_func * nat * text * text * text * text * text * text * scrypt(hash_func,pair(text,text)) * scrypt(message,text) * scrypt(hash_func,pair(crypt(inv(public_key),pair(text,pair(scrypt(hash_func,pair(text,text)),pair(public_key,pair(text,text))))),text)) * nat -> fact
state_router: agent * agent * agent * agent * text * text * text * text * public_key * public_key * public_key * public_key * hash_func * nat * text * text * text * text * text * scrypt(hash_func,pair(text,text)) * scrypt(message,text) * scrypt(hash_func,pair(crypt(inv(public_key),pair(text,pair(scrypt(hash_func,pair(text,text)),pair(public_key,pair(text,text))))),text)) * nat -> fact
state_host: agent * agent * agent * agent * agent * text * text * text * text * text * public_key * public_key * public_key * public_key * hash_func * message * message * message * symmetric_key * nat * crypt(inv(public_key),pair(text,pair(scrypt(hash_func,pair(text,text)),pair(public_key,pair(text,text))))) * scrypt(hash_func,pair(text,text)) * text * text * text * text * message * message * set(agent) * set(agent) * set(agent) * nat -> fact
state_kgc: agent * agent * agent * agent * agent * text * text * message * message * message * symmetric_key * nat * message * nat -> fact


section types:

sss, kes, sse, sne: protocol_id
Macse, Macsr, Dummy_Macse, Dummy_Macsr: scrypt(hash_func,pair(crypt(inv(public_key),pair(text,pair(scrypt(hash_func,pair(text,text)),pair(public_key,pair(text,text))))),text))
Esmessage, Edmessage, Dummy_Esmessage, Dummy_Edmessage: scrypt(message,text)
ksymesk, Ksymesk: symmetric_key
Tick_se, Dummy_Tick_se: crypt(inv(public_key),pair(text,pair(scrypt(hash_func,pair(text,text)),pair(public_key,pair(text,text)))))
ASGoal, Set_131, Set_43, Set_41, Set_38, Dummy_Set_131, Dummy_Set_43, Dummy_Set_41, Dummy_Set_38: set(agent)
IPV6, Dummy_IPV6: scrypt(hash_func,pair(text,text))
h, H, dummy_hash: hash_func
prefix, ide, idr, idbr, ids, idi, IDe, IDs, Te, Tb, Ts, Tend, Sno, Prefix, IDr, IDbr, Dummy_Tb, Dummy_IDe, Dummy_Tend, Dummy_Ts, Dummy_Sno, Dummy_Te, dummy_nonce: text
kpube, kpubr, kpubbr, kpubs, kpubi, Kpube, Kpubr, Kpubbr, Kpubs, dummy_pk: public_key
set_261, set_258, set_257, set_256, set_254, set_251, set_250, set_249, set_247, set_244, set_243, set_242, set_237, set_211, set_210, set_209: set
State, 4, 3, 22, 20, 19, 17, 16, 14, 12, 2, 11, 10, 1, 7, 0, SID, 6, 5, Dummy_State: nat
e, l, b, s, k, E, L, B, S, K, i: agent
MGoal, g, ne, se, ss, si, start, Kes, G, Ss, Se, Ge, Ne, Dummy_Ge, Gs, Dummy_Gs, Dummy_Kes, dummy_msg: message
IdList, set_203: set(pair(text,public_key))


section inits:

initial_state init1 := 
 iknows(start).
 iknows(e).
 iknows(l).
 iknows(b).
 iknows(s).
 iknows(prefix).
 iknows(ide).
 iknows(idr).
 iknows(idbr).
 iknows(ids).
 iknows(idi).
 iknows(kpube).
 iknows(kpubr).
 iknows(kpubbr).
 iknows(kpubs).
 iknows(kpubi).
 iknows(inv(kpubi)).
 iknows(h).
 iknows(g).
 iknows(si).
 iknows(i).
 state_kgc(k,e,l,b,s,ide,ids,g,ss,se,ksymesk,0,dummy_msg,2).
 state_host(e,l,b,s,k,prefix,ide,idr,idbr,ids,kpube,kpubr,kpubbr,kpubs,h,g,ne,se,ksymesk,0,crypt(inv(dummy_pk),pair(dummy_nonce,pair(scrypt(dummy_hash,pair(dummy_nonce,dummy_nonce)),pair(dummy_pk,pair(dummy_nonce,dummy_nonce))))),scrypt(dummy_hash,pair(dummy_nonce,dummy_nonce)),dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,set_209,set_210,set_211,4).
 state_router(l,e,b,s,prefix,idr,idbr,ids,kpube,kpubr,kpubbr,kpubs,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,scrypt(dummy_hash,pair(dummy_nonce,dummy_nonce)),scrypt(dummy_msg,dummy_nonce),scrypt(dummy_hash,pair(crypt(inv(dummy_pk),pair(dummy_nonce,pair(scrypt(dummy_hash,pair(dummy_nonce,dummy_nonce)),pair(dummy_pk,pair(dummy_nonce,dummy_nonce))))),dummy_nonce)),5).
 state_edgerouter(b,e,l,s,prefix,idr,idbr,ids,kpube,kpubr,kpubbr,kpubs,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,scrypt(dummy_hash,pair(dummy_nonce,dummy_nonce)),scrypt(dummy_msg,dummy_nonce),scrypt(dummy_hash,pair(crypt(inv(dummy_pk),pair(dummy_nonce,pair(scrypt(dummy_hash,pair(dummy_nonce,dummy_nonce)),pair(dummy_pk,pair(dummy_nonce,dummy_nonce))))),dummy_nonce)),6).
 state_server(s,e,l,b,k,prefix,idr,idbr,ids,kpube,kpubr,kpubbr,kpubs,h,g,ne,ss,set_203,ksymesk,0,dummy_msg,dummy_msg,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,scrypt(dummy_hash,pair(dummy_nonce,dummy_nonce)),set_237,7).
 state_router(l,i,b,s,prefix,idr,idbr,ids,kpubi,kpubr,kpubbr,kpubs,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,scrypt(dummy_hash,pair(dummy_nonce,dummy_nonce)),scrypt(dummy_msg,dummy_nonce),scrypt(dummy_hash,pair(crypt(inv(dummy_pk),pair(dummy_nonce,pair(scrypt(dummy_hash,pair(dummy_nonce,dummy_nonce)),pair(dummy_pk,pair(dummy_nonce,dummy_nonce))))),dummy_nonce)),10).
 state_edgerouter(b,i,l,s,prefix,idr,idbr,ids,kpubi,kpubr,kpubbr,kpubs,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,scrypt(dummy_hash,pair(dummy_nonce,dummy_nonce)),scrypt(dummy_msg,dummy_nonce),scrypt(dummy_hash,pair(crypt(inv(dummy_pk),pair(dummy_nonce,pair(scrypt(dummy_hash,pair(dummy_nonce,dummy_nonce)),pair(dummy_pk,pair(dummy_nonce,dummy_nonce))))),dummy_nonce)),11).
 state_server(s,i,l,b,k,prefix,idr,idbr,ids,kpubi,kpubr,kpubbr,kpubs,h,g,ne,ss,set_203,ksymesk,0,dummy_msg,dummy_msg,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,scrypt(dummy_hash,pair(dummy_nonce,dummy_nonce)),set_247,12).
 state_host(e,i,b,s,k,prefix,ide,idi,idbr,ids,kpube,kpubi,kpubbr,kpubs,h,g,ne,se,ksymesk,0,crypt(inv(dummy_pk),pair(dummy_nonce,pair(scrypt(dummy_hash,pair(dummy_nonce,dummy_nonce)),pair(dummy_pk,pair(dummy_nonce,dummy_nonce))))),scrypt(dummy_hash,pair(dummy_nonce,dummy_nonce)),dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,set_249,set_250,set_251,14).
 state_edgerouter(b,e,i,s,prefix,idi,idbr,ids,kpube,kpubi,kpubbr,kpubs,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,scrypt(dummy_hash,pair(dummy_nonce,dummy_nonce)),scrypt(dummy_msg,dummy_nonce),scrypt(dummy_hash,pair(crypt(inv(dummy_pk),pair(dummy_nonce,pair(scrypt(dummy_hash,pair(dummy_nonce,dummy_nonce)),pair(dummy_pk,pair(dummy_nonce,dummy_nonce))))),dummy_nonce)),16).
 state_server(s,e,i,b,k,prefix,idi,idbr,ids,kpube,kpubi,kpubbr,kpubs,h,g,ne,ss,set_203,ksymesk,0,dummy_msg,dummy_msg,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,scrypt(dummy_hash,pair(dummy_nonce,dummy_nonce)),set_254,17).
 state_host(e,l,i,s,k,prefix,ide,idr,idi,ids,kpube,kpubr,kpubi,kpubs,h,g,ne,se,ksymesk,0,crypt(inv(dummy_pk),pair(dummy_nonce,pair(scrypt(dummy_hash,pair(dummy_nonce,dummy_nonce)),pair(dummy_pk,pair(dummy_nonce,dummy_nonce))))),scrypt(dummy_hash,pair(dummy_nonce,dummy_nonce)),dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,set_256,set_257,set_258,19).
 state_router(l,e,i,s,prefix,idr,idi,ids,kpube,kpubr,kpubi,kpubs,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,scrypt(dummy_hash,pair(dummy_nonce,dummy_nonce)),scrypt(dummy_msg,dummy_nonce),scrypt(dummy_hash,pair(crypt(inv(dummy_pk),pair(dummy_nonce,pair(scrypt(dummy_hash,pair(dummy_nonce,dummy_nonce)),pair(dummy_pk,pair(dummy_nonce,dummy_nonce))))),dummy_nonce)),20).
 state_server(s,e,l,i,k,prefix,idr,idi,ids,kpube,kpubr,kpubi,kpubs,h,g,ne,ss,set_203,ksymesk,0,dummy_msg,dummy_msg,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,scrypt(dummy_hash,pair(dummy_nonce,dummy_nonce)),set_261,22).
 contains(pair(ide,kpube),set_203).
 contains(pair(idr,kpubr),set_203).
 contains(pair(idbr,kpubbr),set_203).
 contains(pair(ids,kpubs),set_203)


section rules:

step step_0 (K,E,L,B,S,IDe,IDs,G,Ss,Se,Ksymesk,Kes,SID) :=
 state_kgc(K,E,L,B,S,IDe,IDs,G,Ss,Se,Ksymesk,0,Kes,SID).
 iknows(start)
 =>
 state_kgc(K,E,L,B,S,IDe,IDs,G,Ss,Se,Ksymesk,1,Kes,SID).
 iknows(pair(S,pair(K,pair(scrypt(Ksymesk,IDs),exp(G,Se)))))

step step_1 (K,E,L,B,S,IDe,IDs,G,Ss,Se,Ksymesk,Dummy_Kes,SID,Kes) :=
 state_kgc(K,E,L,B,S,IDe,IDs,G,Ss,Se,Ksymesk,1,Dummy_Kes,SID).
 iknows(pair(K,pair(S,scrypt(Ksymesk,Kes))))
 =>
 state_kgc(K,E,L,B,S,IDe,IDs,G,Ss,Se,Ksymesk,2,Kes,SID).
 iknows(pair(E,pair(K,pair(scrypt(Ksymesk,IDe),exp(G,Ss)))))

step step_2 (E,L,B,S,K,Prefix,IDe,IDr,IDbr,IDs,Kpube,Kpubr,Kpubbr,Kpubs,H,G,Ne,Se,Ksymesk,Tick_se,Dummy_IPV6,Dummy_Te,Ts,Tend,Dummy_Sno,Dummy_Gs,Dummy_Kes,Dummy_Set_38,Dummy_Set_41,Dummy_Set_43,SID,Te,Sno,Gs) :=
 state_host(E,L,B,S,K,Prefix,IDe,IDr,IDbr,IDs,Kpube,Kpubr,Kpubbr,Kpubs,H,G,Ne,Se,Ksymesk,0,Tick_se,Dummy_IPV6,Dummy_Te,Ts,Tend,Dummy_Sno,Dummy_Gs,Dummy_Kes,Dummy_Set_38,Dummy_Set_41,Dummy_Set_43,SID).
 iknows(pair(E,pair(K,pair(scrypt(Ksymesk,IDe),Gs))))
=[exists Sno,Te]=>
 state_host(E,L,B,S,K,Prefix,IDe,IDr,IDbr,IDs,Kpube,Kpubr,Kpubbr,Kpubs,H,G,Ne,Se,Ksymesk,1,Tick_se,apply(H,pair(Prefix,IDe)),Te,Ts,Tend,Sno,Gs,apply(H,pair(exp(Gs,Se),Ne)),Dummy_Set_38,Dummy_Set_41,Dummy_Set_43,SID).
 iknows(pair(E,pair(L,crypt(inv(Kpube),pair(IDe,pair(IDr,pair(Te,scrypt(apply(H,pair(exp(Gs,Se),Ne)),Sno)))))))).
 secret(Ne,sne,Dummy_Set_38).
 secret(Se,sse,Dummy_Set_41).
 secret(apply(H,pair(exp(Gs,Se),Ne)),kes,Dummy_Set_43).
 contains(E,Dummy_Set_38).
 contains(S,Dummy_Set_38).
 contains(E,Dummy_Set_41).
 contains(S,Dummy_Set_41).
 contains(E,Dummy_Set_43).
 contains(S,Dummy_Set_43)

step step_3 (E,L,B,S,K,Prefix,IDe,IDr,IDbr,IDs,Kpube,Kpubr,Kpubbr,Kpubs,H,G,Ne,Se,Ksymesk,Dummy_Tick_se,IPV6,Te,Dummy_Ts,Dummy_Tend,Sno,Gs,Kes,Set_38,Set_41,Set_43,SID,Ts,Tend) :=
 state_host(E,L,B,S,K,Prefix,IDe,IDr,IDbr,IDs,Kpube,Kpubr,Kpubbr,Kpubs,H,G,Ne,Se,Ksymesk,1,Dummy_Tick_se,IPV6,Te,Dummy_Ts,Dummy_Tend,Sno,Gs,Kes,Set_38,Set_41,Set_43,SID).
 iknows(pair(L,pair(E,pair(crypt(inv(Kpubs),pair(IDe,pair(IPV6,pair(Kpube,pair(Ts,Tend))))),apply(H,pair(crypt(inv(Kpubs),pair(IDe,pair(IPV6,pair(Kpube,pair(Ts,Tend))))),Sno))))))
 =>
 state_host(E,L,B,S,K,Prefix,IDe,IDr,IDbr,IDs,Kpube,Kpubr,Kpubbr,Kpubs,H,G,Ne,Se,Ksymesk,2,crypt(inv(Kpubs),pair(IDe,pair(IPV6,pair(Kpube,pair(Ts,Tend))))),IPV6,Te,Ts,Tend,Sno,Gs,Kes,Set_38,Set_41,Set_43,SID)

step step_4 (L,E,B,S,Prefix,IDr,IDbr,IDs,Kpube,Kpubr,Kpubbr,Kpubs,H,Dummy_Te,Ts,Tend,Sno,Dummy_IDe,Dummy_IPV6,Dummy_Edmessage,Macsr,SID,Te,IDe,Edmessage) :=
 state_router(L,E,B,S,Prefix,IDr,IDbr,IDs,Kpube,Kpubr,Kpubbr,Kpubs,H,0,Dummy_Te,Ts,Tend,Sno,Dummy_IDe,Dummy_IPV6,Dummy_Edmessage,Macsr,SID).
 iknows(pair(E,pair(L,crypt(inv(Kpube),pair(IDe,pair(IDr,pair(Te,Edmessage)))))))
 =>
 state_router(L,E,B,S,Prefix,IDr,IDbr,IDs,Kpube,Kpubr,Kpubbr,Kpubs,H,1,Te,Ts,Tend,Sno,IDe,apply(H,pair(Prefix,IDe)),Edmessage,Macsr,SID).
 iknows(pair(L,pair(B,crypt(inv(Kpube),pair(IDe,pair(IDr,pair(Te,Edmessage)))))))

step step_5 (L,E,B,S,Prefix,IDr,IDbr,IDs,Kpube,Kpubr,Kpubbr,Kpubs,H,Te,Dummy_Ts,Dummy_Tend,Sno,IDe,IPV6,Edmessage,Dummy_Macsr,SID,Ts,Tend,Macsr) :=
 state_router(L,E,B,S,Prefix,IDr,IDbr,IDs,Kpube,Kpubr,Kpubbr,Kpubs,H,1,Te,Dummy_Ts,Dummy_Tend,Sno,IDe,IPV6,Edmessage,Dummy_Macsr,SID).
 iknows(pair(B,pair(L,pair(crypt(inv(Kpubs),pair(IDe,pair(IPV6,pair(Kpube,pair(Ts,Tend))))),Macsr))))
 =>
 state_router(L,E,B,S,Prefix,IDr,IDbr,IDs,Kpube,Kpubr,Kpubbr,Kpubs,H,2,Te,Ts,Tend,Sno,IDe,IPV6,Edmessage,Macsr,SID).
 iknows(pair(L,pair(E,pair(crypt(inv(Kpubs),pair(IDe,pair(IPV6,pair(Kpube,pair(Ts,Tend))))),Macsr))))

step step_6 (B,E,L,S,Prefix,IDr,IDbr,IDs,Kpube,Kpubr,Kpubbr,Kpubs,H,Dummy_Te,Dummy_Tb,Ts,Tend,Sno,Dummy_IDe,Dummy_IPV6,Dummy_Esmessage,Macse,SID,Te,Tb,IDe,Esmessage) :=
 state_edgerouter(B,E,L,S,Prefix,IDr,IDbr,IDs,Kpube,Kpubr,Kpubbr,Kpubs,H,0,Dummy_Te,Dummy_Tb,Ts,Tend,Sno,Dummy_IDe,Dummy_IPV6,Dummy_Esmessage,Macse,SID).
 iknows(pair(L,pair(B,crypt(inv(Kpube),pair(IDe,pair(IDr,pair(Te,Esmessage)))))))
=[exists Tb]=>
 state_edgerouter(B,E,L,S,Prefix,IDr,IDbr,IDs,Kpube,Kpubr,Kpubbr,Kpubs,H,3,Te,Tb,Ts,Tend,Sno,IDe,apply(H,pair(Prefix,IDe)),Esmessage,Macse,SID).
 iknows(pair(B,pair(S,pair(crypt(inv(Kpube),pair(IDe,pair(IDr,pair(Te,Esmessage)))),crypt(inv(Kpubbr),pair(Tb,apply(H,pair(IDe,pair(IDr,pair(IDbr,pair(Kpube,pair(Kpubr,pair(Kpubbr,Tb)))))))))))))

step step_7 (B,E,L,S,Prefix,IDr,IDbr,IDs,Kpube,Kpubr,Kpubbr,Kpubs,H,Te,Tb,Dummy_Ts,Dummy_Tend,Sno,IDe,IPV6,Esmessage,Dummy_Macse,SID,Ts,Tend,Macse) :=
 state_edgerouter(B,E,L,S,Prefix,IDr,IDbr,IDs,Kpube,Kpubr,Kpubbr,Kpubs,H,3,Te,Tb,Dummy_Ts,Dummy_Tend,Sno,IDe,IPV6,Esmessage,Dummy_Macse,SID).
 iknows(pair(S,pair(B,pair(crypt(inv(Kpubs),pair(IDe,pair(IPV6,pair(Kpube,pair(Ts,Tend))))),Macse))))
 =>
 state_edgerouter(B,E,L,S,Prefix,IDr,IDbr,IDs,Kpube,Kpubr,Kpubbr,Kpubs,H,4,Te,Tb,Ts,Tend,Sno,IDe,IPV6,Esmessage,Macse,SID).
 iknows(pair(B,pair(L,pair(crypt(inv(Kpubs),pair(IDe,pair(IPV6,pair(Kpube,pair(Ts,Tend))))),Macse))))

step step_8 (S,E,L,B,K,Prefix,IDr,IDbr,IDs,Kpube,Kpubr,Kpubbr,Kpubs,H,G,Ne,Ss,IdList,Ksymesk,Dummy_Ge,Dummy_Kes,Te,Tb,Ts,Tend,Sno,IDe,IPV6,Set_131,SID,Ge) :=
 state_server(S,E,L,B,K,Prefix,IDr,IDbr,IDs,Kpube,Kpubr,Kpubbr,Kpubs,H,G,Ne,Ss,IdList,Ksymesk,0,Dummy_Ge,Dummy_Kes,Te,Tb,Ts,Tend,Sno,IDe,IPV6,Set_131,SID).
 iknows(pair(S,pair(K,pair(scrypt(Ksymesk,IDs),Ge))))
 =>
 state_server(S,E,L,B,K,Prefix,IDr,IDbr,IDs,Kpube,Kpubr,Kpubbr,Kpubs,H,G,Ne,Ss,IdList,Ksymesk,1,Ge,apply(H,pair(exp(Ge,Ss),Ne)),Te,Tb,Ts,Tend,Sno,IDe,IPV6,Set_131,SID).
 iknows(pair(K,pair(S,scrypt(Ksymesk,apply(H,pair(exp(Ge,Ss),Ne))))))

step step_9 (S,E,L,B,K,Prefix,IDr,IDbr,IDs,Kpube,Kpubr,Kpubbr,Kpubs,H,G,Ne,Ss,IdList,Ksymesk,Ge,Kes,Dummy_Te,Dummy_Tb,Dummy_Ts,Dummy_Tend,Dummy_Sno,Dummy_IDe,Dummy_IPV6,Dummy_Set_131,SID,Te,Tb,Ts,Tend,Sno,IDe) :=
 state_server(S,E,L,B,K,Prefix,IDr,IDbr,IDs,Kpube,Kpubr,Kpubbr,Kpubs,H,G,Ne,Ss,IdList,Ksymesk,1,Ge,Kes,Dummy_Te,Dummy_Tb,Dummy_Ts,Dummy_Tend,Dummy_Sno,Dummy_IDe,Dummy_IPV6,Dummy_Set_131,SID).
 iknows(pair(B,pair(S,pair(crypt(inv(Kpube),pair(IDe,pair(IDr,pair(Te,scrypt(Kes,Sno))))),crypt(inv(Kpubbr),pair(Tb,apply(H,pair(IDe,pair(IDr,pair(IDbr,pair(Kpube,pair(Kpubr,pair(Kpubbr,Tb))))))))))))).
 contains(pair(IDe,Kpube),IdList).
 contains(pair(IDr,Kpubr),IdList)
=[exists Tend,Ts]=>
 state_server(S,E,L,B,K,Prefix,IDr,IDbr,IDs,Kpube,Kpubr,Kpubbr,Kpubs,H,G,Ne,Ss,IdList,Ksymesk,2,Ge,Kes,Te,Tb,Ts,Tend,Sno,IDe,apply(H,pair(Prefix,IDe)),Dummy_Set_131,SID).
 iknows(pair(S,pair(B,pair(crypt(inv(Kpubs),pair(IDe,pair(apply(H,pair(Prefix,IDe)),pair(Kpube,pair(Ts,Tend))))),apply(H,pair(crypt(inv(Kpubs),pair(IDe,pair(apply(H,pair(Prefix,IDe)),pair(Kpube,pair(Ts,Tend))))),Sno)))))).
 secret(Ss,sss,Dummy_Set_131).
 contains(E,Dummy_Set_131).
 contains(S,Dummy_Set_131).
 contains(pair(IDe,Kpube),IdList).
 contains(pair(IDr,Kpubr),IdList)


section properties:

property secrecy_of_sne (MGoal,ASGoal) :=
 [] ((secret(MGoal,sne,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_sse (MGoal,ASGoal) :=
 [] ((secret(MGoal,sse,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_sss (MGoal,ASGoal) :=
 [] ((secret(MGoal,sss,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_kes (MGoal,ASGoal) :=
 [] ((secret(MGoal,kes,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))


section attack_states:

attack_state secrecy_of_sne (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sne,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_sse (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sse,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_sss (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sss,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_kes (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,kes,ASGoal) &
 not(contains(i,ASGoal))

