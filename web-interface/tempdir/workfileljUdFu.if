%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfileljUdFu

section signature:

state_bob: agent * agent * agent * symmetric_key * hash_func * nat * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * nat -> fact
state_alice: agent * agent * agent * symmetric_key * hash_func * nat * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * nat -> fact
state_bs: agent * agent * agent * symmetric_key * hash_func * nat * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * set(text) * set(agent) * nat -> fact


section types:

alice_bob, bob_alice, sub1, sub2: protocol_id
Set_38, Dummy_Set_38: set(text)
set_147, set_146, set_123, set_122: set
Set_39, Dummy_Set_39, ASGoal: set(agent)
start, MGoal: message
Cat, Ta, Pt, X, Qa, R, Na, Zr, Yr, Z1r, MAC1, MAC2, Ca, Ea, Q, P, Aca, Ack, Dummy_P, Dummy_MAC1, Dummy_Z1r, Dummy_Yr, Dummy_Zr, Dummy_MAC2, Dummy_Na, Dummy_R, Dummy_Q, Dummy_Ca, Dummy_Qa, Dummy_Ta, dummy_nonce: text
State, 2, 9, 8, 7, 5, SID, 1, 0, 4, Dummy_State, 3, SID2, SID1: nat
H, h: hash_func
SKubs, skubs: symmetric_key
BS, Ui, SNj, A2Goal, A1Goal, ui, snj, bs, i: agent


section inits:

initial_state init1 := 
 iknows(start).
 iknows(ui).
 iknows(bs).
 iknows(snj).
 iknows(h).
 iknows(i).
 state_bs(bs,ui,snj,skubs,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_122,set_123,3).
 state_alice(ui,bs,snj,skubs,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,4).
 state_bob(snj,bs,ui,skubs,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,5).
 state_bs(bs,ui,snj,skubs,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_146,set_147,7).
 state_alice(ui,bs,snj,skubs,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,8).
 state_bob(snj,bs,ui,skubs,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,9)


section rules:

step step_0 (BS,Ui,SNj,SKubs,H,Cat,Dummy_Ta,Pt,X,Dummy_Qa,R,Na,Zr,Yr,Z1r,MAC1,MAC2,Dummy_Ca,Ea,Dummy_Q,P,Aca,Ack,Dummy_Set_38,Dummy_Set_39,SID) :=
 state_bs(BS,Ui,SNj,SKubs,H,0,Cat,Dummy_Ta,Pt,X,Dummy_Qa,R,Na,Zr,Yr,Z1r,MAC1,MAC2,Dummy_Ca,Ea,Dummy_Q,P,Aca,Ack,Dummy_Set_38,Dummy_Set_39,SID).
 iknows(start)
 =>
 state_bs(BS,Ui,SNj,SKubs,H,1,Cat,pair(apply(H,pair(Cat,Pt)),pair(Aca,apply(H,pair(apply(H,pair(Cat,Pt)),Aca)))),Pt,X,apply(H,pair(apply(H,pair(Cat,Pt)),pair(Ea,apply(H,pair(X,Pt))))),R,Na,Zr,Yr,Z1r,MAC1,MAC2,apply(H,pair(Cat,Pt)),Ea,apply(H,pair(X,Pt)),P,Aca,Ack,Dummy_Set_38,Dummy_Set_39,SID).
 iknows(pair(BS,pair(Ui,scrypt(SKubs,pair(apply(H,pair(apply(H,pair(Cat,Pt)),pair(Ea,apply(H,pair(X,Pt))))),pair(apply(H,pair(apply(H,pair(Cat,Pt)),pair(Aca,apply(H,pair(apply(H,pair(Cat,Pt)),Aca))))),pair(apply(H,pair(X,Pt)),pair(apply(H,pair(Cat,Pt)),pair(Aca,apply(H,pair(apply(H,pair(Cat,Pt)),Aca))))))))))).
 secret(Dummy_Set_38,sub1,Dummy_Set_39).
 contains(X,Dummy_Set_38).
 contains(BS,Dummy_Set_39)

step step_1 (Ui,BS,SNj,SKubs,H,Cat,Ta,Pt,X,Qa,R,Na,Zr,Yr,Z1r,MAC1,MAC2,Ca,Ea,Q,P,Aca,Ack,SID) :=
 state_alice(Ui,BS,SNj,SKubs,H,0,Cat,Ta,Pt,X,Qa,R,Na,Zr,Yr,Z1r,MAC1,MAC2,Ca,Ea,Q,P,Aca,Ack,SID).
 iknows(pair(BS,pair(Ui,pair(BS,pair(Ui,scrypt(SKubs,pair(apply(H,pair(apply(H,pair(Cat,Pt)),pair(Ea,apply(H,pair(X,Pt))))),pair(apply(H,pair(apply(H,pair(Cat,Pt)),pair(Aca,apply(H,pair(apply(H,pair(Cat,Pt)),Aca))))),pair(apply(H,pair(X,Pt)),pair(apply(H,pair(Cat,Pt)),pair(Aca,apply(H,pair(apply(H,pair(Cat,Pt)),Aca)))))))))))))
 =>
 state_alice(Ui,BS,SNj,SKubs,H,1,Cat,Ta,Pt,X,Qa,R,Na,Zr,Yr,Z1r,MAC1,MAC2,Ca,Ea,Q,P,Aca,Ack,SID).
 iknows(pair(Ui,pair(SNj,pair(apply(H,pair(Cat,Pt)),pair(Aca,apply(H,pair(apply(H,pair(Cat,Pt)),Aca)))))))

step step_2 (Ui,BS,SNj,SKubs,H,Cat,Ta,Pt,X,Qa,Dummy_R,Dummy_Na,Zr,Yr,Z1r,MAC1,Dummy_MAC2,Ca,Ea,Q,P,Aca,Ack,SID,R,Na) :=
 state_alice(Ui,BS,SNj,SKubs,H,1,Cat,Ta,Pt,X,Qa,Dummy_R,Dummy_Na,Zr,Yr,Z1r,MAC1,Dummy_MAC2,Ca,Ea,Q,P,Aca,Ack,SID).
 iknows(pair(SNj,pair(Ui,pair(xor(R,apply(H,pair(apply(H,R),apply(H,pair(apply(H,pair(Cat,Pt)),pair(Ea,apply(H,pair(X,Pt)))))))),pair(apply(H,pair(apply(H,R),pair(apply(H,R),apply(H,pair(apply(H,pair(Cat,Pt)),pair(Ea,apply(H,pair(X,Pt)))))))),scrypt(R,Na))))))
 =>
 state_alice(Ui,BS,SNj,SKubs,H,2,Cat,Ta,Pt,X,Qa,R,Na,Zr,Yr,Z1r,MAC1,apply(H,pair(R,pair(Na,Aca))),Ca,Ea,Q,P,Aca,Ack,SID).
 request(SNj,Ui,bob_alice,R,SID).
 iknows(pair(Ui,pair(SNj,apply(H,pair(R,pair(Na,Aca)))))).
 witness(Ui,SNj,alice_bob,Na)

step step_3 (SNj,BS,Ui,SKubs,H,Cat,Ta,Pt,X,Qa,Dummy_R,Dummy_Na,Dummy_Zr,Dummy_Yr,Dummy_Z1r,Dummy_MAC1,MAC2,Ca,Ea,Q,Dummy_P,Aca,Ack,SID,R,Na) :=
 state_bob(SNj,BS,Ui,SKubs,H,0,Cat,Ta,Pt,X,Qa,Dummy_R,Dummy_Na,Dummy_Zr,Dummy_Yr,Dummy_Z1r,Dummy_MAC1,MAC2,Ca,Ea,Q,Dummy_P,Aca,Ack,SID).
 iknows(pair(Ui,pair(SNj,pair(apply(H,pair(Cat,Pt)),pair(Aca,apply(H,pair(apply(H,pair(Cat,Pt)),Aca)))))))
=[exists Na,R]=>
 state_bob(SNj,BS,Ui,SKubs,H,1,Cat,Ta,Pt,X,Qa,R,Na,apply(H,pair(apply(H,R),apply(H,pair(apply(H,pair(Cat,Pt)),pair(Ea,apply(H,pair(X,Pt))))))),apply(H,pair(apply(H,R),pair(apply(H,R),apply(H,pair(apply(H,pair(Cat,Pt)),pair(Ea,apply(H,pair(X,Pt)))))))),xor(R,apply(H,pair(apply(H,R),apply(H,pair(apply(H,pair(Cat,Pt)),pair(Ea,apply(H,pair(X,Pt)))))))),scrypt(R,Na),MAC2,Ca,Ea,Q,pair(apply(H,R),apply(H,pair(apply(H,pair(Cat,Pt)),pair(Ea,apply(H,pair(X,Pt)))))),Aca,Ack,SID).
 iknows(pair(SNj,pair(Ui,pair(xor(R,apply(H,pair(apply(H,R),apply(H,pair(apply(H,pair(Cat,Pt)),pair(Ea,apply(H,pair(X,Pt)))))))),pair(apply(H,pair(apply(H,R),pair(apply(H,R),apply(H,pair(apply(H,pair(Cat,Pt)),pair(Ea,apply(H,pair(X,Pt)))))))),scrypt(R,Na))))))

step step_4 (SNj,BS,Ui,SKubs,H,Cat,Ta,Pt,X,Qa,Dummy_R,Dummy_Na,Zr,Yr,Z1r,MAC1,MAC2,Ca,Ea,Q,P,Aca,Ack,SID,R,Na) :=
 state_bob(SNj,BS,Ui,SKubs,H,1,Cat,Ta,Pt,X,Qa,Dummy_R,Dummy_Na,Zr,Yr,Z1r,MAC1,MAC2,Ca,Ea,Q,P,Aca,Ack,SID).
 iknows(pair(Ui,pair(SNj,apply(H,pair(R,pair(Na,Aca))))))
 =>
 state_bob(SNj,BS,Ui,SKubs,H,2,Cat,Ta,Pt,X,Qa,R,Na,Zr,Yr,Z1r,MAC1,MAC2,Ca,Ea,Q,P,Aca,Ack,SID).
 iknows(Ack).
 request(Ui,SNj,alice_bob,Na,SID)


section properties:

property secrecy_of_sub1 (MGoal,ASGoal) :=
 [] ((secret(MGoal,sub1,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_sub2 (MGoal,ASGoal) :=
 [] ((secret(MGoal,sub2,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property authentication_on_alice_bob (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,alice_bob,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,alice_bob,MGoal))
     /\ ((request(A1Goal,A2Goal,alice_bob,MGoal,SID1)
           /\ request(A1Goal,A2Goal,alice_bob,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_bob_alice (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,bob_alice,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,bob_alice,MGoal))
     /\ ((request(A1Goal,A2Goal,bob_alice,MGoal,SID1)
           /\ request(A1Goal,A2Goal,bob_alice,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state secrecy_of_sub1 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sub1,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_sub2 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sub2,ASGoal) &
 not(contains(i,ASGoal))

attack_state authentication_on_alice_bob (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,alice_bob,MGoal,SID) &
 not(witness(A2Goal,A1Goal,alice_bob,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_alice_bob (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,alice_bob,MGoal,SID1).
 request(A1Goal,A2Goal,alice_bob,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_bob_alice (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,bob_alice,MGoal,SID) &
 not(witness(A2Goal,A1Goal,bob_alice,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_bob_alice (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,bob_alice,MGoal,SID1).
 request(A1Goal,A2Goal,bob_alice,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

