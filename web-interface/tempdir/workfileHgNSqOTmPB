role initiator(A,B: agent, M:text, SND, RCV: channel(dy)) played_by A
def=
  local State:nat
  init State:= 0
  transition
	1. State = 0 /\ RCV(start)  =|> State' := 2 /\ SND(M) /\ secret(M,sec1,{A,B}) 
end role

role responder(A,B: agent, M:text, SND, RCV: channel(dy)) played_by B
def=
   local State:nat
   init State:= 1
   transition
	1. State = 1 /\ RCV(M) =|> State':=3
end role

role session (A,B: agent,M:text)
def=
  local SA, SB, RA, RB: channel (dy)
  composition
	initiator(A,B,M,SA,RA) /\ responder(A,B,M,SB,RB)
end role

role environment()
def=
  const a,b: agent,
        m1,m2:text,
        sec1: protocol_id
  intruder_knowledge = {a,b}
  composition
	session(a,b,m1) 
     /\ session(b,a,m2)
	
end role

goal
  secrecy_of sec1
end goal

environment()



