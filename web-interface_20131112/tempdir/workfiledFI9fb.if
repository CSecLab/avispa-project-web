%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfiledFI9fb

section signature:

state_client: agent * agent * agent * hash_func * hash_func * hash_func * hash_func * hash_func * symmetric_key * nat * symmetric_key * text * text * text * text * text * text * text * text * text * text * text * text * text * text * set(agent) * nat -> fact


section types:

set_174, set_173, set_171, set_170, set_169, set_167, set_166, set_165, set_163, set_162, set_160, set_148: set
State, 3, 15, 11, 7, Dummy_State, SID, SID2, SID1, 2, 1, 0: nat
Rs, P, dummy_sk, p, PW: symmetric_key
Set_79, Dummy_Set_40, ASGoal, Set_40, Set_114: set(agent)
na, sec_kgs2, sec_s, ng, sec_kas1, sec_a, sec_pw, ns, sec_ksa2, sec_b: protocol_id
Minus, Union, Pred, H1, H2, minus, union, pred, h1, h2: hash_func
Constant, dummy_msg, MGoal, start: message
S, G, A, s, A2Goal, A1Goal, a, g, i: agent
TS6, TS5, RaPs, Cjs, Ksa, Rb, Pgwn, Pj, DIDi, DIDj, SIDj, PKSi, PKSj, PKSg, IDi, TEi, TS4, RaP, Cj, Kgs, Dummy_Kas, Dummy_Ra, Dummy_PKSi, Dummy_DIDi, Dummy_Pi, dummy_nonce, Ra, Kas, Pi, Gi: text


section inits:

initial_state init1 := 
 iknows(start).
 iknows(a).
 iknows(g).
 iknows(s).
 iknows(h1).
 iknows(h2).
 iknows(minus).
 iknows(union).
 iknows(pred).
 iknows(p).
 iknows(i).
 state_client(a,g,i,h1,h2,minus,union,pred,p,0,dummy_sk,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_148,3).
 state_client(g,a,i,h1,h2,minus,union,pred,p,0,dummy_sk,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_163,7).
 state_client(g,s,i,h1,h2,minus,union,pred,p,0,dummy_sk,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_167,11).
 state_client(s,g,i,h1,h2,minus,union,pred,p,0,dummy_sk,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_171,15)


section rules:

step step_0 (A,G,S,H1,H2,Minus,Union,Pred,P,PW,Dummy_Pi,Dummy_DIDi,SIDj,Dummy_PKSi,PKSj,Gi,IDi,TEi,TS4,TS6,Dummy_Ra,Rb,Kas,Pgwn,Set_40,SID,Ra) :=
 state_client(A,G,S,H1,H2,Minus,Union,Pred,P,0,PW,Dummy_Pi,Dummy_DIDi,SIDj,Dummy_PKSi,PKSj,Gi,IDi,TEi,TS4,TS6,Dummy_Ra,Rb,Kas,Pgwn,Set_40,SID).
 iknows(start)
=[exists Ra]=>
 state_client(A,G,S,H1,H2,Minus,Union,Pred,P,1,PW,apply(H2,pair(IDi,pair(TEi,pair(TS4,apply(Pred,pair(Ra,P)))))),apply(Union,pair(apply(Minus,pair(Gi,apply(H2,apply(H1,PW)))),pair(apply(H2,IDi),apply(H2,TS4)))),SIDj,apply(Union,pair(apply(Minus,pair(apply(Union,pair(apply(Pred,pair(Ra,P)),Gi)),apply(H2,apply(H1,PW)))),apply(H2,pair(IDi,TS4)))),PKSj,Gi,IDi,TEi,TS4,TS6,Ra,Rb,Kas,Pgwn,Set_40,SID).
 iknows(apply(H2,pair(IDi,pair(TEi,pair(TS4,apply(Pred,pair(Ra,P))))))).
 secret(Ra,sec_a,A)

step step_1 (A,G,S,H1,H2,Minus,Union,Pred,P,PW,Pi,DIDi,SIDj,PKSi,PKSj,Gi,IDi,TEi,TS4,TS6,Ra,Rb,Dummy_Kas,Pgwn,Dummy_Set_40,SID) :=
 state_client(A,G,S,H1,H2,Minus,Union,Pred,P,1,PW,Pi,DIDi,SIDj,PKSi,PKSj,Gi,IDi,TEi,TS4,TS6,Ra,Rb,Dummy_Kas,Pgwn,Dummy_Set_40,SID).
 iknows(pair(PKSj,pair(TS6,pair(apply(H1,SIDj),apply(H2,pair(apply(H1,SIDj),pair(TS6,pair(apply(Pred,pair(Ra,P)),apply(Minus,pair(PKSj,pair(apply(Pred,pair(Ra,P)),apply(H2,TS6))))))))))))
 =>
 state_client(A,G,S,H1,H2,Minus,Union,Pred,P,2,PW,Pi,DIDi,SIDj,PKSi,PKSj,Gi,IDi,TEi,TS4,TS6,Ra,Rb,apply(H2,pair(apply(Pred,pair(Ra,P)),pair(apply(Minus,pair(PKSj,pair(apply(Pred,pair(Ra,P)),apply(H2,TS6)))),Pgwn))),Pgwn,Dummy_Set_40,SID).
 secret(PW,sec_pw,A).
 secret(apply(H2,pair(apply(Pred,pair(Ra,P)),pair(apply(Minus,pair(PKSj,pair(apply(Pred,pair(Ra,P)),apply(H2,TS6)))),Pgwn))),sec_kas1,Dummy_Set_40).
 request(A,G,ng,Ra,SID).
 request(A,G,ng,PW,SID).
 contains(A,Dummy_Set_40).
 contains(G,Dummy_Set_40).
 contains(S,Dummy_Set_40)


section properties:

property secrecy_of_sec_kas1 (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_kas1,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_sec_kgs2 (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_kgs2,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_sec_a (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_a,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_sec_s (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_s,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_sec_pw (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_pw,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_sec_b (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_b,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_sec_ksa2 (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_ksa2,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property authentication_on_na (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,na,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,na,MGoal))
     /\ ((request(A1Goal,A2Goal,na,MGoal,SID1)
           /\ request(A1Goal,A2Goal,na,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_ng (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,ng,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,ng,MGoal))
     /\ ((request(A1Goal,A2Goal,ng,MGoal,SID1)
           /\ request(A1Goal,A2Goal,ng,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_ns (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,ns,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,ns,MGoal))
     /\ ((request(A1Goal,A2Goal,ns,MGoal,SID1)
           /\ request(A1Goal,A2Goal,ns,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state secrecy_of_sec_kas1 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_kas1,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_sec_kgs2 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_kgs2,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_sec_a (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_a,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_sec_s (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_s,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_sec_pw (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_pw,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_sec_b (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_b,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_sec_ksa2 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_ksa2,ASGoal) &
 not(contains(i,ASGoal))

attack_state authentication_on_na (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,na,MGoal,SID) &
 not(witness(A2Goal,A1Goal,na,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_na (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,na,MGoal,SID1).
 request(A1Goal,A2Goal,na,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_ng (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,ng,MGoal,SID) &
 not(witness(A2Goal,A1Goal,ng,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_ng (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,ng,MGoal,SID1).
 request(A1Goal,A2Goal,ng,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_ns (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,ns,MGoal,SID) &
 not(witness(A2Goal,A1Goal,ns,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_ns (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,ns,MGoal,SID1).
 request(A1Goal,A2Goal,ns,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

