role smart_meter (A,B,C			:agent,				%A:Smart meter, B:IDS Sensor, C:Control center
				SK				:symmetric_key,		%session key
				H				:hash_func,			%One-way hash function
				Ppub			:public_key,		%public key of Control center
				G				:text,
				SND,RCV			:channel(dy))
played_by A
def=
	local 
			State				:nat						%Natural number
			MIDi				:text						%ID of Smart meter
			Ra					:text						%Random variable
			D,C,SMi				:text
	const A_B, B_C, C_B, B_A	:protocol_id
	init state:=0
	transition
1.	State=0	 	/\	RCV(Ppub)=|>							%get public key of control center
	State':=1	/\	Ra':=new()								%a
				/\	C':=exp(Ppub,Ra')						%(g^Pr)^a=(g^a)^Pr=D^Pr
				/\	D':=exp(G,Ra')							%g^a
				/\	SMi':=xor(MIDi',H(C'))					%masked ID
				/\	K':=H(MIDi'.C'.D')
				/\	secret({Ra',C',MIDi'},A_B,A)
				/\	SND(SMi'.K'.D')
				
end role
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
role IDS_sensor (A,B,C			:agent,						%A:Smart meter, B:IDS Sensor, C:Control center
				Sj				:symmetric_key,				%shared key between sensor and control center
				H				:hash_func,					%One-way hash function
				Ppub			:public_key,				%public key of Control center
				G				:text,
				SND,RCV			:channel(dy))
played_by B
def=
	local 
			State				:nat						%Natural number
			SIDi				:text						%ID of IDS Sensor
			Rb					:text						%Random variable
			F,E,X				:text
	const A_B, B_C, C_B, B_A	:protocol_id
	init state:=0
	transition
1.	State=0	 	/\	RCV(Ppub)=|>							%get public key of control center
				/\	RCV(SMi'.K'.D')				
	State':=1	/\	Rb':=new()								%b
				/\	E':=exp(Ppub,Rb')						%Ppub^b=(g^Pr)^b=(g^b)^Pr=F^Pr
				/\	F':=exp(G,Rb')							%g^b
				/\	secret({Rb',E'},B_C,B)
				/\	X':=H(SIDi'.E'.F'.SMi'.D'.K'.Sj)
				/\	SND({SIDi'.F'.X'.SMi'.D'.K'}_Sj)
				
end role
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
role Control_center(A,B,C		:agent,						%A:Smart meter, B:IDS Sensor, C:Control center
				Sj				:symmetric_key,				%session key
				H				:hash_func,					%One-way hash function
				Ppub			:public_key,				%public key of Control center
				G				:text,
				SND,RCV			:channel(dy))
played_by C
def=
	local 
			State				:nat						%Natural number
			IDcs				:text						%ID of Control center
			Pr					:text						%Private key of control center
			D,C,SMi				:text
	const A_B, B_C, C_B, B_A	:protocol_id
	init state:=0
	transition
1.	State=0	 	/\	RCV(start)=|>							%Start
	State':=1	/\	Ppub:=exp(G,Pr)							%g^Pr
				/\	SND(Ppub)
2.	State=1		/\	RCV({SIDi'.F'.X'.SMi'.D'.K'}_Sj)=|>				
				/\	C':=exp(D',Pr')							%(g^a)^Pr
				/\	E':=exp(F',Pr')							%(g^b)^Pr
				/\	SMi':=xor(MIDi',H(C'))					%masked ID
				/\	K':=H(MIDi'.C'.D')
				/\	secret({Ra',C',MIDi'},A_B,A)
				/\	SND(SMi'.K'.D')
				
end role