%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfile0cY76b

section signature:

state_sed2: agent * agent * hash_func * hash_func * symmetric_key * symmetric_key * text * text * text * text * nat * text * text * text * text * public_key * public_key * symmetric_key * nat -> fact
state_sed1: agent * agent * hash_func * hash_func * symmetric_key * symmetric_key * text * text * text * text * nat * text * text * text * text * public_key * public_key * symmetric_key * set(agent) * nat -> fact


section types:

mac_v, mac_u, link_key, cert_v, cert_u: protocol_id
MGoal, start: message
ASGoal, Set_37, Dummy_Set_37: set(agent)
mac, ecc, MAC, ECC: hash_func
ktcl, kn, Kl, Knwk, Ktcl, Dummy_Kl, dummy_sk: symmetric_key
Eu, Ev, Dummy_Ev, Dummy_Eu, dummy_pk: public_key
pu, pv, cu, cv, ca, mu, mv, Cu, EPv, MACu, MACv, Cv, Pv, CA, Mv, Dummy_EPv, EPu, Dummy_Cu, Dummy_MACv, Pu, Dummy_MACu, Mu, Dummy_EPu, Dummy_Cv, dummy_nonce: text
set_104: set
A2Goal, A1Goal, u, v, U, V, i: agent
7, 5, State, 8, 6, 3, 4, 2, 1, 0, SID, Dummy_State, SID2, SID1: nat


section inits:

initial_state init1 := 
 iknows(start).
 iknows(u).
 iknows(v).
 iknows(mac).
 iknows(ecc).
 iknows(ca).
 iknows(cu).
 iknows(cv).
 iknows(pu).
 iknows(pv).
 iknows(mu).
 iknows(mv).
 iknows(i).
 state_sed1(u,v,mac,ecc,kn,ktcl,cu,pu,ca,mu,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_pk,dummy_pk,dummy_sk,set_104,3).
 state_sed2(v,u,mac,ecc,kn,ktcl,cv,pv,ca,mv,1,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_pk,dummy_pk,dummy_sk,4)


section rules:

step step_0 (U,V,MAC,ECC,Knwk,Ktcl,Cu,Pu,CA,Mu,Cv,EPu,MACu,MACv,Eu,Ev,Kl,Set_37,SID) :=
 state_sed1(U,V,MAC,ECC,Knwk,Ktcl,Cu,Pu,CA,Mu,0,Cv,EPu,MACu,MACv,Eu,Ev,Kl,Set_37,SID).
 iknows(start)
 =>
 state_sed1(U,V,MAC,ECC,Knwk,Ktcl,Cu,Pu,CA,Mu,2,Cv,EPu,MACu,MACv,Eu,Ev,Kl,Set_37,SID).
 iknows(scrypt(Knwk,Cu)).
 witness(U,V,cert_u,Cu)

step step_1 (U,V,MAC,ECC,Knwk,Ktcl,Cu,Pu,CA,Mu,Dummy_Cv,Dummy_EPu,MACu,MACv,Dummy_Eu,Ev,Kl,Set_37,SID,Cv,EPu,Eu) :=
 state_sed1(U,V,MAC,ECC,Knwk,Ktcl,Cu,Pu,CA,Mu,2,Dummy_Cv,Dummy_EPu,MACu,MACv,Dummy_Eu,Ev,Kl,Set_37,SID).
 iknows(scrypt(Knwk,Cv))
=[exists EPu,Eu]=>
 state_sed1(U,V,MAC,ECC,Knwk,Ktcl,Cu,Pu,CA,Mu,4,Cv,EPu,MACu,MACv,Eu,Ev,Kl,Set_37,SID).
 request(U,V,cert_v,Dummy_Cv,SID).
 iknows(scrypt(Knwk,Eu))

step step_2 (U,V,MAC,ECC,Knwk,Ktcl,Cu,Pu,CA,Mu,Cv,EPu,Dummy_MACu,MACv,Eu,Dummy_Ev,Dummy_Kl,Dummy_Set_37,SID,Ev) :=
 state_sed1(U,V,MAC,ECC,Knwk,Ktcl,Cu,Pu,CA,Mu,4,Cv,EPu,Dummy_MACu,MACv,Eu,Dummy_Ev,Dummy_Kl,Dummy_Set_37,SID).
 iknows(scrypt(Knwk,Ev))
 =>
 state_sed1(U,V,MAC,ECC,Knwk,Ktcl,Cu,Pu,CA,Mu,6,Cv,EPu,apply(MAC,pair(apply(ECC,pair(Pu,pair(Eu,pair(EPu,pair(Cv,pair(Dummy_Ev,CA)))))),pair(pair(Mu,pair(U,pair(V,Eu))),Dummy_Ev))),MACv,Eu,Ev,apply(ECC,pair(Pu,pair(Eu,pair(EPu,pair(Cv,pair(Dummy_Ev,CA)))))),Dummy_Set_37,SID).
 iknows(scrypt(Knwk,Dummy_MACu)).
 secret(apply(ECC,pair(Pu,pair(Eu,pair(EPu,pair(Cv,pair(Dummy_Ev,CA)))))),link_key,Dummy_Set_37).
 witness(U,V,mac_u,Dummy_MACu).
 contains(U,Dummy_Set_37).
 contains(V,Dummy_Set_37)

step step_3 (U,V,MAC,ECC,Knwk,Ktcl,Cu,Pu,CA,Mu,Cv,EPu,MACu,Dummy_MACv,Eu,Ev,Kl,Set_37,SID,MACv) :=
 state_sed1(U,V,MAC,ECC,Knwk,Ktcl,Cu,Pu,CA,Mu,6,Cv,EPu,MACu,Dummy_MACv,Eu,Ev,Kl,Set_37,SID).
 iknows(scrypt(Knwk,MACv))
 =>
 state_sed1(U,V,MAC,ECC,Knwk,Ktcl,Cu,Pu,CA,Mu,8,Cv,EPu,MACu,MACv,Eu,Ev,Kl,Set_37,SID).
 request(U,V,mac_v,Dummy_MACv,SID)

step step_4 (V,U,MAC,ECC,Knwk,Ktcl,Cv,Pv,CA,Mv,Dummy_Cu,EPv,MACu,MACv,Eu,Ev,Kl,SID,Cu) :=
 state_sed2(V,U,MAC,ECC,Knwk,Ktcl,Cv,Pv,CA,Mv,1,Dummy_Cu,EPv,MACu,MACv,Eu,Ev,Kl,SID).
 iknows(scrypt(Knwk,Cu))
 =>
 state_sed2(V,U,MAC,ECC,Knwk,Ktcl,Cv,Pv,CA,Mv,3,Cu,EPv,MACu,MACv,Eu,Ev,Kl,SID).
 iknows(scrypt(Knwk,Cv)).
 witness(V,U,cert_v,Cv)

step step_5 (V,U,MAC,ECC,Knwk,Ktcl,Cv,Pv,CA,Mv,Cu,Dummy_EPv,MACu,MACv,Dummy_Eu,Dummy_Ev,Kl,SID,EPv,Eu,Ev) :=
 state_sed2(V,U,MAC,ECC,Knwk,Ktcl,Cv,Pv,CA,Mv,3,Cu,Dummy_EPv,MACu,MACv,Dummy_Eu,Dummy_Ev,Kl,SID).
 iknows(scrypt(Knwk,Eu))
=[exists EPv,Ev]=>
 state_sed2(V,U,MAC,ECC,Knwk,Ktcl,Cv,Pv,CA,Mv,5,Cu,EPv,MACu,MACv,Eu,Ev,Kl,SID).
 iknows(scrypt(Knwk,Ev))

step step_6 (V,U,MAC,ECC,Knwk,Ktcl,Cv,Pv,CA,Mv,Cu,EPv,Dummy_MACu,Dummy_MACv,Eu,Ev,Dummy_Kl,SID,MACu) :=
 state_sed2(V,U,MAC,ECC,Knwk,Ktcl,Cv,Pv,CA,Mv,5,Cu,EPv,Dummy_MACu,Dummy_MACv,Eu,Ev,Dummy_Kl,SID).
 iknows(scrypt(Knwk,MACu))
 =>
 state_sed2(V,U,MAC,ECC,Knwk,Ktcl,Cv,Pv,CA,Mv,7,Cu,EPv,MACu,apply(MAC,pair(Dummy_Kl,pair(pair(Mv,pair(U,pair(V,Eu))),Ev))),Eu,Ev,apply(ECC,pair(Pv,pair(Ev,pair(EPv,pair(Cu,pair(Eu,CA)))))),SID).
 request(V,U,mac_u,MACu,SID).
 iknows(scrypt(Knwk,Dummy_MACv)).
 witness(V,U,mac_v,apply(MAC,pair(Dummy_Kl,pair(pair(Mv,pair(U,pair(V,Eu))),Ev))))


section properties:

property secrecy_of_link_key (MGoal,ASGoal) :=
 [] ((secret(MGoal,link_key,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property authentication_on_cert_u (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,cert_u,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,cert_u,MGoal))
     /\ ((request(A1Goal,A2Goal,cert_u,MGoal,SID1)
           /\ request(A1Goal,A2Goal,cert_u,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_cert_v (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,cert_v,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,cert_v,MGoal))
     /\ ((request(A1Goal,A2Goal,cert_v,MGoal,SID1)
           /\ request(A1Goal,A2Goal,cert_v,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_mac_u (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,mac_u,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,mac_u,MGoal))
     /\ ((request(A1Goal,A2Goal,mac_u,MGoal,SID1)
           /\ request(A1Goal,A2Goal,mac_u,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_mac_v (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,mac_v,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,mac_v,MGoal))
     /\ ((request(A1Goal,A2Goal,mac_v,MGoal,SID1)
           /\ request(A1Goal,A2Goal,mac_v,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state secrecy_of_link_key (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,link_key,ASGoal) &
 not(contains(i,ASGoal))

attack_state authentication_on_cert_u (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,cert_u,MGoal,SID) &
 not(witness(A2Goal,A1Goal,cert_u,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_cert_u (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,cert_u,MGoal,SID1).
 request(A1Goal,A2Goal,cert_u,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_cert_v (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,cert_v,MGoal,SID) &
 not(witness(A2Goal,A1Goal,cert_v,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_cert_v (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,cert_v,MGoal,SID1).
 request(A1Goal,A2Goal,cert_v,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_mac_u (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,mac_u,MGoal,SID) &
 not(witness(A2Goal,A1Goal,mac_u,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_mac_u (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,mac_u,MGoal,SID1).
 request(A1Goal,A2Goal,mac_u,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_mac_v (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,mac_v,MGoal,SID) &
 not(witness(A2Goal,A1Goal,mac_v,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_mac_v (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,mac_v,MGoal,SID1).
 request(A1Goal,A2Goal,mac_v,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

