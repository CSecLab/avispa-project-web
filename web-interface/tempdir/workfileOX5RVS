role alice (
A, B: agent,
Pa, Pb : public_key,
Xa, Xb : symmetric_key,
R, P : text,
U, Sigma, M : message,
H, Conc, Union, Pred: hash_func,
SND, RCV : channel (dy))
played_by A
def=
local State : nat
const aliceid, bobid, tid : protocol_id
init State := 0
transition
1.State = 0/\RCV(start) =|>
State' := 1/\R' := new()
/\secret(R, tid, A)
/\U' :=Pred(R, Pa)
/\Sigma' := Pred(Pred(Xa, Union(R, H(Conc(M, U))), Pb))
/\SND(M.U.Sigma)
end role
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
role bob(
B, A : agent,
Pa, Pb : public_key,
Xa, Xb : symmetric_key,
R, P : text,
U, Sigma, M : message,
H, Conc, Union, Pred : hash_func,
SND, RCV : channel (dy))
played_by B
def=
local State : nat
const aliceid, bobid, tid : protocol_id
init State := 1
transition
1.State =1/\RCV(M.U.Sigma) =|>
State' :=2/\secret (R, tid, A)
/\Sigma' := Pred(Xb, Union(Union, Pred(H(Conc(M, U), Pa))))
end role
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
role session(
A, B : agent,
Xa, Xb : symmetric_key,
R, P : text)
def=
local SND,RCV : channel(dy)
composition
alice(A, B, R, P, SND, RCV, Xa, Xb)
/\ bob(A, B, R, P, SND, RCV, Xa, Xb)
end role
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

role environment()
def=
const a,b : agent,
aliceid, bobid, tid : protocol_id,
xai, xib : symmetric_key,
r, p : text
intruder_knowledge = {a, b, r, p, xai, xib}
composition
session(a, b, r, p, xa, xb,) 
/\ session(i, b, r, p, xb)
/\ session( a, i,  r, p, xa) 
end role
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
goal
secrecy_of tid
authentication_on bob_alice_id
end goal
environment()
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%









