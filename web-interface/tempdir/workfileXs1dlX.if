%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfileXs1dlX

section signature:

state_role_MR: agent * agent * agent * agent * text * symmetric_key * symmetric_key * text * text * text * text * hash_func * text * symmetric_key * nat * text * text * text * text * text * text * text * set(agent) * nat -> fact
state_role_MAP: agent * agent * agent * agent * text * symmetric_key * hash_func * text * text * nat * symmetric_key * text * text * text * text * text * text * text * symmetric_key * symmetric_key * text * text * text * text * text * nat -> fact
state_role_AAA: agent * agent * agent * agent * symmetric_key * symmetric_key * hash_func * text * symmetric_key * symmetric_key * nat * text * text * text * text * text * text * text * text * text * text * text * set(agent) * nat -> fact
state_role_AR2: agent * agent * agent * agent * hash_func * symmetric_key * text * text * nat * symmetric_key * text * text * symmetric_key * text * text * text * text * nat -> fact


section types:

MGoal, start: message
sec_nsk, auth_2, auth_1, sec_n3: protocol_id
const_1, hash_0, H: hash_func
Dummy_NSK, Dummy_SKMapAAA, dummy_sk, skAr2AAA, skMapAAA, nsk, lk, ki, NSK, SKMapAAA, SKAr2AAA, LK, Ki, Dummy_LK, Dummy_Ki: symmetric_key
ASGoal, Set_109, Set_41, Dummy_Set_41, Dummy_Set_109: set(agent)
Dummy_State, 3, SID, SID2, SID1, State, 2, 4, 1, 0, 6, 5: nat
A2Goal, A1Goal, mr, ar2, map, aaa, AAA, MR, MAP, AR2, i: agent
set_219, set_204: set
Dummy_N3, Dummy_NID, Dummy_SIDD, Dummy_N5, Dummy_NLCoA, dummy_nonce, arid, nlcoa, bitI, sid, nid, mapid, mrid, bitR, ack2, ack1, NID, MRID, N3, SIDD, N5, NLCoA, ARID, ACK1, N4, BitR, BitI, N1, MAPID, hack, hi, aaa_auth_rep, aaa_auth_req, N2, ACK2, flback, lbu, fna, iprtadv, rtsolpr, Dummy_ACK2, Dummy_MAPID, Dummy_ACK1, Dummy_N2, Dummy_N4, Dummy_BitR, Dummy_BitI, Dummy_ARID, Dummy_N1, Dummy_MRID: text


section inits:

initial_state init1 := 
 iknows(start).
 iknows(map).
 iknows(aaa).
 iknows(mr).
 iknows(ar2).
 iknows(i).
 state_role_AR2(ar2,map,mr,aaa,const_1,skAr2AAA,ack1,arid,0,dummy_sk,dummy_nonce,dummy_nonce,dummy_sk,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,3).
 state_role_AAA(aaa,map,mr,ar2,lk,skMapAAA,const_1,mapid,skAr2AAA,nsk,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_204,4).
 state_role_MAP(map,aaa,mr,ar2,mapid,skMapAAA,const_1,nlcoa,ack2,0,dummy_sk,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_sk,dummy_sk,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,5).
 state_role_MR(mr,map,aaa,ar2,arid,lk,ki,bitI,bitR,sid,mrid,const_1,nid,nsk,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_219,6)


section rules:

step step_0 (AR2,MAP,MR,AAA,H,SKAr2AAA,ACK1,ARID,Dummy_SKMapAAA,Dummy_NLCoA,Dummy_N5,NSK,Dummy_SIDD,N3,MRID,Dummy_NID,SID,SKMapAAA,NLCoA,N5,SIDD,NID) :=
 state_role_AR2(AR2,MAP,MR,AAA,H,SKAr2AAA,ACK1,ARID,0,Dummy_SKMapAAA,Dummy_NLCoA,Dummy_N5,NSK,Dummy_SIDD,N3,MRID,Dummy_NID,SID).
 iknows(pair(MAP,pair(AR2,pair(SIDD,pair(NID,pair(NLCoA,pair(apply(H,pair(NLCoA,SKMapAAA)),scrypt(SKMapAAA,pair(SIDD,N5)))))))))
 =>
 state_role_AR2(AR2,MAP,MR,AAA,H,SKAr2AAA,ACK1,ARID,1,SKMapAAA,NLCoA,N5,NSK,SIDD,N3,MRID,NID,SID).
 iknows(pair(AR2,pair(AAA,pair(SIDD,pair(NID,pair(NLCoA,pair(apply(H,pair(NLCoA,SKMapAAA)),scrypt(SKMapAAA,pair(SIDD,N5)))))))))

step step_1 (AR2,MAP,MR,AAA,H,SKAr2AAA,ACK1,ARID,SKMapAAA,NLCoA,N5,Dummy_NSK,SIDD,Dummy_N3,MRID,NID,SID,NSK,N3) :=
 state_role_AR2(AR2,MAP,MR,AAA,H,SKAr2AAA,ACK1,ARID,1,SKMapAAA,NLCoA,N5,Dummy_NSK,SIDD,Dummy_N3,MRID,NID,SID).
 iknows(pair(AAA,pair(AR2,pair(SIDD,pair(NID,scrypt(SKAr2AAA,pair(SIDD,pair(NSK,pair(N3,N5)))))))))
 =>
 state_role_AR2(AR2,MAP,MR,AAA,H,SKAr2AAA,ACK1,ARID,2,SKMapAAA,NLCoA,N5,NSK,SIDD,N3,MRID,NID,SID).
 iknows(pair(AR2,pair(MAP,pair(SIDD,pair(NID,pair(apply(H,pair(SIDD,pair(N5,ACK1))),scrypt(NSK,pair(SIDD,pair(N3,ARID)))))))))

step step_2 (AR2,MAP,MR,AAA,H,SKAr2AAA,ACK1,ARID,SKMapAAA,NLCoA,N5,NSK,SIDD,N3,Dummy_MRID,NID,SID,MRID) :=
 state_role_AR2(AR2,MAP,MR,AAA,H,SKAr2AAA,ACK1,ARID,2,SKMapAAA,NLCoA,N5,NSK,SIDD,N3,Dummy_MRID,NID,SID).
 iknows(pair(MR,pair(AR2,pair(SIDD,pair(NID,scrypt(NSK,pair(SIDD,pair(N3,pair(ARID,MRID)))))))))
 =>
 state_role_AR2(AR2,MAP,MR,AAA,H,SKAr2AAA,ACK1,ARID,3,SKMapAAA,NLCoA,N5,NSK,SIDD,N3,MRID,NID,SID)

step step_3 (AAA,MAP,MR,AR2,LK,SKMapAAA,H,MAPID,SKAr2AAA,NSK,Dummy_N1,Dummy_ARID,Dummy_BitI,Dummy_BitR,Dummy_N4,Dummy_MRID,NLCoA,Dummy_N3,Dummy_SIDD,Dummy_N5,Dummy_NID,Set_109,SID,N1,ARID,BitI,BitR,N4,MRID,N3,SIDD,N5,NID) :=
 state_role_AAA(AAA,MAP,MR,AR2,LK,SKMapAAA,H,MAPID,SKAr2AAA,NSK,0,Dummy_N1,Dummy_ARID,Dummy_BitI,Dummy_BitR,Dummy_N4,Dummy_MRID,NLCoA,Dummy_N3,Dummy_SIDD,Dummy_N5,Dummy_NID,Set_109,SID).
 iknows(pair(MAP,pair(AAA,pair(ARID,pair(SIDD,pair(NID,pair(N1,pair(BitI,pair(BitR,pair(apply(H,pair(MRID,pair(SIDD,pair(N1,LK)))),pair(apply(H,pair(BitI,pair(BitR,pair(SIDD,LK)))),scrypt(LK,pair(SIDD,N3))))))))))))).
 request(AAA,MR,auth_1,apply(H,pair(Dummy_MRID,pair(Dummy_SIDD,pair(N1,LK)))),SID)
=[exists N4,N5]=>
 state_role_AAA(AAA,MAP,MR,AR2,LK,SKMapAAA,H,MAPID,SKAr2AAA,NSK,1,N1,ARID,BitI,BitR,N4,MRID,NLCoA,N3,SIDD,N5,NID,Set_109,SID).
 iknows(pair(AAA,pair(MAP,pair(SIDD,pair(NID,pair(N4,scrypt(SKMapAAA,pair(apply(H,pair(MRID,pair(MAPID,pair(SIDD,pair(N4,LK))))),pair(N5,SIDD)))))))))

step step_4 (AAA,MAP,MR,AR2,LK,SKMapAAA,H,MAPID,SKAr2AAA,NSK,N1,ARID,BitI,BitR,N4,MRID,Dummy_NLCoA,N3,SIDD,N5,NID,Dummy_Set_109,SID,NLCoA) :=
 state_role_AAA(AAA,MAP,MR,AR2,LK,SKMapAAA,H,MAPID,SKAr2AAA,NSK,1,N1,ARID,BitI,BitR,N4,MRID,Dummy_NLCoA,N3,SIDD,N5,NID,Dummy_Set_109,SID).
 iknows(pair(AR2,pair(AAA,pair(SIDD,pair(NID,pair(NLCoA,pair(apply(H,pair(NLCoA,SKMapAAA)),scrypt(SKMapAAA,pair(SIDD,N5)))))))))
 =>
 state_role_AAA(AAA,MAP,MR,AR2,LK,SKMapAAA,H,MAPID,SKAr2AAA,NSK,2,N1,ARID,BitI,BitR,N4,MRID,NLCoA,N3,SIDD,N5,NID,Dummy_Set_109,SID).
 iknows(pair(AAA,pair(AR2,pair(SIDD,pair(NID,scrypt(SKAr2AAA,pair(SIDD,pair(NSK,pair(N3,N5))))))))).
 secret(NSK,sec_nsk,Dummy_Set_109).
 contains(MR,Dummy_Set_109).
 contains(AAA,Dummy_Set_109).
 contains(AR2,Dummy_Set_109)

step step_5 (MAP,AAA,MR,AR2,MAPID,SKMapAAA,H,NLCoA,ACK2,Dummy_Ki,Dummy_N1,Dummy_BitI,Dummy_BitR,N5,ACK1,Dummy_ARID,Dummy_N3,NSK,Dummy_LK,Dummy_SIDD,Dummy_MRID,N4,Dummy_N2,Dummy_NID,SID,Ki,N1,BitI,BitR,ARID,N3,LK,SIDD,MRID,N2,NID) :=
 state_role_MAP(MAP,AAA,MR,AR2,MAPID,SKMapAAA,H,NLCoA,ACK2,0,Dummy_Ki,Dummy_N1,Dummy_BitI,Dummy_BitR,N5,ACK1,Dummy_ARID,Dummy_N3,NSK,Dummy_LK,Dummy_SIDD,Dummy_MRID,N4,Dummy_N2,Dummy_NID,SID).
 iknows(pair(MR,pair(MAP,pair(ARID,pair(SIDD,pair(NID,pair(N1,pair(N2,pair(BitI,pair(BitR,pair(apply(H,pair(MRID,pair(SIDD,pair(N1,LK)))),pair(apply(H,pair(MRID,pair(SIDD,pair(N2,Ki)))),pair(apply(H,pair(BitI,pair(BitR,pair(SIDD,LK)))),scrypt(LK,pair(SIDD,N3)))))))))))))))
 =>
 state_role_MAP(MAP,AAA,MR,AR2,MAPID,SKMapAAA,H,NLCoA,ACK2,1,Ki,N1,BitI,BitR,N5,ACK1,ARID,N3,NSK,LK,SIDD,MRID,N4,N2,NID,SID).
 iknows(pair(MAP,pair(AAA,pair(ARID,pair(SIDD,pair(NID,pair(N1,pair(BitI,pair(BitR,pair(apply(H,pair(MRID,pair(SIDD,pair(N1,LK)))),pair(apply(H,pair(BitI,pair(BitR,pair(SIDD,LK)))),scrypt(LK,pair(SIDD,N3)))))))))))))

step step_6 (MAP,AAA,MR,AR2,MAPID,SKMapAAA,H,NLCoA,ACK2,Ki,N1,BitI,BitR,Dummy_N5,ACK1,ARID,N3,NSK,LK,SIDD,MRID,Dummy_N4,N2,NID,SID,N5,N4) :=
 state_role_MAP(MAP,AAA,MR,AR2,MAPID,SKMapAAA,H,NLCoA,ACK2,1,Ki,N1,BitI,BitR,Dummy_N5,ACK1,ARID,N3,NSK,LK,SIDD,MRID,Dummy_N4,N2,NID,SID).
 iknows(pair(AAA,pair(MAP,pair(SIDD,pair(NID,pair(N4,scrypt(SKMapAAA,pair(apply(H,pair(MRID,pair(MAPID,pair(SIDD,pair(N4,LK))))),pair(N5,SIDD)))))))))
 =>
 state_role_MAP(MAP,AAA,MR,AR2,MAPID,SKMapAAA,H,NLCoA,ACK2,2,Ki,N1,BitI,BitR,N5,ACK1,ARID,N3,NSK,LK,SIDD,MRID,N4,N2,NID,SID).
 iknows(pair(MAP,pair(MR,pair(ARID,pair(NLCoA,pair(N4,apply(H,pair(SIDD,pair(apply(H,pair(MRID,pair(MAPID,pair(SIDD,pair(N4,LK))))),NLCoA))))))))).
 witness(MAP,MR,auth_2,apply(H,pair(SIDD,pair(apply(H,pair(MRID,pair(MAPID,pair(SIDD,pair(N4,LK))))),NLCoA)))).
 iknows(pair(MAP,pair(AR2,pair(SIDD,pair(NID,pair(NLCoA,pair(apply(H,pair(NLCoA,SKMapAAA)),scrypt(SKMapAAA,pair(SIDD,N5)))))))))

step step_7 (MAP,AAA,MR,AR2,MAPID,SKMapAAA,H,NLCoA,ACK2,Ki,N1,BitI,BitR,N5,Dummy_ACK1,ARID,N3,Dummy_NSK,LK,SIDD,MRID,N4,N2,NID,SID,ACK1,NSK) :=
 state_role_MAP(MAP,AAA,MR,AR2,MAPID,SKMapAAA,H,NLCoA,ACK2,2,Ki,N1,BitI,BitR,N5,Dummy_ACK1,ARID,N3,Dummy_NSK,LK,SIDD,MRID,N4,N2,NID,SID).
 iknows(pair(AR2,pair(MAP,pair(SIDD,pair(NID,pair(apply(H,pair(SIDD,pair(N5,ACK1))),scrypt(NSK,pair(SIDD,pair(N3,ARID)))))))))
 =>
 state_role_MAP(MAP,AAA,MR,AR2,MAPID,SKMapAAA,H,NLCoA,ACK2,3,Ki,N1,BitI,BitR,N5,ACK1,ARID,N3,NSK,LK,SIDD,MRID,N4,N2,NID,SID).
 iknows(pair(MAP,pair(MR,pair(SIDD,pair(NID,pair(scrypt(NSK,pair(SIDD,pair(N3,ARID))),apply(H,pair(apply(H,pair(MRID,pair(MAPID,pair(SIDD,pair(N4,LK))))),ACK2))))))))

step step_8 (MAP,AAA,MR,AR2,MAPID,SKMapAAA,H,NLCoA,ACK2,Ki,N1,BitI,BitR,N5,ACK1,ARID,N3,NSK,LK,SIDD,MRID,N4,N2,NID,SID) :=
 state_role_MAP(MAP,AAA,MR,AR2,MAPID,SKMapAAA,H,NLCoA,ACK2,3,Ki,N1,BitI,BitR,N5,ACK1,ARID,N3,NSK,LK,SIDD,MRID,N4,N2,NID,SID).
 iknows(pair(MR,pair(MAP,pair(SIDD,pair(NID,apply(H,pair(SIDD,pair(N2,apply(H,pair(MRID,pair(MAPID,pair(SIDD,pair(N4,LK)))))))))))))
 =>
 state_role_MAP(MAP,AAA,MR,AR2,MAPID,SKMapAAA,H,NLCoA,ACK2,4,Ki,N1,BitI,BitR,N5,ACK1,ARID,N3,NSK,LK,SIDD,MRID,N4,N2,NID,SID)

step step_9 (MR,MAP,AAA,AR2,ARID,LK,Ki,BitI,BitR,SIDD,MRID,H,NID,NSK,Dummy_N1,NLCoA,ACK2,Dummy_N3,MAPID,N4,Dummy_N2,Dummy_Set_41,SID,N1,N3,N2) :=
 state_role_MR(MR,MAP,AAA,AR2,ARID,LK,Ki,BitI,BitR,SIDD,MRID,H,NID,NSK,0,Dummy_N1,NLCoA,ACK2,Dummy_N3,MAPID,N4,Dummy_N2,Dummy_Set_41,SID).
 iknows(start)
=[exists N1,N2,N3]=>
 state_role_MR(MR,MAP,AAA,AR2,ARID,LK,Ki,BitI,BitR,SIDD,MRID,H,NID,NSK,1,N1,NLCoA,ACK2,N3,MAPID,N4,N2,Dummy_Set_41,SID).
 iknows(pair(MR,pair(MAP,pair(ARID,pair(SIDD,pair(NID,pair(N1,pair(N2,pair(BitI,pair(BitR,pair(apply(H,pair(MRID,pair(SIDD,pair(N1,LK)))),pair(apply(H,pair(MRID,pair(SIDD,pair(N2,Ki)))),pair(apply(H,pair(BitI,pair(BitR,pair(SIDD,LK)))),scrypt(LK,pair(SIDD,N3))))))))))))))).
 witness(MR,AAA,auth_1,apply(H,pair(MRID,pair(SIDD,pair(N1,LK))))).
 secret(Dummy_N3,sec_n3,Dummy_Set_41).
 contains(MR,Dummy_Set_41).
 contains(AAA,Dummy_Set_41).
 contains(AR2,Dummy_Set_41)

step step_10 (MR,MAP,AAA,AR2,ARID,LK,Ki,BitI,BitR,SIDD,MRID,H,NID,NSK,N1,Dummy_NLCoA,ACK2,N3,Dummy_MAPID,Dummy_N4,N2,Set_41,SID,NLCoA,MAPID,N4) :=
 state_role_MR(MR,MAP,AAA,AR2,ARID,LK,Ki,BitI,BitR,SIDD,MRID,H,NID,NSK,1,N1,Dummy_NLCoA,ACK2,N3,Dummy_MAPID,Dummy_N4,N2,Set_41,SID).
 iknows(pair(MAP,pair(MR,pair(ARID,pair(NLCoA,pair(N4,apply(H,pair(SIDD,pair(apply(H,pair(MRID,pair(MAPID,pair(SIDD,pair(N4,LK))))),NLCoA))))))))).
 request(MR,MAP,auth_2,apply(H,pair(SIDD,pair(apply(H,pair(MRID,pair(MAPID,pair(SIDD,pair(N4,LK))))),NLCoA))),SID)
 =>
 state_role_MR(MR,MAP,AAA,AR2,ARID,LK,Ki,BitI,BitR,SIDD,MRID,H,NID,NSK,2,N1,NLCoA,ACK2,N3,MAPID,N4,N2,Set_41,SID)

step step_11 (MR,MAP,AAA,AR2,ARID,LK,Ki,BitI,BitR,SIDD,MRID,H,NID,NSK,N1,NLCoA,Dummy_ACK2,N3,MAPID,N4,N2,Set_41,SID,ACK2) :=
 state_role_MR(MR,MAP,AAA,AR2,ARID,LK,Ki,BitI,BitR,SIDD,MRID,H,NID,NSK,2,N1,NLCoA,Dummy_ACK2,N3,MAPID,N4,N2,Set_41,SID).
 iknows(pair(MAP,pair(MR,pair(SIDD,pair(NID,pair(scrypt(NSK,pair(SIDD,pair(N3,ARID))),apply(H,pair(apply(H,pair(MRID,pair(MAPID,pair(SIDD,pair(N4,LK))))),ACK2))))))))
 =>
 state_role_MR(MR,MAP,AAA,AR2,ARID,LK,Ki,BitI,BitR,SIDD,MRID,H,NID,NSK,3,N1,NLCoA,ACK2,N3,MAPID,N4,N2,Set_41,SID).
 iknows(pair(MR,pair(AR2,pair(SIDD,pair(NID,scrypt(NSK,pair(SIDD,pair(N3,pair(ARID,MRID))))))))).
 iknows(pair(MR,pair(MAP,pair(SIDD,pair(NID,apply(H,pair(SIDD,pair(N2,apply(H,pair(MRID,pair(MAPID,pair(SIDD,pair(N4,LK)))))))))))))


section properties:

property authentication_on_auth_1 (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,auth_1,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,auth_1,MGoal))
     /\ ((request(A1Goal,A2Goal,auth_1,MGoal,SID1)
           /\ request(A1Goal,A2Goal,auth_1,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_auth_2 (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,auth_2,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,auth_2,MGoal))
     /\ ((request(A1Goal,A2Goal,auth_2,MGoal,SID1)
           /\ request(A1Goal,A2Goal,auth_2,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property secrecy_of_sec_n3 (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_n3,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_sec_nsk (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_nsk,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))


section attack_states:

attack_state authentication_on_auth_1 (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,auth_1,MGoal,SID) &
 not(witness(A2Goal,A1Goal,auth_1,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_auth_1 (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,auth_1,MGoal,SID1).
 request(A1Goal,A2Goal,auth_1,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_auth_2 (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,auth_2,MGoal,SID) &
 not(witness(A2Goal,A1Goal,auth_2,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_auth_2 (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,auth_2,MGoal,SID1).
 request(A1Goal,A2Goal,auth_2,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state secrecy_of_sec_n3 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_n3,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_sec_nsk (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_nsk,ASGoal) &
 not(contains(i,ASGoal))

