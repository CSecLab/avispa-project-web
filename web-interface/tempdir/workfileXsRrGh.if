%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfileXsRrGh

section signature:

state_sl: agent * agent * hash_func * nat * hash_func * hash_func * hash_func * hash_func * hash_func * text * text * text * text * text * text * text * text * text * text * text * text * text * public_key * set(text) * set(agent) * set(text) * set(agent) * nat -> fact
state_client: agent * agent * hash_func * nat * text * text * text * text * text * text * text * text * text * text * text * text * hash_func * hash_func * hash_func * hash_func * hash_func * public_key * nat -> fact


section types:

MGoal, start: message
sub2, alice_bob_xa, bob_alice_xb, sub1: protocol_id
Set_65, Set_62, Dummy_Set_65, Dummy_Set_62: set(text)
set_136, set_135, set_134, set_133, set_119, set_118, set_117, set_116: set
QA, Dummy_QA, dummy_pk: public_key
Add, Mul, Mac, Demac, Xfun, Hash, dummy_hash: hash_func
p, q, qa, P, Q, EA, Reply, CA, ACA, TA, ZR, YR, ZZR, R, RR, Na, Dummy_Na, Dummy_R, Dummy_ZZR, Dummy_YR, Dummy_ZR, Dummy_EA, Dummy_ACA, Dummy_CA, dummy_nonce: text
State, 7, 1, 0, 6, 4, SID, Dummy_State, 3, SID2, SID1: nat
a, b, A, S, A2Goal, i, A1Goal: agent
Set_66, Set_63, Dummy_Set_66, Dummy_Set_63, ASGoal: set(agent)


section inits:

initial_state init1 := 
 iknows(start).
 iknows(p).
 iknows(q).
 iknows(i).
 state_client(a,b,dummy_hash,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_hash,dummy_hash,dummy_hash,dummy_hash,dummy_hash,dummy_pk,3).
 state_sl(b,a,dummy_hash,0,dummy_hash,dummy_hash,dummy_hash,dummy_hash,dummy_hash,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_pk,set_116,set_117,set_118,set_119,4).
 state_client(a,b,dummy_hash,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_hash,dummy_hash,dummy_hash,dummy_hash,dummy_hash,dummy_pk,6).
 state_sl(b,a,dummy_hash,0,dummy_hash,dummy_hash,dummy_hash,dummy_hash,dummy_hash,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_pk,set_133,set_134,set_135,set_136,7)


section rules:

step step_0 (A,S,Hash,P,Q,Reply,Dummy_CA,Dummy_ACA,TA,ZR,YR,ZZR,R,RR,Na,Add,Mul,Mac,Demac,Xfun,Dummy_QA,SID,CA,ACA,QA) :=
 state_client(A,S,Hash,0,P,Q,Reply,Dummy_CA,Dummy_ACA,TA,ZR,YR,ZZR,R,RR,Na,Add,Mul,Mac,Demac,Xfun,Dummy_QA,SID).
 iknows(start)
=[exists QA,CA,ACA]=>
 state_client(A,S,Hash,1,P,Q,Reply,CA,ACA,TA,ZR,YR,ZZR,R,RR,Na,Add,Mul,Mac,Demac,Xfun,QA,SID).
 iknows(pair(Dummy_CA,Dummy_ACA)).
 iknows(pair(ZZR,pair(YR,apply(Mac,pair(R,Na)))))

step step_1 (S,A,Hash,Add,Mul,Mac,Demac,Xfun,P,Q,Dummy_EA,Reply,CA,ACA,TA,Dummy_ZR,Dummy_YR,Dummy_ZZR,Dummy_R,RR,Dummy_Na,Dummy_QA,Dummy_Set_62,Dummy_Set_63,Dummy_Set_65,Dummy_Set_66,SID,EA,R,Na) :=
 state_sl(S,A,Hash,0,Add,Mul,Mac,Demac,Xfun,P,Q,Dummy_EA,Reply,CA,ACA,TA,Dummy_ZR,Dummy_YR,Dummy_ZZR,Dummy_R,RR,Dummy_Na,Dummy_QA,Dummy_Set_62,Dummy_Set_63,Dummy_Set_65,Dummy_Set_66,SID).
 iknows(pair(CA,ACA))
=[exists Na,R,EA]=>
 state_sl(S,A,Hash,1,Add,Mul,Mac,Demac,Xfun,P,Q,EA,Reply,CA,ACA,TA,apply(Mul,pair(apply(Hash,R),apply(Mul,pair(EA,pair(CA,Q))))),apply(Mul,pair(apply(Hash,R),P)),xor(R,apply(Xfun,apply(Mul,pair(apply(Hash,R),apply(Mul,pair(EA,pair(CA,Q))))))),R,RR,Na,apply(Mul,pair(EA,pair(CA,Q))),Dummy_Set_62,Dummy_Set_63,Dummy_Set_65,Dummy_Set_66,SID).
 secret(Dummy_Set_62,sub1,Dummy_Set_63).
 secret(Dummy_Set_65,sub2,Dummy_Set_66).
 iknows(pair(xor(R,apply(Xfun,apply(Mul,pair(apply(Hash,R),apply(Mul,pair(EA,pair(CA,Q))))))),pair(apply(Mul,pair(apply(Hash,R),P)),apply(Mac,pair(R,Na))))).
 witness(S,A,alice_bob_xa,xor(R,apply(Xfun,apply(Mul,pair(apply(Hash,R),apply(Mul,pair(EA,pair(CA,Q)))))))).
 contains(R,Dummy_Set_62).
 contains(S,Dummy_Set_63).
 contains(A,Dummy_Set_63).
 contains(Na,Dummy_Set_65).
 contains(S,Dummy_Set_66).
 contains(A,Dummy_Set_66)


section properties:

property secrecy_of_sub1 (MGoal,ASGoal) :=
 [] ((secret(MGoal,sub1,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_sub2 (MGoal,ASGoal) :=
 [] ((secret(MGoal,sub2,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property authentication_on_alice_bob_xa (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,alice_bob_xa,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,alice_bob_xa,MGoal))
     /\ ((request(A1Goal,A2Goal,alice_bob_xa,MGoal,SID1)
           /\ request(A1Goal,A2Goal,alice_bob_xa,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_bob_alice_xb (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,bob_alice_xb,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,bob_alice_xb,MGoal))
     /\ ((request(A1Goal,A2Goal,bob_alice_xb,MGoal,SID1)
           /\ request(A1Goal,A2Goal,bob_alice_xb,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state secrecy_of_sub1 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sub1,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_sub2 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sub2,ASGoal) &
 not(contains(i,ASGoal))

attack_state authentication_on_alice_bob_xa (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,alice_bob_xa,MGoal,SID) &
 not(witness(A2Goal,A1Goal,alice_bob_xa,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_alice_bob_xa (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,alice_bob_xa,MGoal,SID1).
 request(A1Goal,A2Goal,alice_bob_xa,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_bob_alice_xb (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,bob_alice_xb,MGoal,SID) &
 not(witness(A2Goal,A1Goal,bob_alice_xb,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_bob_alice_xb (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,bob_alice_xb,MGoal,SID1).
 request(A1Goal,A2Goal,bob_alice_xb,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

