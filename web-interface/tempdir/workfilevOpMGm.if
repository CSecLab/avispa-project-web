%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfilevOpMGm

section signature:

state_server: agent * agent * symmetric_key * hash_func * nat * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * set(text) * set(text) * set(agent) * set(text) * set(text) * nat -> fact
state_user: agent * agent * symmetric_key * hash_func * nat * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * set(text) * set(text) * set(agent) * set(text) * set(text) * nat -> fact


section types:

alice_bob_ti, bob_alice_ts, alice_bob_alpha, bob_alice_beta, subs1, subs2, subs3, subs4, subs5: protocol_id
Set_88, Set_87, Set_85, Set_84, Set_51, Set_50, Set_47, Set_45, Dummy_Set_88, Dummy_Set_87, Dummy_Set_85, Dummy_Set_84, Dummy_Set_51, Dummy_Set_50, Dummy_Set_47, Dummy_Set_45: set(text)
set_156, set_155, set_154, set_153, set_152, set_150, set_149, set_148, set_147, set_146, set_138, set_137, set_136, set_135, set_134, set_118, set_117, set_116, set_115, set_114: set
State, 7, 3, 6, 2, 1, 0, 4, SID, Dummy_State, SID2, SID1: nat
Set_86, Set_48, Dummy_Set_86, Dummy_Set_48, ASGoal: set(agent)
start, MGoal: message
Ti, Ts, M1, M2, Wi, Ds, IDsc, NIDi, Alpha, Beta, Di, Xi, P, Q, IDi, PWi, N, Bi, X, A, SK, Dummy_Ts, Dummy_Beta, Dummy_Ti, Dummy_Alpha, Dummy_Wi, Dummy_A, dummy_nonce, nidi, ti, ts: text
ui, s, Ui, S, A2Goal, A1Goal, i: agent
H, h: hash_func
SKus, skuisj, skus: symmetric_key


section inits:

initial_state init1 := 
 iknows(start).
 iknows(ui).
 iknows(s).
 iknows(h).
 iknows(nidi).
 iknows(ti).
 iknows(ts).
 iknows(i).
 state_user(ui,s,skuisj,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_114,set_115,set_116,set_117,set_118,3).
 state_server(s,ui,skuisj,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_134,set_135,set_136,set_137,set_138,4).
 state_user(ui,s,skuisj,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_146,set_147,set_148,set_149,set_150,6).
 state_server(s,ui,skuisj,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_152,set_153,set_154,set_155,set_156,7)


section rules:

step step_0 (Ui,S,SKus,H,IDi,PWi,N,Bi,X,Dummy_A,SK,NIDi,Alpha,Beta,Di,Xi,P,Q,Ti,Ts,M1,M2,Dummy_Wi,Ds,IDsc,Dummy_Set_45,Dummy_Set_47,Dummy_Set_48,Set_50,Set_51,SID,A) :=
 state_user(Ui,S,SKus,H,0,IDi,PWi,N,Bi,X,Dummy_A,SK,NIDi,Alpha,Beta,Di,Xi,P,Q,Ti,Ts,M1,M2,Dummy_Wi,Ds,IDsc,Dummy_Set_45,Dummy_Set_47,Dummy_Set_48,Set_50,Set_51,SID).
 iknows(start)
=[exists A]=>
 state_user(Ui,S,SKus,H,1,IDi,PWi,N,Bi,X,A,SK,NIDi,Alpha,Beta,Di,Xi,P,Q,Ti,Ts,M1,M2,apply(H,pair(PWi,A)),Ds,IDsc,Dummy_Set_45,Dummy_Set_47,Dummy_Set_48,Set_50,Set_51,SID).
 secret(Dummy_Set_45,subs1,Ui).
 secret(Dummy_Set_47,subs2,Dummy_Set_48).
 iknows(scrypt(SKus,pair(IDi,apply(H,pair(PWi,A))))).
 contains(A,Dummy_Set_45).
 contains(PWi,Dummy_Set_45).
 contains(IDi,Dummy_Set_47).
 contains(Ui,Dummy_Set_48).
 contains(S,Dummy_Set_48)

step step_1 (Ui,S,SKus,H,IDi,PWi,N,Bi,X,Dummy_A,SK,NIDi,Dummy_Alpha,Beta,Di,Xi,P,Q,Dummy_Ti,Ts,M1,M2,Wi,Ds,IDsc,Set_45,Set_47,Set_48,Dummy_Set_50,Dummy_Set_51,SID,A,Alpha,Ti) :=
 state_user(Ui,S,SKus,H,1,IDi,PWi,N,Bi,X,Dummy_A,SK,NIDi,Dummy_Alpha,Beta,Di,Xi,P,Q,Dummy_Ti,Ts,M1,M2,Wi,Ds,IDsc,Set_45,Set_47,Set_48,Dummy_Set_50,Dummy_Set_51,SID).
 iknows(scrypt(SKus,pair(NIDi,pair(xor(apply(H,pair(IDi,pair(N,pair(IDsc,X)))),apply(H,pair(PWi,A))),pair(P,Q)))))
=[exists Alpha,Ti]=>
 state_user(Ui,S,SKus,H,2,IDi,PWi,N,Bi,X,A,SK,NIDi,Alpha,Beta,Di,Xi,P,Q,Ti,Ts,M1,M2,Wi,Ds,IDsc,Set_45,Set_47,Set_48,Dummy_Set_50,Dummy_Set_51,SID).
 secret(Dummy_Set_50,subs3,S).
 secret(Dummy_Set_51,subs4,Ui).
 iknows(pair(NIDi,pair(exp(apply(H,IDi),Alpha),pair(apply(H,pair(NIDi,pair(IDi,pair(exp(apply(H,IDi),Alpha),pair(apply(H,pair(IDi,pair(N,pair(IDsc,X)))),Ti))))),Ti)))).
 witness(Ui,S,alice_bob_ti,Ti).
 witness(Ui,S,alice_bob_alpha,Alpha).
 contains(X,Dummy_Set_50).
 contains(N,Dummy_Set_50).
 contains(IDsc,Dummy_Set_50).
 contains(Alpha,Dummy_Set_51)

step step_2 (Ui,S,SKus,H,IDi,PWi,N,Bi,X,A,SK,NIDi,Dummy_Alpha,Dummy_Beta,Di,Xi,P,Q,Dummy_Ti,Dummy_Ts,M1,M2,Wi,Ds,IDsc,Set_45,Set_47,Set_48,Set_50,Set_51,SID,Alpha,Beta,Ti,Ts) :=
 state_user(Ui,S,SKus,H,2,IDi,PWi,N,Bi,X,A,SK,NIDi,Dummy_Alpha,Dummy_Beta,Di,Xi,P,Q,Dummy_Ti,Dummy_Ts,M1,M2,Wi,Ds,IDsc,Set_45,Set_47,Set_48,Set_50,Set_51,SID).
 iknows(pair(exp(apply(H,IDi),Beta),pair(apply(H,pair(IDi,pair(apply(H,pair(IDi,pair(exp(exp(apply(H,IDi),Alpha),Beta),apply(H,pair(IDi,pair(N,pair(IDsc,X))))))),pair(exp(apply(H,IDi),Alpha),pair(exp(apply(H,IDi),Beta),pair(Ti,Ts)))))),Ts)))
 =>
 state_user(Ui,S,SKus,H,3,IDi,PWi,N,Bi,X,A,SK,NIDi,Alpha,Beta,Di,Xi,P,Q,Ti,Ts,M1,M2,Wi,Ds,IDsc,Set_45,Set_47,Set_48,Set_50,Set_51,SID).
 request(S,Ui,bob_alice_ts,Ts,SID).
 request(S,Ui,bob_alice_beta,Beta,SID)

step step_3 (S,Ui,SKus,H,IDi,PWi,N,Bi,X,Dummy_A,SK,NIDi,Alpha,Beta,Di,Xi,P,Q,Ti,Ts,M1,M2,Wi,Ds,IDsc,Dummy_Set_84,Dummy_Set_85,Dummy_Set_86,Set_87,Set_88,SID,A) :=
 state_server(S,Ui,SKus,H,0,IDi,PWi,N,Bi,X,Dummy_A,SK,NIDi,Alpha,Beta,Di,Xi,P,Q,Ti,Ts,M1,M2,Wi,Ds,IDsc,Dummy_Set_84,Dummy_Set_85,Dummy_Set_86,Set_87,Set_88,SID).
 iknows(scrypt(SKus,pair(IDi,apply(H,pair(PWi,A)))))
 =>
 state_server(S,Ui,SKus,H,1,IDi,PWi,N,Bi,X,A,SK,NIDi,Alpha,Beta,Di,Xi,P,Q,Ti,Ts,M1,M2,Wi,Ds,IDsc,Dummy_Set_84,Dummy_Set_85,Dummy_Set_86,Set_87,Set_88,SID).
 secret(Dummy_Set_84,subs1,Ui).
 secret(Dummy_Set_85,subs2,Dummy_Set_86).
 iknows(scrypt(SKus,pair(NIDi,pair(xor(apply(H,pair(IDi,pair(N,pair(IDsc,X)))),apply(H,pair(PWi,A))),pair(P,Q))))).
 contains(A,Dummy_Set_84).
 contains(PWi,Dummy_Set_84).
 contains(IDi,Dummy_Set_85).
 contains(Ui,Dummy_Set_86).
 contains(S,Dummy_Set_86)

step step_4 (S,Ui,SKus,H,IDi,PWi,N,Bi,X,A,SK,NIDi,Dummy_Alpha,Dummy_Beta,Di,Xi,P,Q,Dummy_Ti,Dummy_Ts,M1,M2,Wi,Ds,IDsc,Set_84,Set_85,Set_86,Dummy_Set_87,Dummy_Set_88,SID,Alpha,Beta,Ti,Ts) :=
 state_server(S,Ui,SKus,H,1,IDi,PWi,N,Bi,X,A,SK,NIDi,Dummy_Alpha,Dummy_Beta,Di,Xi,P,Q,Dummy_Ti,Dummy_Ts,M1,M2,Wi,Ds,IDsc,Set_84,Set_85,Set_86,Dummy_Set_87,Dummy_Set_88,SID).
 iknows(pair(NIDi,pair(exp(apply(H,IDi),Alpha),pair(apply(H,pair(NIDi,pair(IDi,pair(exp(apply(H,IDi),Alpha),pair(apply(H,pair(IDi,pair(N,pair(IDsc,X)))),Ti))))),Ti))))
=[exists Ts,Beta]=>
 state_server(S,Ui,SKus,H,2,IDi,PWi,N,Bi,X,A,SK,NIDi,Alpha,Beta,Di,Xi,P,Q,Ti,Ts,M1,M2,Wi,Ds,IDsc,Set_84,Set_85,Set_86,Dummy_Set_87,Dummy_Set_88,SID).
 secret(Dummy_Set_87,subs3,S).
 secret(Dummy_Set_88,subs5,S).
 iknows(pair(exp(apply(H,IDi),Beta),pair(apply(H,pair(IDi,pair(apply(H,pair(IDi,pair(exp(exp(apply(H,IDi),Alpha),Beta),apply(H,pair(IDi,pair(N,pair(IDsc,X))))))),pair(exp(apply(H,IDi),Alpha),pair(exp(apply(H,IDi),Beta),pair(Ti,Ts)))))),Ts))).
 witness(S,Ui,bob_alice_ts,Ts).
 witness(S,Ui,bob_alice_beta,Beta).
 request(Ui,S,alice_bob_ti,Ti,SID).
 request(Ui,S,alice_bob_alpha,Alpha,SID).
 contains(X,Dummy_Set_87).
 contains(N,Dummy_Set_87).
 contains(IDsc,Dummy_Set_87).
 contains(Beta,Dummy_Set_88)


section properties:

property secrecy_of_subs1 (MGoal,ASGoal) :=
 [] ((secret(MGoal,subs1,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_subs2 (MGoal,ASGoal) :=
 [] ((secret(MGoal,subs2,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_subs3 (MGoal,ASGoal) :=
 [] ((secret(MGoal,subs3,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_subs4 (MGoal,ASGoal) :=
 [] ((secret(MGoal,subs4,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_subs5 (MGoal,ASGoal) :=
 [] ((secret(MGoal,subs5,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property authentication_on_alice_bob_ti (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,alice_bob_ti,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,alice_bob_ti,MGoal))
     /\ ((request(A1Goal,A2Goal,alice_bob_ti,MGoal,SID1)
           /\ request(A1Goal,A2Goal,alice_bob_ti,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_alice_bob_alpha (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,alice_bob_alpha,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,alice_bob_alpha,MGoal))
     /\ ((request(A1Goal,A2Goal,alice_bob_alpha,MGoal,SID1)
           /\ request(A1Goal,A2Goal,alice_bob_alpha,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_bob_alice_ts (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,bob_alice_ts,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,bob_alice_ts,MGoal))
     /\ ((request(A1Goal,A2Goal,bob_alice_ts,MGoal,SID1)
           /\ request(A1Goal,A2Goal,bob_alice_ts,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_bob_alice_beta (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,bob_alice_beta,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,bob_alice_beta,MGoal))
     /\ ((request(A1Goal,A2Goal,bob_alice_beta,MGoal,SID1)
           /\ request(A1Goal,A2Goal,bob_alice_beta,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state secrecy_of_subs1 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,subs1,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_subs2 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,subs2,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_subs3 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,subs3,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_subs4 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,subs4,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_subs5 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,subs5,ASGoal) &
 not(contains(i,ASGoal))

attack_state authentication_on_alice_bob_ti (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,alice_bob_ti,MGoal,SID) &
 not(witness(A2Goal,A1Goal,alice_bob_ti,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_alice_bob_ti (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,alice_bob_ti,MGoal,SID1).
 request(A1Goal,A2Goal,alice_bob_ti,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_alice_bob_alpha (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,alice_bob_alpha,MGoal,SID) &
 not(witness(A2Goal,A1Goal,alice_bob_alpha,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_alice_bob_alpha (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,alice_bob_alpha,MGoal,SID1).
 request(A1Goal,A2Goal,alice_bob_alpha,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_bob_alice_ts (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,bob_alice_ts,MGoal,SID) &
 not(witness(A2Goal,A1Goal,bob_alice_ts,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_bob_alice_ts (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,bob_alice_ts,MGoal,SID1).
 request(A1Goal,A2Goal,bob_alice_ts,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_bob_alice_beta (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,bob_alice_beta,MGoal,SID) &
 not(witness(A2Goal,A1Goal,bob_alice_beta,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_bob_alice_beta (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,bob_alice_beta,MGoal,SID1).
 request(A1Goal,A2Goal,bob_alice_beta,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

