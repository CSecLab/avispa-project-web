%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfileBj6f38

section signature:

state_bob: agent * agent * symmetric_key * hash_func * hash_func * hash_func * hash_func * hash_func * text * nat * nat * nat * nat * nat * nat * nat * nat * nat * nat * set(agent) * set(agent) * set(symmetric_key) * set(agent) * set(agent) * set(nat) * nat -> fact
state_alice: agent * agent * symmetric_key * hash_func * hash_func * hash_func * hash_func * hash_func * text * nat * nat * nat * nat * nat * nat * nat * nat * nat * nat * nat * set(agent) * set(agent) * set(symmetric_key) * nat -> fact


section types:

Set_76, Dummy_Set_76: set(nat)
exsi, pwi1, s_ci_pwi1, k, pksi, s_ci_pksi, ex, pwi, ci_s_pwi: protocol_id
Set_72, Set_37, Dummy_Set_72, Dummy_Set_37: set(symmetric_key)
css, Cs: text
pwii, PWi: symmetric_key
set_159, set_158, set_157, set_156, set_155, set_154, set_152, set_151, set_150, set_148, set_147, set_146, set_145, set_144, set_143, set_142, set_141, set_140, set_127, set_126, set_125, set_124, set_123, set_122, set_109, set_108, set_107: set
H1, H2, H3, H4, H5, dummy_hash: hash_func
5, State, G, Ex, Exsi, Yi, PKi, PKsi, K, Ki, Alpha, 9, 7, 6, 3, 4, Dummy_Alpha, Dummy_Ki, 2, Dummy_K, 1, 0, Dummy_Exsi, SID, Dummy_SK, Dummy_PKsi, Dummy_PKi, SK, Dummy_Yi, Dummy_Ex, Dummy_State, dummy_nat: nat
cii, ss, Ci, S, A2Goal, A1Goal, i: agent
Set_75, Set_74, Set_71, Set_70, Dummy_Set_75, Set_36, Dummy_Set_74, Set_34, Dummy_Set_71, Dummy_Set_70, Dummy_Set_36, Dummy_Set_34, ASGoal: set(agent)
start, MGoal: message


section inits:

initial_state init1 := 
 iknows(start).
 iknows(cii).
 iknows(ss).
 iknows(css).
 iknows(i).
 state_alice(cii,ss,pwii,dummy_hash,dummy_hash,dummy_hash,dummy_hash,dummy_hash,css,0,dummy_nat,dummy_nat,dummy_nat,dummy_nat,dummy_nat,dummy_nat,dummy_nat,dummy_nat,dummy_nat,dummy_nat,set_107,set_108,set_109,3).
 state_bob(ss,cii,pwii,dummy_hash,dummy_hash,dummy_hash,dummy_hash,dummy_hash,css,1,dummy_nat,dummy_nat,dummy_nat,dummy_nat,dummy_nat,dummy_nat,dummy_nat,dummy_nat,dummy_nat,set_122,set_123,set_124,set_125,set_126,set_127,4).
 state_bob(ss,i,pwii,dummy_hash,dummy_hash,dummy_hash,dummy_hash,dummy_hash,css,1,dummy_nat,dummy_nat,dummy_nat,dummy_nat,dummy_nat,dummy_nat,dummy_nat,dummy_nat,dummy_nat,set_143,set_144,set_145,set_146,set_147,set_148,7).
 state_alice(cii,i,pwii,dummy_hash,dummy_hash,dummy_hash,dummy_hash,dummy_hash,css,0,dummy_nat,dummy_nat,dummy_nat,dummy_nat,dummy_nat,dummy_nat,dummy_nat,dummy_nat,dummy_nat,dummy_nat,set_150,set_151,set_152,9)


section rules:

step step_0 (Ci,S,PWi,H1,H2,H3,H4,H5,Cs,G,Dummy_Ex,Dummy_Yi,Exsi,PKi,PKsi,Ki,Alpha,K,SK,Dummy_Set_34,Dummy_Set_36,Dummy_Set_37,SID,Ex) :=
 state_alice(Ci,S,PWi,H1,H2,H3,H4,H5,Cs,0,G,Dummy_Ex,Dummy_Yi,Exsi,PKi,PKsi,Ki,Alpha,K,SK,Dummy_Set_34,Dummy_Set_36,Dummy_Set_37,SID).
 iknows(start)
=[exists Ex]=>
 state_alice(Ci,S,PWi,H1,H2,H3,H4,H5,Cs,2,G,Ex,scrypt(PWi,Ex),Exsi,PKi,PKsi,Ki,Alpha,K,SK,Dummy_Set_34,Dummy_Set_36,Dummy_Set_37,SID).
 iknows(scrypt(PWi,Ex)).
 secret(Dummy_Ex,ex,Dummy_Set_34).
 secret(PWi,pwi,Dummy_Set_36).
 witness(S,Ci,ci_s_pwi,Dummy_Set_37).
 contains(Ci,Dummy_Set_34).
 contains(S,Dummy_Set_34).
 contains(Ci,Dummy_Set_36).
 contains(S,Dummy_Set_36).
 contains(PWi,Dummy_Set_37)

step step_1 (Ci,S,PWi,H1,H2,H3,H4,H5,Cs,G,Ex,Yi,Exsi,Dummy_PKi,Dummy_PKsi,Ki,Alpha,K,SK,Set_34,Set_36,Set_37,SID) :=
 state_alice(Ci,S,PWi,H1,H2,H3,H4,H5,Cs,2,G,Ex,Yi,Exsi,Dummy_PKi,Dummy_PKsi,Ki,Alpha,K,SK,Set_34,Set_36,Set_37,SID).
 iknows(scrypt(PWi,Exsi))
 =>
 state_alice(Ci,S,PWi,H1,H2,H3,H4,H5,Cs,4,G,Ex,Yi,Exsi,apply(H1,pair(Yi,pair(Exsi,Ex))),apply(H2,pair(apply(H1,pair(Yi,pair(Exsi,Ex))),Cs)),Ki,Alpha,K,SK,Set_34,Set_36,Set_37,SID)

step step_2 (Ci,S,PWi,H1,H2,H3,H4,H5,Cs,G,Ex,Yi,Exsi,PKi,PKsi,Ki,Alpha,K,Dummy_SK,Set_34,Set_36,Set_37,SID) :=
 state_alice(Ci,S,PWi,H1,H2,H3,H4,H5,Cs,4,G,Ex,Yi,Exsi,PKi,PKsi,Ki,Alpha,K,Dummy_SK,Set_34,Set_36,Set_37,SID).
 iknows(Ki)
 =>
 state_alice(Ci,S,PWi,H1,H2,H3,H4,H5,Cs,6,G,Ex,Yi,Exsi,PKi,PKsi,Ki,Alpha,K,apply(H4,pair(Yi,pair(Ki,K))),Set_34,Set_36,Set_37,SID)

step step_3 (S,Ci,PWi,H1,H2,H3,H4,H5,Cs,G,Ex,Dummy_Exsi,Yi,PKi,PKsi,K,Ki,Alpha,Dummy_Set_70,Dummy_Set_71,Dummy_Set_72,Set_74,Set_75,Set_76,SID,Exsi) :=
 state_bob(S,Ci,PWi,H1,H2,H3,H4,H5,Cs,1,G,Ex,Dummy_Exsi,Yi,PKi,PKsi,K,Ki,Alpha,Dummy_Set_70,Dummy_Set_71,Dummy_Set_72,Set_74,Set_75,Set_76,SID).
 iknows(start)
=[exists Exsi]=>
 state_bob(S,Ci,PWi,H1,H2,H3,H4,H5,Cs,3,G,Ex,Exsi,Yi,PKi,PKsi,K,Ki,Alpha,Dummy_Set_70,Dummy_Set_71,Dummy_Set_72,Set_74,Set_75,Set_76,SID).
 iknows(scrypt(PWi,Exsi)).
 secret(Dummy_Exsi,exsi,Dummy_Set_70).
 secret(PWi,pwi1,Dummy_Set_71).
 witness(Ci,S,s_ci_pwi1,Dummy_Set_72).
 contains(Ci,Dummy_Set_70).
 contains(S,Dummy_Set_70).
 contains(Ci,Dummy_Set_71).
 contains(S,Dummy_Set_71).
 contains(PWi,Dummy_Set_72)

step step_4 (S,Ci,PWi,H1,H2,H3,H4,H5,Cs,G,Ex,Exsi,Yi,Dummy_PKi,Dummy_PKsi,Dummy_K,Dummy_Ki,Dummy_Alpha,Set_70,Set_71,Set_72,Dummy_Set_74,Dummy_Set_75,Dummy_Set_76,SID,K) :=
 state_bob(S,Ci,PWi,H1,H2,H3,H4,H5,Cs,3,G,Ex,Exsi,Yi,Dummy_PKi,Dummy_PKsi,Dummy_K,Dummy_Ki,Dummy_Alpha,Set_70,Set_71,Set_72,Dummy_Set_74,Dummy_Set_75,Dummy_Set_76,SID).
 iknows(Yi)
=[exists K]=>
 state_bob(S,Ci,PWi,H1,H2,H3,H4,H5,Cs,5,G,Ex,Exsi,Yi,apply(H1,pair(Yi,pair(Exsi,Ex))),apply(H2,pair(apply(H1,pair(Yi,pair(Exsi,Ex))),Cs)),K,scrypt(apply(H2,pair(apply(H1,pair(Yi,pair(Exsi,Ex))),Cs)),pair(K,apply(H5,K))),apply(H3,pair(apply(H2,pair(apply(H1,pair(Yi,pair(Exsi,Ex))),Cs)),pair(S,Cs))),Set_70,Set_71,Set_72,Dummy_Set_74,Dummy_Set_75,Dummy_Set_76,SID).
 iknows(scrypt(apply(H2,pair(apply(H1,pair(Yi,pair(Exsi,Ex))),Cs)),pair(K,apply(H5,K)))).
 secret(Dummy_PKsi,pksi,Dummy_Set_75).
 witness(Ci,S,s_ci_pksi,Dummy_Set_76).
 contains(Ci,Dummy_Set_74).
 contains(S,Dummy_Set_74).
 contains(Ci,Dummy_Set_75).
 contains(S,Dummy_Set_75).
 contains(Dummy_PKsi,Dummy_Set_76)


section properties:

property secrecy_of_ex (MGoal,ASGoal) :=
 [] ((secret(MGoal,ex,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_pwi (MGoal,ASGoal) :=
 [] ((secret(MGoal,pwi,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_exsi (MGoal,ASGoal) :=
 [] ((secret(MGoal,exsi,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_pwi1 (MGoal,ASGoal) :=
 [] ((secret(MGoal,pwi1,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_pksi (MGoal,ASGoal) :=
 [] ((secret(MGoal,pksi,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property weak_authentication_on_ci_s_pwi (A1Goal,A2Goal,MGoal,SID) :=
 [] ((wrequest(A1Goal,A2Goal,ci_s_pwi,MGoal,SID)
      /\ ~ equal(A2Goal,i))
     => witness(A2Goal,A1Goal,ci_s_pwi,MGoal))

property weak_authentication_on_s_ci_pwi1 (A1Goal,A2Goal,MGoal,SID) :=
 [] ((wrequest(A1Goal,A2Goal,s_ci_pwi1,MGoal,SID)
      /\ ~ equal(A2Goal,i))
     => witness(A2Goal,A1Goal,s_ci_pwi1,MGoal))

property weak_authentication_on_s_ci_pksi (A1Goal,A2Goal,MGoal,SID) :=
 [] ((wrequest(A1Goal,A2Goal,s_ci_pksi,MGoal,SID)
      /\ ~ equal(A2Goal,i))
     => witness(A2Goal,A1Goal,s_ci_pksi,MGoal))


section attack_states:

attack_state secrecy_of_ex (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,ex,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_pwi (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,pwi,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_exsi (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,exsi,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_pwi1 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,pwi1,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_pksi (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,pksi,ASGoal) &
 not(contains(i,ASGoal))

attack_state weak_authentication_on_ci_s_pwi (A1Goal,A2Goal,MGoal,SID) :=
 wrequest(A1Goal,A2Goal,ci_s_pwi,MGoal,SID) &
 not(witness(A2Goal,A1Goal,ci_s_pwi,MGoal)) &
 not(equal(A2Goal,i))

attack_state weak_authentication_on_s_ci_pwi1 (A1Goal,A2Goal,MGoal,SID) :=
 wrequest(A1Goal,A2Goal,s_ci_pwi1,MGoal,SID) &
 not(witness(A2Goal,A1Goal,s_ci_pwi1,MGoal)) &
 not(equal(A2Goal,i))

attack_state weak_authentication_on_s_ci_pksi (A1Goal,A2Goal,MGoal,SID) :=
 wrequest(A1Goal,A2Goal,s_ci_pksi,MGoal,SID) &
 not(witness(A2Goal,A1Goal,s_ci_pksi,MGoal)) &
 not(equal(A2Goal,i))

