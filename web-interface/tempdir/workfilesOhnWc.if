%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfilesOhnWc

section signature:

state_b: agent * agent * symmetric_key * symmetric_key * nat * text * text * text * set(agent) * nat -> fact
state_a: agent * agent * symmetric_key * symmetric_key * nat * text * text * text * nat -> fact


section types:

dgst: hash_func
set_70: set
Na, Nb, Msg, Dummy_Msg, Dummy_Nb, Dummy_Na, dummy_nonce: text
5, 3, 1, State, 4, SID, 2, 0, Dummy_State, SID2, SID1: nat
Set_38, Dummy_Set_38, ASGoal: set(agent)
start, MGoal: message
a_b_na, b_a_na, na, nb: protocol_id
A, B, b, A2Goal, A1Goal, a, i: agent
k, K, Ka, Dummy_Ka, Dummy_K, ka: symmetric_key


section inits:

initial_state init1 := 
 iknows(start).
 iknows(i).
 state_a(a,b,k,ka,0,dummy_nonce,dummy_nonce,dummy_nonce,3).
 state_b(b,a,k,ka,1,dummy_nonce,dummy_nonce,dummy_nonce,set_70,4)


section rules:

step step_0 (A,B,K,Ka,Dummy_Na,Nb,Msg,SID,Na) :=
 state_a(A,B,K,Ka,0,Dummy_Na,Nb,Msg,SID).
 iknows(start)
=[exists Na]=>
 state_a(A,B,K,Ka,2,Na,Nb,Msg,SID).
 iknows(Na).
 witness(A,B,b_a_na,Na)

step step_1 (A,B,Dummy_K,Dummy_Ka,Na,Dummy_Nb,Dummy_Msg,SID,K,Nb,Msg) :=
 state_a(A,B,Dummy_K,Dummy_Ka,2,Na,Dummy_Nb,Dummy_Msg,SID).
 iknows(pair(scrypt(Ka,K),Nb))
=[exists Msg]=>
 state_a(A,B,K,pair(apply(dgst,Na),Nb),4,Na,Nb,Msg,SID).
 iknows(scrypt(Dummy_K,Msg)).
 request(A,B,a_b_na,Na,SID)

step step_2 (B,A,Dummy_K,Dummy_Ka,Dummy_Na,Dummy_Nb,Msg,Dummy_Set_38,SID,K,Na,Nb) :=
 state_b(B,A,Dummy_K,Dummy_Ka,1,Dummy_Na,Dummy_Nb,Msg,Dummy_Set_38,SID).
 iknows(Na)
=[exists K,Nb]=>
 state_b(B,A,K,pair(apply(dgst,Na),Nb),3,Na,Nb,Msg,Dummy_Set_38,SID).
 iknows(pair(scrypt(pair(apply(dgst,Na),Nb),K),Nb)).
 secret(K,k,Dummy_Set_38).
 witness(B,A,a_b_na,Na).
 contains(A,Dummy_Set_38).
 contains(B,Dummy_Set_38)

step step_3 (B,A,K,Ka,Na,Nb,Dummy_Msg,Set_38,SID,Msg) :=
 state_b(B,A,K,Ka,3,Na,Nb,Dummy_Msg,Set_38,SID).
 iknows(scrypt(K,Msg))
 =>
 state_b(B,A,K,Ka,5,Na,Nb,Msg,Set_38,SID).
 request(B,A,b_a_na,Na,SID)


section properties:

property secrecy_of_k (MGoal,ASGoal) :=
 [] ((secret(MGoal,k,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property authentication_on_a_b_na (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,a_b_na,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,a_b_na,MGoal))
     /\ ((request(A1Goal,A2Goal,a_b_na,MGoal,SID1)
           /\ request(A1Goal,A2Goal,a_b_na,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_b_a_na (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,b_a_na,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,b_a_na,MGoal))
     /\ ((request(A1Goal,A2Goal,b_a_na,MGoal,SID1)
           /\ request(A1Goal,A2Goal,b_a_na,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state secrecy_of_k (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,k,ASGoal) &
 not(contains(i,ASGoal))

attack_state authentication_on_a_b_na (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,a_b_na,MGoal,SID) &
 not(witness(A2Goal,A1Goal,a_b_na,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_a_b_na (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,a_b_na,MGoal,SID1).
 request(A1Goal,A2Goal,a_b_na,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_b_a_na (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,b_a_na,MGoal,SID) &
 not(witness(A2Goal,A1Goal,b_a_na,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_b_a_na (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,b_a_na,MGoal,SID1).
 request(A1Goal,A2Goal,b_a_na,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

