role alice (A,B : agent,Ka : public_key ,Snd,Rcv : channel (dy)) played_by A def=local State : nat,
Na : text,Nb : text init State := 0 transition
0. State = 0 /\ Rcv(start) =|>
State':= 2 /\Na':=new()/\ Snd(A)
2. State = 2 /\ Rcv(Nb') =|>
State':= 4 /\Snd({A.Nb'.Na'}_Ka)/\witness(A,B,bob_alice_na,Na) 
4.State=4  /\Rcv(Na) =|>
State':=6 /\request (A,B,alice_bob_nb,Nb')
end role
role bob (B,A : agent,Ka:public_key,Snd,Rcv : channel (dy)) played_by B def= local
State : nat,Na : text,Nb : text init State := 1
transition
1. State = 1 /\ Rcv(A) =|>
State':= 3 /\ Nb':= new() /\ Snd(Nb')/\ witness(B,A,alice_bob_nb,Nb)
3. State = 3 /\ Rcv({A.Nb.Na'}_Ka)  =|>
State':= 5 /\ Snd(Na')/\request(B,A,bob_alice_na,Na')
end role
role session (A,B: agent,Ka : public_key) def=
local SA, RA, SB, RB: channel (dy)
composition
alice(A,B,Ka,SA,RA)
/\ bob(B,A,Ka,SB,RB)
end role
role environment() def=
const
a, b, i : agent,
ka, ki : public_key,
bob_alice_na,
alice_bob_nb,
na, nb : protocol_id
intruder_knowledge = {a,b,i,ki,inv(ki)}
composition
session(a,b,ka) 
/\ session(a,i,ka)
/\session(i,b,ki)
end role
goal
authentication_on alice_bob_nb
authentication_on bob_alice_na
end goal
environment()
 