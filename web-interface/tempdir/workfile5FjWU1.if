%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfile5FjWU1

section signature:

state_subject_high: agent * agent * agent * public_key * nat * message * hash_func * apply(hash_func,message) * apply(hash_func,message) * symmetric_key * nat -> fact
state_skh: agent * agent * agent * public_key * nat * message * hash_func * apply(hash_func,message) * symmetric_key * set(agent) * nat -> fact
state_subject_low: agent * agent * agent * public_key * nat * message * hash_func * apply(hash_func,message) * bool * symmetric_key * set(agent) * set(agent) * nat -> fact


section types:

h_b_key, h_b_m_digest, b_h_key, b_h_m_digest, h_a_key, h_a_m_digest: protocol_id
dummy_hash, digest, Hash: hash_func
Dummy_M, dummy_msg, MGoal, m, M, start: message
kap, ki, Kap: public_key
Dummy_State, 3, SID, SID2, SID1, 6, 5, State, 4, 1, 16, 15, 2, 13, 0, 12, 9, 7: nat
set_92, set_91, set_126, set_124, set_123, set_120, set_119, set_118, set_116, set_114, set_113, set_106: set
ASGoal, Set_45, Set_26, Set_23, Dummy_Set_45, Dummy_Set_26, Dummy_Set_23: set(agent)
dummy_sk, k, K, Dummy_K: symmetric_key
A2Goal, A1Goal, a, h, b, A, H, B, i: agent
dummy_bool, false, Network_card_ON, Dummy_Network_card_ON: bool
Digest_received, Digest, Dummy_Digest_received, Dummy_Digest: apply(hash_func,message)


section inits:

initial_state init1 := 
 iknows(start).
 iknows(a).
 iknows(h).
 iknows(b).
 iknows(kap).
 iknows(ki).
 iknows(inv(ki)).
 iknows(i).
 state_subject_low(a,h,b,kap,0,dummy_msg,dummy_hash,dummy_msg,dummy_bool,dummy_sk,set_91,set_92,3).
 state_skh(h,a,b,kap,1,dummy_msg,dummy_hash,dummy_msg,dummy_sk,set_106,4).
 state_subject_high(b,a,h,kap,5,dummy_msg,dummy_hash,dummy_msg,dummy_msg,dummy_sk,5).
 state_subject_low(a,i,b,kap,0,dummy_msg,dummy_hash,dummy_msg,dummy_bool,dummy_sk,set_113,set_114,7).
 state_subject_high(b,a,i,kap,5,dummy_msg,dummy_hash,dummy_msg,dummy_msg,dummy_sk,9).
 state_skh(h,i,b,kap,1,dummy_msg,dummy_hash,dummy_msg,dummy_sk,set_120,12).
 state_subject_high(b,i,h,kap,5,dummy_msg,dummy_hash,dummy_msg,dummy_msg,dummy_sk,13).
 state_subject_low(a,h,i,kap,0,dummy_msg,dummy_hash,dummy_msg,dummy_bool,dummy_sk,set_123,set_124,15).
 state_skh(h,a,i,kap,1,dummy_msg,dummy_hash,dummy_msg,dummy_sk,set_126,16)


section rules:

step step_0 (A,H,B,Kap,Dummy_M,Hash,Dummy_Digest,Dummy_Network_card_ON,Dummy_K,Dummy_Set_23,Dummy_Set_26,SID,M,K) :=
 state_subject_low(A,H,B,Kap,0,Dummy_M,Hash,Dummy_Digest,Dummy_Network_card_ON,Dummy_K,Dummy_Set_23,Dummy_Set_26,SID).
 iknows(start)
=[exists M,K]=>
 state_subject_low(A,H,B,Kap,2,M,Hash,apply(Hash,M),false,K,Dummy_Set_23,Dummy_Set_26,SID).
 iknows(crypt(inv(Kap),pair(A,K))).
 iknows(scrypt(K,pair(A,pair(M,apply(Hash,M))))).
 secret(K,h_a_key,Dummy_Set_23).
 witness(A,B,h_a_key,K).
 secret(pair(M,apply(Hash,M)),h_a_m_digest,Dummy_Set_26).
 witness(A,B,h_a_m_digest,pair(M,apply(Hash,M))).
 contains(A,Dummy_Set_23).
 contains(B,Dummy_Set_23).
 contains(A,Dummy_Set_26).
 contains(B,Dummy_Set_26)

step step_1 (H,A,B,Kap,M,Hash,Digest,Dummy_K,Set_45,SID,K) :=
 state_skh(H,A,B,Kap,1,M,Hash,Digest,Dummy_K,Set_45,SID).
 iknows(crypt(inv(Kap),pair(A,K)))
 =>
 state_skh(H,A,B,Kap,3,M,Hash,Digest,K,Set_45,SID).
 iknows(scrypt(K,pair(A,pair(M,Digest)))).
 request(H,A,b_h_key,K,SID).
 request(H,A,b_h_m_digest,pair(M,Digest),SID)

step step_2 (H,A,B,Kap,M,Hash,Digest,Dummy_K,Dummy_Set_45,SID,K) :=
 state_skh(H,A,B,Kap,3,M,Hash,Digest,Dummy_K,Dummy_Set_45,SID).
 iknows(crypt(inv(Kap),pair(A,K)))
 =>
 state_skh(H,A,B,Kap,4,M,Hash,Digest,K,Dummy_Set_45,SID).
 iknows(scrypt(K,pair(A,pair(M,Digest)))).
 secret(pair(M,Digest),h_a_m_digest,Dummy_Set_45).
 witness(A,B,h_a_m_digest,pair(M,Digest)).
 contains(A,Dummy_Set_45).
 contains(B,Dummy_Set_45)

step step_3 (B,A,H,Kap,M,Hash,Dummy_Digest,Dummy_Digest_received,Dummy_K,SID,K) :=
 state_subject_high(B,A,H,Kap,5,M,Hash,Dummy_Digest,Dummy_Digest_received,Dummy_K,SID).
 iknows(crypt(inv(Kap),pair(A,K)))
 =>
 state_subject_high(B,A,H,Kap,6,M,Hash,apply(Hash,M),Dummy_Digest,K,SID).
 iknows(scrypt(K,pair(A,pair(M,Dummy_Digest)))).
 idequal(Dummy_Digest,apply(Hash,M))


section properties:

property secrecy_of_h_a_key (MGoal,ASGoal) :=
 [] ((secret(MGoal,h_a_key,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_h_a_m_digest (MGoal,ASGoal) :=
 [] ((secret(MGoal,h_a_m_digest,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_h_b_key (MGoal,ASGoal) :=
 [] ((secret(MGoal,h_b_key,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_h_b_m_digest (MGoal,ASGoal) :=
 [] ((secret(MGoal,h_b_m_digest,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property authentication_on_h_a_key (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,h_a_key,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,h_a_key,MGoal))
     /\ ((request(A1Goal,A2Goal,h_a_key,MGoal,SID1)
           /\ request(A1Goal,A2Goal,h_a_key,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_b_h_key (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,b_h_key,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,b_h_key,MGoal))
     /\ ((request(A1Goal,A2Goal,b_h_key,MGoal,SID1)
           /\ request(A1Goal,A2Goal,b_h_key,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_h_a_m_digest (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,h_a_m_digest,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,h_a_m_digest,MGoal))
     /\ ((request(A1Goal,A2Goal,h_a_m_digest,MGoal,SID1)
           /\ request(A1Goal,A2Goal,h_a_m_digest,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_b_h_m_digest (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,b_h_m_digest,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,b_h_m_digest,MGoal))
     /\ ((request(A1Goal,A2Goal,b_h_m_digest,MGoal,SID1)
           /\ request(A1Goal,A2Goal,b_h_m_digest,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state secrecy_of_h_a_key (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,h_a_key,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_h_a_m_digest (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,h_a_m_digest,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_h_b_key (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,h_b_key,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_h_b_m_digest (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,h_b_m_digest,ASGoal) &
 not(contains(i,ASGoal))

attack_state authentication_on_h_a_key (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,h_a_key,MGoal,SID) &
 not(witness(A2Goal,A1Goal,h_a_key,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_h_a_key (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,h_a_key,MGoal,SID1).
 request(A1Goal,A2Goal,h_a_key,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_b_h_key (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,b_h_key,MGoal,SID) &
 not(witness(A2Goal,A1Goal,b_h_key,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_b_h_key (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,b_h_key,MGoal,SID1).
 request(A1Goal,A2Goal,b_h_key,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_h_a_m_digest (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,h_a_m_digest,MGoal,SID) &
 not(witness(A2Goal,A1Goal,h_a_m_digest,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_h_a_m_digest (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,h_a_m_digest,MGoal,SID1).
 request(A1Goal,A2Goal,h_a_m_digest,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_b_h_m_digest (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,b_h_m_digest,MGoal,SID) &
 not(witness(A2Goal,A1Goal,b_h_m_digest,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_b_h_m_digest (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,b_h_m_digest,MGoal,SID1).
 request(A1Goal,A2Goal,b_h_m_digest,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

