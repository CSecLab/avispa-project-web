%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfiletmIPwR

section signature:

state_tpa: agent * agent * agent * agent * message * message * message * message * public_key * public_key * public_key * public_key * hash_func * nat * text * text * nat -> fact
state_doc: agent * agent * agent * agent * message * message * message * message * symmetric_key * public_key * public_key * public_key * public_key * hash_func * nat * text * text * set(agent) * nat -> fact
state_hsp: agent * agent * agent * agent * message * message * message * message * message * symmetric_key * public_key * public_key * public_key * public_key * hash_func * nat * text * text * text * text * set(agent) * nat -> fact
state_patient: agent * agent * agent * agent * message * message * message * message * message * symmetric_key * public_key * public_key * public_key * public_key * hash_func * nat * text * text * set(agent) * nat -> fact


section types:

set_161, set_155, set_148: set
Set_84, Dummy_Set_84, Set_59, Dummy_Set_59, Dummy_Set_29, ASGoal, Set_29: set(agent)
p2, p3, p1: protocol_id
H1, h1: hash_func
Ka, Kb, Kc, Kd, ka, kb, kc, kd: public_key
Sk, sk: symmetric_key
ID_A, ID_B, ID_C, ID_D, MGoal, id_A, id_B, SERVUT, id_C, id_D, servut, start: message
A, B, C, D, a, b, c, d, i: agent
F1, F2, Dummy_Ack, Dummy_F3, Dummy_F2, F3, Dummy_F1, Ack, dummy_nonce: text
9, 2, State, 6, SID, 5, 8, 3, 4, 1, Dummy_State, 7, 0, 10: nat


section inits:

initial_state init1 := 
 iknows(start).
 iknows(a).
 iknows(b).
 iknows(c).
 iknows(d).
 iknows(id_A).
 iknows(id_B).
 iknows(id_C).
 iknows(id_D).
 iknows(h1).
 iknows(i).
 state_patient(a,b,c,d,id_A,id_B,id_C,id_D,servut,sk,ka,kb,kc,kd,h1,0,dummy_nonce,dummy_nonce,set_148,3).
 state_hsp(b,a,c,d,id_A,id_B,id_C,id_D,servut,sk,ka,kb,kc,kd,h1,1,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_155,4).
 state_doc(c,a,b,d,id_A,id_B,id_C,id_D,sk,ka,kb,kc,kd,h1,2,dummy_nonce,dummy_nonce,set_161,5).
 state_tpa(d,a,b,c,id_A,id_B,id_C,id_D,ka,kb,kc,kd,h1,4,dummy_nonce,dummy_nonce,6)


section rules:

step step_0 (A,B,C,D,ID_A,ID_B,ID_C,ID_D,SERVUT,Sk,Ka,Kb,Kc,Kd,H1,Dummy_F1,F3,Dummy_Set_29,SID,F1) :=
 state_patient(A,B,C,D,ID_A,ID_B,ID_C,ID_D,SERVUT,Sk,Ka,Kb,Kc,Kd,H1,0,Dummy_F1,F3,Dummy_Set_29,SID).
 iknows(start)
=[exists F1]=>
 state_patient(A,B,C,D,ID_A,ID_B,ID_C,ID_D,SERVUT,Sk,Ka,Kb,Kc,Kd,H1,6,F1,F3,Dummy_Set_29,SID).
 iknows(pair(ID_A,pair(ID_D,pair(scrypt(Sk,pair(SERVUT,F1)),crypt(inv(Ka),apply(H1,F1)))))).
 secret(F1,p1,Dummy_Set_29).
 contains(A,Dummy_Set_29).
 contains(B,Dummy_Set_29).
 contains(C,Dummy_Set_29)

step step_1 (A,B,C,D,ID_A,ID_B,ID_C,ID_D,SERVUT,Sk,Ka,Kb,Kc,Kd,H1,F1,F3,Set_29,SID) :=
 state_patient(A,B,C,D,ID_A,ID_B,ID_C,ID_D,SERVUT,Sk,Ka,Kb,Kc,Kd,H1,6,F1,F3,Set_29,SID).
 iknows(pair(ID_A,pair(ID_B,pair(ID_C,scrypt(Sk,F3)))))
 =>
 state_patient(A,B,C,D,ID_A,ID_B,ID_C,ID_D,SERVUT,Sk,Ka,Kb,Kc,Kd,H1,7,F1,F3,Set_29,SID)

step step_2 (B,A,C,D,ID_A,ID_B,ID_C,ID_D,SERVUT,Sk,Ka,Kb,Kc,Kd,H1,Dummy_F1,F2,F3,Ack,Set_59,SID,F1) :=
 state_hsp(B,A,C,D,ID_A,ID_B,ID_C,ID_D,SERVUT,Sk,Ka,Kb,Kc,Kd,H1,1,Dummy_F1,F2,F3,Ack,Set_59,SID).
 iknows(pair(ID_A,pair(ID_D,pair(scrypt(Sk,pair(SERVUT,F1)),crypt(inv(Ka),apply(H1,F1))))))
 =>
 state_hsp(B,A,C,D,ID_A,ID_B,ID_C,ID_D,SERVUT,Sk,Ka,Kb,Kc,Kd,H1,3,F1,F2,F3,Ack,Set_59,SID).
 iknows(pair(ID_A,pair(ID_B,scrypt(Sk,Dummy_F1))))

step step_3 (B,A,C,D,ID_A,ID_B,ID_C,ID_D,SERVUT,Sk,Ka,Kb,Kc,Kd,H1,F1,Dummy_F2,Dummy_F3,Ack,Dummy_Set_59,SID,F2,F3) :=
 state_hsp(B,A,C,D,ID_A,ID_B,ID_C,ID_D,SERVUT,Sk,Ka,Kb,Kc,Kd,H1,3,F1,Dummy_F2,Dummy_F3,Ack,Dummy_Set_59,SID).
 iknows(pair(ID_A,pair(ID_C,pair(scrypt(Sk,F2),crypt(inv(Kc),apply(H1,F2))))))
=[exists F3]=>
 state_hsp(B,A,C,D,ID_A,ID_B,ID_C,ID_D,SERVUT,Sk,Ka,Kb,Kc,Kd,H1,5,F1,F2,F3,Ack,Dummy_Set_59,SID).
 iknows(pair(ID_A,pair(ID_B,pair(ID_C,pair(crypt(Kd,F3),crypt(inv(Kb),apply(H1,F3))))))).
 secret(F3,p3,Dummy_Set_59).
 contains(A,Dummy_Set_59).
 contains(B,Dummy_Set_59).
 contains(D,Dummy_Set_59)

step step_4 (B,A,C,D,ID_A,ID_B,ID_C,ID_D,SERVUT,Sk,Ka,Kb,Kc,Kd,H1,F1,F2,F3,Ack,Set_59,SID) :=
 state_hsp(B,A,C,D,ID_A,ID_B,ID_C,ID_D,SERVUT,Sk,Ka,Kb,Kc,Kd,H1,5,F1,F2,F3,Ack,Set_59,SID).
 iknows(Ack)
 =>
 state_hsp(B,A,C,D,ID_A,ID_B,ID_C,ID_D,SERVUT,Sk,Ka,Kb,Kc,Kd,H1,8,F1,F2,F3,Ack,Set_59,SID).
 iknows(pair(ID_A,pair(ID_B,pair(ID_C,scrypt(Sk,F3)))))

step step_5 (C,A,B,D,ID_A,ID_B,ID_C,ID_D,Sk,Ka,Kb,Kc,Kd,H1,F1,Dummy_F2,Dummy_Set_84,SID,F2) :=
 state_doc(C,A,B,D,ID_A,ID_B,ID_C,ID_D,Sk,Ka,Kb,Kc,Kd,H1,2,F1,Dummy_F2,Dummy_Set_84,SID).
 iknows(pair(ID_A,pair(ID_B,scrypt(Sk,F1))))
=[exists F2]=>
 state_doc(C,A,B,D,ID_A,ID_B,ID_C,ID_D,Sk,Ka,Kb,Kc,Kd,H1,9,F1,F2,Dummy_Set_84,SID).
 iknows(pair(ID_A,pair(ID_C,pair(scrypt(Sk,F2),crypt(inv(Kc),apply(H1,F2)))))).
 secret(F2,p2,Dummy_Set_84).
 contains(B,Dummy_Set_84).
 contains(C,Dummy_Set_84)

step step_6 (D,A,B,C,ID_A,ID_B,ID_C,ID_D,Ka,Kb,Kc,Kd,H1,Dummy_F3,Dummy_Ack,SID,F3,Ack) :=
 state_tpa(D,A,B,C,ID_A,ID_B,ID_C,ID_D,Ka,Kb,Kc,Kd,H1,4,Dummy_F3,Dummy_Ack,SID).
 iknows(pair(ID_A,pair(ID_B,pair(ID_C,pair(crypt(Kd,F3),crypt(inv(Kb),apply(H1,F3)))))))
=[exists Ack]=>
 state_tpa(D,A,B,C,ID_A,ID_B,ID_C,ID_D,Ka,Kb,Kc,Kd,H1,10,F3,Ack,SID).
 iknows(Dummy_Ack)


section properties:

property secrecy_of_p1 (MGoal,ASGoal) :=
 [] ((secret(MGoal,p1,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_p2 (MGoal,ASGoal) :=
 [] ((secret(MGoal,p2,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_p3 (MGoal,ASGoal) :=
 [] ((secret(MGoal,p3,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))


section attack_states:

attack_state secrecy_of_p1 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,p1,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_p2 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,p2,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_p3 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,p3,ASGoal) &
 not(contains(i,ASGoal))

