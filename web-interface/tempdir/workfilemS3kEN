role role_MR(MR:agent,MAP:agent,A:agent,HA:agent,AR2:agent,LK:symmetric_key,H:hash_func,Ki:symmetric_key,NSK:symmetric_key,SND,RCV:channel(dy))
played_by MR
def=
	local
		State:nat,N1:text,N2:text,N4:text,N3:text,N7:text,N6:text
	const
		rtsolpr  : text,
		iprtadv  : text,
		fna      : text,
		lbu : text,
		flback:text,
		sid : text,
		nid : text
	init
		State := 0
	transition
		1. State=0 /\ RCV(start) =|> State':=1 /\ N2':=new() /\ N1':=new() /\ N3':=new() /\ SND(rtsolpr (sid.nid.MR.N1'.N2'.{MR.N3'}_LK.H(sid.N1'	.Ki).H(sid.MR.N2'.LK))) 
		/\ witness(MR,A,auth_1,H(sid.MR.N2'.LK))
		5. State=1 /\ RCV(iprtadv(sid.nid.nlcoa.MAP.MR.N4'.H(MR.A.N2'.N4'.LK))) =|> State':=2 
		/\ request(MR,A,auth_2, H(MR.A.N2'.N4'.LK))
		10. State=2 /\ RCV(flback(nid.sid.MR.MAP.{N6'.A}_LK.{N3.AR2}_H(N4'.LK))) =|> State':=3 /\ N7':=new() /\ NSK':=H(N4'.LK) /\ SND(fna(nid.sid.AR2.MR.{sid.N3.N7'.AR2.MR}_NSK')) /\ SND(lbu(nid.sid.MAP.MR.H(sid.N6'))) /\ witness(MR,MAP,auth_3,H(sid.N6'))
end role

role role_MAP(MAP:agent,A:agent,MR:agent,AR2:agent,KAM:symmetric_key,H:hash_func,SND,RCV:channel(dy))
played_by MAP
def=
	local
		State:nat,N1:text,Ki:symmetric_key,N2:text,N4:text,N5:text,NSK:symmetric_key,N3:text,LK:symmetric_key,N6:text
	const	
		rtsolpr  : text,
		iprtadv  : text,
		aaa_auth_req :text,
		lbu : text,
		aaa_auth_rep : text,
		hi :text,
		hack :text,
		flback:text,
		sid : text,
		nid : text,
		nlcoa :text
	init
		State := 0
	transition
		1. State=0 /\ RCV(rtsolpr(sid.nid.MR.N1'.N2'.{MR.N3'}_LK'.H(sid.N1'.Ki').H(sid.MR.N2'.LK'))) =|> State':=1  
		/\ SND(aaa_auth_req(nid.sid.MAP.A.N1'.N2'.{N3'}_LK'.H(N1'.Ki').H(N2'.LK')))
		4. State=1 /\ RCV(aaa_auth_rep(nid.sid.MAP.A.N4'.H(MR.A.N2.N4'.LK).{N5'.A}_KAM)) =|> State':=2 
		/\ SND(iprtadv(sid.nid.nlcoa.MAP.MR.N4'.H(MR.A.N2.N4'.LK))) /\ N6':=new()  /\ SND(hi(MAP.AR2.{N5'.A.MAP.N6'}_KAM))
		9. State=2 /\ RCV(hack(nid.sid.MAP.AR2.{N6.A}_LK.{sid.N3.AR2}_NSK')) =|> State':=3 /\ SND(flback(nid.sid.MR.MAP.{N6.A}_LK.{N3.AR2}_NSK'))
		12. State=3 /\ RCV(lbu(nid.sid.MAP.MR.H(sid.N6'))) =|> State':=4 /\ request(MAP,MR,auth_3,H(sid.N6'))
end role

role role_A(A:agent,LK:symmetric_key,MAP:agent,MR:agent,AR2:agent,HA:agent,KAM:symmetric_key,H:hash_func,KAAR:symmetric_key,KAA:symmetric_key,NSK:symmetric_key,SND,RCV:channel(dy))
played_by A
def=
	local
		State:nat,Ki:symmetric_key,N1:text,N4:text,N2:text,N5:text,N3:text,N6:text
	const
	aaa_auth_req : text	,
	aaa_auth_rep : text,    
	sec_nsk : protocol_id  
	init
		State := 0
	transition
		2. State=0 /\ RCV(aaa_auth_req(nid.sid.MAP.A.N1'.N2'.{N3'}_LK.H(N1'.Ki').H(N2'.LK))) =|> State':=1

		 /\ request(A,MR,auth_1,H(sid.MR.N2'.LK)) /\ N5':=new() /\ N4':=new() /\ NSK':=H(N4'.LK)
		 /\ SND(aaa_auth_rep(nid.sid.MAP.A.N4'.H(MR.A.N2'.N4'.LK).{N5'.A}_KAM)) 
		 /\ witness(A,MR, auth_2,H(MR.A.N2'.N4'.LK)) 

		7. State=1 /\ RCV(aaa_auth_req(A.AR2.{N5.A.MAP.N6'}_KAM)) 



=|> State':=2  /\ SND(aaa_auth_rep(nid.sid.AR2.A.{N6'.A}_LK.{NSK.N3.A}_KAAR))
/\ secret(NSK,sec_nsk,{A,AR2,MR})
end role

role role_HA(HA:agent,A:agent,MR:agent,MAP:agent,Ki:symmetric_key,H:hash_func,KAA:symmetric_key,SND,RCV:channel(dy))
played_by HA
def=
	local
		State:nat,N1:text
	init
		State := 0
	transition
		3. State=0 /\ RCV(MAP.A.N1'.H(N1'.Ki)) =|> State':=1
end role

role role_AR2(AR2:agent,MAP:agent,MR:agent,A:agent,KAAR:symmetric_key,H:hash_func,SND,RCV:channel(dy))
played_by AR2
def=
	local
		State:nat,KAM:symmetric_key,N5:text,N6:text,LK:symmetric_key,N3:text,N7:text,NSK:symmetric_key,N4:text
	const
		fna : text, 
		hi : text,
		aaa_auth_req : text,
		aaa_auth_rep  : text,
		hack :text,
		nid:text,
		sid:text
	init
		State := 0
	transition
		6. State=0 /\ RCV(hi(MAP.AR2.{N5'.A.MAP.N6'}_KAM')) =|> State':=1 /\ SND(aaa_auth_req(A.AR2.{N5'.A.MAP.N6'}_KAM'))
		8. State=1 /\ RCV(aaa_auth_rep(nid.sid.AR2.A.{N6.A}_LK'.{H(N4'.LK).N3'.A}_KAAR)) =|> State':=2 /\ NSK':=H(N4'.LK) /\ SND(hack(nid.sid.MAP.AR2.{N6.A}_LK'.{sid.N3'.AR2}_NSK'))
		11. State=2 /\ RCV(fna(nid.sid.AR2.MR.{sid.N3.N7'.AR2.MR}_NSK')) =|> State':=3
end role

role session1(KAA:symmetric_key,Ki:symmetric_key,HA:agent,LK:symmetric_key,KAM:symmetric_key,NSK:symmetric_key,AR2:agent,MAP:agent,MR:agent,A:agent,KAAR:symmetric_key,H:hash_func)
def=
	local
		SND5,RCV5,SND4,RCV4,SND3,RCV3,SND2,RCV2,SND1,RCV1:channel(dy)
	composition
		role_AR2(AR2,MAP,MR,A,KAAR,H,SND5,RCV5) /\ role_HA(HA,A,MR,MAP,Ki,H,KAA,SND4,RCV4) /\ role_A(A,LK,MAP,MR,AR2,HA,KAM,H,KAAR,KAA,NSK,SND3,RCV3) /\ role_MAP(MAP,A,MR,AR2,KAM,H,SND2,RCV2) /\ role_MR(MR,MAP,A,HA,AR2,LK,H,Ki,NSK,SND1,RCV1)
end role

role environment()
def=
	const
		hash_0:hash_func,aaa:agent,map:agent,nsk:symmetric_key,lk:symmetric_key,ki:symmetric_key,kaa:symmetric_key,ha:agent,kam:symmetric_key,ar2:agent,mr:agent,kaar:symmetric_key,hash_1:hash_func,auth_1:protocol_id,auth_2:protocol_id,auth_3:protocol_id,sec_nsk:protocol_id,sec_n3:protocol_id,sec_n6:protocol_id
	intruder_knowledge = {map,aaa,ha,mr,ar2,lk}
	composition
		session1(kaa,ki,ha,lk,kam,nsk,ar2,map,mr,aaa,kaar,hash_1)
		
		
end role

goal
	authentication_on auth_1
	authentication_on auth_2
	authentication_on auth_3
	secrecy_of sec_nsk,sec_n3,sec_n6
end goal

environment()
