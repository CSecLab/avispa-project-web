%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfile8gKsEg

section signature:

state_server: agent * agent * agent * agent * text * text * text * text * text * text * public_key * public_key * public_key * public_key * symmetric_key * symmetric_key * hash_func * nat * text * text * text * text * text * nat -> fact
state_brouter: agent * agent * agent * agent * text * text * text * text * public_key * public_key * symmetric_key * hash_func * nat * text * text * text * text * text * text * public_key * public_key * scrypt(symmetric_key,text) * nat -> fact
state_router: agent * agent * agent * agent * text * text * text * text * text * public_key * public_key * public_key * hash_func * nat * text * text * text * text * public_key * scrypt(symmetric_key,text) * nat -> fact
state_enddevice: agent * agent * agent * agent * text * text * text * text * text * text * public_key * public_key * public_key * public_key * symmetric_key * hash_func * nat * text * text * text * text * crypt(inv(public_key),pair(text,pair(text,pair(public_key,pair(text,text))))) * set(agent) * nat -> fact


section types:

set_200, set_196, set_192, set_167: set
X, Dummy_X, Dummy_Y, Y: scrypt(symmetric_key,text)
Dummy_Set_33, ASGoal, Set_33: set(agent)
sr_ed_ts, ed_sr_te, ed_sr_ne, ne: protocol_id
MGoal, start: message
Tickete: crypt(inv(public_key),pair(text,pair(text,pair(public_key,pair(text,text)))))
Subprefix, LLprefix, IDe, IDr, IDbr, IDs, Dummy_IDr, Dummy_Tb, Te, Tb, Ts, Tend, Dummy_IDe, Dummy_Tend, Dummy_Ts, Dummy_Ne, Dummy_Te, dummy_nonce, subprefix, llprefix, ide, idr, idbr, ids, idi, Ne: text
H, h: hash_func
dummy_sk, Kbs, kbs, kes, kis, kbi, kei, Kes: symmetric_key
E, L, B, S, A2Goal, A1Goal, e, l, b, s, i: agent
Kpubs, Kpube, Dummy_Kpubr, Kpubr, Dummy_Kpube, Kpubbr, dummy_pk, kpube, kpubr, kpubbr, kpubs, kpubi: public_key
18, 16, 15, 13, 11, 10, 9, 6, SID, 5, State, 4, Dummy_State, 3, SID2, SID1, 2, 1, 0, 21, 19: nat


section inits:

initial_state init1 := 
 iknows(start).
 iknows(e).
 iknows(l).
 iknows(b).
 iknows(s).
 iknows(subprefix).
 iknows(llprefix).
 iknows(ide).
 iknows(idr).
 iknows(idbr).
 iknows(ids).
 iknows(idi).
 iknows(kpube).
 iknows(kpubr).
 iknows(kpubbr).
 iknows(kpubs).
 iknows(kpubi).
 iknows(inv(kpubi)).
 iknows(kis).
 iknows(h).
 iknows(i).
 state_enddevice(e,l,b,s,subprefix,llprefix,ide,idr,idbr,ids,kpube,kpubr,kpubbr,kpubs,kes,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,crypt(inv(dummy_pk),pair(dummy_nonce,pair(dummy_nonce,pair(dummy_pk,pair(dummy_nonce,dummy_nonce))))),set_167,3).
 state_router(l,e,b,s,subprefix,llprefix,idr,idbr,ids,kpubr,kpubbr,kpubs,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_pk,scrypt(dummy_sk,dummy_nonce),4).
 state_brouter(b,e,l,s,subprefix,llprefix,idbr,ids,kpubbr,kpubs,kbs,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_pk,dummy_pk,scrypt(dummy_sk,dummy_nonce),5).
 state_server(s,e,l,b,subprefix,llprefix,ide,idr,idbr,ids,kpube,kpubr,kpubbr,kpubs,kbs,kes,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,6).
 state_router(l,i,b,s,subprefix,llprefix,idr,idbr,ids,kpubr,kpubbr,kpubs,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_pk,scrypt(dummy_sk,dummy_nonce),9).
 state_brouter(b,i,l,s,subprefix,llprefix,idbr,ids,kpubbr,kpubs,kbs,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_pk,dummy_pk,scrypt(dummy_sk,dummy_nonce),10).
 state_server(s,i,l,b,subprefix,llprefix,idi,idr,idbr,ids,kpubi,kpubr,kpubbr,kpubs,kbs,kis,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,11).
 state_enddevice(e,i,b,s,subprefix,llprefix,ide,idi,idbr,ids,kpube,kpubi,kpubbr,kpubs,kes,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,crypt(inv(dummy_pk),pair(dummy_nonce,pair(dummy_nonce,pair(dummy_pk,pair(dummy_nonce,dummy_nonce))))),set_196,13).
 state_brouter(b,e,i,s,subprefix,llprefix,idbr,ids,kpubbr,kpubs,kbs,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_pk,dummy_pk,scrypt(dummy_sk,dummy_nonce),15).
 state_server(s,e,i,b,subprefix,llprefix,ide,idi,idbr,ids,kpube,kpubi,kpubbr,kpubs,kbs,kes,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,16).
 state_enddevice(e,l,i,s,subprefix,llprefix,ide,idr,idi,ids,kpube,kpubr,kpubi,kpubs,kes,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,crypt(inv(dummy_pk),pair(dummy_nonce,pair(dummy_nonce,pair(dummy_pk,pair(dummy_nonce,dummy_nonce))))),set_200,18).
 state_router(l,e,i,s,subprefix,llprefix,idr,idi,ids,kpubr,kpubi,kpubs,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_pk,scrypt(dummy_sk,dummy_nonce),19).
 state_server(s,e,l,i,subprefix,llprefix,ide,idr,idi,ids,kpube,kpubr,kpubi,kpubs,kis,kes,h,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,21)


section rules:

step step_0 (E,L,B,S,Subprefix,LLprefix,IDe,IDr,IDbr,IDs,Kpube,Kpubr,Kpubbr,Kpubs,Kes,H,Dummy_Te,Ts,Tend,Dummy_Ne,Tickete,Dummy_Set_33,SID,Te,Ne) :=
 state_enddevice(E,L,B,S,Subprefix,LLprefix,IDe,IDr,IDbr,IDs,Kpube,Kpubr,Kpubbr,Kpubs,Kes,H,0,Dummy_Te,Ts,Tend,Dummy_Ne,Tickete,Dummy_Set_33,SID).
 iknows(start)
=[exists Ne,Te]=>
 state_enddevice(E,L,B,S,Subprefix,LLprefix,IDe,IDr,IDbr,IDs,Kpube,Kpubr,Kpubbr,Kpubs,Kes,H,1,Te,Ts,Tend,Ne,Tickete,Dummy_Set_33,SID).
 iknows(pair(Subprefix,pair(IDe,pair(IDr,crypt(inv(Kpube),pair(Subprefix,pair(IDe,pair(IDr,pair(Te,pair(Kpube,pair(Kpubr,scrypt(Kes,Ne)))))))))))).
 secret(Ne,ne,Dummy_Set_33).
 witness(E,S,ed_sr_ne,Ne).
 witness(E,S,ed_sr_te,Te).
 contains(E,Dummy_Set_33).
 contains(S,Dummy_Set_33)

step step_1 (E,L,B,S,Subprefix,LLprefix,IDe,IDr,IDbr,IDs,Kpube,Kpubr,Kpubbr,Kpubs,Kes,H,Te,Dummy_Ts,Dummy_Tend,Ne,Tickete,Set_33,SID,Ts,Tend) :=
 state_enddevice(E,L,B,S,Subprefix,LLprefix,IDe,IDr,IDbr,IDs,Kpube,Kpubr,Kpubbr,Kpubs,Kes,H,1,Te,Dummy_Ts,Dummy_Tend,Ne,Tickete,Set_33,SID).
 iknows(pair(Subprefix,pair(IDr,pair(IDe,pair(crypt(inv(Kpubs),pair(Subprefix,pair(IDe,pair(Kpube,pair(Ts,Tend))))),scrypt(Kes,Ne))))))
 =>
 state_enddevice(E,L,B,S,Subprefix,LLprefix,IDe,IDr,IDbr,IDs,Kpube,Kpubr,Kpubbr,Kpubs,Kes,H,2,Te,Ts,Tend,Ne,Tickete,Set_33,SID).
 request(E,S,sr_ed_ts,Ts,SID)

step step_2 (L,E,B,S,Subprefix,LLprefix,IDr,IDbr,IDs,Kpubr,Kpubbr,Kpubs,H,Dummy_Te,Ts,Tend,Dummy_IDe,Dummy_Kpube,Dummy_Y,SID,Te,IDe,Kpube,Y) :=
 state_router(L,E,B,S,Subprefix,LLprefix,IDr,IDbr,IDs,Kpubr,Kpubbr,Kpubs,H,0,Dummy_Te,Ts,Tend,Dummy_IDe,Dummy_Kpube,Dummy_Y,SID).
 iknows(pair(Subprefix,pair(IDe,pair(IDr,crypt(inv(Kpube),pair(Subprefix,pair(IDe,pair(IDr,pair(Te,pair(Kpube,pair(Kpubr,Y)))))))))))
 =>
 state_router(L,E,B,S,Subprefix,LLprefix,IDr,IDbr,IDs,Kpubr,Kpubbr,Kpubs,H,1,Te,Ts,Tend,IDe,Kpube,Y,SID).
 iknows(pair(Subprefix,pair(IDr,pair(IDbr,crypt(inv(Kpube),pair(Subprefix,pair(IDe,pair(IDr,pair(Te,pair(Kpube,pair(Kpubr,Y)))))))))))

step step_3 (L,E,B,S,Subprefix,LLprefix,IDr,IDbr,IDs,Kpubr,Kpubbr,Kpubs,H,Te,Dummy_Ts,Dummy_Tend,IDe,Kpube,Dummy_Y,SID,Ts,Tend,Y) :=
 state_router(L,E,B,S,Subprefix,LLprefix,IDr,IDbr,IDs,Kpubr,Kpubbr,Kpubs,H,1,Te,Dummy_Ts,Dummy_Tend,IDe,Kpube,Dummy_Y,SID).
 iknows(pair(Subprefix,pair(IDbr,pair(IDr,pair(crypt(inv(Kpubs),pair(Subprefix,pair(IDe,pair(Kpube,pair(Ts,Tend))))),Y)))))
 =>
 state_router(L,E,B,S,Subprefix,LLprefix,IDr,IDbr,IDs,Kpubr,Kpubbr,Kpubs,H,2,Te,Ts,Tend,IDe,Kpube,Y,SID).
 iknows(pair(Subprefix,pair(IDr,pair(IDe,pair(crypt(inv(Kpubs),pair(Subprefix,pair(IDe,pair(Kpube,pair(Ts,Tend))))),Y)))))

step step_4 (B,E,L,S,Subprefix,LLprefix,IDbr,IDs,Kpubbr,Kpubs,Kbs,H,Dummy_Te,Dummy_Tb,Ts,Tend,Dummy_IDe,Dummy_IDr,Dummy_Kpube,Dummy_Kpubr,Dummy_X,SID,Te,Tb,IDe,IDr,Kpube,Kpubr,X) :=
 state_brouter(B,E,L,S,Subprefix,LLprefix,IDbr,IDs,Kpubbr,Kpubs,Kbs,H,0,Dummy_Te,Dummy_Tb,Ts,Tend,Dummy_IDe,Dummy_IDr,Dummy_Kpube,Dummy_Kpubr,Dummy_X,SID).
 iknows(pair(Subprefix,pair(IDr,pair(IDbr,crypt(inv(Kpube),pair(Subprefix,pair(IDe,pair(IDr,pair(Te,pair(Kpube,pair(Kpubr,X)))))))))))
=[exists Tb]=>
 state_brouter(B,E,L,S,Subprefix,LLprefix,IDbr,IDs,Kpubbr,Kpubs,Kbs,H,1,Te,Tb,Ts,Tend,IDe,IDr,Kpube,Kpubr,X,SID).
 iknows(pair(Subprefix,pair(IDbr,pair(IDs,pair(crypt(inv(Kpube),pair(Subprefix,pair(IDe,pair(IDr,pair(Te,pair(Kpube,pair(Kpubr,X))))))),pair(Tb,apply(H,pair(IDe,pair(IDr,pair(IDbr,pair(Kpube,pair(Kpubr,pair(Kpubbr,Kbs)))))))))))))

step step_5 (B,E,L,S,Subprefix,LLprefix,IDbr,IDs,Kpubbr,Kpubs,Kbs,H,Te,Tb,Dummy_Ts,Dummy_Tend,IDe,IDr,Kpube,Kpubr,Dummy_X,SID,Ts,Tend,X) :=
 state_brouter(B,E,L,S,Subprefix,LLprefix,IDbr,IDs,Kpubbr,Kpubs,Kbs,H,1,Te,Tb,Dummy_Ts,Dummy_Tend,IDe,IDr,Kpube,Kpubr,Dummy_X,SID).
 iknows(pair(Subprefix,pair(IDs,pair(IDbr,pair(crypt(inv(Kpubs),pair(Subprefix,pair(IDe,pair(Kpube,pair(Ts,Tend))))),X)))))
 =>
 state_brouter(B,E,L,S,Subprefix,LLprefix,IDbr,IDs,Kpubbr,Kpubs,Kbs,H,2,Te,Tb,Ts,Tend,IDe,IDr,Kpube,Kpubr,X,SID).
 iknows(pair(Subprefix,pair(IDbr,pair(IDr,pair(crypt(inv(Kpubs),pair(Subprefix,pair(IDe,pair(Kpube,pair(Ts,Tend))))),X)))))

step step_6 (S,E,L,B,Subprefix,LLprefix,IDe,IDr,IDbr,IDs,Kpube,Kpubr,Kpubbr,Kpubs,Kbs,Kes,H,Dummy_Te,Dummy_Tb,Dummy_Ts,Dummy_Tend,Dummy_Ne,SID,Te,Tb,Ts,Tend,Ne) :=
 state_server(S,E,L,B,Subprefix,LLprefix,IDe,IDr,IDbr,IDs,Kpube,Kpubr,Kpubbr,Kpubs,Kbs,Kes,H,0,Dummy_Te,Dummy_Tb,Dummy_Ts,Dummy_Tend,Dummy_Ne,SID).
 iknows(pair(Subprefix,pair(IDbr,pair(IDs,pair(crypt(inv(Kpube),pair(Subprefix,pair(IDe,pair(IDr,pair(Te,pair(Kpube,pair(Kpubr,scrypt(Kes,Ne)))))))),pair(Tb,apply(H,pair(IDe,pair(IDr,pair(IDbr,pair(Kpube,pair(Kpubr,pair(Kpubbr,Kbs)))))))))))))
=[exists Tend,Ts]=>
 state_server(S,E,L,B,Subprefix,LLprefix,IDe,IDr,IDbr,IDs,Kpube,Kpubr,Kpubbr,Kpubs,Kbs,Kes,H,1,Te,Tb,Ts,Tend,Ne,SID).
 iknows(pair(Subprefix,pair(IDs,pair(IDbr,pair(crypt(inv(Kpubs),pair(Subprefix,pair(IDe,pair(Kpube,pair(Ts,Tend))))),scrypt(Kes,Ne)))))).
 request(S,E,ed_sr_ne,Ne,SID).
 request(S,E,ed_sr_te,Te,SID).
 witness(S,E,sr_ed_ts,Ts)


section properties:

property secrecy_of_ne (MGoal,ASGoal) :=
 [] ((secret(MGoal,ne,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property authentication_on_ed_sr_ne (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,ed_sr_ne,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,ed_sr_ne,MGoal))
     /\ ((request(A1Goal,A2Goal,ed_sr_ne,MGoal,SID1)
           /\ request(A1Goal,A2Goal,ed_sr_ne,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_ed_sr_te (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,ed_sr_te,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,ed_sr_te,MGoal))
     /\ ((request(A1Goal,A2Goal,ed_sr_te,MGoal,SID1)
           /\ request(A1Goal,A2Goal,ed_sr_te,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_sr_ed_ts (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,sr_ed_ts,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,sr_ed_ts,MGoal))
     /\ ((request(A1Goal,A2Goal,sr_ed_ts,MGoal,SID1)
           /\ request(A1Goal,A2Goal,sr_ed_ts,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state secrecy_of_ne (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,ne,ASGoal) &
 not(contains(i,ASGoal))

attack_state authentication_on_ed_sr_ne (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,ed_sr_ne,MGoal,SID) &
 not(witness(A2Goal,A1Goal,ed_sr_ne,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_ed_sr_ne (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,ed_sr_ne,MGoal,SID1).
 request(A1Goal,A2Goal,ed_sr_ne,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_ed_sr_te (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,ed_sr_te,MGoal,SID) &
 not(witness(A2Goal,A1Goal,ed_sr_te,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_ed_sr_te (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,ed_sr_te,MGoal,SID1).
 request(A1Goal,A2Goal,ed_sr_te,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_sr_ed_ts (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,sr_ed_ts,MGoal,SID) &
 not(witness(A2Goal,A1Goal,sr_ed_ts,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_sr_ed_ts (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,sr_ed_ts,MGoal,SID1).
 request(A1Goal,A2Goal,sr_ed_ts,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

