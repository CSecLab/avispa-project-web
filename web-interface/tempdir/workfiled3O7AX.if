%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfiled3O7AX

section signature:

state_role_MR: agent * agent * agent * agent * agent * symmetric_key * hash_func * symmetric_key * symmetric_key * text * text * text * nat * text * text * text * text * text * set(agent) * set(agent) * nat -> fact
state_role_MAP: agent * agent * agent * agent * symmetric_key * hash_func * text * nat * symmetric_key * text * text * text * text * text * text * text * text * symmetric_key * symmetric_key * text * text * nat -> fact
state_role_CAAA: agent * symmetric_key * agent * agent * agent * agent * symmetric_key * hash_func * symmetric_key * symmetric_key * symmetric_key * nat * text * text * text * text * text * text * text * text * set(agent) * set(agent) * nat -> fact
state_role_HA: agent * agent * agent * agent * symmetric_key * hash_func * symmetric_key * nat * nat -> fact
state_role_AR2: agent * agent * agent * agent * symmetric_key * hash_func * nat * symmetric_key * text * text * text * symmetric_key * text * text * text * nat -> fact


section types:

MGoal, start: message
sec_n4, sec_nsk, auth1, auth_2, auth_1, sec_n2, sec_n1: protocol_id
h, hash_0, H: hash_func
Dummy_NSK, Dummy_KAAAMAP, dummy_sk, nsk, lk, ki, kaa, kAaaMap, kArAaa, NSK, KAAAMAP, KARAAA, KAA, Ki, LK, Dummy_LK, Dummy_Ki: symmetric_key
ASGoal, Set_105, Set_103, Set_40, Set_38, Dummy_Set_40, Dummy_Set_38, Dummy_Set_105, Dummy_Set_103: set(agent)
Dummy_NID, Dummy_N2, Dummy_ACK, Dummy_SIDD, Dummy_N4, Dummy_NLCoA, dummy_nonce, bitR, nlcoa, bitI, sidd, NID, N2, SIDD, N4, ACK, NLCoA, N3, BitR, BitI, N1, hack, hi, aaa_auth_req, aaa_auth_rep, ACK2, nid, flback, lbu, fna, iprtadv, irtsolpr, Dummy_ACK2, Dummy_N3, Dummy_BitR, Dummy_BitI, Dummy_N1: text
set_221, set_220, set_206, set_205: set
A2Goal, A1Goal, caaa, map, ha, ar2, mr, CAAA, MR, MAP, AR2, HA, i: agent
Dummy_State, 3, SID, SID2, SID1, State, 2, 4, 1, 0, 7, 6, 5: nat


section inits:

initial_state init1 := 
 iknows(start).
 iknows(map).
 iknows(caaa).
 iknows(ha).
 iknows(mr).
 iknows(ar2).
 iknows(i).
 state_role_AR2(ar2,map,mr,caaa,kArAaa,h,0,dummy_sk,dummy_nonce,dummy_nonce,dummy_nonce,dummy_sk,dummy_nonce,dummy_nonce,dummy_nonce,3).
 state_role_HA(ha,caaa,mr,map,ki,h,kaa,0,4).
 state_role_CAAA(caaa,lk,map,mr,ar2,ha,kAaaMap,h,kArAaa,kaa,nsk,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_205,set_206,5).
 state_role_MAP(map,caaa,mr,ar2,kAaaMap,h,nlcoa,0,dummy_sk,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_sk,dummy_sk,dummy_nonce,dummy_nonce,6).
 state_role_MR(mr,map,caaa,ha,ar2,lk,h,ki,nsk,bitI,bitR,sidd,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_220,set_221,7)


section rules:

step step_0 (AR2,MAP,MR,CAAA,KARAAA,H,Dummy_KAAAMAP,Dummy_NLCoA,ACK,Dummy_N4,NSK,Dummy_SIDD,N2,NID,SID,KAAAMAP,NLCoA,N4,SIDD) :=
 state_role_AR2(AR2,MAP,MR,CAAA,KARAAA,H,0,Dummy_KAAAMAP,Dummy_NLCoA,ACK,Dummy_N4,NSK,Dummy_SIDD,N2,NID,SID).
 iknows(apply(hi,pair(SIDD,pair(NLCoA,pair(apply(H,pair(NLCoA,KAAAMAP)),scrypt(KAAAMAP,pair(SIDD,N4)))))))
 =>
 state_role_AR2(AR2,MAP,MR,CAAA,KARAAA,H,1,KAAAMAP,NLCoA,ACK,N4,NSK,SIDD,N2,NID,SID).
 iknows(apply(aaa_auth_req,pair(SIDD,pair(NLCoA,pair(apply(H,pair(NLCoA,pair(SIDD,KAAAMAP))),scrypt(KAAAMAP,pair(SIDD,N4)))))))

step step_1 (AR2,MAP,MR,CAAA,KARAAA,H,KAAAMAP,NLCoA,Dummy_ACK,N4,Dummy_NSK,SIDD,Dummy_N2,Dummy_NID,SID,ACK,NSK,N2,NID) :=
 state_role_AR2(AR2,MAP,MR,CAAA,KARAAA,H,1,KAAAMAP,NLCoA,Dummy_ACK,N4,Dummy_NSK,SIDD,Dummy_N2,Dummy_NID,SID).
 iknows(apply(aaa_auth_rep,pair(SIDD,scrypt(KARAAA,pair(SIDD,pair(NSK,pair(N2,N4)))))))
=[exists NID,ACK]=>
 state_role_AR2(AR2,MAP,MR,CAAA,KARAAA,H,2,KAAAMAP,NLCoA,ACK,N4,NSK,SIDD,N2,NID,SID).
 iknows(apply(hack,pair(NID,pair(scrypt(NSK,pair(SIDD,pair(N2,AR2))),apply(H,pair(SIDD,pair(N4,ACK)))))))

step step_2 (AR2,MAP,MR,CAAA,KARAAA,H,KAAAMAP,NLCoA,ACK,N4,NSK,SIDD,N2,NID,SID) :=
 state_role_AR2(AR2,MAP,MR,CAAA,KARAAA,H,2,KAAAMAP,NLCoA,ACK,N4,NSK,SIDD,N2,NID,SID).
 iknows(apply(fna,pair(SIDD,pair(nid,scrypt(NSK,pair(SIDD,pair(N2,pair(AR2,MR))))))))
 =>
 state_role_AR2(AR2,MAP,MR,CAAA,KARAAA,H,3,KAAAMAP,NLCoA,ACK,N4,NSK,SIDD,N2,NID,SID)

step step_3 (CAAA,LK,MAP,MR,AR2,HA,KAAAMAP,H,KARAAA,KAA,NSK,Dummy_N1,Dummy_BitI,Dummy_BitR,Dummy_N3,NLCoA,Dummy_N2,Dummy_SIDD,Dummy_N4,Dummy_Set_103,Set_105,SID,N1,BitI,BitR,N3,N2,SIDD,N4) :=
 state_role_CAAA(CAAA,LK,MAP,MR,AR2,HA,KAAAMAP,H,KARAAA,KAA,NSK,0,Dummy_N1,Dummy_BitI,Dummy_BitR,Dummy_N3,NLCoA,Dummy_N2,Dummy_SIDD,Dummy_N4,Dummy_Set_103,Set_105,SID).
 iknows(apply(aaa_auth_req,pair(SIDD,pair(N1,pair(BitI,pair(scrypt(LK,pair(SIDD,pair(N2,N1))),pair(apply(H,pair(BitI,pair(BitR,pair(SIDD,LK)))),apply(H,pair(SIDD,pair(MR,pair(N1,LK))))))))))).
 request(CAAA,MR,auth1,N1,SID)
=[exists N3,N4]=>
 state_role_CAAA(CAAA,LK,MAP,MR,AR2,HA,KAAAMAP,H,KARAAA,KAA,NSK,1,N1,BitI,BitR,N3,NLCoA,N2,SIDD,N4,Dummy_Set_103,Set_105,SID).
 iknows(apply(aaa_auth_rep,pair(SIDD,pair(N3,scrypt(KAAAMAP,pair(apply(H,pair(MR,pair(MAP,pair(SIDD,pair(N3,LK))))),pair(N4,SIDD))))))).
 secret(Dummy_N4,sec_n4,Dummy_Set_103).
 contains(CAAA,Dummy_Set_103).
 contains(MAP,Dummy_Set_103)

step step_4 (CAAA,LK,MAP,MR,AR2,HA,KAAAMAP,H,KARAAA,KAA,NSK,N1,BitI,BitR,N3,Dummy_NLCoA,N2,SIDD,N4,Set_103,Dummy_Set_105,SID,NLCoA) :=
 state_role_CAAA(CAAA,LK,MAP,MR,AR2,HA,KAAAMAP,H,KARAAA,KAA,NSK,1,N1,BitI,BitR,N3,Dummy_NLCoA,N2,SIDD,N4,Set_103,Dummy_Set_105,SID).
 iknows(apply(aaa_auth_req,pair(SIDD,pair(NLCoA,pair(apply(H,pair(NLCoA,pair(SIDD,KAAAMAP))),scrypt(KAAAMAP,pair(SIDD,N4)))))))
 =>
 state_role_CAAA(CAAA,LK,MAP,MR,AR2,HA,KAAAMAP,H,KARAAA,KAA,NSK,2,N1,BitI,BitR,N3,NLCoA,N2,SIDD,N4,Set_103,Dummy_Set_105,SID).
 iknows(apply(aaa_auth_rep,pair(SIDD,scrypt(KARAAA,pair(SIDD,pair(NSK,pair(N2,N4))))))).
 secret(NSK,sec_nsk,Dummy_Set_105).
 contains(CAAA,Dummy_Set_105).
 contains(AR2,Dummy_Set_105).
 contains(MR,Dummy_Set_105)

step step_5 (MAP,CAAA,MR,AR2,KAAAMAP,H,NLCoA,Dummy_Ki,Dummy_N1,Dummy_BitI,Dummy_BitR,ACK,N4,NID,ACK2,Dummy_N2,NSK,Dummy_LK,Dummy_SIDD,N3,SID,Ki,N1,BitI,BitR,N2,LK,SIDD) :=
 state_role_MAP(MAP,CAAA,MR,AR2,KAAAMAP,H,NLCoA,0,Dummy_Ki,Dummy_N1,Dummy_BitI,Dummy_BitR,ACK,N4,NID,ACK2,Dummy_N2,NSK,Dummy_LK,Dummy_SIDD,N3,SID).
 iknows(apply(irtsolpr,pair(SIDD,pair(BitI,pair(scrypt(LK,pair(SIDD,pair(N2,N1))),pair(apply(H,pair(BitI,pair(BitR,pair(SIDD,LK)))),pair(apply(H,pair(SIDD,pair(MR,pair(N1,Ki)))),apply(H,pair(SIDD,pair(MR,pair(N1,LK)))))))))))
 =>
 state_role_MAP(MAP,CAAA,MR,AR2,KAAAMAP,H,NLCoA,1,Ki,N1,BitI,BitR,ACK,N4,NID,ACK2,N2,NSK,LK,SIDD,N3,SID).
 iknows(apply(aaa_auth_req,pair(SIDD,pair(N1,pair(BitI,pair(scrypt(LK,pair(SIDD,pair(N2,N1))),pair(apply(H,pair(BitI,pair(BitR,pair(SIDD,LK)))),apply(H,pair(SIDD,pair(MR,pair(N1,LK)))))))))))

step step_6 (MAP,CAAA,MR,AR2,KAAAMAP,H,NLCoA,Ki,N1,BitI,BitR,ACK,Dummy_N4,NID,ACK2,N2,NSK,LK,SIDD,Dummy_N3,SID,N4,N3) :=
 state_role_MAP(MAP,CAAA,MR,AR2,KAAAMAP,H,NLCoA,1,Ki,N1,BitI,BitR,ACK,Dummy_N4,NID,ACK2,N2,NSK,LK,SIDD,Dummy_N3,SID).
 iknows(apply(aaa_auth_rep,pair(SIDD,pair(N3,scrypt(KAAAMAP,pair(apply(H,pair(MR,pair(MAP,pair(SIDD,pair(N3,LK))))),pair(N4,SIDD)))))))
 =>
 state_role_MAP(MAP,CAAA,MR,AR2,KAAAMAP,H,NLCoA,2,Ki,N1,BitI,BitR,ACK,N4,NID,ACK2,N2,NSK,LK,SIDD,N3,SID).
 iknows(apply(iprtadv,pair(SIDD,pair(N3,pair(NLCoA,apply(H,pair(SIDD,pair(NLCoA,apply(H,pair(MR,pair(MAP,pair(SIDD,pair(N3,LK))))))))))))).
 witness(MAP,MR,auth_2,apply(H,pair(MR,pair(MAP,pair(SIDD,pair(N3,LK)))))).
 iknows(apply(hi,pair(SIDD,pair(NLCoA,pair(apply(H,pair(NLCoA,KAAAMAP)),scrypt(KAAAMAP,pair(SIDD,N4)))))))

step step_7 (MAP,CAAA,MR,AR2,KAAAMAP,H,NLCoA,Ki,N1,BitI,BitR,Dummy_ACK,N4,Dummy_NID,Dummy_ACK2,N2,Dummy_NSK,LK,SIDD,N3,SID,ACK,NID,ACK2,NSK) :=
 state_role_MAP(MAP,CAAA,MR,AR2,KAAAMAP,H,NLCoA,2,Ki,N1,BitI,BitR,Dummy_ACK,N4,Dummy_NID,Dummy_ACK2,N2,Dummy_NSK,LK,SIDD,N3,SID).
 iknows(apply(hack,pair(NID,pair(scrypt(NSK,pair(SIDD,pair(N2,AR2))),apply(H,pair(SIDD,pair(N4,ACK)))))))
=[exists ACK2]=>
 state_role_MAP(MAP,CAAA,MR,AR2,KAAAMAP,H,NLCoA,3,Ki,N1,BitI,BitR,ACK,N4,NID,ACK2,N2,NSK,LK,SIDD,N3,SID).
 iknows(apply(flback,pair(SIDD,pair(scrypt(NSK,pair(SIDD,pair(N2,AR2))),apply(H,pair(apply(H,pair(MR,pair(MAP,pair(SIDD,pair(N3,LK))))),ACK2))))))

step step_8 (MAP,CAAA,MR,AR2,KAAAMAP,H,NLCoA,Ki,N1,BitI,BitR,ACK,N4,NID,ACK2,N2,NSK,LK,SIDD,N3,SID) :=
 state_role_MAP(MAP,CAAA,MR,AR2,KAAAMAP,H,NLCoA,3,Ki,N1,BitI,BitR,ACK,N4,NID,ACK2,N2,NSK,LK,SIDD,N3,SID).
 iknows(apply(lbu,pair(SIDD,apply(H,pair(SIDD,apply(H,pair(MR,pair(MAP,pair(SIDD,pair(N3,LK))))))))))
 =>
 state_role_MAP(MAP,CAAA,MR,AR2,KAAAMAP,H,NLCoA,4,Ki,N1,BitI,BitR,ACK,N4,NID,ACK2,N2,NSK,LK,SIDD,N3,SID)

step step_9 (MR,MAP,CAAA,HA,AR2,LK,H,Ki,NSK,BitI,BitR,SIDD,Dummy_N1,NLCoA,ACK2,Dummy_N2,N3,Dummy_Set_38,Dummy_Set_40,SID,N1,N2) :=
 state_role_MR(MR,MAP,CAAA,HA,AR2,LK,H,Ki,NSK,BitI,BitR,SIDD,0,Dummy_N1,NLCoA,ACK2,Dummy_N2,N3,Dummy_Set_38,Dummy_Set_40,SID).
 iknows(start)
=[exists N2,N1]=>
 state_role_MR(MR,MAP,CAAA,HA,AR2,LK,H,Ki,NSK,BitI,BitR,SIDD,1,N1,NLCoA,ACK2,N2,N3,Dummy_Set_38,Dummy_Set_40,SID).
 iknows(apply(irtsolpr,pair(SIDD,pair(BitI,pair(scrypt(LK,pair(SIDD,pair(N2,N1))),pair(apply(H,pair(BitI,pair(BitR,pair(SIDD,LK)))),pair(apply(H,pair(SIDD,pair(MR,pair(N1,Ki)))),apply(H,pair(SIDD,pair(MR,pair(N1,LK))))))))))).
 witness(MR,CAAA,auth_1,N2).
 secret(N1,sec_n1,Dummy_Set_38).
 secret(N2,sec_n2,Dummy_Set_40).
 contains(MR,Dummy_Set_38).
 contains(CAAA,Dummy_Set_38).
 contains(MR,Dummy_Set_40).
 contains(CAAA,Dummy_Set_40).
 contains(AR2,Dummy_Set_40)

step step_10 (MR,MAP,CAAA,HA,AR2,LK,H,Ki,NSK,BitI,BitR,SIDD,N1,Dummy_NLCoA,ACK2,N2,Dummy_N3,Set_38,Set_40,SID,NLCoA,N3) :=
 state_role_MR(MR,MAP,CAAA,HA,AR2,LK,H,Ki,NSK,BitI,BitR,SIDD,1,N1,Dummy_NLCoA,ACK2,N2,Dummy_N3,Set_38,Set_40,SID).
 iknows(apply(iprtadv,pair(SIDD,pair(N3,pair(NLCoA,apply(H,pair(SIDD,pair(NLCoA,apply(H,pair(MR,pair(MAP,pair(SIDD,pair(N3,LK))))))))))))).
 request(MR,MAP,auth_2,apply(H,pair(MR,pair(MAP,pair(SIDD,pair(N3,LK))))),SID)
 =>
 state_role_MR(MR,MAP,CAAA,HA,AR2,LK,H,Ki,NSK,BitI,BitR,SIDD,2,N1,NLCoA,ACK2,N2,N3,Set_38,Set_40,SID)

step step_11 (MR,MAP,CAAA,HA,AR2,LK,H,Ki,NSK,BitI,BitR,SIDD,N1,NLCoA,Dummy_ACK2,N2,N3,Set_38,Set_40,SID,ACK2) :=
 state_role_MR(MR,MAP,CAAA,HA,AR2,LK,H,Ki,NSK,BitI,BitR,SIDD,2,N1,NLCoA,Dummy_ACK2,N2,N3,Set_38,Set_40,SID).
 iknows(apply(flback,pair(SIDD,pair(scrypt(NSK,pair(SIDD,pair(N2,AR2))),apply(H,pair(apply(H,pair(MR,pair(MAP,pair(SIDD,pair(N3,LK))))),ACK2))))))
 =>
 state_role_MR(MR,MAP,CAAA,HA,AR2,LK,H,Ki,NSK,BitI,BitR,SIDD,3,N1,NLCoA,ACK2,N2,N3,Set_38,Set_40,SID).
 iknows(apply(lbu,pair(SIDD,apply(H,pair(SIDD,apply(H,pair(MR,pair(MAP,pair(SIDD,pair(N3,LK)))))))))).
 iknows(apply(fna,pair(SIDD,pair(nid,scrypt(NSK,pair(SIDD,pair(N2,pair(AR2,MR))))))))


section properties:

property authentication_on_auth_1 (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,auth_1,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,auth_1,MGoal))
     /\ ((request(A1Goal,A2Goal,auth_1,MGoal,SID1)
           /\ request(A1Goal,A2Goal,auth_1,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_auth_2 (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,auth_2,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,auth_2,MGoal))
     /\ ((request(A1Goal,A2Goal,auth_2,MGoal,SID1)
           /\ request(A1Goal,A2Goal,auth_2,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property secrecy_of_sec_n1 (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_n1,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_sec_n2 (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_n2,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_sec_n4 (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_n4,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_sec_nsk (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_nsk,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))


section attack_states:

attack_state authentication_on_auth_1 (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,auth_1,MGoal,SID) &
 not(witness(A2Goal,A1Goal,auth_1,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_auth_1 (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,auth_1,MGoal,SID1).
 request(A1Goal,A2Goal,auth_1,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_auth_2 (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,auth_2,MGoal,SID) &
 not(witness(A2Goal,A1Goal,auth_2,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_auth_2 (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,auth_2,MGoal,SID1).
 request(A1Goal,A2Goal,auth_2,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state secrecy_of_sec_n1 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_n1,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_sec_n2 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_n2,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_sec_n4 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_n4,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_sec_nsk (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_nsk,ASGoal) &
 not(contains(i,ASGoal))

