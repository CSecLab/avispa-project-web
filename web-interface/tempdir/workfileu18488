role alice(A,B: agent,
           IPDATAGRAM: message,
	   F: hash_func,
           PSK: symmetric_key,
           SND_B, RCV_B: channel (dy))
played_by A
def=

  local H: hash(message),
        State: nat
  

  const sec_a_SK : protocol_id

  init  State := 0
   

  transition

  
  1. State = 0  /\ RCV_B(start) =|>
     State':= 2 /\ IPDATAGRAM' := new()
                /\ H':= F(IPDATAGRAM')
                /\ SND_B( A,IPDATAGRAM'.{F(IPDATAGRAM')}_PSK)
               

 
end role




role bob(B,A:agent,
             IPDATAGRAM: message,
             F: hash_func,
             PSK: symmetric_key,
             SND_A, RCV_A: channel (dy))
played_by B
def=

  local H: hash(message),
        AUTH_A: message,
        State: nat

  const sec_b_SK : protocol_id

  init  State := 1

  transition

  1. State = 1 /\ RCV_A( A,IPDATAGRAM'.{F(IPDATAGRAM')}_PSK) =|>
     State':=3 /\ AUTH_A' := F(IPDATAGRAM)
              

end role



role session(A, B: agent,
             IPDATAGRAM: message,
             PSK: symmetric_key,
             F: hash_func)
def=

  local SA, RA, SB, RB: channel (dy)

  composition

           alice(A,B,IPDATAGRAM,F,PSK,SA,RA)
        /\ bob(B,A,IPDATAGRAM,F,PSK,SB,RB)

end role



role environment()
def=
 
  const sk1, sk2      : protocol_id,
        a, b          : agent,
        %%kab, kai, kbi : symmetric_key,
        ipdiagram     : message, 
        f             : hash_func

  %%intruder_knowledge = {ipdiagram,f,a,b,i,kai,kbi}
  intruder_knowledge = {ipdiagram,f,a,b,i}

  composition

        session(a,b,ipdiagram,auth_a, f)
     /\ session(a,i,ipdiagram,auth_a, f)
     /\ session(i,b,ipdiagram,auth_a, f)

end role



goal    
  %secrecy_of SK
  secrecy_of sec_a_SK, sec_b_SK % Addresses G9

  %Alice authenticates Bob on sk1
  %authentication_on sk1 % Addresses G1, G2, G3, G7, G10
  %Bob authenticates Alice on sk2
  authentication_on auth_a % Addresses G1, G2, G3, G7, G10
end goal



environment()                 