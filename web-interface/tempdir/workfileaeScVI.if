%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfileaeScVI

section signature:

state_cn: agent * agent * agent * agent * agent * public_key * public_key * symmetric_key * symmetric_key * symmetric_key * symmetric_key * hash_func * text * text * text * text * text * text * text * text * text * text * text * text * text * text * nat * set(agent) * nat -> fact
state_cnmag: agent * agent * agent * agent * agent * public_key * public_key * symmetric_key * symmetric_key * symmetric_key * symmetric_key * hash_func * nat * text * text * text * text * text * text * text * text * text * text * text * text * text * text * nat -> fact
state_mnmag2: agent * agent * agent * agent * agent * public_key * public_key * symmetric_key * symmetric_key * symmetric_key * symmetric_key * hash_func * text * text * text * text * text * text * text * text * text * text * text * text * text * text * nat * set(agent) * nat -> fact
state_mnmag1: agent * agent * agent * agent * agent * public_key * public_key * symmetric_key * symmetric_key * symmetric_key * symmetric_key * hash_func * text * text * text * text * text * text * text * text * text * text * text * text * text * text * nat * nat -> fact
state_mn: agent * agent * agent * agent * agent * public_key * public_key * symmetric_key * symmetric_key * symmetric_key * symmetric_key * hash_func * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * nat * set(agent) * nat -> fact


section types:

set_259, set_253, set_232: set
8, 4, State, 9, 3, 12, 7, 2, 10, 6, 1, SID, 5, 14, 13, 11, 0, Dummy_State, SID2, SID1: nat
Set_182, Set_114, Dummy_Set_182, Dummy_Set_114, Dummy_Set_42, Set_42, ASGoal: set(agent)
start, MGoal: message
NCNMAG, NCN, MSG, MNADDR, PCOAMN, HOAMN, NMN, NMNMAG2, CONN1, CONN2, MNMAG1ADDR, MNMAG2DADDR, NMNMAG21, NMNMAG1, MNMAG2ADDR, Dummy_NMNMAG21, Dummy_MSG, Dummy_NCN, Dummy_NCNMAG, Dummy_NMNMAG1, Dummy_MNMAG2ADDR, Dummy_MNMAG1ADDR, Dummy_NMNMAG2, Dummy_NMN, Dummy_HOAMN, Dummy_PCOAMN, Dummy_MNADDR, Dummy_CONN1, MNMAG1DADDR, dummy_nonce: text
msg, mn_mnmag2_pcoamn, pcoamn, mn_mnmag2_nmn, mnmag1_mn_pcoamn, mnmag1_mn_nmn: protocol_id
HASHE, hashe: hash_func
SK, SK1, SKMN, SKMN1, sk, sk1, skmn, skmn1: symmetric_key
KCN, KMN, kcn, kmn: public_key
MN, MNMAG1, MNMAG2, CNMAG, CN, A2Goal, A1Goal, mn1, mnmag11, mnmag22, cnmag1, cn1, i: agent


section inits:

initial_state init1 := 
 iknows(start).
 iknows(i).
 state_mn(mn1,mnmag11,mnmag22,cnmag1,cn1,kcn,kmn,sk,sk1,skmn,skmn1,hashe,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,0,set_232,3).
 state_mnmag1(mnmag11,mn1,mnmag22,cnmag1,cn1,kcn,kmn,sk,sk1,skmn,skmn1,hashe,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,1,4).
 state_mnmag2(mnmag22,mn1,mnmag11,cnmag1,cn1,kcn,kmn,sk,sk1,skmn,skmn1,hashe,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,2,set_253,5).
 state_cnmag(mnmag22,mn1,mnmag11,cnmag1,cn1,kcn,kmn,sk,sk1,skmn,skmn1,hashe,3,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,6).
 state_cn(cn1,mn1,mnmag11,mnmag22,cnmag1,kcn,kmn,sk,sk1,skmn,skmn1,hashe,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,4,set_259,7)


section rules:

step step_0 (MN,MNMAG1,MNMAG2,CNMAG,CN,KCN,KMN,SK,SK1,SKMN,SKMN1,HASHE,NCNMAG,NCN,MSG,MNADDR,MNMAG1DADDR,PCOAMN,HOAMN,NMN,NMNMAG2,Dummy_CONN1,CONN2,MNMAG1ADDR,MNMAG2ADDR,NMNMAG21,NMNMAG1,Set_42,SID,CONN1) :=
 state_mn(MN,MNMAG1,MNMAG2,CNMAG,CN,KCN,KMN,SK,SK1,SKMN,SKMN1,HASHE,NCNMAG,NCN,MSG,MNADDR,MNMAG1DADDR,PCOAMN,HOAMN,NMN,NMNMAG2,Dummy_CONN1,CONN2,MNMAG1ADDR,MNMAG2ADDR,NMNMAG21,NMNMAG1,0,Set_42,SID).
 iknows(start)
=[exists CONN1]=>
 state_mn(MN,MNMAG1,MNMAG2,CNMAG,CN,KCN,KMN,SK,SK1,SKMN,SKMN1,HASHE,NCNMAG,NCN,MSG,MNADDR,MNMAG1DADDR,PCOAMN,HOAMN,NMN,NMNMAG2,CONN1,CONN2,MNMAG1ADDR,MNMAG2ADDR,NMNMAG21,NMNMAG1,5,Set_42,SID).
 iknows(CONN1)

step step_1 (MN,MNMAG1,MNMAG2,CNMAG,CN,KCN,KMN,SK,SK1,SKMN,SKMN1,HASHE,NCNMAG,NCN,MSG,Dummy_MNADDR,MNMAG1DADDR,Dummy_PCOAMN,Dummy_HOAMN,Dummy_NMN,Dummy_NMNMAG2,CONN1,CONN2,Dummy_MNMAG1ADDR,Dummy_MNMAG2ADDR,NMNMAG21,Dummy_NMNMAG1,Dummy_Set_42,SID,MNADDR,PCOAMN,HOAMN,NMN,NMNMAG2,MNMAG1ADDR,MNMAG2ADDR,NMNMAG1) :=
 state_mn(MN,MNMAG1,MNMAG2,CNMAG,CN,KCN,KMN,SK,SK1,SKMN,SKMN1,HASHE,NCNMAG,NCN,MSG,Dummy_MNADDR,MNMAG1DADDR,Dummy_PCOAMN,Dummy_HOAMN,Dummy_NMN,Dummy_NMNMAG2,CONN1,CONN2,Dummy_MNMAG1ADDR,Dummy_MNMAG2ADDR,NMNMAG21,Dummy_NMNMAG1,5,Dummy_Set_42,SID).
 iknows(pair(MNMAG1ADDR,pair(MNADDR,pair(NMN,pair(NMNMAG1,pair(scrypt(SKMN,pair(PCOAMN,NMNMAG1)),apply(HASHE,pair(NMN,NMNMAG1)))))))).
 iknows(pair(MNMAG2ADDR,pair(MNMAG1ADDR,pair(scrypt(SK,pair(PCOAMN,pair(HOAMN,NMN))),apply(HASHE,pair(NMNMAG2,NMN))))))
 =>
 state_mn(MN,MNMAG1,MNMAG2,CNMAG,CN,KCN,KMN,SK,SK1,SKMN,SKMN1,HASHE,NCNMAG,NCN,MSG,MNADDR,MNMAG1DADDR,PCOAMN,HOAMN,NMN,NMNMAG2,CONN1,CONN2,MNMAG1ADDR,MNMAG2ADDR,NMNMAG21,NMNMAG1,11,Dummy_Set_42,SID).
 iknows(pair(Dummy_MNADDR,pair(Dummy_MNMAG2ADDR,pair(Dummy_NMN,pair(scrypt(SK,pair(Dummy_PCOAMN,Dummy_NMN)),apply(HASHE,Dummy_NMN)))))).
 secret(PCOAMN,pcoamn,Dummy_Set_42).
 request(MN,MNMAG2,mn_mnmag2_pcoamn,PCOAMN,SID).
 contains(MN,Dummy_Set_42).
 contains(MNMAG2,Dummy_Set_42)

step step_2 (MN,MNMAG1,MNMAG2,CNMAG,CN,KCN,KMN,SK,SK1,SKMN,SKMN1,HASHE,NCNMAG,NCN,MSG,MNADDR,MNMAG1DADDR,Dummy_PCOAMN,Dummy_HOAMN,Dummy_NMN,Dummy_NMNMAG2,CONN1,CONN2,Dummy_MNMAG1ADDR,Dummy_MNMAG2ADDR,NMNMAG21,NMNMAG1,Set_42,SID,PCOAMN,HOAMN,NMN,NMNMAG2,MNMAG1ADDR,MNMAG2ADDR) :=
 state_mn(MN,MNMAG1,MNMAG2,CNMAG,CN,KCN,KMN,SK,SK1,SKMN,SKMN1,HASHE,NCNMAG,NCN,MSG,MNADDR,MNMAG1DADDR,Dummy_PCOAMN,Dummy_HOAMN,Dummy_NMN,Dummy_NMNMAG2,CONN1,CONN2,Dummy_MNMAG1ADDR,Dummy_MNMAG2ADDR,NMNMAG21,NMNMAG1,11,Set_42,SID).
 iknows(pair(MNMAG2ADDR,pair(MNMAG1ADDR,pair(scrypt(SK,pair(PCOAMN,pair(HOAMN,NMN))),apply(HASHE,pair(NMNMAG2,NMN))))))
 =>
 state_mn(MN,MNMAG1,MNMAG2,CNMAG,CN,KCN,KMN,SK,SK1,SKMN,SKMN1,HASHE,NCNMAG,NCN,MSG,MNADDR,MNMAG1DADDR,PCOAMN,HOAMN,NMN,NMNMAG2,CONN1,CONN2,MNMAG1ADDR,MNMAG2ADDR,NMNMAG21,NMNMAG1,13,Set_42,SID)

step step_3 (MN,MNMAG1,MNMAG2,CNMAG,CN,KCN,KMN,SK,SK1,SKMN,SKMN1,HASHE,Dummy_NCNMAG,Dummy_NCN,Dummy_MSG,MNADDR,MNMAG1DADDR,PCOAMN,HOAMN,NMN,NMNMAG2,CONN1,CONN2,MNMAG1ADDR,MNMAG2ADDR,NMNMAG21,NMNMAG1,Set_42,SID,NCNMAG,NCN,MSG) :=
 state_mn(MN,MNMAG1,MNMAG2,CNMAG,CN,KCN,KMN,SK,SK1,SKMN,SKMN1,HASHE,Dummy_NCNMAG,Dummy_NCN,Dummy_MSG,MNADDR,MNMAG1DADDR,PCOAMN,HOAMN,NMN,NMNMAG2,CONN1,CONN2,MNMAG1ADDR,MNMAG2ADDR,NMNMAG21,NMNMAG1,13,Set_42,SID).
 iknows(pair(apply(HASHE,pair(NCNMAG,NCN)),scrypt(SK1,crypt(KCN,MSG))))
 =>
 state_mn(MN,MNMAG1,MNMAG2,CNMAG,CN,KCN,KMN,SK,SK1,SKMN,SKMN1,HASHE,NCNMAG,NCN,MSG,MNADDR,MNMAG1DADDR,PCOAMN,HOAMN,NMN,NMNMAG2,CONN1,CONN2,MNMAG1ADDR,MNMAG2ADDR,NMNMAG21,NMNMAG1,14,Set_42,SID)

step step_4 (MNMAG1,MN,MNMAG2,CNMAG,CN,KCN,KMN,SK,SK1,SKMN,SKMN1,HASHE,NCNMAG,NCN,MSG,MNMAG2ADDR,Dummy_MNADDR,Dummy_PCOAMN,HOAMN,Dummy_NMN,NMNMAG2,Dummy_CONN1,CONN2,NMNMAG21,Dummy_NMNMAG1,Dummy_MNMAG1ADDR,SID,MNADDR,PCOAMN,NMN,CONN1,NMNMAG1,MNMAG1ADDR) :=
 state_mnmag1(MNMAG1,MN,MNMAG2,CNMAG,CN,KCN,KMN,SK,SK1,SKMN,SKMN1,HASHE,NCNMAG,NCN,MSG,MNMAG2ADDR,Dummy_MNADDR,Dummy_PCOAMN,HOAMN,Dummy_NMN,NMNMAG2,Dummy_CONN1,CONN2,NMNMAG21,Dummy_NMNMAG1,Dummy_MNMAG1ADDR,1,SID).
 iknows(CONN1)
=[exists NMN,NMNMAG1,PCOAMN,MNADDR,MNMAG1ADDR]=>
 state_mnmag1(MNMAG1,MN,MNMAG2,CNMAG,CN,KCN,KMN,SK,SK1,SKMN,SKMN1,HASHE,NCNMAG,NCN,MSG,MNMAG2ADDR,MNADDR,PCOAMN,HOAMN,NMN,NMNMAG2,CONN1,CONN2,NMNMAG21,NMNMAG1,MNMAG1ADDR,6,SID).
 iknows(pair(MNMAG1ADDR,pair(MNADDR,pair(NMN,pair(NMNMAG1,pair(scrypt(SKMN,pair(PCOAMN,NMNMAG1)),apply(HASHE,pair(NMN,NMNMAG1))))))))

step step_5 (MNMAG1,MN,MNMAG2,CNMAG,CN,KCN,KMN,SK,SK1,SKMN,SKMN1,HASHE,Dummy_NCNMAG,Dummy_NCN,Dummy_MSG,MNMAG2ADDR,MNADDR,PCOAMN,HOAMN,NMN,NMNMAG2,CONN1,CONN2,Dummy_NMNMAG21,NMNMAG1,MNMAG1ADDR,SID,NCNMAG,NCN,MSG,NMNMAG21) :=
 state_mnmag1(MNMAG1,MN,MNMAG2,CNMAG,CN,KCN,KMN,SK,SK1,SKMN,SKMN1,HASHE,Dummy_NCNMAG,Dummy_NCN,Dummy_MSG,MNMAG2ADDR,MNADDR,PCOAMN,HOAMN,NMN,NMNMAG2,CONN1,CONN2,Dummy_NMNMAG21,NMNMAG1,MNMAG1ADDR,6,SID).
 iknows(pair(MNMAG2ADDR,pair(MNMAG1ADDR,pair(scrypt(SK,pair(PCOAMN,NMNMAG21)),apply(HASHE,pair(NMNMAG21,NMNMAG1)))))).
 iknows(pair(apply(HASHE,pair(NCNMAG,NCN)),scrypt(SK1,crypt(KCN,MSG))))
 =>
 state_mnmag1(MNMAG1,MN,MNMAG2,CNMAG,CN,KCN,KMN,SK,SK1,SKMN,SKMN1,HASHE,NCNMAG,NCN,MSG,MNMAG2ADDR,MNADDR,PCOAMN,HOAMN,NMN,NMNMAG2,CONN1,CONN2,NMNMAG21,NMNMAG1,MNMAG1ADDR,10,SID).
 iknows(pair(apply(HASHE,pair(NCNMAG,NCN)),scrypt(SK1,crypt(KCN,MSG))))

step step_6 (MNMAG2,MN,MNMAG1,CNMAG,CN,KCN,KMN,SK,SK1,SKMN,SKMN1,HASHE,NCNMAG,NCN,MSG,Dummy_MNMAG2ADDR,Dummy_MNMAG1ADDR,MNADDR,Dummy_PCOAMN,Dummy_HOAMN,Dummy_NMN,Dummy_NMNMAG2,CONN1,CONN2,Dummy_NMNMAG21,NMNMAG1,Dummy_Set_114,SID,MNMAG2ADDR,MNMAG1ADDR,PCOAMN,HOAMN,NMN,NMNMAG2,NMNMAG21) :=
 state_mnmag2(MNMAG2,MN,MNMAG1,CNMAG,CN,KCN,KMN,SK,SK1,SKMN,SKMN1,HASHE,NCNMAG,NCN,MSG,Dummy_MNMAG2ADDR,Dummy_MNMAG1ADDR,MNADDR,Dummy_PCOAMN,Dummy_HOAMN,Dummy_NMN,Dummy_NMNMAG2,CONN1,CONN2,Dummy_NMNMAG21,NMNMAG1,2,Dummy_Set_114,SID).
 iknows(pair(MNADDR,pair(Dummy_MNMAG2ADDR,pair(Dummy_NMN,pair(scrypt(SK,pair(Dummy_PCOAMN,Dummy_NMN)),apply(HASHE,Dummy_NMN))))))
=[exists NMNMAG21,NMNMAG2,NMN,HOAMN,PCOAMN,MNMAG1ADDR,MNMAG2ADDR]=>
 state_mnmag2(MNMAG2,MN,MNMAG1,CNMAG,CN,KCN,KMN,SK,SK1,SKMN,SKMN1,HASHE,NCNMAG,NCN,MSG,MNMAG2ADDR,MNMAG1ADDR,MNADDR,PCOAMN,HOAMN,NMN,NMNMAG2,CONN1,CONN2,NMNMAG21,NMNMAG1,7,Dummy_Set_114,SID).
 iknows(pair(MNMAG2ADDR,pair(MNMAG1ADDR,pair(scrypt(SK,pair(PCOAMN,pair(HOAMN,NMN))),apply(HASHE,pair(NMNMAG2,NMN)))))).
 iknows(pair(Dummy_MNMAG2ADDR,pair(Dummy_MNMAG1ADDR,pair(scrypt(SK,pair(Dummy_PCOAMN,NMNMAG21)),apply(HASHE,pair(NMNMAG21,NMNMAG1)))))).
 secret(PCOAMN,pcoamn,Dummy_Set_114).
 witness(MNMAG2,MN,mn_mnmag2_pcoamn,PCOAMN).
 contains(MN,Dummy_Set_114).
 contains(MNMAG2,Dummy_Set_114)

step step_7 (MNMAG2,MN,MNMAG1,CNMAG,CN,KCN,KMN,SK,SK1,SKMN,SKMN1,HASHE,Dummy_NCNMAG,Dummy_NCN,Dummy_MSG,MNMAG2ADDR,MNMAG1ADDR,MNADDR,PCOAMN,HOAMN,NMN,NMNMAG2,CONN1,CONN2,NMNMAG21,NMNMAG1,Set_114,SID,NCNMAG,NCN,MSG) :=
 state_mnmag2(MNMAG2,MN,MNMAG1,CNMAG,CN,KCN,KMN,SK,SK1,SKMN,SKMN1,HASHE,Dummy_NCNMAG,Dummy_NCN,Dummy_MSG,MNMAG2ADDR,MNMAG1ADDR,MNADDR,PCOAMN,HOAMN,NMN,NMNMAG2,CONN1,CONN2,NMNMAG21,NMNMAG1,7,Set_114,SID).
 iknows(pair(apply(HASHE,pair(NCNMAG,NCN)),scrypt(SK1,crypt(KCN,MSG))))
 =>
 state_mnmag2(MNMAG2,MN,MNMAG1,CNMAG,CN,KCN,KMN,SK,SK1,SKMN,SKMN1,HASHE,NCNMAG,NCN,MSG,MNMAG2ADDR,MNMAG1ADDR,MNADDR,PCOAMN,HOAMN,NMN,NMNMAG2,CONN1,CONN2,NMNMAG21,NMNMAG1,12,Set_114,SID).
 iknows(pair(apply(HASHE,pair(NCNMAG,NCN)),scrypt(SK1,crypt(KCN,MSG))))

step step_8 (CNMAG,MN,MNMAG1,MNMAG2,CN,KCN,KMN,SK,SK1,SKMN,SKMN1,HASHE,Dummy_NCNMAG,Dummy_NCN,Dummy_MSG,MNADDR,PCOAMN,HOAMN,NMN,NMNMAG2,CONN1,CONN2,MNMAG1ADDR,MNMAG2DADDR,NMNMAG21,NMNMAG1,SID,NCNMAG,NCN,MSG) :=
 state_cnmag(CNMAG,MN,MNMAG1,MNMAG2,CN,KCN,KMN,SK,SK1,SKMN,SKMN1,HASHE,3,Dummy_NCNMAG,Dummy_NCN,Dummy_MSG,MNADDR,PCOAMN,HOAMN,NMN,NMNMAG2,CONN1,CONN2,MNMAG1ADDR,MNMAG2DADDR,NMNMAG21,NMNMAG1,SID).
 iknows(pair(apply(HASHE,pair(NCNMAG,NCN)),scrypt(SK1,crypt(KCN,MSG))))
 =>
 state_cnmag(CNMAG,MN,MNMAG1,MNMAG2,CN,KCN,KMN,SK,SK1,SKMN,SKMN1,HASHE,9,NCNMAG,NCN,MSG,MNADDR,PCOAMN,HOAMN,NMN,NMNMAG2,CONN1,CONN2,MNMAG1ADDR,MNMAG2DADDR,NMNMAG21,NMNMAG1,SID).
 iknows(pair(apply(HASHE,pair(NCNMAG,NCN)),scrypt(SK1,crypt(KCN,MSG))))

step step_9 (CN,MN,MNMAG1,MNMAG2,CNMAG,KCN,KMN,SK,SK1,SKMN,SKMN1,HASHE,Dummy_NCNMAG,Dummy_NCN,Dummy_MSG,MNADDR,PCOAMN,HOAMN,NMN,NMNMAG2,CONN1,CONN2,MNMAG1ADDR,MNMAG2DADDR,NMNMAG21,NMNMAG1,Dummy_Set_182,SID,NCNMAG,NCN,MSG) :=
 state_cn(CN,MN,MNMAG1,MNMAG2,CNMAG,KCN,KMN,SK,SK1,SKMN,SKMN1,HASHE,Dummy_NCNMAG,Dummy_NCN,Dummy_MSG,MNADDR,PCOAMN,HOAMN,NMN,NMNMAG2,CONN1,CONN2,MNMAG1ADDR,MNMAG2DADDR,NMNMAG21,NMNMAG1,4,Dummy_Set_182,SID).
 iknows(start)
=[exists MSG,NCN,NCNMAG]=>
 state_cn(CN,MN,MNMAG1,MNMAG2,CNMAG,KCN,KMN,SK,SK1,SKMN,SKMN1,HASHE,NCNMAG,NCN,MSG,MNADDR,PCOAMN,HOAMN,NMN,NMNMAG2,CONN1,CONN2,MNMAG1ADDR,MNMAG2DADDR,NMNMAG21,NMNMAG1,8,Dummy_Set_182,SID).
 iknows(pair(apply(HASHE,pair(NCNMAG,NCN)),scrypt(SK1,crypt(KCN,MSG)))).
 secret(MSG,msg,Dummy_Set_182).
 contains(CN,Dummy_Set_182).
 contains(CNMAG,Dummy_Set_182)


section properties:

property secrecy_of_pcoamn (MGoal,ASGoal) :=
 [] ((secret(MGoal,pcoamn,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_msg (MGoal,ASGoal) :=
 [] ((secret(MGoal,msg,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property authentication_on_mn_mnmag2_pcoamn (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,mn_mnmag2_pcoamn,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,mn_mnmag2_pcoamn,MGoal))
     /\ ((request(A1Goal,A2Goal,mn_mnmag2_pcoamn,MGoal,SID1)
           /\ request(A1Goal,A2Goal,mn_mnmag2_pcoamn,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state secrecy_of_pcoamn (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,pcoamn,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_msg (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,msg,ASGoal) &
 not(contains(i,ASGoal))

attack_state authentication_on_mn_mnmag2_pcoamn (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,mn_mnmag2_pcoamn,MGoal,SID) &
 not(witness(A2Goal,A1Goal,mn_mnmag2_pcoamn,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_mn_mnmag2_pcoamn (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,mn_mnmag2_pcoamn,MGoal,SID1).
 request(A1Goal,A2Goal,mn_mnmag2_pcoamn,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

