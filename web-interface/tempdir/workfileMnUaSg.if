%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfileMnUaSg

section signature:

state_sl: agent * agent * hash_func * nat * hash_func * hash_func * hash_func * hash_func * hash_func * text * text * text * text * text * text * text * text * text * text * text * text * text * public_key * set(text) * set(agent) * set(text) * set(agent) * nat -> fact
state_client: agent * agent * hash_func * nat * text * text * text * text * text * text * text * text * text * text * text * text * hash_func * hash_func * hash_func * hash_func * public_key * set(inv(public_key)) * set(agent) * nat -> fact


section types:

Set_70, Set_68, Dummy_Set_70, Dummy_Set_68: set(text)
alice_bob_xa_, sub2, alice_bob_xa, bob_alice_xb, pri_a, sub1: protocol_id
Set_37, Dummy_Set_37: set(inv(public_key))
set_147, set_146, set_145, set_144, set_142, set_141, set_128, set_127, set_126, set_125, set_115, set_114: set
QA, Dummy_QA, dummy_pk: public_key
Add, Mul, Mac, Demac, Xfun, Hash, dummy_hash: hash_func
7, State, 6, 2, 1, 0, 4, SID, Dummy_State, 3, SID2, SID1: nat
Set_71, Set_69, Set_38, Dummy_Set_71, Dummy_Set_69, Dummy_Set_38, ASGoal: set(agent)
start, MGoal: message
a, b, A, S, A2Goal, A1Goal, i: agent
P, Q, EA, Reply, CA, ACA, TA, ZR, YR, ZZR, R, RR, Na, Dummy_Reply, Dummy_Na, Dummy_R, Dummy_ZZR, Dummy_YR, Dummy_EA, Dummy_ZR, Dummy_ACA, Dummy_CA, dummy_nonce, p, q, qa: text


section inits:

initial_state init1 := 
 iknows(start).
 iknows(p).
 iknows(q).
 iknows(i).
 state_client(a,b,dummy_hash,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_hash,dummy_hash,dummy_hash,dummy_hash,dummy_pk,set_114,set_115,3).
 state_sl(b,a,dummy_hash,0,dummy_hash,dummy_hash,dummy_hash,dummy_hash,dummy_hash,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_pk,set_125,set_126,set_127,set_128,4).
 state_client(a,b,dummy_hash,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_hash,dummy_hash,dummy_hash,dummy_hash,dummy_pk,set_141,set_142,6).
 state_sl(b,a,dummy_hash,0,dummy_hash,dummy_hash,dummy_hash,dummy_hash,dummy_hash,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_pk,set_144,set_145,set_146,set_147,7)


section rules:

step step_0 (A,S,Hash,P,Q,Reply,Dummy_CA,Dummy_ACA,TA,ZR,YR,ZZR,R,RR,Na,Add,Mul,Mac,Xfun,Dummy_QA,Set_37,Set_38,SID,CA,ACA,QA) :=
 state_client(A,S,Hash,0,P,Q,Reply,Dummy_CA,Dummy_ACA,TA,ZR,YR,ZZR,R,RR,Na,Add,Mul,Mac,Xfun,Dummy_QA,Set_37,Set_38,SID).
 iknows(start)
=[exists QA,CA,ACA]=>
 state_client(A,S,Hash,1,P,Q,Reply,CA,ACA,TA,ZR,YR,ZZR,R,RR,Na,Add,Mul,Mac,Xfun,QA,Set_37,Set_38,SID).
 iknows(pair(Dummy_CA,Dummy_ACA)).
 iknows(pair(ZZR,pair(YR,apply(Mac,pair(R,Na))))).
 witness(A,S,alice_bob_xa,CA)

step step_1 (A,S,Hash,P,Q,Reply,CA,ACA,TA,Dummy_ZR,YR,ZZR,R,RR,Na,Add,Mul,Mac,Xfun,QA,Dummy_Set_37,Dummy_Set_38,SID) :=
 state_client(A,S,Hash,1,P,Q,Reply,CA,ACA,TA,Dummy_ZR,YR,ZZR,R,RR,Na,Add,Mul,Mac,Xfun,QA,Dummy_Set_37,Dummy_Set_38,SID)
 =>
 state_client(A,S,Hash,2,P,Q,Reply,CA,ACA,TA,apply(Mul,pair(inv(QA),YR)),YR,ZZR,R,RR,Na,Add,Mul,Mac,Xfun,QA,Dummy_Set_37,Dummy_Set_38,SID).
 secret(Dummy_Set_37,pri_a,Dummy_Set_38).
 iknows(apply(Mac,pair(R,pair(Na,ACA)))).
 iknows(pair(R,Reply)).
 contains(inv(QA),Dummy_Set_37).
 contains(A,Dummy_Set_38)

step step_2 (S,A,Hash,Add,Mul,Mac,Demac,Xfun,P,Q,Dummy_EA,Reply,CA,ACA,TA,Dummy_ZR,Dummy_YR,Dummy_ZZR,Dummy_R,RR,Dummy_Na,Dummy_QA,Dummy_Set_68,Dummy_Set_69,Dummy_Set_70,Dummy_Set_71,SID,EA,R,Na) :=
 state_sl(S,A,Hash,0,Add,Mul,Mac,Demac,Xfun,P,Q,Dummy_EA,Reply,CA,ACA,TA,Dummy_ZR,Dummy_YR,Dummy_ZZR,Dummy_R,RR,Dummy_Na,Dummy_QA,Dummy_Set_68,Dummy_Set_69,Dummy_Set_70,Dummy_Set_71,SID).
 iknows(pair(CA,ACA))
=[exists Na,R,EA]=>
 state_sl(S,A,Hash,1,Add,Mul,Mac,Demac,Xfun,P,Q,EA,Reply,CA,ACA,TA,apply(Mul,pair(apply(Hash,R),apply(Mul,pair(EA,pair(CA,Q))))),apply(Mul,pair(apply(Hash,R),P)),xor(R,apply(Xfun,apply(Mul,pair(apply(Hash,R),apply(Mul,pair(EA,pair(CA,Q))))))),R,RR,Na,apply(Mul,pair(EA,pair(CA,Q))),Dummy_Set_68,Dummy_Set_69,Dummy_Set_70,Dummy_Set_71,SID).
 secret(Dummy_Set_68,sub1,Dummy_Set_69).
 secret(Dummy_Set_70,sub2,Dummy_Set_71).
 iknows(pair(xor(R,apply(Xfun,apply(Mul,pair(apply(Hash,R),apply(Mul,pair(EA,pair(CA,Q))))))),pair(apply(Mul,pair(apply(Hash,R),P)),apply(Mac,pair(R,Na))))).
 witness(S,A,alice_bob_xa_,xor(R,apply(Xfun,apply(Mul,pair(apply(Hash,R),apply(Mul,pair(EA,pair(CA,Q)))))))).
 contains(R,Dummy_Set_68).
 contains(S,Dummy_Set_69).
 contains(A,Dummy_Set_69).
 contains(Na,Dummy_Set_70).
 contains(S,Dummy_Set_71).
 contains(A,Dummy_Set_71)

step step_3 (S,A,Hash,Add,Mul,Mac,Demac,Xfun,P,Q,EA,Dummy_Reply,CA,ACA,TA,ZR,YR,ZZR,Dummy_R,RR,Dummy_Na,QA,Set_68,Set_69,Set_70,Set_71,SID,Reply,R,Na) :=
 state_sl(S,A,Hash,1,Add,Mul,Mac,Demac,Xfun,P,Q,EA,Dummy_Reply,CA,ACA,TA,ZR,YR,ZZR,Dummy_R,RR,Dummy_Na,QA,Set_68,Set_69,Set_70,Set_71,SID).
 iknows(apply(Mac,pair(R,pair(Na,ACA))))
=[exists Reply]=>
 state_sl(S,A,Hash,2,Add,Mul,Mac,Demac,Xfun,P,Q,EA,Reply,CA,ACA,TA,ZR,YR,ZZR,R,RR,Na,QA,Set_68,Set_69,Set_70,Set_71,SID).
 iknows(pair(R,Reply))


section properties:

property secrecy_of_sub1 (MGoal,ASGoal) :=
 [] ((secret(MGoal,sub1,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_sub2 (MGoal,ASGoal) :=
 [] ((secret(MGoal,sub2,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_pri_a (MGoal,ASGoal) :=
 [] ((secret(MGoal,pri_a,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property authentication_on_alice_bob_xa (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,alice_bob_xa,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,alice_bob_xa,MGoal))
     /\ ((request(A1Goal,A2Goal,alice_bob_xa,MGoal,SID1)
           /\ request(A1Goal,A2Goal,alice_bob_xa,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_bob_alice_xb (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,bob_alice_xb,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,bob_alice_xb,MGoal))
     /\ ((request(A1Goal,A2Goal,bob_alice_xb,MGoal,SID1)
           /\ request(A1Goal,A2Goal,bob_alice_xb,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_alice_bob_xa_ (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,alice_bob_xa_,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,alice_bob_xa_,MGoal))
     /\ ((request(A1Goal,A2Goal,alice_bob_xa_,MGoal,SID1)
           /\ request(A1Goal,A2Goal,alice_bob_xa_,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state secrecy_of_sub1 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sub1,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_sub2 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sub2,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_pri_a (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,pri_a,ASGoal) &
 not(contains(i,ASGoal))

attack_state authentication_on_alice_bob_xa (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,alice_bob_xa,MGoal,SID) &
 not(witness(A2Goal,A1Goal,alice_bob_xa,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_alice_bob_xa (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,alice_bob_xa,MGoal,SID1).
 request(A1Goal,A2Goal,alice_bob_xa,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_bob_alice_xb (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,bob_alice_xb,MGoal,SID) &
 not(witness(A2Goal,A1Goal,bob_alice_xb,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_bob_alice_xb (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,bob_alice_xb,MGoal,SID1).
 request(A1Goal,A2Goal,bob_alice_xb,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_alice_bob_xa_ (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,alice_bob_xa_,MGoal,SID) &
 not(witness(A2Goal,A1Goal,alice_bob_xa_,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_alice_bob_xa_ (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,alice_bob_xa_,MGoal,SID1).
 request(A1Goal,A2Goal,alice_bob_xa_,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

