%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfilef5H5aA

section signature:

state_bob: agent * agent * hash_func * public_key * public_key * nat * nat * nat * nat * symmetric_key * message * message * nat -> fact
state_alice: agent * agent * hash_func * public_key * public_key * nat * nat * nat * nat * symmetric_key * message * message * scrypt(symmetric_key,pair(text,pair(text,pair(message,pair(message,nat))))) * nat -> fact


section types:

dummy_nonce: text
Dummy_Commit, Commit: scrypt(symmetric_key,pair(text,pair(text,pair(message,pair(message,nat)))))
Ska, Skb, Dummy_Skb, Dummy_Ska, dummy_msg, start, MGoal: message
Kb, Dummy_Kb, dummy_sk: symmetric_key
b_a_skb, a_b_ska, rb: protocol_id
5, Rat, Rbt, Rb, State, 10, 6, Dummy_Rb, 4, SID, Dummy_State, 3, 2, dummy_nat, 1, 0, SID2, SID1: nat
Pka, Pkb, ka, kb, ki: public_key
Hash, h: hash_func
A, B, A2Goal, A1Goal, a, b, i: agent


section inits:

initial_state init1 := 
 iknows(start).
 iknows(a).
 iknows(b).
 iknows(ka).
 iknows(kb).
 iknows(ki).
 iknows(inv(ki)).
 iknows(i).
 state_alice(a,b,h,ka,kb,0,dummy_nat,dummy_nat,dummy_nat,dummy_sk,dummy_msg,dummy_msg,scrypt(dummy_sk,pair(dummy_nonce,pair(dummy_nonce,pair(dummy_msg,pair(dummy_msg,dummy_nat))))),3).
 state_bob(b,a,h,ka,kb,1,dummy_nat,dummy_nat,dummy_nat,dummy_sk,dummy_msg,dummy_msg,4).
 state_alice(a,i,h,ka,ki,0,dummy_nat,dummy_nat,dummy_nat,dummy_sk,dummy_msg,dummy_msg,scrypt(dummy_sk,pair(dummy_nonce,pair(dummy_nonce,pair(dummy_msg,pair(dummy_msg,dummy_nat))))),6).
 state_bob(b,i,h,ki,kb,1,dummy_nat,dummy_nat,dummy_nat,dummy_sk,dummy_msg,dummy_msg,10)


section rules:

step step_0 (A,B,Hash,Pka,Pkb,Rat,Rbt,Rb,Kb,Dummy_Ska,Skb,Commit,SID,Ska) :=
 state_alice(A,B,Hash,Pka,Pkb,0,Rat,Rbt,Rb,Kb,Dummy_Ska,Skb,Commit,SID).
 iknows(start)
=[exists Ska]=>
 state_alice(A,B,Hash,Pka,Pkb,2,Rat,Rbt,Rb,Kb,Ska,Skb,Commit,SID).
 iknows(pair(A,Ska))

step step_1 (A,B,Hash,Pka,Pkb,Rat,Rbt,Rb,Kb,Ska,Dummy_Skb,Dummy_Commit,SID,Skb,Commit) :=
 state_alice(A,B,Hash,Pka,Pkb,2,Rat,Rbt,Rb,Kb,Ska,Dummy_Skb,Dummy_Commit,SID).
 iknows(pair(B,pair(Skb,Commit)))
 =>
 state_alice(A,B,Hash,Pka,Pkb,4,Rat,Rbt,Rb,Kb,Ska,Skb,Commit,SID).
 iknows(pair(Rb,crypt(Pka,pair(A,pair(B,crypt(inv(Pkb),apply(Hash,Rb)))))))

step step_2 (A,B,Hash,Pka,Pkb,Rat,Rbt,Rb,Kb,Ska,Skb,Commit,SID) :=
 state_alice(A,B,Hash,Pka,Pkb,4,Rat,Rbt,Rb,Kb,Ska,Skb,Commit,SID).
 iknows(Kb)
 =>
 state_alice(A,B,Hash,Pka,Pkb,6,Rat,Rbt,Rb,Kb,Ska,Skb,Commit,SID).
 request(A,B,a_b_ska,Ska,SID).
 request(A,B,a_b_skb,Skb,SID)

step step_3 (B,A,Hash,Pka,Pkb,Rat,Rbt,Dummy_Rb,Dummy_Kb,Dummy_Ska,Dummy_Skb,SID,Rb,Kb,Ska,Skb) :=
 state_bob(B,A,Hash,Pka,Pkb,1,Rat,Rbt,Dummy_Rb,Dummy_Kb,Dummy_Ska,Dummy_Skb,SID).
 iknows(pair(A,Ska))
=[exists Kb,Rb,Skb]=>
 state_bob(B,A,Hash,Pka,Pkb,3,Rat,Rbt,Rb,Kb,Ska,Skb,SID).
 iknows(pair(B,pair(Skb,scrypt(Kb,pair(A,pair(B,pair(Ska,pair(Skb,Rb))))))))

step step_4 (B,A,Hash,Pka,Pkb,Rat,Rbt,Rb,Kb,Ska,Skb,SID) :=
 state_bob(B,A,Hash,Pka,Pkb,3,Rat,Rbt,Rb,Kb,Ska,Skb,SID).
 iknows(pair(Rb,crypt(Pka,pair(A,pair(B,crypt(inv(Pkb),apply(Hash,Rb)))))))
 =>
 state_bob(B,A,Hash,Pka,Pkb,5,Rat,Rbt,Rb,Kb,Ska,Skb,SID).
 iknows(Kb).
 witness(B,A,a_b_ska,Ska)


section properties:

property authentication_on_a_b_ska (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,a_b_ska,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,a_b_ska,MGoal))
     /\ ((request(A1Goal,A2Goal,a_b_ska,MGoal,SID1)
           /\ request(A1Goal,A2Goal,a_b_ska,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_a_b_skb (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,a_b_skb,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,a_b_skb,MGoal))
     /\ ((request(A1Goal,A2Goal,a_b_skb,MGoal,SID1)
           /\ request(A1Goal,A2Goal,a_b_skb,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state authentication_on_a_b_ska (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,a_b_ska,MGoal,SID) &
 not(witness(A2Goal,A1Goal,a_b_ska,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_a_b_ska (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,a_b_ska,MGoal,SID1).
 request(A1Goal,A2Goal,a_b_ska,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_a_b_skb (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,a_b_skb,MGoal,SID) &
 not(witness(A2Goal,A1Goal,a_b_skb,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_a_b_skb (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,a_b_skb,MGoal,SID1).
 request(A1Goal,A2Goal,a_b_skb,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

