%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfilemraIxc

section signature:

state_responder: agent * agent * hash_func * hash_func * nat * text * text * text * text * text * text * text * text * text * set(text) * nat -> fact
state_initiator: agent * agent * hash_func * hash_func * nat * text * text * text * text * text * text * text * text * nat -> fact


section types:

Dummy_Set_46, Set_46: set(text)
set_99, set_92: set
ASGoal: set(agent)
MGoal, start: message
sub2, sub3, sub1: protocol_id
Dummy_MACVAL, TC, Dummy_T, R, T, U, Tdash, Dummy_V, Idash, V, MACVAL, V2, dummy_nonce, tc, r, t, u, tdash, idash, v, macval, v2: text
H, MAC, h, mac: hash_func
A2Goal, A1Goal, WBAN, AP, wban, ap, i: agent
6, 4, SID, Dummy_State, 3, State, SID2, SID1, 2, 1, 0, 7: nat


section inits:

initial_state init1 := 
 iknows(start).
 iknows(i).
 state_initiator(wban,ap,h,mac,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,3).
 state_responder(ap,wban,h,mac,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_92,4).
 state_initiator(wban,ap,h,mac,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,6).
 state_responder(ap,wban,h,mac,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_99,7)


section rules:

step step_0 (WBAN,AP,H,MAC,TC,R,T,U,Tdash,Idash,Dummy_V,MACVAL,SID) :=
 state_initiator(WBAN,AP,H,MAC,0,TC,R,T,U,Tdash,Idash,Dummy_V,MACVAL,SID).
 iknows(start)
 =>
 state_initiator(WBAN,AP,H,MAC,1,TC,R,T,U,Tdash,Idash,apply(H,pair(pair(TC,R),T)),MACVAL,SID).
 iknows(pair(Dummy_V,pair(U,pair(TC,pair(Tdash,Idash))))).
 secret(T,sub2,WBAN)

step step_1 (WBAN,AP,H,MAC,TC,R,T,U,Tdash,Idash,V,MACVAL,SID) :=
 state_initiator(WBAN,AP,H,MAC,1,TC,R,T,U,Tdash,Idash,V,MACVAL,SID).
 iknows(MACVAL)
 =>
 state_initiator(WBAN,AP,H,MAC,2,TC,R,T,U,Tdash,Idash,V,MACVAL,SID).
 request(AP,WBAN,sub3,MACVAL,SID)

step step_2 (AP,WBAN,H,MAC,TC,R,Dummy_T,U,Tdash,Idash,Dummy_V,Dummy_MACVAL,V2,Dummy_Set_46,SID,T,V) :=
 state_responder(AP,WBAN,H,MAC,0,TC,R,Dummy_T,U,Tdash,Idash,Dummy_V,Dummy_MACVAL,V2,Dummy_Set_46,SID).
 iknows(pair(Dummy_V,pair(U,pair(TC,pair(Tdash,Idash)))))
=[exists T,V]=>
 state_responder(AP,WBAN,H,MAC,1,TC,R,T,U,Tdash,Idash,V,apply(MAC,Dummy_V),V2,Dummy_Set_46,SID).
 secret(Dummy_Set_46,sub1,AP).
 iknows(Dummy_MACVAL).
 witness(WBAN,AP,sub3,Dummy_MACVAL).
 contains(T,Dummy_Set_46)


section properties:

property secrecy_of_sub1 (MGoal,ASGoal) :=
 [] ((secret(MGoal,sub1,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_sub2 (MGoal,ASGoal) :=
 [] ((secret(MGoal,sub2,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property authentication_on_sub3 (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,sub3,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,sub3,MGoal))
     /\ ((request(A1Goal,A2Goal,sub3,MGoal,SID1)
           /\ request(A1Goal,A2Goal,sub3,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state secrecy_of_sub1 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sub1,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_sub2 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sub2,ASGoal) &
 not(contains(i,ASGoal))

attack_state authentication_on_sub3 (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,sub3,MGoal,SID) &
 not(witness(A2Goal,A1Goal,sub3,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_sub3 (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,sub3,MGoal,SID1).
 request(A1Goal,A2Goal,sub3,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

