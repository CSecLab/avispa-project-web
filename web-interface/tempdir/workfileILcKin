role reader ( R,T: agent, 
               DID : text,
			   G : hash_func,
			   Kg : public_key,
               Snd,Rec: channel(dy))
    played_by R
    def=
      local  State  : nat,
             Nr, E,DP : text
            
            init State := 0 
      transition
       1. State = 0
          /\ Rec(start)  =|>  State' := 1
          /\ Nr' := new() 
          /\ Snd(Nr') 
          /\ witness(R,T,aut_reader,Nr')
       2. State = 1
          /\ Rec({xor(DID,E')}_Kg.G(Nr.E'.DID))
          =|>  State' := 2 /\ DP':=new() /\ Snd(xor(DP',E').G(Nr.E'.DP'))
          /\ request(R,T,aut_tag,E')
    
end role

role tag ( T,R: agent, 
               DID: text,
               G : hash_func,
			   Kg : public_key,
               Snd,Rec: channel(dy))
    played_by T
    def=
      local  State  : nat,
             Nr, E,DP : text
      init State := 0       
      transition
       1. State = 0 /\ Rec(Nr') 
          =|>
          State' := 1
        /\ E' := new()   
        /\ Snd({xor(DID,E')}_Kg.G(Nr'.E'.DID))
        /\ witness(T,R,aut_tag,E')
        
       2. State = 1 /\ Rec(xor(DP',E).G(Nr.E.DP'))
          =|> 
          State' := 2       
        /\ request(T,R,aut_reader,Nr)      
end role

role session(R,T: agent, 
               DID: text,
               G : hash_func,
			   Kg : public_key) 
def=
local Se,Re,Sf,Rf : channel(dy)
const aut_reader, aut_tag : protocol_id
composition
tag(T,R,DID,G,Kg,Se,Re)
/\ reader(R,T,DID,G,Kg,Sf,Rf)
end role

role environment() def=
const t,r,i : agent,
      did,didti,didri : text,
	  g : hash_func,
	  kg,kri,kti : public_key
intruder_knowledge = {t,r,i,g,kg,didri,didti, kri,kti}
composition
session(r,t,did,g,kg)  /\
session(i,t,didri,g,kri)  /\
session(r,i,didti,g,kti)  
end role

    goal
     authentication_on aut_reader
     authentication_on aut_tag
    end goal

    environment()
