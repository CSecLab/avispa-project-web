%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfilePSzS0O

section signature:

state_server: agent * agent * symmetric_key * hash_func * nat * text * text * text * text * text * text * text * text * text * text * text * set(agent) * set(agent) * nat -> fact
state_user: agent * agent * symmetric_key * hash_func * nat * text * text * text * text * text * text * text * text * text * text * text * set(text) * set(agent) * set(symmetric_key) * set(agent) * nat -> fact


section types:

Dummy_Set_73, Set_73: set(text)
MGoal, start: message
user_server_na, server_user_nb, subs1, subs2: protocol_id
Dummy_State, 3, SID, SID2, SID1, 8, 6, 4, 0, State, 5, 2, 1: nat
set_94, set_93, set_92, set_91, set_112, set_111: set
dummy_hash, Hash, h: hash_func
dummy_sk, SKus: symmetric_key
Dummy_PWi, dummy_nonce, PWi, Ni, Y, Na, CID, Bi, Ci, Nb, Ack, Ni_new, PWi_new, HPWi, Dummy_Nb, Dummy_X, X, Dummy_PWi_new, Dummy_Ni_new, Dummy_Ci, Dummy_Bi, Dummy_CID, Dummy_Na, Dummy_Y, Dummy_Ni: text
A2Goal, A1Goal, U, S, u, s, i: agent
Dummy_Set_74, ASGoal, Set_76, Set_74, Set_31, Set_29, Dummy_Set_31, Dummy_Set_29, Dummy_Set_76: set(agent)
Set_75, Dummy_Set_75: set(symmetric_key)


section inits:

initial_state init1 := 
 iknows(start).
 iknows(u).
 iknows(s).
 iknows(h).
 iknows(i).
 state_user(u,s,dummy_sk,dummy_hash,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_91,set_92,set_93,set_94,3).
 state_server(s,u,dummy_sk,dummy_hash,1,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_111,set_112,4)


section rules:

step step_0 (U,S,SKus,Hash,Dummy_PWi,Ni,Y,Na,CID,Bi,Ci,Nb,Ack,Ni_new,PWi_new,Dummy_Set_73,Dummy_Set_74,Dummy_Set_75,Dummy_Set_76,SID,PWi) :=
 state_user(U,S,SKus,Hash,0,Dummy_PWi,Ni,Y,Na,CID,Bi,Ci,Nb,Ack,Ni_new,PWi_new,Dummy_Set_73,Dummy_Set_74,Dummy_Set_75,Dummy_Set_76,SID).
 iknows(start)
=[exists PWi]=>
 state_user(U,S,SKus,Hash,2,PWi,Ni,Y,Na,CID,Bi,Ci,Nb,Ack,Ni_new,PWi_new,Dummy_Set_73,Dummy_Set_74,Dummy_Set_75,Dummy_Set_76,SID).
 iknows(scrypt(SKus,PWi)).
 secret(Dummy_Set_73,subs1,Dummy_Set_74).
 secret(Dummy_Set_75,subs2,Dummy_Set_76).
 contains(PWi,Dummy_Set_73).
 contains(U,Dummy_Set_74).
 contains(S,Dummy_Set_74).
 contains(SKus,Dummy_Set_75).
 contains(U,Dummy_Set_76).
 contains(S,Dummy_Set_76)

step step_1 (U,S,SKus,Hash,PWi,Dummy_Ni,Dummy_Y,Na,CID,Bi,Ci,Nb,Ack,Ni_new,PWi_new,Set_73,Set_74,Set_75,Set_76,SID,Ni,Y) :=
 state_user(U,S,SKus,Hash,2,PWi,Dummy_Ni,Dummy_Y,Na,CID,Bi,Ci,Nb,Ack,Ni_new,PWi_new,Set_73,Set_74,Set_75,Set_76,SID).
 iknows(scrypt(SKus,pair(PWi,pair(Hash,pair(Ni,Y)))))
 =>
 state_user(U,S,SKus,Hash,4,PWi,Ni,Y,Na,CID,Bi,Ci,Nb,Ack,Ni_new,PWi_new,Set_73,Set_74,Set_75,Set_76,SID)

step step_2 (U,S,SKus,Hash,Dummy_PWi,Dummy_Ni,Dummy_Y,Dummy_Na,Dummy_CID,Dummy_Bi,Dummy_Ci,Nb,Ack,Ni_new,PWi_new,Set_73,Set_74,Set_75,Set_76,SID,PWi,Ni,Y,Na) :=
 state_user(U,S,SKus,Hash,4,Dummy_PWi,Dummy_Ni,Dummy_Y,Dummy_Na,Dummy_CID,Dummy_Bi,Dummy_Ci,Nb,Ack,Ni_new,PWi_new,Set_73,Set_74,Set_75,Set_76,SID).
 iknows(scrypt(SKus,pair(PWi,pair(Hash,pair(Ni,Y)))))
=[exists Na]=>
 state_user(U,S,SKus,Hash,6,PWi,Ni,Y,Na,xor(apply(Hash,PWi),apply(Hash,xor(Ni,xor(Y,Na)))),apply(Hash,xor(xor(apply(Hash,PWi),apply(Hash,xor(Ni,xor(Y,Na)))),apply(Hash,Dummy_PWi))),apply(Hash,xor(Na,xor(Ni,xor(apply(Hash,xor(xor(apply(Hash,PWi),apply(Hash,xor(Ni,xor(Y,Na)))),apply(Hash,Dummy_PWi))),Y)))),Nb,Ack,Ni_new,PWi_new,Set_73,Set_74,Set_75,Set_76,SID).
 witness(U,S,user_server_na,Na).
 iknows(pair(xor(apply(Hash,PWi),apply(Hash,xor(Ni,xor(Y,Na)))),pair(Ni,pair(apply(Hash,xor(Na,xor(Ni,xor(apply(Hash,xor(xor(apply(Hash,PWi),apply(Hash,xor(Ni,xor(Y,Na)))),apply(Hash,Dummy_PWi))),Y)))),Na))))

step step_3 (U,S,SKus,Hash,PWi,Dummy_Ni,Y,Na,CID,Bi,Ci,Nb,Ack,Dummy_Ni_new,Dummy_PWi_new,Set_73,Set_74,Set_75,Set_76,SID,PWi_new) :=
 state_user(U,S,SKus,Hash,6,PWi,Dummy_Ni,Y,Na,CID,Bi,Ci,Nb,Ack,Dummy_Ni_new,Dummy_PWi_new,Set_73,Set_74,Set_75,Set_76,SID)
=[exists PWi_new]=>
 state_user(U,S,SKus,Hash,8,PWi,xor(Ni,xor(apply(Hash,PWi),apply(Hash,PWi_new))),Y,Na,CID,Bi,Ci,Nb,Ack,xor(xor(Ni,xor(apply(Hash,PWi),apply(Hash,PWi_new))),xor(apply(Hash,PWi),apply(Hash,PWi_new))),PWi_new,Set_73,Set_74,Set_75,Set_76,SID)

step step_4 (S,U,SKus,Hash,Na,CID,Bi,Dummy_PWi,Nb,HPWi,Ack,Dummy_Ni,Dummy_Y,Dummy_X,Ci,Dummy_Set_29,Dummy_Set_31,SID,PWi,Y,X) :=
 state_server(S,U,SKus,Hash,1,Na,CID,Bi,Dummy_PWi,Nb,HPWi,Ack,Dummy_Ni,Dummy_Y,Dummy_X,Ci,Dummy_Set_29,Dummy_Set_31,SID).
 iknows(scrypt(SKus,PWi))
=[exists Y,X]=>
 state_server(S,U,SKus,Hash,3,Na,CID,Bi,PWi,Nb,HPWi,Ack,xor(PWi,X),Y,X,Ci,Dummy_Set_29,Dummy_Set_31,SID).
 secret(X,subs1,Dummy_Set_29).
 secret(Y,subs2,Dummy_Set_31).
 iknows(scrypt(SKus,pair(PWi,pair(Hash,pair(xor(PWi,X),Y))))).
 contains(S,Dummy_Set_29).
 contains(U,Dummy_Set_31).
 contains(S,Dummy_Set_31)

step step_5 (S,U,SKus,Hash,Dummy_Na,Dummy_CID,Bi,PWi,Dummy_Nb,HPWi,Ack,Dummy_Ni,Y,X,Dummy_Ci,Set_29,Set_31,SID,Na,CID,Nb,Ni,Ci) :=
 state_server(S,U,SKus,Hash,3,Dummy_Na,Dummy_CID,Bi,PWi,Dummy_Nb,HPWi,Ack,Dummy_Ni,Y,X,Dummy_Ci,Set_29,Set_31,SID).
 iknows(pair(CID,pair(Ni,pair(Ci,Na))))
=[exists Nb]=>
 state_server(S,U,SKus,Hash,5,Na,CID,Bi,PWi,Nb,HPWi,Ack,Ni,Y,X,Ci,Set_29,Set_31,SID).
 request(S,U,user_server_na,Na,SID)


section properties:

property secrecy_of_subs1 (MGoal,ASGoal) :=
 [] ((secret(MGoal,subs1,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_subs2 (MGoal,ASGoal) :=
 [] ((secret(MGoal,subs2,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property authentication_on_user_server_na (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,user_server_na,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,user_server_na,MGoal))
     /\ ((request(A1Goal,A2Goal,user_server_na,MGoal,SID1)
           /\ request(A1Goal,A2Goal,user_server_na,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_server_user_nb (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,server_user_nb,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,server_user_nb,MGoal))
     /\ ((request(A1Goal,A2Goal,server_user_nb,MGoal,SID1)
           /\ request(A1Goal,A2Goal,server_user_nb,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state secrecy_of_subs1 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,subs1,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_subs2 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,subs2,ASGoal) &
 not(contains(i,ASGoal))

attack_state authentication_on_user_server_na (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,user_server_na,MGoal,SID) &
 not(witness(A2Goal,A1Goal,user_server_na,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_user_server_na (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,user_server_na,MGoal,SID1).
 request(A1Goal,A2Goal,user_server_na,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_server_user_nb (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,server_user_nb,MGoal,SID) &
 not(witness(A2Goal,A1Goal,server_user_nb,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_server_user_nb (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,server_user_nb,MGoal,SID1).
 request(A1Goal,A2Goal,server_user_nb,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

