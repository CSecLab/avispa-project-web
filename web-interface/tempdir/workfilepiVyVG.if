%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfilepiVyVG

section signature:

state_bank: agent * agent * symmetric_key * text * text * text * text * text * text * text * text * text * text * text * hash_func * nat * text * text * text * text * text * public_key * public_key * message * message * message * set(agent) * set(text) * set(text) * set(agent) * nat -> fact
state_payer: agent * agent * symmetric_key * text * text * text * text * text * text * text * text * text * text * text * hash_func * nat * text * text * text * text * text * public_key * public_key * message * message * message * set(text) * set(text) * set(agent) * set(text) * set(agent) * nat -> fact


section types:

Set_86, Set_85, Dummy_Set_86, Dummy_Set_85, Dummy_Set_48, Dummy_Set_43, Dummy_Set_42, Set_48, Set_43, Set_42: set(text)
set_189, set_188, set_187, set_186, set_184, set_183, set_182, set_181, set_180, set_178, set_177, set_176, set_175, set_174, set_173, set_172, set_171, set_170, set_163, set_162, set_161, set_160, set_141, set_140, set_139, set_138, set_137: set
Set_87, Set_83, Dummy_Set_87, Dummy_Set_83, Dummy_Set_49, Dummy_Set_44, Set_49, Set_44, ASGoal: set(agent)
KB, KPr, dummy_pk: public_key
Amount, Payment_success, Payment_failure, dummy_msg, start, MGoal: message
7, 5, 9, State, 4, SID, 6, 3, Dummy_State, 2, 1, 0, SID2, SID1: nat
Hash, dummy_hash: hash_func
NPr, NB, DATE, Alpha, Beta, Pr_id, Pr_ph, Pe_ph, Bank_info, Pe_id, Prm_mid, Prm_pin, Pem_mid, Dummy_Beta, B_name, Place_branch, B_code, Dummy_Alpha, Dummy_NB, Dummy_Pe_id, Dummy_NPr, Dummy_Bank_info, Dummy_Pr_id, dummy_nonce, prid, prph, peph, bi, paye_id, pr_mmid, pr_mpin, pe_mmid, bname, pbranch, bcode: text
Skb, skbb: symmetric_key
nb, bank_payer_nb, bank_payer_skb, bank, npr, skb, payer_bank_npr, payer_bank_skb, payer_bank_NPr, payer_bank_Skb, bank_payer_NB, bank_payer_Skb, payer: protocol_id
Pr, B, A2Goal, A1Goal, prr, ba, i: agent


section inits:

initial_state init1 := 
 iknows(start).
 iknows(prr).
 iknows(ba).
 iknows(skbb).
 iknows(prid).
 iknows(prph).
 iknows(peph).
 iknows(bi).
 iknows(paye_id).
 iknows(i).
 state_payer(prr,ba,skbb,prid,prph,peph,bi,paye_id,pr_mmid,pr_mpin,pe_mmid,bname,pbranch,bcode,dummy_hash,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_pk,dummy_pk,dummy_msg,dummy_msg,dummy_msg,set_137,set_138,set_139,set_140,set_141,3).
 state_bank(ba,prr,skbb,prid,prph,peph,bi,paye_id,pr_mmid,pr_mpin,pe_mmid,bname,pbranch,bcode,dummy_hash,1,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_pk,dummy_pk,dummy_msg,dummy_msg,dummy_msg,set_160,set_161,set_162,set_163,4).
 state_bank(prr,i,skbb,prid,prph,peph,bi,paye_id,pr_mmid,pr_mpin,pe_mmid,bname,pbranch,bcode,dummy_hash,1,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_pk,dummy_pk,dummy_msg,dummy_msg,dummy_msg,set_175,set_176,set_177,set_178,7).
 state_payer(ba,i,skbb,prid,prph,peph,bi,paye_id,pr_mmid,pr_mpin,pe_mmid,bname,pbranch,bcode,dummy_hash,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_pk,dummy_pk,dummy_msg,dummy_msg,dummy_msg,set_180,set_181,set_182,set_183,set_184,9)


section rules:

step step_0 (Pr,B,Skb,Dummy_Pr_id,Pr_ph,Pe_ph,Dummy_Bank_info,Pe_id,Prm_mid,Prm_pin,Pem_mid,B_name,Place_branch,B_code,Hash,Dummy_NPr,NB,DATE,Alpha,Beta,KB,KPr,Amount,Payment_success,Payment_failure,Dummy_Set_42,Dummy_Set_43,Dummy_Set_44,Set_48,Set_49,SID,NPr) :=
 state_payer(Pr,B,Skb,Dummy_Pr_id,Pr_ph,Pe_ph,Dummy_Bank_info,Pe_id,Prm_mid,Prm_pin,Pem_mid,B_name,Place_branch,B_code,Hash,0,Dummy_NPr,NB,DATE,Alpha,Beta,KB,KPr,Amount,Payment_success,Payment_failure,Dummy_Set_42,Dummy_Set_43,Dummy_Set_44,Set_48,Set_49,SID).
 iknows(start)
=[exists NPr]=>
 state_payer(Pr,B,Skb,Dummy_Set_42,Pr_ph,Pe_ph,Dummy_Set_43,Pe_id,Prm_mid,Prm_pin,Pem_mid,B_name,Place_branch,B_code,Hash,2,NPr,NB,DATE,Alpha,Beta,KB,KPr,Amount,Payment_success,Payment_failure,Dummy_Set_42,Dummy_Set_43,Dummy_Set_44,Set_48,Set_49,SID).
 iknows(crypt(KB,pair(Dummy_Set_42,pair(Dummy_Set_43,NPr)))).
 secret(NPr,npr,Dummy_Set_44).
 witness(Pr,B,payer_bank_npr).
 contains(Pr_ph,Dummy_Set_42).
 contains(Prm_mid,Dummy_Set_42).
 contains(Prm_pin,Dummy_Set_42).
 contains(B_name,Dummy_Set_43).
 contains(Place_branch,Dummy_Set_43).
 contains(B_code,Dummy_Set_43).
 contains(Pr,Dummy_Set_44).
 contains(B,Dummy_Set_44)

step step_1 (Pr,B,Skb,Pr_id,Pr_ph,Pe_ph,Bank_info,Dummy_Pe_id,Prm_mid,Prm_pin,Pem_mid,B_name,Place_branch,B_code,Hash,Dummy_NPr,Dummy_NB,DATE,Dummy_Alpha,Beta,KB,KPr,Amount,Payment_success,Payment_failure,Set_42,Set_43,Set_44,Dummy_Set_48,Dummy_Set_49,SID,NPr,NB) :=
 state_payer(Pr,B,Skb,Pr_id,Pr_ph,Pe_ph,Bank_info,Dummy_Pe_id,Prm_mid,Prm_pin,Pem_mid,B_name,Place_branch,B_code,Hash,2,Dummy_NPr,Dummy_NB,DATE,Dummy_Alpha,Beta,KB,KPr,Amount,Payment_success,Payment_failure,Set_42,Set_43,Set_44,Dummy_Set_48,Dummy_Set_49,SID).
 iknows(crypt(KPr,pair(Skb,NB)))
=[exists NPr]=>
 state_payer(Pr,B,Skb,Pr_id,Pr_ph,Pe_ph,Bank_info,Dummy_Set_48,Prm_mid,Prm_pin,Pem_mid,B_name,Place_branch,B_code,Hash,4,NPr,NB,DATE,apply(Hash,pair(Skb,pair(Amount,pair(Dummy_Set_48,NPr)))),Beta,KB,KPr,Amount,Payment_success,Payment_failure,Set_42,Set_43,Set_44,Dummy_Set_48,Dummy_Set_49,SID).
 iknows(scrypt(Skb,pair(Amount,pair(Dummy_Pe_id,pair(NPr,pair(DATE,apply(Hash,pair(Skb,pair(Amount,pair(Dummy_Set_48,NPr)))))))))).
 secret(NPr,npr,Dummy_Set_49).
 witness(Pr,B,payer_bank_npr,payer_bank_skb).
 contains(Pe_ph,Dummy_Set_48).
 contains(Pem_mid,Dummy_Set_48).
 contains(Pr,Dummy_Set_49).
 contains(B,Dummy_Set_49)

step step_2 (Pr,B,Skb,Pr_id,Pr_ph,Pe_ph,Bank_info,Pe_id,Prm_mid,Prm_pin,Pem_mid,B_name,Place_branch,B_code,Hash,Dummy_NPr,Dummy_NB,DATE,Alpha,Dummy_Beta,KB,KPr,Amount,Payment_success,Payment_failure,Set_42,Set_43,Set_44,Set_48,Set_49,SID,NPr,NB) :=
 state_payer(Pr,B,Skb,Pr_id,Pr_ph,Pe_ph,Bank_info,Pe_id,Prm_mid,Prm_pin,Pem_mid,B_name,Place_branch,B_code,Hash,4,Dummy_NPr,Dummy_NB,DATE,Alpha,Dummy_Beta,KB,KPr,Amount,Payment_success,Payment_failure,Set_42,Set_43,Set_44,Set_48,Set_49,SID).
 iknows(scrypt(Skb,pair(Payment_success,pair(Amount,pair(Pe_id,pair(NPr,pair(NB,pair(DATE,Dummy_Beta))))))))
 =>
 state_payer(Pr,B,Skb,Pr_id,Pr_ph,Pe_ph,Bank_info,Pe_id,Prm_mid,Prm_pin,Pem_mid,B_name,Place_branch,B_code,Hash,6,NPr,NB,DATE,Alpha,apply(Hash,pair(Skb,pair(Payment_success,pair(Amount,pair(Pe_id,pair(NPr,NB)))))),KB,KPr,Amount,Payment_success,Payment_failure,Set_42,Set_43,Set_44,Set_48,Set_49,SID)

step step_3 (B,Pr,Skb,Pr_id,Pr_ph,Pe_ph,Bank_info,Pe_id,Prm_mid,Prm_pin,Pem_mid,B_name,Place_branch,B_code,Hash,NPr,Dummy_NB,DATE,Alpha,Beta,KB,KPr,Amount,Payment_success,Payment_failure,Dummy_Set_83,Set_85,Set_86,Set_87,SID,NB) :=
 state_bank(B,Pr,Skb,Pr_id,Pr_ph,Pe_ph,Bank_info,Pe_id,Prm_mid,Prm_pin,Pem_mid,B_name,Place_branch,B_code,Hash,1,NPr,Dummy_NB,DATE,Alpha,Beta,KB,KPr,Amount,Payment_success,Payment_failure,Dummy_Set_83,Set_85,Set_86,Set_87,SID).
 iknows(start)
=[exists NB]=>
 state_bank(B,Pr,Skb,Pr_id,Pr_ph,Pe_ph,Bank_info,Pe_id,Prm_mid,Prm_pin,Pem_mid,B_name,Place_branch,B_code,Hash,3,NPr,NB,DATE,Alpha,Beta,KB,KPr,Amount,Payment_success,Payment_failure,Dummy_Set_83,Set_85,Set_86,Set_87,SID).
 iknows(crypt(KPr,pair(Skb,NB))).
 secret(NB,nb,Dummy_Set_83).
 witness(Pr,B,bank_payer_nb).
 contains(Pr,Dummy_Set_83).
 contains(B,Dummy_Set_83)

step step_4 (B,Pr,Skb,Dummy_Pr_id,Pr_ph,Pe_ph,Dummy_Bank_info,Pe_id,Prm_mid,Prm_pin,Pem_mid,B_name,Place_branch,B_code,Hash,Dummy_NPr,Dummy_NB,DATE,Alpha,Dummy_Beta,KB,KPr,Amount,Payment_success,Payment_failure,Set_83,Dummy_Set_85,Dummy_Set_86,Dummy_Set_87,SID,NPr,NB) :=
 state_bank(B,Pr,Skb,Dummy_Pr_id,Pr_ph,Pe_ph,Dummy_Bank_info,Pe_id,Prm_mid,Prm_pin,Pem_mid,B_name,Place_branch,B_code,Hash,3,Dummy_NPr,Dummy_NB,DATE,Alpha,Dummy_Beta,KB,KPr,Amount,Payment_success,Payment_failure,Set_83,Dummy_Set_85,Dummy_Set_86,Dummy_Set_87,SID).
 iknows(crypt(KB,pair(Pr_id,pair(Bank_info,NPr))))
=[exists NB]=>
 state_bank(B,Pr,Skb,Dummy_Set_85,Pr_ph,Pe_ph,Dummy_Set_86,Pe_id,Prm_mid,Prm_pin,Pem_mid,B_name,Place_branch,B_code,Hash,5,NPr,NB,DATE,Alpha,apply(Hash,pair(Skb,pair(Payment_success,pair(Amount,pair(Pe_id,pair(NPr,pair(NB,DATE))))))),KB,KPr,Amount,Payment_success,Payment_failure,Set_83,Dummy_Set_85,Dummy_Set_86,Dummy_Set_87,SID).
 iknows(scrypt(Skb,pair(Payment_success,pair(Amount,pair(Pe_id,pair(NPr,pair(NB,pair(DATE,apply(Hash,pair(Skb,pair(Payment_success,pair(Amount,pair(Pe_id,pair(NPr,pair(NB,DATE))))))))))))))).
 witness(Pr,B,bank_payer_nb,payer_bank_npr).
 witness(Pr,B,bank_payer_skb,payer_bank_skb).
 contains(Pr_ph,Dummy_Set_85).
 contains(Prm_mid,Dummy_Set_85).
 contains(Prm_pin,Dummy_Set_85).
 contains(B_name,Dummy_Set_86).
 contains(Place_branch,Dummy_Set_86).
 contains(B_code,Dummy_Set_86).
 contains(Pr,Dummy_Set_87).
 contains(B,Dummy_Set_87)

step step_5 (B,Pr,Skb,Pr_id,Pr_ph,Pe_ph,Bank_info,Pe_id,Prm_mid,Prm_pin,Pem_mid,B_name,Place_branch,B_code,Hash,Dummy_NPr,NB,DATE,Dummy_Alpha,Beta,KB,KPr,Amount,Payment_success,Payment_failure,Set_83,Set_85,Set_86,Set_87,SID,NPr) :=
 state_bank(B,Pr,Skb,Pr_id,Pr_ph,Pe_ph,Bank_info,Pe_id,Prm_mid,Prm_pin,Pem_mid,B_name,Place_branch,B_code,Hash,5,Dummy_NPr,NB,DATE,Dummy_Alpha,Beta,KB,KPr,Amount,Payment_success,Payment_failure,Set_83,Set_85,Set_86,Set_87,SID).
 iknows(scrypt(Skb,pair(Amount,pair(Pe_id,pair(NPr,pair(DATE,Dummy_Alpha))))))
 =>
 state_bank(B,Pr,Skb,Pr_id,Pr_ph,Pe_ph,Bank_info,Pe_id,Prm_mid,Prm_pin,Pem_mid,B_name,Place_branch,B_code,Hash,7,NPr,NB,DATE,apply(Hash,pair(Skb,pair(Amount,pair(Pe_id,pair(DATE,NPr))))),Beta,KB,KPr,Amount,Payment_success,Payment_failure,Set_83,Set_85,Set_86,Set_87,SID)


section properties:

property secrecy_of_nb (MGoal,ASGoal) :=
 [] ((secret(MGoal,nb,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_npr (MGoal,ASGoal) :=
 [] ((secret(MGoal,npr,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_skb (MGoal,ASGoal) :=
 [] ((secret(MGoal,skb,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property authentication_on_bank_payer_nb (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,bank_payer_nb,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,bank_payer_nb,MGoal))
     /\ ((request(A1Goal,A2Goal,bank_payer_nb,MGoal,SID1)
           /\ request(A1Goal,A2Goal,bank_payer_nb,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_bank_payer_skb (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,bank_payer_skb,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,bank_payer_skb,MGoal))
     /\ ((request(A1Goal,A2Goal,bank_payer_skb,MGoal,SID1)
           /\ request(A1Goal,A2Goal,bank_payer_skb,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_payer_bank_skb (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,payer_bank_skb,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,payer_bank_skb,MGoal))
     /\ ((request(A1Goal,A2Goal,payer_bank_skb,MGoal,SID1)
           /\ request(A1Goal,A2Goal,payer_bank_skb,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_payer_bank_npr (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,payer_bank_npr,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,payer_bank_npr,MGoal))
     /\ ((request(A1Goal,A2Goal,payer_bank_npr,MGoal,SID1)
           /\ request(A1Goal,A2Goal,payer_bank_npr,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state secrecy_of_nb (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,nb,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_npr (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,npr,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_skb (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,skb,ASGoal) &
 not(contains(i,ASGoal))

attack_state authentication_on_bank_payer_nb (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,bank_payer_nb,MGoal,SID) &
 not(witness(A2Goal,A1Goal,bank_payer_nb,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_bank_payer_nb (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,bank_payer_nb,MGoal,SID1).
 request(A1Goal,A2Goal,bank_payer_nb,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_bank_payer_skb (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,bank_payer_skb,MGoal,SID) &
 not(witness(A2Goal,A1Goal,bank_payer_skb,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_bank_payer_skb (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,bank_payer_skb,MGoal,SID1).
 request(A1Goal,A2Goal,bank_payer_skb,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_payer_bank_skb (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,payer_bank_skb,MGoal,SID) &
 not(witness(A2Goal,A1Goal,payer_bank_skb,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_payer_bank_skb (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,payer_bank_skb,MGoal,SID1).
 request(A1Goal,A2Goal,payer_bank_skb,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_payer_bank_npr (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,payer_bank_npr,MGoal,SID) &
 not(witness(A2Goal,A1Goal,payer_bank_npr,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_payer_bank_npr (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,payer_bank_npr,MGoal,SID1).
 request(A1Goal,A2Goal,payer_bank_npr,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

