%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfile0QrlBv

section signature:

state_um: agent * agent * symmetric_key * symmetric_key * symmetric_key * symmetric_key * symmetric_key * text * text * nat * nat * nat * nat * set(protocol_id) * set(protocol_id) * set(symmetric_key) * set(protocol_id) * set(protocol_id) * set(symmetric_key) * set(nat) * nat -> fact
state_sp: agent * agent * symmetric_key * symmetric_key * symmetric_key * symmetric_key * symmetric_key * text * text * nat * nat * nat * nat * set(protocol_id) * set(protocol_id) * set(protocol_id) * set(protocol_id) * nat -> fact


section types:

ASGoal: set(agent)
Set_68, Dummy_Set_68: set(nat)
Set_67, Set_63, Dummy_Set_67, Dummy_Set_63: set(symmetric_key)
MGoal, start: message
d1, d2, D1, D2: text
Set_66, Set_65, Set_62, Set_61, Set_36, Set_35, Set_32, Dummy_Set_66, Set_29, Dummy_Set_65, Dummy_Set_62, Dummy_Set_61, Dummy_Set_36, Dummy_Set_35, Dummy_Set_32, Dummy_Set_29: set(protocol_id)
skk, kss, kku, kkvd, kkvm, Sk, Ks, Ku, Kvd, Kvm, Dummy_Ku, Dummy_Sk: symmetric_key
ks1, sk1, kk1, um_sp_ks1, um_sp_kk1, um_sp_sk1, ru1, sp_um_ks, ks, sk, kk, sp_um_sk, um, sp: protocol_id
SID2, SID1, SID, 7, 5, State, Yi, Ru, Kk, 6, 3, 4, 2, 1, 0, Dummy_Yi, Dummy_Kk, Dummy_Ru, Dummy_State, dummy_nat: nat
A2Goal, A1Goal, sps, ums, V, U, i: agent
set_144, set_143, set_142, set_141, set_140, set_139, set_138, set_137, set_136, set_135, set_134, set_122, set_121, set_120, set_119, set_118, set_117, set_116, set_104, set_103, set_102, set_101: set


section inits:

initial_state init1 := 
 iknows(start).
 iknows(sps).
 iknows(ums).
 iknows(d1).
 iknows(d2).
 iknows(i).
 state_sp(sps,ums,skk,kss,kku,kkvd,kkvm,d1,d2,0,dummy_nat,dummy_nat,dummy_nat,set_101,set_102,set_103,set_104,3).
 state_um(ums,sps,skk,kss,kku,kkvd,kkvm,d1,d2,1,dummy_nat,dummy_nat,dummy_nat,set_116,set_117,set_118,set_119,set_120,set_121,set_122,4).
 state_um(ums,i,skk,kss,kku,kkvd,kkvm,d1,d2,1,dummy_nat,dummy_nat,dummy_nat,set_138,set_139,set_140,set_141,set_142,set_143,set_144,7)


section rules:

step step_0 (V,U,Sk,Ks,Ku,Kvd,Kvm,D1,D2,Yi,Ru,Kk,Dummy_Set_29,Dummy_Set_32,Set_35,Set_36,SID) :=
 state_sp(V,U,Sk,Ks,Ku,Kvd,Kvm,D1,D2,0,Yi,Ru,Kk,Dummy_Set_29,Dummy_Set_32,Set_35,Set_36,SID).
 iknows(start)
 =>
 state_sp(V,U,Sk,Ks,Ku,Kvd,Kvm,D1,D2,2,Yi,Ru,Kk,Dummy_Set_29,Dummy_Set_32,Set_35,Set_36,SID).
 iknows(scrypt(Ks,pair(V,pair(Kvd,Kvm)))).
 secret(Ks,ks,Dummy_Set_29).
 witness(U,V,sp_um_ks,Dummy_Set_32).
 contains(sp,Dummy_Set_29).
 contains(um,Dummy_Set_29).
 contains(ks,Dummy_Set_32)

step step_1 (V,U,Dummy_Sk,Ks,Ku,Kvd,Kvm,D1,D2,Yi,Dummy_Ru,Dummy_Kk,Set_29,Set_32,Dummy_Set_35,Dummy_Set_36,SID) :=
 state_sp(V,U,Dummy_Sk,Ks,Ku,Kvd,Kvm,D1,D2,2,Yi,Dummy_Ru,Dummy_Kk,Set_29,Set_32,Dummy_Set_35,Dummy_Set_36,SID).
 iknows(Yi)
 =>
 state_sp(V,U,scrypt(scrypt(Kvd,Ku),scrypt(Kvm,Yi)),Ks,Ku,Kvd,Kvm,D1,D2,4,Yi,scrypt(Kvm,Yi),scrypt(Kvd,Ku),Set_29,Set_32,Dummy_Set_35,Dummy_Set_36,SID).
 secret(Dummy_Sk,sk,Dummy_Set_35).
 witness(U,V,sp_um_sk,Dummy_Set_36).
 contains(sp,Dummy_Set_35).
 contains(um,Dummy_Set_35).
 contains(sk,Dummy_Set_36)

step step_2 (V,U,Sk,Ks,Ku,Kvd,Kvm,D1,D2,Yi,Ru,Kk,Set_29,Set_32,Set_35,Set_36,SID) :=
 state_sp(V,U,Sk,Ks,Ku,Kvd,Kvm,D1,D2,4,Yi,Ru,Kk,Set_29,Set_32,Set_35,Set_36,SID).
 iknows(scrypt(Sk,D1))
 =>
 state_sp(V,U,Sk,Ks,Ku,Kvd,Kvm,D1,D2,6,Yi,Ru,Kk,Set_29,Set_32,Set_35,Set_36,SID).
 iknows(scrypt(Sk,D2))

step step_3 (U,V,Sk,Ks,Dummy_Ku,Kvd,Kvm,D1,D2,Dummy_Yi,Ru,Kk,Dummy_Set_61,Dummy_Set_62,Dummy_Set_63,Set_65,Set_66,Set_67,Set_68,SID,Ku,Yi) :=
 state_um(U,V,Sk,Ks,Dummy_Ku,Kvd,Kvm,D1,D2,1,Dummy_Yi,Ru,Kk,Dummy_Set_61,Dummy_Set_62,Dummy_Set_63,Set_65,Set_66,Set_67,Set_68,SID).
 iknows(start)
=[exists Ku,Yi]=>
 state_um(U,V,Sk,Ks,Ku,Kvd,Kvm,D1,D2,3,Yi,Ru,Kk,Dummy_Set_61,Dummy_Set_62,Dummy_Set_63,Set_65,Set_66,Set_67,Set_68,SID).
 iknows(Yi).
 secret(Ks,ks1,Dummy_Set_61).
 witness(V,U,um_sp_ks1,Dummy_Set_63).
 contains(sp,Dummy_Set_61).
 contains(um,Dummy_Set_61).
 contains(sp,Dummy_Set_62).
 contains(um,Dummy_Set_62).
 contains(Ks,Dummy_Set_63)

step step_4 (U,V,Dummy_Sk,Ks,Dummy_Ku,Kvd,Kvm,D1,D2,Dummy_Yi,Dummy_Ru,Dummy_Kk,Set_61,Set_62,Set_63,Dummy_Set_65,Dummy_Set_66,Dummy_Set_67,Dummy_Set_68,SID,Ku,Yi) :=
 state_um(U,V,Dummy_Sk,Ks,Dummy_Ku,Kvd,Kvm,D1,D2,3,Dummy_Yi,Dummy_Ru,Dummy_Kk,Set_61,Set_62,Set_63,Dummy_Set_65,Dummy_Set_66,Dummy_Set_67,Dummy_Set_68,SID).
 iknows(scrypt(ks,pair(V,pair(Kvd,Kvm))))
=[exists Ku,Yi]=>
 state_um(U,V,scrypt(scrypt(Kvd,Ku),scrypt(Kvm,Yi)),Ks,Ku,Kvd,Kvm,D1,D2,5,Yi,scrypt(Kvm,Yi),scrypt(Kvd,Ku),Set_61,Set_62,Set_63,Dummy_Set_65,Dummy_Set_66,Dummy_Set_67,Dummy_Set_68,SID).
 secret(Dummy_Sk,sk1,Dummy_Set_65).
 secret(Dummy_Kk,kk1,Dummy_Set_66).
 witness(V,U,um_sp_sk1,Dummy_Set_67).
 witness(V,U,um_sp_kk1,Dummy_Set_68).
 contains(sp,Dummy_Set_65).
 contains(um,Dummy_Set_65).
 contains(sp,Dummy_Set_66).
 contains(um,Dummy_Set_66).
 contains(Dummy_Sk,Dummy_Set_67).
 contains(Dummy_Kk,Dummy_Set_68)

step step_5 (U,V,Sk,Ks,Ku,Kvd,Kvm,D1,D2,Yi,Ru,Kk,Set_61,Set_62,Set_63,Set_65,Set_66,Set_67,Set_68,SID) :=
 state_um(U,V,Sk,Ks,Ku,Kvd,Kvm,D1,D2,5,Yi,Ru,Kk,Set_61,Set_62,Set_63,Set_65,Set_66,Set_67,Set_68,SID).
 iknows(scrypt(Sk,D1))
 =>
 state_um(U,V,Sk,Ks,Ku,Kvd,Kvm,D1,D2,7,Yi,Ru,Kk,Set_61,Set_62,Set_63,Set_65,Set_66,Set_67,Set_68,SID).
 iknows(scrypt(Sk,D2))


section properties:

property secrecy_of_sk (MGoal,ASGoal) :=
 [] ((secret(MGoal,sk,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_ks (MGoal,ASGoal) :=
 [] ((secret(MGoal,ks,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_sp (MGoal,ASGoal) :=
 [] ((secret(MGoal,sp,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_ks1 (MGoal,ASGoal) :=
 [] ((secret(MGoal,ks1,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_sk1 (MGoal,ASGoal) :=
 [] ((secret(MGoal,sk1,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_kk1 (MGoal,ASGoal) :=
 [] ((secret(MGoal,kk1,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property authentication_on_sp_um_ks (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,sp_um_ks,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,sp_um_ks,MGoal))
     /\ ((request(A1Goal,A2Goal,sp_um_ks,MGoal,SID1)
           /\ request(A1Goal,A2Goal,sp_um_ks,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_sp_um_sk (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,sp_um_sk,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,sp_um_sk,MGoal))
     /\ ((request(A1Goal,A2Goal,sp_um_sk,MGoal,SID1)
           /\ request(A1Goal,A2Goal,sp_um_sk,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_um_sp_ks1 (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,um_sp_ks1,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,um_sp_ks1,MGoal))
     /\ ((request(A1Goal,A2Goal,um_sp_ks1,MGoal,SID1)
           /\ request(A1Goal,A2Goal,um_sp_ks1,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_um_sp_sk1 (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,um_sp_sk1,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,um_sp_sk1,MGoal))
     /\ ((request(A1Goal,A2Goal,um_sp_sk1,MGoal,SID1)
           /\ request(A1Goal,A2Goal,um_sp_sk1,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_um_sp_kk1 (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,um_sp_kk1,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,um_sp_kk1,MGoal))
     /\ ((request(A1Goal,A2Goal,um_sp_kk1,MGoal,SID1)
           /\ request(A1Goal,A2Goal,um_sp_kk1,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state secrecy_of_sk (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sk,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_ks (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,ks,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_sp (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sp,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_ks1 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,ks1,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_sk1 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sk1,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_kk1 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,kk1,ASGoal) &
 not(contains(i,ASGoal))

attack_state authentication_on_sp_um_ks (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,sp_um_ks,MGoal,SID) &
 not(witness(A2Goal,A1Goal,sp_um_ks,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_sp_um_ks (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,sp_um_ks,MGoal,SID1).
 request(A1Goal,A2Goal,sp_um_ks,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_sp_um_sk (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,sp_um_sk,MGoal,SID) &
 not(witness(A2Goal,A1Goal,sp_um_sk,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_sp_um_sk (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,sp_um_sk,MGoal,SID1).
 request(A1Goal,A2Goal,sp_um_sk,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_um_sp_ks1 (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,um_sp_ks1,MGoal,SID) &
 not(witness(A2Goal,A1Goal,um_sp_ks1,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_um_sp_ks1 (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,um_sp_ks1,MGoal,SID1).
 request(A1Goal,A2Goal,um_sp_ks1,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_um_sp_sk1 (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,um_sp_sk1,MGoal,SID) &
 not(witness(A2Goal,A1Goal,um_sp_sk1,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_um_sp_sk1 (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,um_sp_sk1,MGoal,SID1).
 request(A1Goal,A2Goal,um_sp_sk1,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_um_sp_kk1 (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,um_sp_kk1,MGoal,SID) &
 not(witness(A2Goal,A1Goal,um_sp_kk1,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_um_sp_kk1 (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,um_sp_kk1,MGoal,SID1).
 request(A1Goal,A2Goal,um_sp_kk1,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

