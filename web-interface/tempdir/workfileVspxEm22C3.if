%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfileVspxEm22C3

section signature:

state_bob: agent * agent * text * message * hash_func * symmetric_key * nat * text * message * message * symmetric_key * symmetric_key * text * text * text * apply(hash_func,pair(message,pair(message,pair(text,symmetric_key)))) * apply(hash_func,pair(message,text)) * apply(hash_func,pair(message,pair(text,symmetric_key))) * set(agent) * nat -> fact
state_alice: agent * agent * text * message * hash_func * symmetric_key * nat * text * message * message * symmetric_key * symmetric_key * text * text * text * apply(hash_func,pair(message,pair(message,pair(text,symmetric_key)))) * apply(hash_func,pair(text,symmetric_key)) * set(agent) * nat -> fact


section types:

rbt, alice_bob_rbt, bob_alice_rat, rat: protocol_id
Ha2, Dummy_Ha2: apply(hash_func,pair(message,pair(text,symmetric_key)))
Ha, Dummy_Ha: apply(hash_func,pair(message,text))
set_96, set_125, set_124, set_123, set_121, set_114: set
ASGoal, Set_66, Set_34, Dummy_Set_66, Dummy_Set_34: set(agent)
Hb, Dummy_Hb: apply(hash_func,pair(text,symmetric_key))
F, h: hash_func
dummy_sk, kab, kai, kbi, Kb, SK, Ks, Dummy_SK, Dummy_Kb: symmetric_key
Commit, Dummy_Commit: apply(hash_func,pair(message,pair(message,pair(text,symmetric_key))))
dummy_msg, MGoal, ack, ackia, ackib, Ga, Gb, ACK, start, Dummy_Gb, Dummy_Ga: message
dummy_nonce, g, Rb, Rat, Rbt, Eb, G, Dummy_Eb, Ea, Dummy_Rb, Dummy_Rbt, Dummy_Rat, Dummy_Ea: text
A2Goal, A1Goal, a, b, B, A, i: agent
SID, SID2, SID1, 11, 9, 7, State, 10, 5, 8, 6, 3, 4, 2, 1, 0, Dummy_State: nat


section inits:

initial_state init1 := 
 iknows(start).
 iknows(a).
 iknows(b).
 iknows(g).
 iknows(h).
 iknows(kai).
 iknows(kbi).
 iknows(i).
 state_alice(a,b,g,ack,h,kab,0,dummy_nonce,dummy_msg,dummy_msg,dummy_sk,dummy_sk,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,set_96,3).
 state_bob(b,a,g,ack,h,kab,1,dummy_nonce,dummy_msg,dummy_msg,dummy_sk,dummy_sk,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,set_114,4).
 state_alice(a,i,g,ackia,h,kai,0,dummy_nonce,dummy_msg,dummy_msg,dummy_sk,dummy_sk,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,set_121,6).
 state_bob(b,i,g,ackib,h,kbi,1,dummy_nonce,dummy_msg,dummy_msg,dummy_sk,dummy_sk,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,set_125,10)


section rules:

step step_0 (A,B,G,ACK,F,Ks,Dummy_Ea,Dummy_Ga,Gb,Kb,SK,Rb,Rat,Rbt,Commit,Hb,Set_34,SID,Ea) :=
 state_alice(A,B,G,ACK,F,Ks,0,Dummy_Ea,Dummy_Ga,Gb,Kb,SK,Rb,Rat,Rbt,Commit,Hb,Set_34,SID).
 iknows(start)
=[exists Ea]=>
 state_alice(A,B,G,ACK,F,Ks,2,Ea,exp(G,Ea),Gb,Kb,SK,Rb,Rat,Rbt,Commit,Hb,Set_34,SID).
 iknows(exp(G,Ea))

step step_1 (A,B,G,ACK,F,Ks,Ea,Ga,Dummy_Gb,Kb,SK,Rb,Dummy_Rat,Rbt,Dummy_Commit,Hb,Set_34,SID,Gb,Rat,Commit) :=
 state_alice(A,B,G,ACK,F,Ks,2,Ea,Ga,Dummy_Gb,Kb,SK,Rb,Dummy_Rat,Rbt,Dummy_Commit,Hb,Set_34,SID).
 iknows(pair(Gb,Commit))
=[exists Rat]=>
 state_alice(A,B,G,ACK,F,Ks,4,Ea,Ga,Gb,Kb,SK,Rb,Rat,Rbt,Commit,Hb,Set_34,SID).
 iknows(pair(Rat,scrypt(Ks,pair(3,apply(F,pair(ACK,Rat))))))

step step_2 (A,B,G,ACK,F,Ks,Ea,Ga,Gb,Kb,SK,Rb,Rat,Dummy_Rbt,Commit,Hb,Set_34,SID,Rbt) :=
 state_alice(A,B,G,ACK,F,Ks,4,Ea,Ga,Gb,Kb,SK,Rb,Rat,Dummy_Rbt,Commit,Hb,Set_34,SID).
 iknows(scrypt(Ks,pair(3,pair(Rat,Rbt))))
 =>
 state_alice(A,B,G,ACK,F,Ks,6,Ea,Ga,Gb,Kb,SK,Rb,Rat,Rbt,Commit,Hb,Set_34,SID).
 iknows(pair(ACK,scrypt(Ks,pair(3,apply(F,pair(ACK,pair(Dummy_Rbt,Ks)))))))

step step_3 (A,B,G,ACK,F,Ks,Ea,Ga,Gb,Dummy_Kb,Dummy_SK,Dummy_Rb,Dummy_Rat,Rbt,Dummy_Hb,Dummy_Set_34,SID,Kb,Rb,Rat) :=
 state_alice(A,B,G,ACK,F,Ks,6,Ea,Ga,Gb,Dummy_Kb,Dummy_SK,Dummy_Rb,Dummy_Rat,Rbt,apply(F,pair(Ga,pair(Gb,pair(Rb,Kb)))),Dummy_Hb,Dummy_Set_34,SID).
 iknows(pair(Rb,scrypt(Ks,pair(4,apply(h,pair(Rb,Ks)))))).
 iknows(Kb)
=[exists Rat]=>
 state_alice(A,B,G,ACK,F,Ks,8,Ea,Ga,Gb,Kb,exp(Gb,Ea),Rb,Rat,Rbt,apply(F,pair(Ga,pair(Gb,pair(Rb,Kb)))),apply(h,pair(Rb,Ks)),Dummy_Set_34,SID).
 iknows(scrypt(Dummy_SK,pair(A,Rat))).
 secret(Rat,rat,Dummy_Set_34).
 witness(A,B,bob_alice_rat,Rat).
 contains(A,Dummy_Set_34).
 contains(B,Dummy_Set_34)

step step_4 (A,B,G,ACK,F,Ks,Ea,Ga,Gb,Kb,SK,Rb,Rat,Dummy_Rbt,Commit,Hb,Set_34,SID,Rbt) :=
 state_alice(A,B,G,ACK,F,Ks,8,Ea,Ga,Gb,Kb,SK,Rb,Rat,Dummy_Rbt,Commit,Hb,Set_34,SID).
 iknows(scrypt(SK,pair(B,pair(Rat,Rbt))))
 =>
 state_alice(A,B,G,ACK,F,Ks,10,Ea,Ga,Gb,Kb,SK,Rb,Rat,Rbt,Commit,Hb,Set_34,SID).
 iknows(scrypt(SK,pair(B,Rbt))).
 request(A,B,alice_bob_rbt,Rbt,SID)

step step_5 (B,A,G,ACK,F,Ks,Dummy_Eb,Dummy_Ga,Dummy_Gb,Dummy_Kb,Dummy_SK,Dummy_Rb,Rat,Rbt,Dummy_Commit,Ha,Ha2,Set_66,SID,Eb,Ga,Kb,Rb) :=
 state_bob(B,A,G,ACK,F,Ks,1,Dummy_Eb,Dummy_Ga,Dummy_Gb,Dummy_Kb,Dummy_SK,Dummy_Rb,Rat,Rbt,Dummy_Commit,Ha,Ha2,Set_66,SID).
 iknows(Ga)
=[exists Eb,Kb,Rb]=>
 state_bob(B,A,G,ACK,F,Ks,3,Eb,Ga,exp(G,Eb),Kb,exp(Ga,Eb),Rb,Rat,Rbt,apply(F,pair(Ga,pair(exp(G,Eb),pair(Rb,Kb)))),Ha,Ha2,Set_66,SID).
 iknows(pair(exp(G,Eb),apply(F,pair(Ga,pair(exp(G,Eb),pair(Rb,Kb))))))

step step_6 (B,A,G,ACK,F,Ks,Eb,Ga,Gb,Kb,SK,Rb,Dummy_Rat,Dummy_Rbt,Commit,Dummy_Ha,Ha2,Set_66,SID,Rat,Rbt,Ha) :=
 state_bob(B,A,G,ACK,F,Ks,3,Eb,Ga,Gb,Kb,SK,Rb,Dummy_Rat,Dummy_Rbt,Commit,Dummy_Ha,Ha2,Set_66,SID).
 iknows(pair(Rat,scrypt(Ks,pair(3,Ha))))
=[exists Rbt]=>
 state_bob(B,A,G,ACK,F,Ks,5,Eb,Ga,Gb,Kb,SK,Rb,Rat,Rbt,Commit,Ha,Ha2,Set_66,SID).
 iknows(scrypt(Ks,pair(3,pair(Dummy_Rat,Rbt))))

step step_7 (B,A,G,ACK,F,Ks,Eb,Ga,Gb,Kb,SK,Rb,Rat,Rbt,Commit,Dummy_Ha,Dummy_Ha2,Set_66,SID) :=
 state_bob(B,A,G,ACK,F,Ks,5,Eb,Ga,Gb,Kb,SK,Rb,Rat,Rbt,Commit,Dummy_Ha,Dummy_Ha2,Set_66,SID).
 iknows(pair(ACK,scrypt(Ks,pair(3,apply(F,pair(ACK,pair(Rbt,Ks)))))))
 =>
 state_bob(B,A,G,ACK,F,Ks,7,Eb,Ga,Gb,Kb,SK,Rb,Rat,Rbt,Commit,apply(F,pair(ACK,Rat)),apply(F,pair(ACK,pair(Rbt,Ks))),Set_66,SID).
 iknows(pair(Rb,scrypt(Ks,pair(4,apply(h,pair(Rb,Ks)))))).
 iknows(Kb)

step step_8 (B,A,G,ACK,F,Ks,Eb,Ga,Gb,Kb,Dummy_SK,Rb,Dummy_Rat,Dummy_Rbt,Commit,Ha,Ha2,Dummy_Set_66,SID,SK,Rat,Rbt) :=
 state_bob(B,A,G,ACK,F,Ks,7,Eb,Ga,Gb,Kb,Dummy_SK,Rb,Dummy_Rat,Dummy_Rbt,Commit,Ha,Ha2,Dummy_Set_66,SID).
 iknows(scrypt(SK,pair(A,Rat)))
=[exists Rbt]=>
 state_bob(B,A,G,ACK,F,Ks,9,Eb,Ga,Gb,Kb,SK,Rb,Rat,Rbt,Commit,Ha,Ha2,Dummy_Set_66,SID).
 iknows(scrypt(Dummy_SK,pair(B,pair(Rat,Rbt)))).
 secret(Rbt,rbt,Dummy_Set_66).
 witness(B,A,alice_bob_rbt,Rbt).
 contains(A,Dummy_Set_66).
 contains(B,Dummy_Set_66)

step step_9 (B,A,G,ACK,F,Ks,Eb,Ga,Gb,Kb,SK,Rb,Rat,Rbt,Commit,Ha,Ha2,Set_66,SID) :=
 state_bob(B,A,G,ACK,F,Ks,9,Eb,Ga,Gb,Kb,SK,Rb,Rat,Rbt,Commit,Ha,Ha2,Set_66,SID).
 iknows(scrypt(SK,pair(B,Rbt)))
 =>
 state_bob(B,A,G,ACK,F,Ks,11,Eb,Ga,Gb,Kb,SK,Rb,Rat,Rbt,Commit,Ha,Ha2,Set_66,SID).
 request(B,A,bob_alice_rat,Rat,SID)


section properties:

property secrecy_of_rat (MGoal,ASGoal) :=
 [] ((secret(MGoal,rat,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_rbt (MGoal,ASGoal) :=
 [] ((secret(MGoal,rbt,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property authentication_on_alice_bob_rbt (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,alice_bob_rbt,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,alice_bob_rbt,MGoal))
     /\ ((request(A1Goal,A2Goal,alice_bob_rbt,MGoal,SID1)
           /\ request(A1Goal,A2Goal,alice_bob_rbt,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_bob_alice_rat (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,bob_alice_rat,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,bob_alice_rat,MGoal))
     /\ ((request(A1Goal,A2Goal,bob_alice_rat,MGoal,SID1)
           /\ request(A1Goal,A2Goal,bob_alice_rat,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state secrecy_of_rat (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,rat,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_rbt (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,rbt,ASGoal) &
 not(contains(i,ASGoal))

attack_state authentication_on_alice_bob_rbt (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,alice_bob_rbt,MGoal,SID) &
 not(witness(A2Goal,A1Goal,alice_bob_rbt,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_alice_bob_rbt (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,alice_bob_rbt,MGoal,SID1).
 request(A1Goal,A2Goal,alice_bob_rbt,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_bob_alice_rat (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,bob_alice_rat,MGoal,SID) &
 not(witness(A2Goal,A1Goal,bob_alice_rat,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_bob_alice_rat (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,bob_alice_rat,MGoal,SID1).
 request(A1Goal,A2Goal,bob_alice_rat,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

