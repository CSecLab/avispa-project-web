role dist (CH,A: agent,
	 Ha: hash_func,
	 K: symmetric_key,
	 Snd,Rcv:channel(dy))
played_by CH def=
local State: nat,
	Kg: symmetric_key,
	En ,Ns: nat, 
	Nc: text,
	Timestump: text
const idch: protocol_id
init State :=0
transition 
1. State=0 /\ Rcv(start)
%% envoie l'identificateur a les membres de goupe
=|> Nc':= new()
/\ Timestump':= new()
/\ State':= 1
/\ Snd(idch.Nc'.Timestump'.{Ha({(idch.Nc'.Timestump')}_K)})
%% generation de cle de groupe
/\ Kg':=new()
%% proprietes a verifier par l'outil AVISPA
/\secret(idch,{CH,A})
end role
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
role dist (B,A: agent,
	 Ha: hash_func,
	 K: symmetric_key,
	 Snd,Rcv:channel(dy))
played_by A def=
local State: nat,
	En ,Ns: nat, 
	Timestump1: text
const idA: protocol_id
init State :=0
transition 
1. State=0 /\ Rcv(start)
%% envoie l'identificateur a les membres de goupe
=|> Timestump1':= new()
/\ State':= 1
/\ Snd(idch.idA.Nc'.Timestump1'.En.NS.{Ha({(idch.idA.Nc'.Timestump1'.En.NS)}_K)})
%% proprietes a verifier par l'outil AVISPA
/\secret(idch,{B,A})
end role
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
role dist (CH,B: agent,
	 Ha: hash_func,
	 K: symmetric_key,
	 Snd,Rcv:channel(dy))
played_by CH def=
local State: nat,
	En ,Ns: nat, 
	Timestump1: text
const idA: protocol_id
init State :=0
transition 
1. State=0 /\ Rcv(start)
%% demande la cle
=|> Timestump1':= new()
/\ State':= 1
/\ Snd(idch.idA.Nc'.Timestump1'.En.NS.{Ha({(idch.idA.Nc'.Timestump1'.En.NS)}_K)})
%% proprietes a verifier par l'outil AVISPA
/\secret(idch,{CH,B})
end role
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
role dist (CH,A: agent,
	 Ha: hash_func,
	 K: symmetric_key,
	 Snd,Rcv:channel(dy))
played_by CH def=
local State: nat,
	Kg: symmetric_key,
	En ,Ns: nat, 
	Timestump1: text
const idA: protocol_id
init State :=0
transition 
1. State=0 /\ Rcv(start)
%% demande la cle
=|> Nc':= new()
/\ Timestump':= new()
/\ State':= 1
%% generation de cle de groupe
/\ Kg':=new()
/\ Snd(idch.idA.Nc'.Timestump1'.En.NS.xor(K,Kg){Ha({(idch.idA.Nc'.Timestump1'.En.NS.xor(K,Kg))}_K)})
%% proprietes a verifier par l'outil AVISPA
/\secret(Kg,{CH,B})
end role
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
goal
security_of Kg
end goal
environment()
