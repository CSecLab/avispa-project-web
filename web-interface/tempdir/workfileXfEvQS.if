%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfileXfEvQS

section signature:

state_host: agent * agent * agent * public_key * public_key * public_key * hash_func * nat * crypt(public_key,crypt(inv(public_key),pair(text,text))) * crypt(public_key,crypt(inv(public_key),pair(text,text))) * pair(crypt(public_key,crypt(inv(public_key),pair(text,text))),crypt(public_key,crypt(inv(public_key),pair(text,text)))) * crypt(public_key,crypt(inv(public_key),pair(text,text))) * crypt(public_key,crypt(inv(public_key),pair(text,pair(text,text)))) * pair(crypt(public_key,crypt(inv(public_key),pair(text,text))),crypt(public_key,crypt(inv(public_key),pair(text,pair(text,text))))) * text * text * text * text * text * text * text * nat -> fact
state_board: agent * agent * agent * public_key * public_key * public_key * hash_func * nat * crypt(public_key,crypt(inv(public_key),pair(text,text))) * crypt(public_key,crypt(inv(public_key),pair(text,text))) * pair(crypt(public_key,crypt(inv(public_key),pair(text,text))),crypt(public_key,crypt(inv(public_key),pair(text,text)))) * hash_func * text * text * text * text * crypt(public_key,crypt(inv(public_key),pair(text,text))) * crypt(public_key,crypt(inv(public_key),pair(text,pair(text,text)))) * pair(crypt(public_key,crypt(inv(public_key),pair(text,text))),crypt(public_key,crypt(inv(public_key),pair(text,pair(text,text))))) * crypt(inv(public_key),hash_func) * nat -> fact
state_user: agent * agent * agent * public_key * public_key * public_key * hash_func * nat * crypt(public_key,crypt(inv(public_key),pair(text,text))) * crypt(public_key,crypt(inv(public_key),pair(text,text))) * pair(crypt(public_key,crypt(inv(public_key),pair(text,text))),crypt(public_key,crypt(inv(public_key),pair(text,text)))) * hash_func * text * text * text * text * set(agent) * set(agent) * set(agent) * set(agent) * nat -> fact


section types:

Res_all: pair(crypt(public_key,crypt(inv(public_key),pair(text,text))),crypt(public_key,crypt(inv(public_key),pair(text,pair(text,text)))))
Res_board: crypt(public_key,crypt(inv(public_key),pair(text,pair(text,text))))
Sig, Dummy_Sig: crypt(inv(public_key),hash_func)
set_170, set_169, set_168, set_167, set_164, set_163, set_162, set_161, set_158, set_157, set_156, set_155, set_126, set_125, set_124, set_123: set
UHOA, Nuh, Nuh_, Nuhb, Nhb, T, M, Nub, Dummy_T, Dummy_Nuh_, Dummy_M, Dummy_Nhb, Dummy_Nub, Dummy_Nuhb, Dummy_Nuh, Dummy_UHOA, dummy_nonce: text
Dummy_Set_36, Dummy_Set_34, Dummy_Set_32, Dummy_Set_29, Set_36, Set_34, Set_32, Set_29, ASGoal: set(agent)
start, MGoal: message
Req_all, Dummy_Req_all: pair(crypt(public_key,crypt(inv(public_key),pair(text,text))),crypt(public_key,crypt(inv(public_key),pair(text,text))))
host_board_nuhb, board_user_sign, nub, nuhb, nuh, uhoa, n4: protocol_id
Res_user, Req_board, Req_host, Dummy_Res_user, Dummy_Req_board, Dummy_Req_host: crypt(public_key,crypt(inv(public_key),pair(text,text)))
4, State, 17, 16, 6, 5, 2, 13, 11, 8, 7, SID, 9, Dummy_State, 3, 1: nat
Hash, Hashed_req, Dummy_Hashed_req, dummy_hash, hf: hash_func
Ku, Kh, Kb, dummy_pk, ku, kh, kb, ki: public_key
U, H, B, u, h, b, i: agent


section inits:

initial_state init1 := 
 iknows(start).
 iknows(u).
 iknows(h).
 iknows(b).
 iknows(hf).
 iknows(ku).
 iknows(kh).
 iknows(kb).
 iknows(ki).
 iknows(i).
 state_user(u,h,b,ku,kh,kb,hf,1,crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce))),pair(crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce)))),dummy_hash,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_123,set_124,set_125,set_126,3).
 state_board(b,u,h,ku,kh,kb,hf,2,crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce))),pair(crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce)))),dummy_hash,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,pair(dummy_nonce,dummy_nonce)))),pair(crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,pair(dummy_nonce,dummy_nonce))))),crypt(inv(dummy_pk),dummy_hash),4).
 state_host(h,u,b,ku,kh,kb,hf,3,crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce))),pair(crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce)))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,pair(dummy_nonce,dummy_nonce)))),pair(crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,pair(dummy_nonce,dummy_nonce))))),dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,5).
 state_user(u,i,b,ku,ki,kb,hf,1,crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce))),pair(crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce)))),dummy_hash,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_155,set_156,set_157,set_158,7).
 state_board(b,u,i,ku,ki,kb,hf,2,crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce))),pair(crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce)))),dummy_hash,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,pair(dummy_nonce,dummy_nonce)))),pair(crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,pair(dummy_nonce,dummy_nonce))))),crypt(inv(dummy_pk),dummy_hash),8).
 state_user(u,h,i,ku,kh,ki,hf,1,crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce))),pair(crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce)))),dummy_hash,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_161,set_162,set_163,set_164,11).
 state_host(h,u,i,ku,kh,ki,hf,3,crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce))),pair(crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce)))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,pair(dummy_nonce,dummy_nonce)))),pair(crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,pair(dummy_nonce,dummy_nonce))))),dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,13).
 state_board(b,i,h,ki,kh,kb,hf,2,crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce))),pair(crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce)))),dummy_hash,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,pair(dummy_nonce,dummy_nonce)))),pair(crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,pair(dummy_nonce,dummy_nonce))))),crypt(inv(dummy_pk),dummy_hash),16).
 state_host(h,i,b,ki,kh,kb,hf,3,crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce))),pair(crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce)))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,pair(dummy_nonce,dummy_nonce)))),pair(crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,dummy_nonce))),crypt(dummy_pk,crypt(inv(dummy_pk),pair(dummy_nonce,pair(dummy_nonce,dummy_nonce))))),dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,17)


section rules:

step step_0 (U,H,B,Ku,Kh,Kb,Hash,Dummy_Req_host,Dummy_Req_board,Dummy_Req_all,Hashed_req,Dummy_UHOA,Dummy_Nuh,Dummy_Nuhb,Dummy_Nub,Dummy_Set_29,Dummy_Set_32,Dummy_Set_34,Dummy_Set_36,SID,UHOA,Nuh,Nuhb,Nub) :=
 state_user(U,H,B,Ku,Kh,Kb,Hash,1,Dummy_Req_host,Dummy_Req_board,Dummy_Req_all,Hashed_req,Dummy_UHOA,Dummy_Nuh,Dummy_Nuhb,Dummy_Nub,Dummy_Set_29,Dummy_Set_32,Dummy_Set_34,Dummy_Set_36,SID).
 iknows(start)
=[exists Nub,Nuhb,Nuh,UHOA]=>
 state_user(U,H,B,Ku,Kh,Kb,Hash,3,crypt(Kh,crypt(inv(Ku),pair(UHOA,Nuh))),crypt(Kb,crypt(inv(Ku),pair(Nuhb,Nub))),pair(crypt(Kh,crypt(inv(Ku),pair(UHOA,Nuh))),crypt(Kb,crypt(inv(Ku),pair(Nuhb,Nub)))),Hashed_req,UHOA,Nuh,Nuhb,Nub,Dummy_Set_29,Dummy_Set_32,Dummy_Set_34,Dummy_Set_36,SID).
 secret(UHOA,uhoa,Dummy_Set_29).
 secret(Nuh,nuh,Dummy_Set_32).
 secret(Nuhb,nuhb,Dummy_Set_34).
 secret(Nub,nub,Dummy_Set_36).
 iknows(pair(crypt(Kh,crypt(inv(Ku),pair(UHOA,Nuh))),crypt(Kb,crypt(inv(Ku),pair(Nuhb,Nub))))).
 iknows(crypt(Kh,crypt(inv(Ku),pair(Nuh,Nuhb)))).
 contains(U,Dummy_Set_29).
 contains(H,Dummy_Set_29).
 contains(U,Dummy_Set_32).
 contains(H,Dummy_Set_32).
 contains(U,Dummy_Set_34).
 contains(B,Dummy_Set_34).
 contains(U,Dummy_Set_36).
 contains(B,Dummy_Set_36)

step step_1 (U,H,B,Ku,Kh,Kb,Hash,Req_host,Req_board,Dummy_Req_all,Dummy_Hashed_req,UHOA,Nuh,Nuhb,Nub,Set_29,Set_32,Set_34,Set_36,SID,Req_all,Hashed_req) :=
 state_user(U,H,B,Ku,Kh,Kb,Hash,3,Req_host,Req_board,Dummy_Req_all,Dummy_Hashed_req,UHOA,Nuh,Nuhb,Nub,Set_29,Set_32,Set_34,Set_36,SID).
 iknows(pair(Req_all,crypt(inv(Kb),Hashed_req)))
 =>
 state_user(U,H,B,Ku,Kh,Kb,Hash,9,Req_host,Req_board,Req_all,Hashed_req,UHOA,Nuh,Nuhb,Nub,Set_29,Set_32,Set_34,Set_36,SID)

step step_2 (B,U,H,Ku,Kh,Kb,Hash,Dummy_Req_host,Req_board,Dummy_Req_all,Dummy_Hashed_req,Dummy_Nuhb,Dummy_Nub,Nhb,M,Res_user,Res_board,Res_all,Dummy_Sig,SID,Req_host,Nuhb,Nub) :=
 state_board(B,U,H,Ku,Kh,Kb,Hash,2,Dummy_Req_host,Req_board,Dummy_Req_all,Dummy_Hashed_req,Dummy_Nuhb,Dummy_Nub,Nhb,M,Res_user,Res_board,Res_all,Dummy_Sig,SID).
 iknows(pair(Req_host,crypt(Kb,crypt(inv(Ku),pair(Nuhb,Nub)))))
 =>
 state_board(B,U,H,Ku,Kh,Kb,Hash,5,Req_host,Req_board,pair(Req_host,crypt(Kb,crypt(inv(Ku),pair(Nuhb,Nub)))),apply(Hash,pair(Req_host,crypt(Kb,crypt(inv(Ku),pair(Nuhb,Nub))))),Nuhb,Nub,Nhb,M,Res_user,Res_board,Res_all,crypt(inv(Kb),apply(Hash,pair(Req_host,crypt(Kb,crypt(inv(Ku),pair(Nuhb,Nub)))))),SID).
 iknows(pair(pair(Req_host,crypt(Kb,crypt(inv(Ku),pair(Nuhb,Nub)))),crypt(inv(Kb),apply(Hash,pair(Req_host,crypt(Kb,crypt(inv(Ku),pair(Nuhb,Nub)))))))).
 iknows(pair(pair(Req_host,crypt(Kb,crypt(inv(Ku),pair(Nuhb,Nub)))),crypt(inv(Kb),apply(Hash,pair(Req_host,crypt(Kb,crypt(inv(Ku),pair(Nuhb,Nub))))))))

step step_3 (B,U,H,Ku,Kh,Kb,Hash,Req_host,Req_board,Req_all,Hashed_req,Dummy_Nuhb,Nub,Dummy_Nhb,Dummy_M,Dummy_Res_user,Res_board,Res_all,Sig,SID,Nuhb,Nhb,M,Res_user) :=
 state_board(B,U,H,Ku,Kh,Kb,Hash,5,Req_host,Req_board,Req_all,Hashed_req,Dummy_Nuhb,Nub,Dummy_Nhb,Dummy_M,Dummy_Res_user,Res_board,Res_all,Sig,SID).
 iknows(pair(Res_user,crypt(Kb,crypt(inv(Kh),pair(M,pair(Nuhb,Nhb))))))
 =>
 state_board(B,U,H,Ku,Kh,Kb,Hash,6,Req_host,Req_board,Req_all,Hashed_req,Nuhb,Nub,Nhb,M,Res_user,Res_board,Res_all,Sig,SID)

step step_4 (H,U,B,Ku,Kh,Kb,Hash,Req_host,Req_board,Req_all,Res_user,Res_board,Res_all,Dummy_UHOA,Dummy_Nuh,Dummy_Nuh_,Dummy_Nuhb,Dummy_Nhb,Dummy_T,Dummy_M,SID,UHOA,Nuh,Nuh_,Nuhb,Nhb,T,M) :=
 state_host(H,U,B,Ku,Kh,Kb,Hash,3,Req_host,Req_board,Req_all,Res_user,Res_board,Res_all,Dummy_UHOA,Dummy_Nuh,Dummy_Nuh_,Dummy_Nuhb,Dummy_Nhb,Dummy_T,Dummy_M,SID).
 iknows(pair(crypt(Kh,crypt(inv(Ku),pair(UHOA,Nuh))),pair(Req_board,crypt(inv(Kb),apply(Hash,Req_all))))).
 iknows(crypt(Kh,crypt(inv(Ku),pair(Nuh_,Nuhb))))
=[exists Nhb,M,T]=>
 state_host(H,U,B,Ku,Kh,Kb,Hash,4,Req_host,Req_board,Req_all,Res_user,Res_board,Res_all,UHOA,Nuh,Nuh_,Nuhb,Nhb,T,M,SID).
 iknows(pair(crypt(Ku,crypt(inv(Kh),pair(xor(T,M),Nuh))),crypt(Kb,crypt(inv(Kh),pair(M,pair(Nuhb,Nhb))))))


section properties:

property secrecy_of_uhoa (MGoal,ASGoal) :=
 [] ((secret(MGoal,uhoa,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_nuh (MGoal,ASGoal) :=
 [] ((secret(MGoal,nuh,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_nuhb (MGoal,ASGoal) :=
 [] ((secret(MGoal,nuhb,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_nub (MGoal,ASGoal) :=
 [] ((secret(MGoal,nub,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))


section attack_states:

attack_state secrecy_of_uhoa (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,uhoa,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_nuh (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,nuh,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_nuhb (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,nuhb,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_nub (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,nub,ASGoal) &
 not(contains(i,ASGoal))

