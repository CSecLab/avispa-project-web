%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfilelsGULr

section signature:

state_bank: agent * agent * symmetric_key * hash_func * hash_func * text * text * nat * text * text * text * text * public_key * public_key * message * message * message * message * message * nat -> fact
state_payer: agent * agent * symmetric_key * hash_func * hash_func * text * text * nat * text * text * text * text * public_key * public_key * message * message * message * message * message * set(protocol_id) * set(protocol_id) * set(protocol_id) * nat -> fact


section types:

ASGoal: set(agent)
payer_bank_NPr, payer_bank_Skb, bank_payer_NB, bank_payer_Skb, nb, bank_payer_nb, bank_payer_skb, npr, skb, payer_bank_npr, payer_bank_skb: protocol_id
Set_39, Set_38, Set_35, Dummy_Set_39, Dummy_Set_38, Dummy_Set_35: set(protocol_id)
dummy_hash, H1, H2: hash_func
skbb, Skb: symmetric_key
SID2, SID1, SID, 7, 5, State, 6, 3, 4, 2, 1, 0, Dummy_State: nat
MGoal, Amount, Payee_id, Alpha, Beta, Payment_success, start, Dummy_Payment_success, Dummy_Beta, Dummy_Alpha, Dummy_Payee_id, Dummy_Amount, dummy_msg: message
KB, KPr, dummy_pk: public_key
idp, bi1, NPr, NB, Tsb, Tspr, Id, Bi, Dummy_Tsb, Dummy_NB, Dummy_Tspr, Dummy_NPr, Dummy_Bi, Dummy_Id, dummy_nonce: text
A2Goal, A1Goal, prr, ba, Pr, B, i: agent
set_128, set_127, set_126, set_103, set_102, set_101: set


section inits:

initial_state init1 := 
 iknows(start).
 iknows(prr).
 iknows(ba).
 iknows(skbb).
 iknows(idp).
 iknows(bi1).
 iknows(i).
 state_payer(prr,ba,skbb,dummy_hash,dummy_hash,idp,bi1,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_pk,dummy_pk,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,set_101,set_102,set_103,3).
 state_bank(prr,ba,skbb,dummy_hash,dummy_hash,idp,bi1,1,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_pk,dummy_pk,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,4)


section rules:

step step_0 (Pr,B,Skb,H1,H2,Dummy_Id,Dummy_Bi,Dummy_NPr,NB,Dummy_Tspr,Tsb,KB,KPr,Amount,Payee_id,Alpha,Beta,Payment_success,Dummy_Set_35,Set_38,Set_39,SID,Id,Bi,NPr,Tspr) :=
 state_payer(Pr,B,Skb,H1,H2,Dummy_Id,Dummy_Bi,0,Dummy_NPr,NB,Dummy_Tspr,Tsb,KB,KPr,Amount,Payee_id,Alpha,Beta,Payment_success,Dummy_Set_35,Set_38,Set_39,SID).
 iknows(start)
=[exists NPr,Tspr,Bi,Id]=>
 state_payer(Pr,B,Skb,H1,H2,Id,Bi,2,NPr,NB,Tspr,Tsb,KB,KPr,Amount,Payee_id,Alpha,Beta,Payment_success,Dummy_Set_35,Set_38,Set_39,SID).
 iknows(crypt(KB,pair(Dummy_Id,pair(Dummy_Bi,pair(Dummy_Tspr,Dummy_NPr))))).
 witness(Pr,B,payer_bank_npr,Dummy_Set_35).
 contains(npr,Dummy_Set_35)

step step_1 (Pr,B,Skb,H1,H2,Id,Bi,Dummy_NPr,NB,Dummy_Tspr,Tsb,KB,KPr,Dummy_Amount,Dummy_Payee_id,Dummy_Alpha,Beta,Payment_success,Set_35,Dummy_Set_38,Dummy_Set_39,SID,NPr,Tspr,Amount,Payee_id) :=
 state_payer(Pr,B,Skb,H1,H2,Id,Bi,2,Dummy_NPr,NB,Dummy_Tspr,Tsb,KB,KPr,Dummy_Amount,Dummy_Payee_id,Dummy_Alpha,Beta,Payment_success,Set_35,Dummy_Set_38,Dummy_Set_39,SID).
 iknows(crypt(KPr,pair(Skb,pair(Tsb,NB))))
=[exists NPr,Tspr,Payee_id,Amount]=>
 state_payer(Pr,B,Skb,H1,H2,Id,Bi,4,NPr,NB,Tspr,Tsb,KB,KPr,Amount,Payee_id,apply(H1,pair(Skb,pair(Amount,pair(Payee_id,pair(Tspr,NPr))))),Beta,Payment_success,Set_35,Dummy_Set_38,Dummy_Set_39,SID).
 witness(Pr,B,payer_bank_npr,payer_bank_skb,Dummy_Set_38,Dummy_Set_39).
 contains(npr,Dummy_Set_38).
 contains(skb,Dummy_Set_39)

step step_2 (Pr,B,Skb,H1,H2,Id,Bi,Dummy_NPr,Dummy_NB,Dummy_Tspr,Dummy_Tsb,KB,KPr,Amount,Payee_id,Alpha,Beta,Payment_success,Set_35,Set_38,Set_39,SID,NPr,NB,Tspr,Tsb) :=
 state_payer(Pr,B,Skb,H1,H2,Id,Bi,4,Dummy_NPr,Dummy_NB,Dummy_Tspr,Dummy_Tsb,KB,KPr,Amount,Payee_id,Alpha,Beta,Payment_success,Set_35,Set_38,Set_39,SID).
 iknows(scrypt(Skb,pair(Amount,pair(Payee_id,pair(Tspr,pair(NPr,Alpha))))))
=[exists NB,Tsb]=>
 state_payer(Pr,B,Skb,H1,H2,Id,Bi,6,NPr,NB,Tspr,Tsb,KB,KPr,Amount,Payee_id,Alpha,Beta,Payment_success,Set_35,Set_38,Set_39,SID).
 iknows(scrypt(Skb,pair(Payment_success,pair(Amount,pair(Payee_id,pair(Tspr,pair(NPr,pair(Tsb,pair(NB,Beta)))))))))

step step_3 (Pr,B,Skb,H1,H2,Id,Bi,NPr,Dummy_NB,Dummy_Tsb,Tspr,KB,KPr,Amount,Payee_id,Alpha,Beta,Payment_success,SID,NB,Tsb) :=
 state_bank(Pr,B,Skb,H1,H2,Id,Bi,1,NPr,Dummy_NB,Dummy_Tsb,Tspr,KB,KPr,Amount,Payee_id,Alpha,Beta,Payment_success,SID).
 iknows(start)
=[exists NB,Tsb]=>
 state_bank(Pr,B,Skb,H1,H2,Id,Bi,3,NPr,NB,Tsb,Tspr,KB,KPr,Amount,Payee_id,Alpha,Beta,Payment_success,SID).
 iknows(crypt(KPr,pair(Skb,pair(Tsb,NB)))).
 witness(Pr,B,bank_payer_nb)

step step_4 (Pr,B,Skb,H1,H2,Id,Bi,Dummy_NPr,Dummy_NB,Dummy_Tsb,Dummy_Tspr,KB,KPr,Dummy_Amount,Dummy_Payee_id,Alpha,Dummy_Beta,Dummy_Payment_success,SID,NPr,NB,Tsb,Tspr,Amount,Payee_id,Payment_success) :=
 state_bank(Pr,B,Skb,H1,H2,Id,Bi,3,Dummy_NPr,Dummy_NB,Dummy_Tsb,Dummy_Tspr,KB,KPr,Dummy_Amount,Dummy_Payee_id,Alpha,Dummy_Beta,Dummy_Payment_success,SID).
 iknows(crypt(KB,pair(Id,pair(Bi,pair(Dummy_Tspr,Dummy_NPr)))))
=[exists NB,Tsb,NPr,Tspr,Payee_id,Amount,Payment_success]=>
 state_bank(Pr,B,Skb,H1,H2,Id,Bi,5,NPr,NB,Tsb,Tspr,KB,KPr,Amount,Payee_id,Alpha,apply(H2,pair(Skb,pair(Payment_success,pair(Amount,pair(Dummy_Payee_id,pair(Tspr,pair(NPr,pair(Tsb,NB)))))))),Payment_success,SID).
 witness(Pr,B,bank_payer_nb,payer_bank_npr).
 witness(Pr,B,bank_payer_skb,payer_bank_skb)

step step_5 (Pr,B,Skb,H1,H2,Id,Bi,Dummy_NPr,Dummy_NB,Dummy_Tsb,Dummy_Tspr,KB,KPr,Dummy_Amount,Payee_id,Alpha,Dummy_Beta,Dummy_Payment_success,SID,NPr,NB,Tsb,Tspr,Amount,Beta,Payment_success) :=
 state_bank(Pr,B,Skb,H1,H2,Id,Bi,5,Dummy_NPr,Dummy_NB,Dummy_Tsb,Dummy_Tspr,KB,KPr,Dummy_Amount,Payee_id,Alpha,Dummy_Beta,Dummy_Payment_success,SID).
 iknows(scrypt(Skb,pair(Payment_success,pair(Amount,pair(Payee_id,pair(Tspr,pair(NPr,pair(Tsb,pair(NB,Beta)))))))))
 =>
 state_bank(Pr,B,Skb,H1,H2,Id,Bi,7,NPr,NB,Tsb,Tspr,KB,KPr,Amount,Payee_id,Alpha,Beta,Payment_success,SID).
 iknows(scrypt(Skb,pair(Dummy_Amount,pair(Payee_id,pair(Tspr,pair(NPr,Alpha))))))


section properties:

property secrecy_of_nb (MGoal,ASGoal) :=
 [] ((secret(MGoal,nb,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_npr (MGoal,ASGoal) :=
 [] ((secret(MGoal,npr,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_skb (MGoal,ASGoal) :=
 [] ((secret(MGoal,skb,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property authentication_on_bank_payer_nb (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,bank_payer_nb,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,bank_payer_nb,MGoal))
     /\ ((request(A1Goal,A2Goal,bank_payer_nb,MGoal,SID1)
           /\ request(A1Goal,A2Goal,bank_payer_nb,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_bank_payer_skb (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,bank_payer_skb,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,bank_payer_skb,MGoal))
     /\ ((request(A1Goal,A2Goal,bank_payer_skb,MGoal,SID1)
           /\ request(A1Goal,A2Goal,bank_payer_skb,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_payer_bank_skb (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,payer_bank_skb,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,payer_bank_skb,MGoal))
     /\ ((request(A1Goal,A2Goal,payer_bank_skb,MGoal,SID1)
           /\ request(A1Goal,A2Goal,payer_bank_skb,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_payer_bank_npr (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,payer_bank_npr,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,payer_bank_npr,MGoal))
     /\ ((request(A1Goal,A2Goal,payer_bank_npr,MGoal,SID1)
           /\ request(A1Goal,A2Goal,payer_bank_npr,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state secrecy_of_nb (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,nb,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_npr (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,npr,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_skb (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,skb,ASGoal) &
 not(contains(i,ASGoal))

attack_state authentication_on_bank_payer_nb (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,bank_payer_nb,MGoal,SID) &
 not(witness(A2Goal,A1Goal,bank_payer_nb,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_bank_payer_nb (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,bank_payer_nb,MGoal,SID1).
 request(A1Goal,A2Goal,bank_payer_nb,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_bank_payer_skb (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,bank_payer_skb,MGoal,SID) &
 not(witness(A2Goal,A1Goal,bank_payer_skb,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_bank_payer_skb (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,bank_payer_skb,MGoal,SID1).
 request(A1Goal,A2Goal,bank_payer_skb,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_payer_bank_skb (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,payer_bank_skb,MGoal,SID) &
 not(witness(A2Goal,A1Goal,payer_bank_skb,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_payer_bank_skb (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,payer_bank_skb,MGoal,SID1).
 request(A1Goal,A2Goal,payer_bank_skb,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_payer_bank_npr (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,payer_bank_npr,MGoal,SID) &
 not(witness(A2Goal,A1Goal,payer_bank_npr,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_payer_bank_npr (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,payer_bank_npr,MGoal,SID1).
 request(A1Goal,A2Goal,payer_bank_npr,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

