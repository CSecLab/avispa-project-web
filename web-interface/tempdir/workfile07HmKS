role merchant(M, B: agent,
KPB:public_key,
KPM:public_key,
KSGM:public_key,
SND, RCV : channel(dy))
played_by A
def=
local State : nat,
TREF,IDB,IDM,Tprice, Sig : text
init State := 0
transition
0. State = 1 /\ RCV(start) =|>
   State':= 2 /\ TREF' := new() /\ Sig' := {TREF.Tprice.IDM.IDB}_(inv(KPM))
/\ SND({Sig'}_KPB)
/\ witness(M,B,bob_alice_TREF,TREF')
/\ witness(M,B,bob_alice_IDM,IDM)
/\ witness(M,B,bob_alice_IDB,IDB)


1. State = 3 /\ RCV({Sig1'}_KPM) 
            =|> State':= 4  /\ request(M,B,alice_bob_TREF,TREF')

end role

role bank (B, M : agent,
KPB : public_key,
KPM: public_key,
KSGB: public_key,
SND, RCV : channel(dy))
played_by B
def=
local State : nat,
TREF,IDB,IDM,Tprice, Sig1 : text
init State := 1


transition
1. State = 1  /\ RCV({Sig'}_KPB) =|>
   State':= 2 /\ Sig1' := {IDB.IDM.TREF'}_KSGB

/\ request(B,M,alice_bob_IDB,IDB)
/\ request(B,M,alice_bob_IDM,IDM) 

2. State=3 /\ SND({Sig1'}_KPM)
=|> State':= 4  /\ witness(B,M,alice_bob_TREF,TREF')

end role

role session (M,B: agent,
KPM, KPB : public_key) def=
local SA, RA, SB, RB: channel (dy)
composition
merchant(M,B,KPM,KPB,SA,RA)
/\ bank(B,M,KPB,KPM,SB,RB)
end role

role environment() 
def=
const 
m, b, i : agent,
kpm, kpb, ki : public_key,

alice_bob_TREF, alice_bob_IDB, alice_bob_IDM

intruder_knowledge = {m, b, i, kpm, kpb, ki, inv(ki)}
composition
   session(m,b,kpm,kpb)
/\ session(m,i,kpm,ki)
end role


goal
authentication_on alice_bob_TREF
authentication_on alice_bob_IDB
authentication_on alice_bob_IDM

end goal

environment()