role initiator (A,B: agent,
	   	H : hash_func,
           	Snd, Rcv: channel(dy),
	   	UID : text,
	   	IPubKey, RPubKey : public_key)
played_by A
def=
         local State  : nat,
         R, TK, TS, KAB:  text
         const alice_bob,  bob_alice, sub1 : protocol_id

   init  State := 0

  transition
   1. State   = 0 /\ Rcv(start) =|>
      State' := 1 /\ R':=new()
                  /\ TK' := R'.h(UID)
                  /\ TS' := new()
                  /\ Snd({TS'.TK'.UID}_inv(IPubKey)) 
                  /\ witness (A, B, alice_bob, TK')
   2. State = 1   /\ Rcv({KAB'.TS'}_inv(RPubKey)) =|> 
      State' := 2 /\ request (B, A, bob_alice, KAB')
      		  /\ secret({KAB'},sub1,{A,B})
                  
end role
 



role  responder(A, B  : agent,
		H : hash_func,
           	Snd, Rcv: channel(dy),
	   	IPubKey, RPubKey : public_key)

played_by B
def=
         local State  : nat,
         UID,TS,TK,KAB:  text
         const alice_bob,  bob_alice, sub1 : protocol_id

   init  State := 0


  transition
   1. State   = 0 /\ Rcv({TS'.TK'.UID}_inv(IPubKey)) =|>  
      State' := 1 /\ KAB' := new()
                  /\ Snd({KAB'.TS'}_inv(RPubKey))
                  /\ witness (B, A, bob_alice, KAB')
                  /\ request (A, B, alice_bob, TK')
                    
end role




                  
role session(A,B: agent,
             H: hash_func
	)
def=

  local  SA, SB, RA, RB : channel (dy),
         IPubKey, RPubKey : public_key,
         UID :  text
         const alice_bob, bob_alice, sub1 : protocol_id
           
  composition
           initiator(A,B,H, SA, RA,UID,IPubKey, RPubKey)
       /\  responder(A,B,H, SB, RB,IPubKey, RPubKey)
end role 




role environment()
def=

  const a,b : agent,
        h   : hash_func,
        uid :  text,
        alice_bob,  bob_alice, sub1 : protocol_id

  intruder_knowledge = {a, b,h,uid}

  composition
	session(a,b,h)  
end role


goal
  authentication_on alice_bob
  authentication_on bob_alice
  secrecy_of sub1
  
end goal
 

environment()
