%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfileDFkZwV

section signature:

state_role_UE: agent * agent * agent * symmetric_key * public_key * nat * text * text * nat -> fact
state_role_RP: agent * agent * agent * agent * symmetric_key * symmetric_key * symmetric_key * public_key * nat * text * text * text * text * text * text * text * text * text * text * text * text * text * text * nat -> fact
state_role_OP: agent * agent * symmetric_key * nat * text * text * text * text * text * text * text * nat -> fact
state_role_TE: agent * agent * agent * symmetric_key * public_key * nat * text * text * text * text * text * text * text * text * text * nat -> fact


section types:

auth_1, auth_3, auth_2: protocol_id
MGoal, start: message
tekey, ikey, TEKey: public_key
rokey, rtkey, rukey, iukey, itkey, iokey, rikey, RUKey, RTKey, ROKey: symmetric_key
Dummy_IdToken, Dummy_Nonce, Dummy_RefreshToken, Dummy_AccessToken, Dummy_TokenType, Dummy_ExpireIn, Dummy_RedirectUri, Dummy_GrantType, Dummy_Code, dummy_nonce, Claim, AccessToken, IdToken, Nonce, RefreshToken, TokenType, ExpireIn, RedirectUri, GrantType, Code, StatE, Scope, ResponseType, ClientId, Dummy_Claim, Dummy_StatE, Dummy_Scope, Dummy_ResponseType, Dummy_ClientId: text
A2Goal, A1Goal, tokenEndpoint, userinfoEndpoint, authorizationServer, clientApplication, TE, RP, UE, OP, i: agent
Dummy_State, 4, SID, SID2, SID1, State, 3, 2, 1, 0, 26, 25, 24, 23, 20, 19, 18, 16, 14, 13, 11, 10, 8, 6, 5: nat


section inits:

initial_state init1 := 
 iknows(start).
 iknows(clientApplication).
 iknows(authorizationServer).
 iknows(tokenEndpoint).
 iknows(userinfoEndpoint).
 iknows(iokey).
 iknows(itkey).
 iknows(iukey).
 iknows(rikey).
 iknows(tekey).
 iknows(ikey).
 iknows(i).
 state_role_TE(tokenEndpoint,clientApplication,authorizationServer,rtkey,tekey,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,4).
 state_role_OP(authorizationServer,clientApplication,rokey,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,5).
 state_role_RP(clientApplication,authorizationServer,tokenEndpoint,i,rokey,rtkey,rikey,tekey,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,6).
 state_role_UE(userinfoEndpoint,clientApplication,i,rukey,ikey,0,dummy_nonce,dummy_nonce,8).
 state_role_OP(authorizationServer,clientApplication,rokey,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,10).
 state_role_RP(clientApplication,authorizationServer,i,userinfoEndpoint,rokey,rikey,rukey,ikey,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,11).
 state_role_UE(userinfoEndpoint,clientApplication,tokenEndpoint,rukey,tekey,0,dummy_nonce,dummy_nonce,13).
 state_role_TE(tokenEndpoint,clientApplication,i,rtkey,tekey,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,14).
 state_role_RP(clientApplication,i,tokenEndpoint,userinfoEndpoint,rikey,rtkey,rukey,tekey,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,16).
 state_role_UE(userinfoEndpoint,i,tokenEndpoint,iukey,tekey,0,dummy_nonce,dummy_nonce,18).
 state_role_TE(tokenEndpoint,i,authorizationServer,itkey,tekey,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,19).
 state_role_OP(authorizationServer,i,iokey,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,20).
 state_role_UE(userinfoEndpoint,clientApplication,tokenEndpoint,rukey,tekey,0,dummy_nonce,dummy_nonce,23).
 state_role_TE(tokenEndpoint,clientApplication,authorizationServer,rtkey,tekey,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,24).
 state_role_OP(authorizationServer,clientApplication,rokey,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,25).
 state_role_RP(clientApplication,authorizationServer,tokenEndpoint,userinfoEndpoint,rokey,rtkey,rukey,tekey,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,26)


section rules:

step step_0 (TE,RP,OP,RTKey,TEKey,Dummy_Code,Dummy_GrantType,Dummy_RedirectUri,Dummy_ExpireIn,Dummy_TokenType,Dummy_AccessToken,Dummy_RefreshToken,Dummy_Nonce,Dummy_IdToken,SID,Code,GrantType,RedirectUri,ExpireIn,TokenType,AccessToken,RefreshToken,Nonce,IdToken) :=
 state_role_TE(TE,RP,OP,RTKey,TEKey,0,Dummy_Code,Dummy_GrantType,Dummy_RedirectUri,Dummy_ExpireIn,Dummy_TokenType,Dummy_AccessToken,Dummy_RefreshToken,Dummy_Nonce,Dummy_IdToken,SID).
 iknows(scrypt(RTKey,pair(GrantType,pair(Code,RedirectUri))))
=[exists AccessToken,TokenType,RefreshToken,ExpireIn,IdToken,Nonce]=>
 state_role_TE(TE,RP,OP,RTKey,TEKey,1,Code,GrantType,RedirectUri,ExpireIn,TokenType,AccessToken,RefreshToken,Nonce,IdToken,SID).
 witness(TE,RP,auth_2,Code).
 iknows(scrypt(RTKey,pair(AccessToken,pair(TokenType,pair(RefreshToken,pair(ExpireIn,crypt(inv(TEKey),pair(IdToken,Nonce))))))))

step step_1 (OP,RP,ROKey,Dummy_Nonce,Dummy_ClientId,Dummy_ResponseType,Dummy_Scope,Dummy_RedirectUri,Dummy_Code,Dummy_StatE,SID,Nonce,ClientId,ResponseType,Scope,RedirectUri,Code,StatE) :=
 state_role_OP(OP,RP,ROKey,0,Dummy_Nonce,Dummy_ClientId,Dummy_ResponseType,Dummy_Scope,Dummy_RedirectUri,Dummy_Code,Dummy_StatE,SID).
 iknows(scrypt(ROKey,pair(ResponseType,pair(Scope,pair(ClientId,pair(StatE,pair(Nonce,RedirectUri)))))))
=[exists Code]=>
 state_role_OP(OP,RP,ROKey,1,Nonce,ClientId,ResponseType,Scope,RedirectUri,Code,StatE,SID).
 iknows(scrypt(ROKey,pair(Code,StatE)))

step step_2 (RP,OP,TE,UE,ROKey,RTKey,RUKey,TEKey,Dummy_ClientId,Dummy_ResponseType,Dummy_Scope,Dummy_StatE,Code,GrantType,Dummy_RedirectUri,ExpireIn,TokenType,RefreshToken,Dummy_Nonce,IdToken,AccessToken,Claim,SID,ClientId,ResponseType,Scope,StatE,RedirectUri,Nonce) :=
 state_role_RP(RP,OP,TE,UE,ROKey,RTKey,RUKey,TEKey,0,Dummy_ClientId,Dummy_ResponseType,Dummy_Scope,Dummy_StatE,Code,GrantType,Dummy_RedirectUri,ExpireIn,TokenType,RefreshToken,Dummy_Nonce,IdToken,AccessToken,Claim,SID).
 iknows(start)
=[exists ResponseType,Scope,ClientId,StatE,Nonce,RedirectUri]=>
 state_role_RP(RP,OP,TE,UE,ROKey,RTKey,RUKey,TEKey,1,ClientId,ResponseType,Scope,StatE,Code,GrantType,RedirectUri,ExpireIn,TokenType,RefreshToken,Nonce,IdToken,AccessToken,Claim,SID).
 iknows(scrypt(ROKey,pair(ResponseType,pair(Scope,pair(ClientId,pair(StatE,pair(Nonce,RedirectUri)))))))

step step_3 (RP,OP,TE,UE,ROKey,RTKey,RUKey,TEKey,ClientId,ResponseType,Scope,StatE,Dummy_Code,Dummy_GrantType,RedirectUri,ExpireIn,TokenType,RefreshToken,Nonce,IdToken,AccessToken,Claim,SID,Code,GrantType) :=
 state_role_RP(RP,OP,TE,UE,ROKey,RTKey,RUKey,TEKey,1,ClientId,ResponseType,Scope,StatE,Dummy_Code,Dummy_GrantType,RedirectUri,ExpireIn,TokenType,RefreshToken,Nonce,IdToken,AccessToken,Claim,SID).
 iknows(scrypt(ROKey,pair(Code,StatE)))
=[exists GrantType]=>
 state_role_RP(RP,OP,TE,UE,ROKey,RTKey,RUKey,TEKey,2,ClientId,ResponseType,Scope,StatE,Code,GrantType,RedirectUri,ExpireIn,TokenType,RefreshToken,Nonce,IdToken,AccessToken,Claim,SID).
 iknows(scrypt(RTKey,pair(GrantType,pair(Code,RedirectUri))))

step step_4 (RP,OP,TE,UE,ROKey,RTKey,RUKey,TEKey,ClientId,ResponseType,Scope,StatE,Code,GrantType,RedirectUri,Dummy_ExpireIn,Dummy_TokenType,Dummy_RefreshToken,Nonce,Dummy_IdToken,Dummy_AccessToken,Claim,SID,ExpireIn,TokenType,RefreshToken,IdToken,AccessToken) :=
 state_role_RP(RP,OP,TE,UE,ROKey,RTKey,RUKey,TEKey,2,ClientId,ResponseType,Scope,StatE,Code,GrantType,RedirectUri,Dummy_ExpireIn,Dummy_TokenType,Dummy_RefreshToken,Nonce,Dummy_IdToken,Dummy_AccessToken,Claim,SID).
 iknows(scrypt(RTKey,pair(AccessToken,pair(TokenType,pair(RefreshToken,pair(ExpireIn,crypt(inv(TEKey),pair(IdToken,Nonce))))))))
 =>
 state_role_RP(RP,OP,TE,UE,ROKey,RTKey,RUKey,TEKey,3,ClientId,ResponseType,Scope,StatE,Code,GrantType,RedirectUri,ExpireIn,TokenType,RefreshToken,Nonce,IdToken,AccessToken,Claim,SID).
 iknows(scrypt(RUKey,AccessToken))

step step_5 (RP,OP,TE,UE,ROKey,RTKey,RUKey,TEKey,ClientId,ResponseType,Scope,StatE,Code,GrantType,RedirectUri,ExpireIn,TokenType,RefreshToken,Nonce,IdToken,AccessToken,Dummy_Claim,SID,Claim) :=
 state_role_RP(RP,OP,TE,UE,ROKey,RTKey,RUKey,TEKey,3,ClientId,ResponseType,Scope,StatE,Code,GrantType,RedirectUri,ExpireIn,TokenType,RefreshToken,Nonce,IdToken,AccessToken,Dummy_Claim,SID).
 iknows(scrypt(RUKey,Claim))
 =>
 state_role_RP(RP,OP,TE,UE,ROKey,RTKey,RUKey,TEKey,4,ClientId,ResponseType,Scope,StatE,Code,GrantType,RedirectUri,ExpireIn,TokenType,RefreshToken,Nonce,IdToken,AccessToken,Claim,SID)

step step_6 (UE,RP,TE,RUKey,TEKey,Dummy_AccessToken,Dummy_Claim,SID,AccessToken,Claim) :=
 state_role_UE(UE,RP,TE,RUKey,TEKey,0,Dummy_AccessToken,Dummy_Claim,SID).
 iknows(scrypt(RUKey,AccessToken))
=[exists Claim]=>
 state_role_UE(UE,RP,TE,RUKey,TEKey,1,AccessToken,Claim,SID).
 witness(UE,RP,auth_3,AccessToken).
 iknows(scrypt(RUKey,Claim))


section properties:

property authentication_on_auth_1 (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,auth_1,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,auth_1,MGoal))
     /\ ((request(A1Goal,A2Goal,auth_1,MGoal,SID1)
           /\ request(A1Goal,A2Goal,auth_1,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_auth_2 (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,auth_2,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,auth_2,MGoal))
     /\ ((request(A1Goal,A2Goal,auth_2,MGoal,SID1)
           /\ request(A1Goal,A2Goal,auth_2,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_auth_3 (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,auth_3,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,auth_3,MGoal))
     /\ ((request(A1Goal,A2Goal,auth_3,MGoal,SID1)
           /\ request(A1Goal,A2Goal,auth_3,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state authentication_on_auth_1 (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,auth_1,MGoal,SID) &
 not(witness(A2Goal,A1Goal,auth_1,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_auth_1 (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,auth_1,MGoal,SID1).
 request(A1Goal,A2Goal,auth_1,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_auth_2 (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,auth_2,MGoal,SID) &
 not(witness(A2Goal,A1Goal,auth_2,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_auth_2 (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,auth_2,MGoal,SID1).
 request(A1Goal,A2Goal,auth_2,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_auth_3 (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,auth_3,MGoal,SID) &
 not(witness(A2Goal,A1Goal,auth_3,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_auth_3 (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,auth_3,MGoal,SID1).
 request(A1Goal,A2Goal,auth_3,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

