%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfile98EPK1

section signature:

state_ispeke_Resp: agent * agent * symmetric_key * nat * text * text * text * message * message * set(agent) * nat -> fact
state_ispeke_Init: agent * agent * symmetric_key * nat * text * text * text * text * message * message * set(agent) * nat -> fact


section types:

sec_r_Cb, ca, cb, sec_i_Cb: protocol_id
set_75, set_63: set
Ca, Nb, Cb, Dummy_Nb, Dummy_Cb, Dummy_Ca, Dummy_Na, dummy_nonce, Na: text
State, 4, SID, 2, 1, 0, Dummy_State, 3, SID2, SID1: nat
Set_41, Dummy_Set_41, Set_24, Dummy_Set_24, ASGoal: set(agent)
Y, K, Dummy_Y, Dummy_X, start, Dummy_K, X, dummy_msg, MGoal: message
Kmb, kmb, kmi, kbi: symmetric_key
BS, MS, A2Goal, A1Goal, ms, i, bs: agent


section inits:

initial_state init1 := 
 iknows(start).
 iknows(ms).
 iknows(bs).
 iknows(kmi).
 iknows(kbi).
 iknows(i).
 state_ispeke_Init(bs,ms,kmb,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,set_63,3).
 state_ispeke_Resp(bs,ms,kmb,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,set_75,4)


section rules:

step step_0 (MS,BS,Kmb,Dummy_Na,Nb,Dummy_Ca,Cb,K,X,Set_24,SID,Na,Ca) :=
 state_ispeke_Init(MS,BS,Kmb,0,Dummy_Na,Nb,Dummy_Ca,Cb,K,X,Set_24,SID).
 iknows(start)
=[exists Ca,Na]=>
 state_ispeke_Init(MS,BS,Kmb,1,Na,Nb,Ca,Cb,K,X,Set_24,SID).
 iknows(pair(MS,pair(Ca,exp(Kmb,Na))))

step step_1 (MS,BS,Kmb,Na,Nb,Ca,Dummy_Cb,Dummy_K,Dummy_X,Dummy_Set_24,SID,Cb,K,X) :=
 state_ispeke_Init(MS,BS,Kmb,1,Na,Nb,Ca,Dummy_Cb,Dummy_K,Dummy_X,Dummy_Set_24,SID).
 iknows(pair(X,scrypt(exp(X,Na),pair(Ca,Cb))))
=[exists K]=>
 state_ispeke_Init(MS,BS,Kmb,2,Na,Nb,Ca,Cb,K,X,Dummy_Set_24,SID).
 iknows(scrypt(K,Cb)).
 secret(Cb,sec_i_Cb,Dummy_Set_24).
 witness(MS,BS,cb,Cb).
 request(MS,BS,ca,Ca,SID).
 contains(MS,Dummy_Set_24).
 contains(BS,Dummy_Set_24)

step step_2 (BS,MS,Kmb,Dummy_Nb,Dummy_Cb,Dummy_Ca,Dummy_Y,Dummy_K,Dummy_Set_41,SID,Nb,Cb,Ca,Y,K) :=
 state_ispeke_Resp(BS,MS,Kmb,0,Dummy_Nb,Dummy_Cb,Dummy_Ca,Dummy_Y,Dummy_K,Dummy_Set_41,SID).
 iknows(pair(MS,pair(Ca,Y)))
=[exists Nb,Cb,K]=>
 state_ispeke_Resp(BS,MS,Kmb,1,Nb,Cb,Ca,Y,K,Dummy_Set_41,SID).
 iknows(pair(exp(Kmb,Nb),scrypt(K,pair(Ca,Cb)))).
 secret(Cb,sec_r_Cb,Dummy_Set_41).
 witness(BS,MS,ca,Ca).
 contains(MS,Dummy_Set_41).
 contains(BS,Dummy_Set_41)

step step_3 (BS,MS,Kmb,Nb,Cb,Ca,Y,K,Set_41,SID) :=
 state_ispeke_Resp(BS,MS,Kmb,1,Nb,Cb,Ca,Y,K,Set_41,SID).
 iknows(scrypt(K,Cb))
 =>
 state_ispeke_Resp(BS,MS,Kmb,2,Nb,Cb,Ca,Y,K,Set_41,SID).
 request(BS,MS,cb,Cb,SID)


section properties:

property secrecy_of_sec_i_Cb (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_i_Cb,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_sec_r_Cb (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_r_Cb,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property authentication_on_cb (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,cb,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,cb,MGoal))
     /\ ((request(A1Goal,A2Goal,cb,MGoal,SID1)
           /\ request(A1Goal,A2Goal,cb,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_ca (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,ca,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,ca,MGoal))
     /\ ((request(A1Goal,A2Goal,ca,MGoal,SID1)
           /\ request(A1Goal,A2Goal,ca,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state secrecy_of_sec_i_Cb (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_i_Cb,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_sec_r_Cb (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_r_Cb,ASGoal) &
 not(contains(i,ASGoal))

attack_state authentication_on_cb (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,cb,MGoal,SID) &
 not(witness(A2Goal,A1Goal,cb,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_cb (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,cb,MGoal,SID1).
 request(A1Goal,A2Goal,cb,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_ca (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,ca,MGoal,SID) &
 not(witness(A2Goal,A1Goal,ca,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_ca (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,ca,MGoal,SID1).
 request(A1Goal,A2Goal,ca,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

