%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfileqlGT85HWCT

section signature:

state_sensor: agent * agent * symmetric_key * text * hash_func * nat * text * text * symmetric_key * message * nat -> fact
state_gateway: agent * agent * agent * symmetric_key * symmetric_key * text * text * text * hash_func * hash_func * nat * text * text * text * text * text * text * message * symmetric_key * set(agent) * set(agent) * set(agent) * nat -> fact
state_user: agent * agent * agent * symmetric_key * text * text * text * hash_func * nat * text * text * text * symmetric_key * set(agent) * set(agent) * set(agent) * set(agent) * nat -> fact


section types:

set_151, set_150, set_149, set_134, set_133, set_132, set_131: set
Set_70, Set_69, Set_68, Dummy_Set_70, Dummy_Set_69, Dummy_Set_68, Dummy_Set_38, Dummy_Set_37, Dummy_Set_34, Dummy_Set_32, Set_38, Set_37, Set_34, Set_32, ASGoal: set(agent)
AIDu, Dummy_AIDu, dummy_msg, start, MGoal: message
nu, auth_sk, secret_kgs, secret_kgsnew, r1, r2, tsug_id, auth_nu, auth_sk2, secret_sk, secret_kug, secret_idu, secret_kugnew: protocol_id
State, 5, SID, 4, Dummy_State, 3, 2, 1, SID2, SID1: nat
Hash, Add, f1, f2: hash_func
T, T2, IDsn, Nu, Dummy_TS, Dummy_T2, TS, TSugnew, M, Dummy_T, IDu, TSug, Dummy_TSugnew, Dummy_TSug, Dummy_Nu, dummy_nonce, idu, idsn, tsug: text
SK, Kgs, Dummy_Kgs, Kug, Dummy_SK, Dummy_Kug, dummy_sk, kug, kgs, k_is, kai: symmetric_key
SENSOR, GATEWAY, USER, A2Goal, A1Goal, u, g, s, i: agent


section inits:

initial_state init1 := 
 iknows(start).
 iknows(u).
 iknows(idu).
 iknows(f1).
 iknows(f2).
 iknows(i).
 state_user(u,s,g,kug,idu,idsn,tsug,f1,1,dummy_nonce,dummy_nonce,dummy_nonce,dummy_sk,set_131,set_132,set_133,set_134,3).
 state_gateway(g,u,s,kug,kgs,idu,idsn,tsug,f1,f2,1,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_sk,set_149,set_150,set_151,4).
 state_sensor(s,g,kgs,idsn,f1,1,dummy_nonce,dummy_nonce,dummy_sk,dummy_msg,5)


section rules:

step step_0 (USER,SENSOR,GATEWAY,Kug,IDu,IDsn,TSug,Hash,Dummy_Nu,TS,TSugnew,SK,Dummy_Set_32,Dummy_Set_34,Set_37,Set_38,SID,Nu) :=
 state_user(USER,SENSOR,GATEWAY,Kug,IDu,IDsn,TSug,Hash,1,Dummy_Nu,TS,TSugnew,SK,Dummy_Set_32,Dummy_Set_34,Set_37,Set_38,SID).
 iknows(start)
=[exists Nu]=>
 state_user(USER,SENSOR,GATEWAY,Kug,IDu,IDsn,TSug,Hash,2,Nu,TS,TSugnew,SK,Dummy_Set_32,Dummy_Set_34,Set_37,Set_38,SID).
 iknows(pair(xor(Kug,Nu),pair(apply(Hash,pair(IDu,pair(Kug,pair(Nu,TSug)))),pair(TSug,pair(IDsn,apply(Hash,pair(apply(Hash,pair(IDu,pair(Kug,pair(Nu,TSug)))),pair(Kug,pair(xor(Kug,Nu),IDsn))))))))).
 secret(Kug,secret_kug,Dummy_Set_32).
 secret(IDu,secret_idu,Dummy_Set_34).
 witness(USER,GATEWAY,auth_nu,Nu).
 contains(USER,Dummy_Set_32).
 contains(GATEWAY,Dummy_Set_32).
 contains(USER,Dummy_Set_34).
 contains(GATEWAY,Dummy_Set_34)

step step_1 (USER,SENSOR,GATEWAY,Dummy_Kug,IDu,IDsn,Dummy_TSug,Hash,Nu,TS,Dummy_TSugnew,Dummy_SK,Set_32,Set_34,Dummy_Set_37,Dummy_Set_38,SID,TSugnew,SK) :=
 state_user(USER,SENSOR,GATEWAY,Dummy_Kug,IDu,IDsn,Dummy_TSug,Hash,2,Nu,TS,Dummy_TSugnew,Dummy_SK,Set_32,Set_34,Dummy_Set_37,Dummy_Set_38,SID).
 iknows(pair(xor(apply(Hash,pair(Dummy_Kug,pair(IDu,Nu))),SK),pair(xor(TSugnew,apply(Hash,pair(Dummy_Kug,pair(IDu,Nu)))),apply(Hash,pair(xor(apply(Hash,pair(Dummy_Kug,pair(IDu,Nu))),SK),pair(Nu,pair(xor(TSugnew,apply(Hash,pair(Dummy_Kug,pair(IDu,Nu)))),Dummy_Kug)))))))
 =>
 state_user(USER,SENSOR,GATEWAY,apply(Hash,pair(Dummy_Kug,pair(IDu,TSugnew))),IDu,IDsn,TSugnew,Hash,3,Nu,TS,TSugnew,SK,Set_32,Set_34,Dummy_Set_37,Dummy_Set_38,SID).
 secret(apply(Hash,pair(Dummy_Kug,pair(IDu,TSugnew))),secret_kugnew,Dummy_Set_37).
 secret(SK,secret_sk,Dummy_Set_38).
 request(USER,GATEWAY,auth_sk2,SK,SID).
 contains(USER,Dummy_Set_37).
 contains(GATEWAY,Dummy_Set_37).
 contains(USER,Dummy_Set_38).
 contains(GATEWAY,Dummy_Set_38).
 contains(SENSOR,Dummy_Set_38)

step step_2 (GATEWAY,USER,SENSOR,Kug,Kgs,IDu,IDsn,TSug,Hash,Add,Dummy_Nu,Dummy_T,T2,TS,TSugnew,M,Dummy_AIDu,Dummy_SK,Dummy_Set_68,Dummy_Set_69,Set_70,SID,Nu,T,SK) :=
 state_gateway(GATEWAY,USER,SENSOR,Kug,Kgs,IDu,IDsn,TSug,Hash,Add,1,Dummy_Nu,Dummy_T,T2,TS,TSugnew,M,Dummy_AIDu,Dummy_SK,Dummy_Set_68,Dummy_Set_69,Set_70,SID).
 iknows(pair(xor(Kug,Nu),pair(apply(Hash,pair(IDu,pair(Kug,pair(Nu,TSug)))),pair(TSug,pair(IDsn,apply(Hash,pair(apply(Hash,pair(IDu,pair(Kug,pair(Nu,TSug)))),pair(Kug,pair(xor(Kug,Nu),IDsn)))))))))
=[exists T,SK]=>
 state_gateway(GATEWAY,USER,SENSOR,Kug,Kgs,IDu,IDsn,TSug,Hash,Add,2,Nu,T,T2,TS,TSugnew,M,apply(Hash,pair(IDu,pair(Kug,pair(Nu,TSug)))),SK,Dummy_Set_68,Dummy_Set_69,Set_70,SID).
 iknows(pair(Dummy_AIDu,pair(xor(SK,apply(Hash,Kgs)),pair(T,apply(Hash,pair(Dummy_AIDu,pair(xor(apply(Hash,Kgs),SK),pair(T,Kgs)))))))).
 secret(Kgs,secret_kgs,Dummy_Set_68).
 secret(Nu,nu,Dummy_Set_69).
 request(GATEWAY,USER,auth_nu,Nu,SID).
 witness(GATEWAY,SENSOR,auth_sk,SK).
 contains(GATEWAY,Dummy_Set_68).
 contains(SENSOR,Dummy_Set_68).
 contains(GATEWAY,Dummy_Set_69).
 contains(USER,Dummy_Set_69)

step step_3 (GATEWAY,USER,SENSOR,Dummy_Kug,Dummy_Kgs,IDu,IDsn,TSug,Hash,Add,Nu,T,Dummy_T2,Dummy_TS,Dummy_TSugnew,M,AIDu,SK,Set_68,Set_69,Dummy_Set_70,SID,T2,TSugnew) :=
 state_gateway(GATEWAY,USER,SENSOR,Dummy_Kug,Dummy_Kgs,IDu,IDsn,TSug,Hash,Add,2,Nu,T,Dummy_T2,Dummy_TS,Dummy_TSugnew,M,AIDu,SK,Set_68,Set_69,Dummy_Set_70,SID).
 iknows(pair(T2,pair(IDsn,apply(Hash,pair(SK,pair(Dummy_Kgs,pair(IDsn,T2)))))))
=[exists TSugnew]=>
 state_gateway(GATEWAY,USER,SENSOR,apply(Hash,pair(Dummy_Kug,pair(IDu,TSugnew))),apply(Hash,pair(Dummy_Kgs,IDsn)),IDu,IDsn,TSug,Hash,Add,3,Nu,T,T2,xor(TSugnew,apply(Hash,pair(Dummy_Kug,pair(IDu,Nu)))),TSugnew,M,AIDu,SK,Set_68,Set_69,Dummy_Set_70,SID).
 iknows(pair(xor(apply(Hash,pair(Dummy_Kug,pair(IDu,Nu))),SK),pair(xor(TSugnew,apply(Hash,pair(Dummy_Kug,pair(IDu,Nu)))),apply(Hash,pair(xor(apply(Hash,pair(Dummy_Kug,pair(IDu,Nu))),SK),pair(Nu,pair(xor(TSugnew,apply(Hash,pair(Dummy_Kug,pair(IDu,Nu)))),Dummy_Kug))))))).
 secret(apply(Hash,pair(Dummy_Kgs,IDsn)),secret_kgsnew,Dummy_Set_70).
 witness(GATEWAY,USER,auth_sk2,SK).
 contains(GATEWAY,Dummy_Set_70).
 contains(SENSOR,Dummy_Set_70)

step step_4 (SENSOR,GATEWAY,Dummy_Kgs,IDsn,Hash,Dummy_T,Dummy_T2,Dummy_SK,Dummy_AIDu,SID,T,T2,SK,AIDu) :=
 state_sensor(SENSOR,GATEWAY,Dummy_Kgs,IDsn,Hash,1,Dummy_T,Dummy_T2,Dummy_SK,Dummy_AIDu,SID).
 iknows(pair(AIDu,pair(xor(SK,apply(Hash,Dummy_Kgs)),pair(T,apply(Hash,pair(AIDu,pair(xor(apply(Hash,Dummy_Kgs),SK),pair(T,Dummy_Kgs))))))))
=[exists T2]=>
 state_sensor(SENSOR,GATEWAY,apply(Hash,pair(Dummy_Kgs,IDsn)),IDsn,Hash,2,T,T2,SK,AIDu,SID).
 iknows(pair(T2,pair(IDsn,apply(Hash,pair(SK,pair(Dummy_Kgs,pair(IDsn,T2))))))).
 request(SENSOR,GATEWAY,auth_sk,SK,SID)


section properties:

property secrecy_of_nu (MGoal,ASGoal) :=
 [] ((secret(MGoal,nu,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_secret_idu (MGoal,ASGoal) :=
 [] ((secret(MGoal,secret_idu,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_secret_sk (MGoal,ASGoal) :=
 [] ((secret(MGoal,secret_sk,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_secret_kug (MGoal,ASGoal) :=
 [] ((secret(MGoal,secret_kug,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_secret_kgs (MGoal,ASGoal) :=
 [] ((secret(MGoal,secret_kgs,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_secret_kugnew (MGoal,ASGoal) :=
 [] ((secret(MGoal,secret_kugnew,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_secret_kgsnew (MGoal,ASGoal) :=
 [] ((secret(MGoal,secret_kgsnew,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property authentication_on_auth_nu (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,auth_nu,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,auth_nu,MGoal))
     /\ ((request(A1Goal,A2Goal,auth_nu,MGoal,SID1)
           /\ request(A1Goal,A2Goal,auth_nu,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_auth_sk (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,auth_sk,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,auth_sk,MGoal))
     /\ ((request(A1Goal,A2Goal,auth_sk,MGoal,SID1)
           /\ request(A1Goal,A2Goal,auth_sk,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_auth_sk2 (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,auth_sk2,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,auth_sk2,MGoal))
     /\ ((request(A1Goal,A2Goal,auth_sk2,MGoal,SID1)
           /\ request(A1Goal,A2Goal,auth_sk2,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state secrecy_of_nu (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,nu,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_secret_idu (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,secret_idu,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_secret_sk (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,secret_sk,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_secret_kug (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,secret_kug,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_secret_kgs (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,secret_kgs,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_secret_kugnew (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,secret_kugnew,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_secret_kgsnew (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,secret_kgsnew,ASGoal) &
 not(contains(i,ASGoal))

attack_state authentication_on_auth_nu (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,auth_nu,MGoal,SID) &
 not(witness(A2Goal,A1Goal,auth_nu,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_auth_nu (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,auth_nu,MGoal,SID1).
 request(A1Goal,A2Goal,auth_nu,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_auth_sk (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,auth_sk,MGoal,SID) &
 not(witness(A2Goal,A1Goal,auth_sk,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_auth_sk (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,auth_sk,MGoal,SID1).
 request(A1Goal,A2Goal,auth_sk,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_auth_sk2 (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,auth_sk2,MGoal,SID) &
 not(witness(A2Goal,A1Goal,auth_sk2,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_auth_sk2 (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,auth_sk2,MGoal,SID1).
 request(A1Goal,A2Goal,auth_sk2,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

