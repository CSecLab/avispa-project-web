%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfileENnaP4

section signature:

state_server: agent * agent * symmetric_key * hash_func * hash_func * nat * text * text * text * text * text * text * text * text * text * text * text * text * text * message * message * message * message * message * message * message * hash_func * set(text) * set(agent) * set(text) * set(agent) * nat -> fact
state_alice: agent * agent * symmetric_key * hash_func * hash_func * nat * text * text * text * text * text * text * text * text * text * text * text * text * text * message * message * message * message * message * message * message * hash_func * set(text) * set(text) * set(agent) * nat -> fact


section types:

Set_85, Set_83, Dummy_Set_85, Dummy_Set_83, Set_46, Dummy_Set_46, Set_42, Dummy_Set_42: set(text)
set_173, set_172, set_171, set_170, set_168, set_167, set_166, set_152, set_151, set_150, set_149, set_128, set_127, set_126: set
Set_86, Set_84, Dummy_Set_86, Dummy_Set_84, Set_47, Dummy_Set_47, ASGoal: set(agent)
CIDi, REGi, Yi, Xi, Zi, Di, Li, Dummy_Zi, Dummy_Xi, Dummy_Li, Dummy_Di, start, Dummy_Yi, Dummy_REGi, Dummy_CIDi, dummy_msg, MGoal: message
server_alice, alice_server, subs1, subs2, subs3, subs4, alice_server_n1, server_alice_n2: protocol_id
7, 6, State, 4, SID, 3, 2, 1, 0, Dummy_State, SID2, SID1: nat
skas, SKas: symmetric_key
q, p, IDi, PWi, Ri, PWRi, D, E, N1, N2, Tu, Ts, P, Dummy_Ts, Q, Dummy_N2, N, Dummy_N, Dummy_Q, Dummy_P, Dummy_E, Dummy_D, Dummy_Tu, Dummy_N1, Dummy_PWRi, Dummy_Ri, dummy_nonce, idi, pwi, ri, pwri, d, e, n1, n2, tu, ts, n, regi, yi: text
ui, s, S, Ui, A2Goal, A1Goal, i: agent
Inc, H, Mul, dummy_hash, h, mul: hash_func


section inits:

initial_state init1 := 
 iknows(start).
 iknows(ui).
 iknows(s).
 iknows(h).
 iknows(mul).
 iknows(regi).
 iknows(yi).
 iknows(n).
 iknows(e).
 iknows(idi).
 iknows(li).
 iknows(tu).
 iknows(i).
 state_alice(ui,s,skas,h,mul,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_hash,set_126,set_127,set_128,3).
 state_server(ui,s,skas,h,mul,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_hash,set_149,set_150,set_151,set_152,4).
 state_alice(s,ui,skas,h,mul,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_hash,set_166,set_167,set_168,6).
 state_server(s,ui,skas,h,mul,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_hash,set_170,set_171,set_172,set_173,7)


section rules:

step step_0 (Ui,S,SKas,H,Mul,IDi,PWi,Dummy_Ri,Dummy_PWRi,D,E,N1,N2,Tu,Ts,P,Q,N,CIDi,REGi,Yi,Xi,Zi,Di,Li,Inc,Dummy_Set_42,Set_46,Set_47,SID,Ri) :=
 state_alice(Ui,S,SKas,H,Mul,0,IDi,PWi,Dummy_Ri,Dummy_PWRi,D,E,N1,N2,Tu,Ts,P,Q,N,CIDi,REGi,Yi,Xi,Zi,Di,Li,Inc,Dummy_Set_42,Set_46,Set_47,SID).
 iknows(start)
=[exists Ri]=>
 state_alice(Ui,S,SKas,H,Mul,1,IDi,PWi,Ri,apply(H,pair(PWi,Ri)),D,E,N1,N2,Tu,Ts,P,Q,N,CIDi,REGi,Yi,Xi,Zi,Di,Li,Inc,Dummy_Set_42,Set_46,Set_47,SID).
 iknows(scrypt(SKas,pair(IDi,apply(H,pair(PWi,Ri))))).
 secret(Dummy_Set_42,subs1,Ui).
 contains(PWi,Dummy_Set_42)

step step_1 (Ui,S,SKas,H,Mul,IDi,PWi,Ri,PWRi,D,E,Dummy_N1,N2,Dummy_Tu,Ts,P,Q,N,Dummy_CIDi,Dummy_REGi,Dummy_Yi,Xi,Zi,Dummy_Di,Dummy_Li,Inc,Set_42,Dummy_Set_46,Dummy_Set_47,SID,N1,Tu,REGi,Yi) :=
 state_alice(Ui,S,SKas,H,Mul,1,IDi,PWi,Ri,PWRi,D,E,Dummy_N1,N2,Dummy_Tu,Ts,P,Q,N,Dummy_CIDi,Dummy_REGi,Dummy_Yi,Xi,Zi,Dummy_Di,Dummy_Li,Inc,Set_42,Dummy_Set_46,Dummy_Set_47,SID).
 iknows(scrypt(SKas,pair(REGi,pair(Yi,pair(N,E)))))
=[exists Tu,N1]=>
 state_alice(Ui,S,SKas,H,Mul,2,IDi,PWi,Ri,PWRi,D,E,N1,N2,Tu,Ts,P,Q,N,xor(Dummy_REGi,PWRi),REGi,Yi,Xi,Zi,apply(H,pair(xor(Dummy_REGi,PWRi),pair(PWRi,pair(Tu,N1)))),exp(pair(apply(H,pair(xor(Dummy_REGi,PWRi),pair(PWRi,pair(Tu,N1)))),N1),E),Inc,Set_42,Dummy_Set_46,Dummy_Set_47,SID).
 iknows(pair(IDi,pair(exp(pair(apply(H,pair(xor(Dummy_REGi,PWRi),pair(PWRi,pair(Tu,N1)))),N1),E),pair(Yi,Tu)))).
 secret(Dummy_Set_46,subs3,Dummy_Set_47).
 contains(N1,Dummy_Set_46).
 contains(Ui,Dummy_Set_47).
 contains(S,Dummy_Set_47)

step step_2 (Ui,S,SKas,H,Mul,IDi,PWi,Ri,PWRi,D,E,N1,N2,Dummy_Tu,Ts,P,Q,N,CIDi,REGi,Yi,Dummy_Xi,Dummy_Zi,Di,Li,Inc,Set_42,Set_46,Set_47,SID,Tu,Xi,Zi) :=
 state_alice(Ui,S,SKas,H,Mul,2,IDi,PWi,Ri,PWRi,D,E,N1,N2,Dummy_Tu,Ts,P,Q,N,CIDi,REGi,Yi,Dummy_Xi,Dummy_Zi,Di,Li,Inc,Set_42,Set_46,Set_47,SID).
 iknows(pair(Xi,pair(Zi,Tu)))
 =>
 state_alice(Ui,S,SKas,H,Mul,3,IDi,PWi,Ri,PWRi,D,E,N1,N2,Tu,Ts,P,Q,N,CIDi,REGi,Yi,Xi,Zi,Di,Li,Inc,Set_42,Set_46,Set_47,SID)

step step_3 (S,Ui,SKas,H,Mul,IDi,PWi,Ri,Dummy_PWRi,Dummy_D,Dummy_E,N1,N2,Tu,Ts,Dummy_P,Dummy_Q,Dummy_N,Dummy_CIDi,Dummy_REGi,Dummy_Yi,Xi,Zi,Di,Li,Inc,Dummy_Set_83,Dummy_Set_84,Set_85,Set_86,SID,PWRi,E,P,Q) :=
 state_server(S,Ui,SKas,H,Mul,0,IDi,PWi,Ri,Dummy_PWRi,Dummy_D,Dummy_E,N1,N2,Tu,Ts,Dummy_P,Dummy_Q,Dummy_N,Dummy_CIDi,Dummy_REGi,Dummy_Yi,Xi,Zi,Di,Li,Inc,Dummy_Set_83,Dummy_Set_84,Set_85,Set_86,SID).
 iknows(pair(IDi,PWRi))
=[exists E,Q,P]=>
 state_server(S,Ui,SKas,H,Mul,1,IDi,PWi,Ri,PWRi,inv(E),E,N1,N2,Tu,Ts,P,Q,apply(Mul,pair(p,q)),apply(H,pair(IDi,inv(E))),apply(H,pair(apply(H,pair(IDi,inv(E))),PWRi)),xor(apply(H,pair(IDi,inv(E))),PWRi),Xi,Zi,Di,Li,Inc,Dummy_Set_83,Dummy_Set_84,Set_85,Set_86,SID).
 secret(Dummy_Set_83,subs2,Dummy_Set_84).
 iknows(scrypt(SKas,pair(apply(H,pair(apply(H,pair(IDi,inv(E))),PWRi)),pair(xor(apply(H,pair(IDi,inv(E))),PWRi),pair(apply(Mul,pair(p,q)),E))))).
 contains(inv(E),Dummy_Set_83).
 contains(S,Dummy_Set_84)

step step_4 (S,Ui,SKas,H,Mul,IDi,PWi,Ri,PWRi,D,E,Dummy_N1,Dummy_N2,Dummy_Tu,Dummy_Ts,P,Q,N,CIDi,REGi,Dummy_Yi,Dummy_Xi,Dummy_Zi,Di,Dummy_Li,Inc,Set_83,Set_84,Dummy_Set_85,Dummy_Set_86,SID,N1,N2,Tu,Ts,Yi,Li) :=
 state_server(S,Ui,SKas,H,Mul,1,IDi,PWi,Ri,PWRi,D,E,Dummy_N1,Dummy_N2,Dummy_Tu,Dummy_Ts,P,Q,N,CIDi,REGi,Dummy_Yi,Dummy_Xi,Dummy_Zi,Di,Dummy_Li,Inc,Set_83,Set_84,Dummy_Set_85,Dummy_Set_86,SID).
 iknows(pair(IDi,pair(Li,pair(Yi,Tu))))
=[exists Ts,N1,N2]=>
 state_server(S,Ui,SKas,H,Mul,2,IDi,PWi,Ri,PWRi,D,E,N1,N2,Tu,Ts,P,Q,N,CIDi,REGi,Yi,apply(H,pair(N2,PWRi)),xor(N1,N2),Di,Li,Inc,Set_83,Set_84,Dummy_Set_85,Dummy_Set_86,SID).
 secret(Dummy_Set_85,subs4,Dummy_Set_86).
 iknows(pair(apply(H,pair(N2,PWRi)),pair(xor(N1,N2),Ts))).
 contains(N2,Dummy_Set_85).
 contains(Ui,Dummy_Set_86).
 contains(S,Dummy_Set_86)


section properties:

property secrecy_of_subs1 (MGoal,ASGoal) :=
 [] ((secret(MGoal,subs1,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_subs2 (MGoal,ASGoal) :=
 [] ((secret(MGoal,subs2,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_subs3 (MGoal,ASGoal) :=
 [] ((secret(MGoal,subs3,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_subs4 (MGoal,ASGoal) :=
 [] ((secret(MGoal,subs4,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property authentication_on_alice_server_n1 (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,alice_server_n1,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,alice_server_n1,MGoal))
     /\ ((request(A1Goal,A2Goal,alice_server_n1,MGoal,SID1)
           /\ request(A1Goal,A2Goal,alice_server_n1,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_server_alice_n2 (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,server_alice_n2,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,server_alice_n2,MGoal))
     /\ ((request(A1Goal,A2Goal,server_alice_n2,MGoal,SID1)
           /\ request(A1Goal,A2Goal,server_alice_n2,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state secrecy_of_subs1 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,subs1,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_subs2 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,subs2,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_subs3 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,subs3,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_subs4 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,subs4,ASGoal) &
 not(contains(i,ASGoal))

attack_state authentication_on_alice_server_n1 (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,alice_server_n1,MGoal,SID) &
 not(witness(A2Goal,A1Goal,alice_server_n1,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_alice_server_n1 (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,alice_server_n1,MGoal,SID1).
 request(A1Goal,A2Goal,alice_server_n1,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_server_alice_n2 (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,server_alice_n2,MGoal,SID) &
 not(witness(A2Goal,A1Goal,server_alice_n2,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_server_alice_n2 (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,server_alice_n2,MGoal,SID1).
 request(A1Goal,A2Goal,server_alice_n2,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

