%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfileyZ1m74

section signature:

state_target: agent * agent * agent * hash_func * text * hash_func * nat * text * text * text * text * pair(text,text) * nat -> fact
state_initiator: agent * agent * agent * hash_func * text * text * nat * text * pair(text,text) * set(agent) * nat -> fact


section types:

set_88, set_85, set_71: set
Dummy_Set_21, Set_21, ASGoal: set(agent)
start, MGoal: message
Reqcompleted, Dummy_Reqcompleted: pair(text,text)
10, 9, 7, State, 6, 4, SID, Dummy_State, 2, 3, 1, 0, SID2, SID1: nat
sec_i_Pwd, user_gateway, sec_i_pwd: protocol_id
Succ_msg, Tstamp, X, N, Dummy_Succ_msg, Dummy_Tstamp, Dummy_N, Dummy_X, UID, Dummy_Recv_msg, dummy_nonce, Recv_msg, pwd_u_gw, Pwd_U_GW, uid: text
Pwd, H, pwd, h: hash_func
U, GW, SN, A2Goal, A1Goal, u, gw, sn, i: agent


section inits:

initial_state init1 := 
 iknows(start).
 iknows(u).
 iknows(gw).
 iknows(sn).
 iknows(h).
 iknows(uid).
 iknows(i).
 state_initiator(u,gw,sn,h,uid,pwd_u_gw,0,dummy_nonce,pair(dummy_nonce,dummy_nonce),set_71,3).
 state_target(gw,u,sn,h,uid,pwd,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,pair(dummy_nonce,dummy_nonce),4).
 state_initiator(u,gw,sn,h,uid,pwd_u_gw,0,dummy_nonce,pair(dummy_nonce,dummy_nonce),set_85,6).
 state_target(gw,u,sn,h,uid,pwd,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,pair(dummy_nonce,dummy_nonce),7).
 state_initiator(u,gw,sn,h,uid,pwd_u_gw,0,dummy_nonce,pair(dummy_nonce,dummy_nonce),set_88,9).
 state_target(gw,u,sn,h,uid,pwd,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,pair(dummy_nonce,dummy_nonce),10)


section rules:

step step_0 (U,GW,SN,H,UID,Pwd_U_GW,Recv_msg,Dummy_Reqcompleted,Dummy_Set_21,SID) :=
 state_initiator(U,GW,SN,H,UID,Pwd_U_GW,0,Recv_msg,Dummy_Reqcompleted,Dummy_Set_21,SID).
 iknows(start)
 =>
 state_initiator(U,GW,SN,H,UID,Pwd_U_GW,1,Recv_msg,pair(UID,apply(H,Pwd_U_GW)),Dummy_Set_21,SID).
 iknows(pair(UID,apply(H,Pwd_U_GW))).
 secret(Pwd_U_GW,sec_i_Pwd,Dummy_Set_21).
 witness(U,GW,user_gateway,pair(UID,apply(H,Pwd_U_GW))).
 contains(GW,Dummy_Set_21)

step step_1 (U,GW,SN,H,UID,Pwd_U_GW,Dummy_Recv_msg,Reqcompleted,Set_21,SID,Recv_msg) :=
 state_initiator(U,GW,SN,H,UID,Pwd_U_GW,1,Dummy_Recv_msg,Reqcompleted,Set_21,SID).
 iknows(Recv_msg)
 =>
 state_initiator(U,GW,SN,H,UID,Pwd_U_GW,2,Recv_msg,Reqcompleted,Set_21,SID)

step step_2 (GW,U,SN,H,UID,Pwd,Dummy_X,Dummy_N,Dummy_Tstamp,Dummy_Succ_msg,Dummy_Reqcompleted,SID,X,Tstamp,Succ_msg) :=
 state_target(GW,U,SN,H,UID,Pwd,0,Dummy_X,Dummy_N,Dummy_Tstamp,Dummy_Succ_msg,Dummy_Reqcompleted,SID).
 iknows(pair(UID,Pwd))
=[exists Tstamp,X,Succ_msg]=>
 state_target(GW,U,SN,H,UID,Pwd,1,X,xor(Pwd,apply(H,xor(Dummy_X,UID))),Tstamp,Succ_msg,pair(UID,Pwd),SID).
 iknows(Dummy_Succ_msg).
 request(U,GW,user_gateway,pair(UID,Pwd),SID)


section properties:

property authentication_on_user_gateway (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,user_gateway,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,user_gateway,MGoal))
     /\ ((request(A1Goal,A2Goal,user_gateway,MGoal,SID1)
           /\ request(A1Goal,A2Goal,user_gateway,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property secrecy_of_sec_i_Pwd (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_i_Pwd,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))


section attack_states:

attack_state authentication_on_user_gateway (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,user_gateway,MGoal,SID) &
 not(witness(A2Goal,A1Goal,user_gateway,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_user_gateway (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,user_gateway,MGoal,SID1).
 request(A1Goal,A2Goal,user_gateway,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state secrecy_of_sec_i_Pwd (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_i_Pwd,ASGoal) &
 not(contains(i,ASGoal))

