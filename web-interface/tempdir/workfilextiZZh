%% PROTOCOL: EKE: Encrypted Key Exchange
%% VARIANT: basic
%% PURPOSE: Encrypted key exchange
%% REFERENCE:
%% \url{http://citeseer.ist.psu.edu/bellovin92encrypted.html}
%% MODELER:
%% \begin{itemize}
%%   \item Haykal Tej, Siemens CT IC 3, 2003
%%   \item Sebastian M{\"o}dersheim, ETH Z{\"u}rich, December 2003
%% \end{itemize}
%%
%% ALICE_BOB:
%% \begin{verbatim}
%% A -> B : {Ea}_Kab        |    Key exchange part
%% B -> A : {{K}_Ea}_Kab    |
%% A -> B : {Ca}_K          |
%% B -> A : {Ca,Cb}_K       |    Challenge/Response
%% A -> B : {Cb}_K          |    Authentication part
%% \end{verbatim}
%%
%% LIMITATIONS: None
%%
%% PROBLEMS: 3
%%
%% CLASSIFICATION: G2 G12
%%
%% ATTACKS: 
%% \begin{verbatim}
%% i -> (a,3): start
%% (a,3) -> i: {Ea(1)}_kab
%% i -> (a,6): {Ea(1)}_kab
%% (a,6) -> i: {{K(2)}_Ea(1)}_kab 
%% i -> (a,3): {{K(2)}_Ea(1)}_kab
%% (a,3) -> i: {Na(3)}_K(2) witness(a,b,na,Na(3))
%% i -> (a,6): {Na(3)}_K(2)
%% (a,6) -> i: {Na(3),Nb(4)}_K(2) witness(a,b,nb,Nb(4))
%% i -> (a,3): {Na(3),Nb(4)}_K(2)
%% (a,3) -> i: {Nb(4)}_K(2)  request(a,b,nb,Nb(4))
%% \end{verbatim}
%%
%% Parallel session attack, man-in-the-middle
%% between A as initiator and A as responder, attacker
%% masquerades as B, but no secret nonces are exposed.
%%
%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%HLPSL:

role eke_Init (A,B: agent,
               Kab: symmetric_key,
	       K,TID : text,
               Snd,Rcv: channel(dy))
played_by A
def=

  local State   : nat,
	H       : hash_func,
        Na,Nb   : text

  const sec_k1 : protocol_id

  init  State := 0

  transition

   1. State = 0
      /\ Rcv(start)
      =|> 
      State' := 1
      /\ Na' := new()
      /\ Snd(Na') 

   2. State = 1
      /\ Rcv({xor(xor(TID,Nb'),H(K.Na'))}_Kab)
      =|> 
      State' := 2
      /\ Na' := new()
      /\ Snd({H(K.Na'.Nb')}_Kab)
      /\ secret(K,sec_k1,{A,B})
      /\ witness(A,B,na,Na')
      /\ request(A,B,nb,Nb')

end role

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

role eke_Resp (B,A: agent,
               Kab: symmetric_key,
	       K,TID : text,
 	       Snd,Rcv: channel(dy))
played_by B
def=

  local State   : nat,
        Na,Nb   : text,
	H       : hash_func,

  const sec_k2 : protocol_id

  init  State := 0

  transition


1. State=0 /\ RCV(start) =|> State':=1 /\ N1':=new() /\ SND(xor(K1,N1').{xor(PID,N1')}_K2)
		2. State=1 /\ RCV({xor(K2,N2')}_PID.{xor(xor(K1,N1),N2')}_K2.N1) =|> State':=2 /\ witness(R,T,auth_2,N2')



   1. State = 0 /\ Rcv(Na')
      =|> 
      State' := 1
      /\ Nb' := new()
      /\ Snd({xor(xor(TID,Nb'),H(K.Na'))}_Kab)
      /\ secret(K,sec_k2,{A,B})

   2. State = 1 /\ Rcv({H(K.Na'.Nb')}_Kab)
      =|> 
      State' := 2
      /\ witness(B,A,nb,Nb')
      /\ request(B,A,na,Na)

end role

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

role session(A,B: agent,
	     Kab: symmetric_key,
	     K,TID: text)
def=

  local SA, RA, SB, RB: channel (dy)

  composition
     eke_Init(A,B,Kab,K,TID,SA,RA)
  /\ eke_Resp(B,A,Kab,K,TID,SB,RB)

end role

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


role environment()
def=

  const a, b   : agent,
        kab    : symmetric_key,
        k,tid  : text, 
        na, nb : protocol_id

  intruder_knowledge={a,b}

  composition
      session(a,b,kab,k,tid)
   /\ session(b,a,kab,k,tid)
 
end role

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

goal

 % Confidentiality (G12)
 secrecy_of sec_k1, sec_k2

 % Message authentication (G2)
 % EKE_Init authenticates EKE_Resp on nb
 authentication_on nb

 % Message authentication (G2)
 % EKE_Resp authenticates EKE_Init on na
 authentication_on na

end goal

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

environment()
