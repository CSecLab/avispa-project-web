%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfilevdB80m

section signature:

state_role_MR: agent * agent * agent * agent * agent * symmetric_key * hash_func * symmetric_key * symmetric_key * nat * text * text * text * text * text * text * nat -> fact
state_role_MAP: agent * agent * agent * agent * symmetric_key * hash_func * nat * text * symmetric_key * text * text * text * symmetric_key * text * symmetric_key * text * nat -> fact
state_role_A: agent * symmetric_key * agent * agent * agent * agent * symmetric_key * hash_func * symmetric_key * symmetric_key * symmetric_key * nat * symmetric_key * text * text * text * text * text * text * set(agent) * nat -> fact
state_role_HA: agent * agent * agent * agent * symmetric_key * hash_func * symmetric_key * nat * text * nat -> fact
state_role_AR2: agent * agent * agent * agent * symmetric_key * hash_func * nat * symmetric_key * text * text * symmetric_key * text * text * symmetric_key * text * nat -> fact


section types:

set_188: set
Set_93, Dummy_Set_93, ASGoal: set(agent)
sec_nsk, auth_3, auth_2, auth_1: protocol_id
MGoal, start: message
Dummy_N2, N6, N3, N5, N2, N4, Dummy_N1, N1, Dummy_N7, Dummy_N4, Dummy_N3, Dummy_N6, Dummy_N5, dummy_nonce, hack, hi, aaa_auth_rep, aaa_auth_req, nlcoa, nid, sid, flback, lbu, fna, iprtadv, rtsolpr, N7: text
7, SID, 6, 5, 4, State, Dummy_State, 3, SID2, SID1, 2, 1, 0: nat
MAP, MR, A, HA, AR2, A2Goal, A1Goal, mr, ar2, ha, map, aaa, i: agent
Ki, Dummy_Ki, Dummy_NSK, NSK, KAA, Dummy_LK, KAAR, KAM, Dummy_KAM, LK, dummy_sk, kaar, kam, kaa, ki, lk, nsk: symmetric_key
H, hash_1, hash_0: hash_func


section inits:

initial_state init1 := 
 iknows(start).
 iknows(map).
 iknows(aaa).
 iknows(ha).
 iknows(mr).
 iknows(ar2).
 iknows(i).
 state_role_AR2(ar2,map,mr,aaa,kaar,hash_1,0,dummy_sk,dummy_nonce,dummy_nonce,dummy_sk,dummy_nonce,dummy_nonce,dummy_sk,dummy_nonce,3).
 state_role_HA(ha,aaa,mr,map,ki,hash_1,kaa,0,dummy_nonce,4).
 state_role_A(aaa,lk,map,mr,ar2,ha,kam,hash_1,kaar,kaa,nsk,0,dummy_sk,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_188,5).
 state_role_MAP(map,aaa,mr,ar2,kam,hash_1,0,dummy_nonce,dummy_sk,dummy_nonce,dummy_nonce,dummy_nonce,dummy_sk,dummy_nonce,dummy_sk,dummy_nonce,6).
 state_role_MR(mr,map,aaa,ha,ar2,lk,hash_1,ki,nsk,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,7)


section rules:

step step_0 (AR2,MAP,MR,A,KAAR,H,Dummy_KAM,Dummy_N5,Dummy_N6,LK,N3,N7,NSK,N4,SID,KAM,N5,N6) :=
 state_role_AR2(AR2,MAP,MR,A,KAAR,H,0,Dummy_KAM,Dummy_N5,Dummy_N6,LK,N3,N7,NSK,N4,SID).
 iknows(apply(hi,pair(MAP,pair(AR2,scrypt(KAM,pair(N5,pair(A,pair(MAP,N6))))))))
 =>
 state_role_AR2(AR2,MAP,MR,A,KAAR,H,1,KAM,N5,N6,LK,N3,N7,NSK,N4,SID).
 iknows(apply(aaa_auth_req,pair(A,pair(AR2,scrypt(KAM,pair(N5,pair(A,pair(MAP,N6))))))))

step step_1 (AR2,MAP,MR,A,KAAR,H,KAM,N5,N6,Dummy_LK,Dummy_N3,N7,Dummy_NSK,Dummy_N4,SID,LK,N3,N4) :=
 state_role_AR2(AR2,MAP,MR,A,KAAR,H,1,KAM,N5,N6,Dummy_LK,Dummy_N3,N7,Dummy_NSK,Dummy_N4,SID).
 iknows(apply(aaa_auth_rep,pair(nid,pair(sid,pair(AR2,pair(A,pair(scrypt(LK,pair(N6,A)),scrypt(KAAR,pair(apply(H,pair(N4,Dummy_LK)),pair(N3,A))))))))))
 =>
 state_role_AR2(AR2,MAP,MR,A,KAAR,H,2,KAM,N5,N6,LK,N3,N7,apply(H,pair(N4,Dummy_LK)),N4,SID).
 iknows(apply(hack,pair(nid,pair(sid,pair(MAP,pair(AR2,pair(scrypt(LK,pair(N6,A)),scrypt(apply(H,pair(N4,Dummy_LK)),pair(sid,pair(N3,AR2))))))))))

step step_2 (AR2,MAP,MR,A,KAAR,H,KAM,N5,N6,LK,N3,Dummy_N7,Dummy_NSK,N4,SID,N7,NSK) :=
 state_role_AR2(AR2,MAP,MR,A,KAAR,H,2,KAM,N5,N6,LK,N3,Dummy_N7,Dummy_NSK,N4,SID).
 iknows(apply(fna,pair(nid,pair(sid,pair(AR2,pair(MR,scrypt(NSK,pair(sid,pair(N3,pair(N7,pair(AR2,MR)))))))))))
 =>
 state_role_AR2(AR2,MAP,MR,A,KAAR,H,3,KAM,N5,N6,LK,N3,N7,NSK,N4,SID)

step step_3 (HA,A,MR,MAP,Ki,H,KAA,Dummy_N1,SID,N1) :=
 state_role_HA(HA,A,MR,MAP,Ki,H,KAA,0,Dummy_N1,SID).
 iknows(pair(MAP,pair(A,pair(N1,apply(H,pair(N1,Ki))))))
 =>
 state_role_HA(HA,A,MR,MAP,Ki,H,KAA,1,N1,SID)

step step_4 (A,LK,MAP,MR,AR2,HA,KAM,H,KAAR,KAA,Dummy_NSK,Dummy_Ki,Dummy_N1,Dummy_N4,Dummy_N2,Dummy_N5,Dummy_N3,N6,Set_93,SID,Ki,N1,N4,N2,N5,N3) :=
 state_role_A(A,LK,MAP,MR,AR2,HA,KAM,H,KAAR,KAA,Dummy_NSK,0,Dummy_Ki,Dummy_N1,Dummy_N4,Dummy_N2,Dummy_N5,Dummy_N3,N6,Set_93,SID).
 iknows(apply(aaa_auth_req,pair(nid,pair(sid,pair(MAP,pair(A,pair(N1,pair(N2,pair(scrypt(LK,N3),pair(apply(H,pair(N1,Ki)),apply(H,pair(N2,LK))))))))))))
=[exists N4,N5]=>
 state_role_A(A,LK,MAP,MR,AR2,HA,KAM,H,KAAR,KAA,apply(H,pair(N4,LK)),1,Ki,N1,N4,N2,N5,N3,N6,Set_93,SID).
 request(A,MR,auth_1,apply(H,pair(sid,pair(MR,pair(N2,LK)))),SID).
 iknows(apply(aaa_auth_rep,pair(nid,pair(sid,pair(MAP,pair(A,pair(N4,pair(apply(H,pair(MR,pair(A,pair(N2,pair(N4,LK))))),scrypt(KAM,pair(N5,A)))))))))).
 witness(A,MR,auth_2,apply(H,pair(MR,pair(A,pair(N2,pair(N4,LK))))))

step step_5 (A,LK,MAP,MR,AR2,HA,KAM,H,KAAR,KAA,NSK,Ki,N1,N4,N2,Dummy_N5,N3,Dummy_N6,Dummy_Set_93,SID,N5,N6) :=
 state_role_A(A,LK,MAP,MR,AR2,HA,KAM,H,KAAR,KAA,NSK,1,Ki,N1,N4,N2,Dummy_N5,N3,Dummy_N6,Dummy_Set_93,SID).
 iknows(apply(aaa_auth_req,pair(A,pair(AR2,scrypt(KAM,pair(N5,pair(A,pair(MAP,N6))))))))
 =>
 state_role_A(A,LK,MAP,MR,AR2,HA,KAM,H,KAAR,KAA,NSK,2,Ki,N1,N4,N2,N5,N3,N6,Dummy_Set_93,SID).
 iknows(apply(aaa_auth_rep,pair(nid,pair(sid,pair(AR2,pair(A,pair(scrypt(LK,pair(N6,A)),scrypt(KAAR,pair(NSK,pair(N3,A)))))))))).
 secret(NSK,sec_nsk,Dummy_Set_93).
 contains(A,Dummy_Set_93).
 contains(AR2,Dummy_Set_93).
 contains(MR,Dummy_Set_93)

step step_6 (MAP,A,MR,AR2,KAM,H,Dummy_N1,Dummy_Ki,Dummy_N2,N4,N5,NSK,Dummy_N3,Dummy_LK,N6,SID,N1,Ki,N2,N3,LK) :=
 state_role_MAP(MAP,A,MR,AR2,KAM,H,0,Dummy_N1,Dummy_Ki,Dummy_N2,N4,N5,NSK,Dummy_N3,Dummy_LK,N6,SID).
 iknows(apply(rtsolpr,pair(sid,pair(nid,pair(MR,pair(N1,pair(N2,pair(scrypt(LK,pair(MR,N3)),pair(apply(H,pair(sid,pair(N1,Ki))),apply(H,pair(sid,pair(MR,pair(N2,LK)))))))))))))
 =>
 state_role_MAP(MAP,A,MR,AR2,KAM,H,1,N1,Ki,N2,N4,N5,NSK,N3,LK,N6,SID).
 iknows(apply(aaa_auth_req,pair(nid,pair(sid,pair(MAP,pair(A,pair(N1,pair(N2,pair(scrypt(LK,N3),pair(apply(H,pair(N1,Ki)),apply(H,pair(N2,LK))))))))))))

step step_7 (MAP,A,MR,AR2,KAM,H,N1,Ki,N2,Dummy_N4,Dummy_N5,NSK,N3,LK,Dummy_N6,SID,N4,N5,N6) :=
 state_role_MAP(MAP,A,MR,AR2,KAM,H,1,N1,Ki,N2,Dummy_N4,Dummy_N5,NSK,N3,LK,Dummy_N6,SID).
 iknows(apply(aaa_auth_rep,pair(nid,pair(sid,pair(MAP,pair(A,pair(N4,pair(apply(H,pair(MR,pair(A,pair(N2,pair(N4,LK))))),scrypt(KAM,pair(N5,A))))))))))
=[exists N6]=>
 state_role_MAP(MAP,A,MR,AR2,KAM,H,2,N1,Ki,N2,N4,N5,NSK,N3,LK,N6,SID).
 iknows(apply(iprtadv,pair(sid,pair(nid,pair(nlcoa,pair(MAP,pair(MR,pair(N4,apply(H,pair(MR,pair(A,pair(N2,pair(N4,LK))))))))))))).
 iknows(apply(hi,pair(MAP,pair(AR2,scrypt(KAM,pair(N5,pair(A,pair(MAP,N6))))))))

step step_8 (MAP,A,MR,AR2,KAM,H,N1,Ki,N2,N4,N5,Dummy_NSK,N3,LK,N6,SID,NSK) :=
 state_role_MAP(MAP,A,MR,AR2,KAM,H,2,N1,Ki,N2,N4,N5,Dummy_NSK,N3,LK,N6,SID).
 iknows(apply(hack,pair(nid,pair(sid,pair(MAP,pair(AR2,pair(scrypt(LK,pair(N6,A)),scrypt(NSK,pair(sid,pair(N3,AR2))))))))))
 =>
 state_role_MAP(MAP,A,MR,AR2,KAM,H,3,N1,Ki,N2,N4,N5,NSK,N3,LK,N6,SID).
 iknows(apply(flback,pair(nid,pair(sid,pair(MR,pair(MAP,pair(scrypt(LK,pair(N6,A)),scrypt(NSK,pair(N3,AR2)))))))))

step step_9 (MAP,A,MR,AR2,KAM,H,N1,Ki,N2,N4,N5,NSK,N3,LK,Dummy_N6,SID,N6) :=
 state_role_MAP(MAP,A,MR,AR2,KAM,H,3,N1,Ki,N2,N4,N5,NSK,N3,LK,Dummy_N6,SID).
 iknows(apply(lbu,pair(nid,pair(sid,pair(MAP,pair(MR,apply(H,pair(sid,N6))))))))
 =>
 state_role_MAP(MAP,A,MR,AR2,KAM,H,4,N1,Ki,N2,N4,N5,NSK,N3,LK,N6,SID).
 request(MAP,MR,auth_3,apply(H,pair(sid,N6)),SID)

step step_10 (MR,MAP,A,HA,AR2,LK,H,Ki,NSK,Dummy_N1,Dummy_N2,N4,Dummy_N3,N7,N6,SID,N1,N2,N3) :=
 state_role_MR(MR,MAP,A,HA,AR2,LK,H,Ki,NSK,0,Dummy_N1,Dummy_N2,N4,Dummy_N3,N7,N6,SID).
 iknows(start)
=[exists N3,N1,N2]=>
 state_role_MR(MR,MAP,A,HA,AR2,LK,H,Ki,NSK,1,N1,N2,N4,N3,N7,N6,SID).
 iknows(apply(rtsolpr,pair(sid,pair(nid,pair(MR,pair(N1,pair(N2,pair(scrypt(LK,pair(MR,N3)),pair(apply(H,pair(sid,pair(N1,Ki))),apply(H,pair(sid,pair(MR,pair(N2,LK))))))))))))).
 witness(MR,A,auth_1,apply(H,pair(sid,pair(MR,pair(N2,LK)))))

step step_11 (MR,MAP,A,HA,AR2,LK,H,Ki,NSK,N1,Dummy_N2,Dummy_N4,N3,N7,N6,SID,N2,N4) :=
 state_role_MR(MR,MAP,A,HA,AR2,LK,H,Ki,NSK,1,N1,Dummy_N2,Dummy_N4,N3,N7,N6,SID).
 iknows(apply(iprtadv,pair(sid,pair(nid,pair(nlcoa,pair(MAP,pair(MR,pair(N4,apply(H,pair(MR,pair(A,pair(N2,pair(N4,LK)))))))))))))
 =>
 state_role_MR(MR,MAP,A,HA,AR2,LK,H,Ki,NSK,2,N1,N2,N4,N3,N7,N6,SID).
 request(MR,A,auth_2,apply(H,pair(MR,pair(A,pair(N2,pair(N4,LK))))),SID)

step step_12 (MR,MAP,A,HA,AR2,LK,H,Ki,Dummy_NSK,N1,N2,Dummy_N4,N3,Dummy_N7,Dummy_N6,SID,N4,N7,N6) :=
 state_role_MR(MR,MAP,A,HA,AR2,LK,H,Ki,Dummy_NSK,2,N1,N2,Dummy_N4,N3,Dummy_N7,Dummy_N6,SID).
 iknows(apply(flback,pair(nid,pair(sid,pair(MR,pair(MAP,pair(scrypt(LK,pair(N6,A)),scrypt(apply(H,pair(N4,LK)),pair(N3,AR2)))))))))
=[exists N7]=>
 state_role_MR(MR,MAP,A,HA,AR2,LK,H,Ki,apply(H,pair(N4,LK)),3,N1,N2,N4,N3,N7,N6,SID).
 iknows(apply(fna,pair(nid,pair(sid,pair(AR2,pair(MR,scrypt(apply(H,pair(N4,LK)),pair(sid,pair(N3,pair(N7,pair(AR2,MR))))))))))).
 iknows(apply(lbu,pair(nid,pair(sid,pair(MAP,pair(MR,apply(H,pair(sid,N6)))))))).
 witness(MR,MAP,auth_3,apply(H,pair(sid,N6)))


section properties:

property authentication_on_auth_1 (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,auth_1,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,auth_1,MGoal))
     /\ ((request(A1Goal,A2Goal,auth_1,MGoal,SID1)
           /\ request(A1Goal,A2Goal,auth_1,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_auth_2 (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,auth_2,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,auth_2,MGoal))
     /\ ((request(A1Goal,A2Goal,auth_2,MGoal,SID1)
           /\ request(A1Goal,A2Goal,auth_2,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_auth_3 (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,auth_3,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,auth_3,MGoal))
     /\ ((request(A1Goal,A2Goal,auth_3,MGoal,SID1)
           /\ request(A1Goal,A2Goal,auth_3,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property secrecy_of_sec_nsk (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_nsk,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))


section attack_states:

attack_state authentication_on_auth_1 (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,auth_1,MGoal,SID) &
 not(witness(A2Goal,A1Goal,auth_1,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_auth_1 (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,auth_1,MGoal,SID1).
 request(A1Goal,A2Goal,auth_1,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_auth_2 (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,auth_2,MGoal,SID) &
 not(witness(A2Goal,A1Goal,auth_2,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_auth_2 (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,auth_2,MGoal,SID1).
 request(A1Goal,A2Goal,auth_2,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_auth_3 (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,auth_3,MGoal,SID) &
 not(witness(A2Goal,A1Goal,auth_3,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_auth_3 (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,auth_3,MGoal,SID1).
 request(A1Goal,A2Goal,auth_3,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state secrecy_of_sec_nsk (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_nsk,ASGoal) &
 not(contains(i,ASGoal))

