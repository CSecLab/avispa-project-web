%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfileN35c9H

section signature:

state_server: agent * agent * public_key * symmetric_key * text * text * hash_func * hash_func * hash_func * hash_func * hash_func * hash_func * nat * text * text * set(agent) * nat -> fact
state_mobile: agent * agent * public_key * symmetric_key * text * text * hash_func * hash_func * hash_func * hash_func * nat * text * set(agent) * nat -> fact


section types:

MGoal, start: message
sseq2, r1, r2, sseq1: protocol_id
f1, f2, f3, f4, f5, frid, F1, F2, F5, Frid, add, F3, F4: hash_func
k_as, k_is, kai, K_M: symmetric_key
k_s, K_S: public_key
Dummy_State, 3, SID, State, 5, 4, 2, 1: nat
set_96, set_103: set
A2Goal, A1Goal, a, s, M, S, i: agent
ASGoal, Set_52, Set_29, Dummy_Set_29, Dummy_Set_52: set(agent)
dummy_nonce, imsi, seq_as, seq_is, seq_ai, R, IMSI, Seq, RAND, RID, Dummy_Seq, Dummy_RID, Dummy_RAND, Dummy_IMSI, Dummy_R: text


section inits:

initial_state init1 := 
 iknows(start).
 iknows(a).
 iknows(s).
 iknows(f1).
 iknows(f2).
 iknows(f5).
 iknows(i).
 state_mobile(a,s,k_s,k_as,imsi,seq_as,f1,f2,f5,frid,1,dummy_nonce,set_96,3).
 state_server(s,a,k_s,k_as,imsi,seq_as,f1,f2,f3,f4,f5,frid,1,dummy_nonce,dummy_nonce,set_103,4)


section rules:

step step_0 (M,S,K_S,K_M,IMSI,Seq,F1,F2,F5,Frid,R,Set_52,SID) :=
 state_mobile(M,S,K_S,K_M,IMSI,Seq,F1,F2,F5,Frid,1,R,Set_52,SID).
 iknows(start)
 =>
 state_mobile(M,S,K_S,K_M,IMSI,Seq,F1,F2,F5,Frid,2,R,Set_52,SID).
 iknows(crypt(K_S,IMSI))

step step_1 (M,S,K_S,K_M,IMSI,Seq,F1,F2,F5,Frid,Dummy_R,Dummy_Set_52,SID,R) :=
 state_mobile(M,S,K_S,K_M,IMSI,Seq,F1,F2,F5,Frid,3,Dummy_R,Dummy_Set_52,SID).
 iknows(pair(R,pair(scrypt(apply(F5,pair(K_M,R)),Seq),apply(F1,pair(K_M,pair(Seq,R))))))
 =>
 state_mobile(M,S,K_S,K_M,IMSI,Seq,F1,F2,F5,Frid,4,R,Dummy_Set_52,SID).
 iknows(scrypt(apply(Frid,pair(K_M,R)),apply(F2,pair(K_M,R)))).
 secret(Seq,sseq2,Dummy_Set_52).
 wrequest(M,S,r1,R,SID).
 witness(M,S,r2,R).
 contains(M,Dummy_Set_52).
 contains(S,Dummy_Set_52)

step step_2 (S,M,K_S,K_M,Dummy_IMSI,Seq,F1,F2,F3,F4,F5,Frid,Dummy_RAND,Dummy_RID,Dummy_Set_29,SID,IMSI,RAND) :=
 state_server(S,M,K_S,K_M,Dummy_IMSI,Seq,F1,F2,F3,F4,F5,Frid,2,Dummy_RAND,Dummy_RID,Dummy_Set_29,SID).
 iknows(crypt(K_S,IMSI))
=[exists RAND]=>
 state_server(S,M,K_S,K_M,IMSI,Seq,F1,F2,F3,F4,F5,Frid,3,RAND,apply(Frid,pair(K_M,RAND)),Dummy_Set_29,SID).
 iknows(pair(RAND,pair(apply(F2,pair(K_M,RAND)),pair(apply(F3,pair(K_M,RAND)),pair(apply(F4,pair(K_M,RAND)),pair(scrypt(apply(F5,pair(K_M,RAND)),Seq),apply(F1,pair(K_M,pair(Seq,RAND))))))))).
 secret(Seq,sseq1,Dummy_Set_29).
 witness(S,M,r1,RAND).
 contains(S,Dummy_Set_29).
 contains(M,Dummy_Set_29)

step step_3 (S,M,K_S,K_M,IMSI,Dummy_Seq,F1,F2,F3,F4,F5,Frid,RAND,RID,Set_29,SID) :=
 state_server(S,M,K_S,K_M,IMSI,Dummy_Seq,F1,F2,F3,F4,F5,Frid,4,RAND,RID,Set_29,SID).
 iknows(apply(F2,pair(K_M,RAND)))
 =>
 state_server(S,M,K_S,K_M,IMSI,apply(add,pair(Dummy_Seq,1)),F1,F2,F3,F4,F5,Frid,5,RAND,RID,Set_29,SID).
 wrequest(S,M,r2,RAND,SID)


section properties:

property secrecy_of_sseq1 (MGoal,ASGoal) :=
 [] ((secret(MGoal,sseq1,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_sseq2 (MGoal,ASGoal) :=
 [] ((secret(MGoal,sseq2,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property weak_authentication_on_r1 (A1Goal,A2Goal,MGoal,SID) :=
 [] ((wrequest(A1Goal,A2Goal,r1,MGoal,SID)
      /\ ~ equal(A2Goal,i))
     => witness(A2Goal,A1Goal,r1,MGoal))

property weak_authentication_on_r2 (A1Goal,A2Goal,MGoal,SID) :=
 [] ((wrequest(A1Goal,A2Goal,r2,MGoal,SID)
      /\ ~ equal(A2Goal,i))
     => witness(A2Goal,A1Goal,r2,MGoal))


section attack_states:

attack_state secrecy_of_sseq1 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sseq1,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_sseq2 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sseq2,ASGoal) &
 not(contains(i,ASGoal))

attack_state weak_authentication_on_r1 (A1Goal,A2Goal,MGoal,SID) :=
 wrequest(A1Goal,A2Goal,r1,MGoal,SID) &
 not(witness(A2Goal,A1Goal,r1,MGoal)) &
 not(equal(A2Goal,i))

attack_state weak_authentication_on_r2 (A1Goal,A2Goal,MGoal,SID) :=
 wrequest(A1Goal,A2Goal,r2,MGoal,SID) &
 not(witness(A2Goal,A1Goal,r2,MGoal)) &
 not(equal(A2Goal,i))

