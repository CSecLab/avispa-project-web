%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfilerAo2E1

section signature:

state_reader: agent * agent * text * text * text * symmetric_key * hash_func * nat * text * text * message * message * set(agent) * nat -> fact
state_tag: agent * agent * text * text * text * symmetric_key * hash_func * nat * text * text * message * message * set(agent) * nat -> fact


section types:

set_90, set_88, set_84, set_75: set
sec_k1, aut_tag, aut_reader, sec_k: protocol_id
Set_46, Dummy_Set_28, Dummy_Set_46, Set_28, ASGoal: set(agent)
Mreq, Mresp, dummy_msg, start, MGoal: message
7, State, 6, 4, SID, Dummy_State, 3, 2, SID2, SID1, 1, 0: nat
CRC, crc: hash_func
Ki, ki: symmetric_key
Nt, Nr, IDr, Ni, EPCt, Dummy_Nr, Dummy_Nt, dummy_nonce, idr, ni, epct: text
T, R, A2Goal, A1Goal, t1, t2, r, i: agent


section inits:

initial_state init1 := 
 iknows(start).
 iknows(t1).
 iknows(t2).
 iknows(r).
 iknows(crc).
 iknows(i).
 state_tag(t1,r,idr,ni,epct,ki,crc,0,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,set_75,3).
 state_reader(t1,r,idr,ni,epct,ki,crc,0,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,set_84,4).
 state_tag(t2,r,idr,ni,epct,ki,crc,0,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,set_88,6).
 state_reader(t2,r,idr,ni,epct,ki,crc,0,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,set_90,7)


section rules:

step step_0 (T,R,IDr,Ni,EPCt,Ki,CRC,Dummy_Nt,Dummy_Nr,Mreq,Mresp,Set_46,SID,Nt,Nr) :=
 state_tag(T,R,IDr,Ni,EPCt,Ki,CRC,0,Dummy_Nt,Dummy_Nr,Mreq,Mresp,Set_46,SID).
 iknows(pair(Mreq,pair(Nr,apply(CRC,xor(Ni,Nr)))))
=[exists Nt]=>
 state_tag(T,R,IDr,Ni,EPCt,Ki,CRC,1,Nt,Nr,Mreq,Mresp,Set_46,SID).
 iknows(pair(Nt,pair(xor(xor(Ki,EPCt),Nt),apply(CRC,xor(xor(Nt,Ni),xor(xor(Ki,EPCt),Nt)))))).
 witness(T,R,aut_tag,Nt)

step step_1 (T,R,IDr,Ni,EPCt,Ki,CRC,Nt,Nr,Mreq,Mresp,Dummy_Set_46,SID) :=
 state_tag(T,R,IDr,Ni,EPCt,Ki,CRC,1,Nt,Nr,Mreq,Mresp,Dummy_Set_46,SID).
 iknows(Mresp)
 =>
 state_tag(T,R,IDr,Ni,EPCt,Ki,CRC,2,Nt,Nr,Mreq,Mresp,Dummy_Set_46,SID).
 secret(Ki,sec_k1,Dummy_Set_46).
 contains(T,Dummy_Set_46).
 contains(R,Dummy_Set_46)

step step_2 (T,R,IDr,Ni,EPCt,Ki,CRC,Nt,Dummy_Nr,Mreq,Mresp,Set_28,SID,Nr) :=
 state_reader(T,R,IDr,Ni,EPCt,Ki,CRC,0,Nt,Dummy_Nr,Mreq,Mresp,Set_28,SID).
 iknows(start)
=[exists Nr]=>
 state_reader(T,R,IDr,Ni,EPCt,Ki,CRC,1,Nt,Nr,Mreq,Mresp,Set_28,SID).
 iknows(pair(Mreq,pair(Nr,apply(CRC,xor(Ni,Nr)))))

step step_3 (T,R,IDr,Ni,EPCt,Ki,CRC,Dummy_Nt,Nr,Mreq,Mresp,Dummy_Set_28,SID,Nt) :=
 state_reader(T,R,IDr,Ni,EPCt,Ki,CRC,1,Dummy_Nt,Nr,Mreq,Mresp,Dummy_Set_28,SID).
 iknows(pair(Nt,pair(xor(xor(Ki,EPCt),Nt),apply(CRC,xor(xor(Nt,Ni),xor(xor(Ki,EPCt),Nt))))))
 =>
 state_reader(T,R,IDr,Ni,EPCt,Ki,CRC,2,Nt,Nr,Mreq,Mresp,Dummy_Set_28,SID).
 iknows(Mresp).
 request(R,T,aut_tag,Nt,SID).
 secret(Ki,sec_k,Dummy_Set_28).
 contains(R,Dummy_Set_28).
 contains(T,Dummy_Set_28)


section properties:

property secrecy_of_sec_k (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_k,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_sec_k1 (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_k1,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property authentication_on_aut_tag (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,aut_tag,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,aut_tag,MGoal))
     /\ ((request(A1Goal,A2Goal,aut_tag,MGoal,SID1)
           /\ request(A1Goal,A2Goal,aut_tag,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state secrecy_of_sec_k (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_k,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_sec_k1 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_k1,ASGoal) &
 not(contains(i,ASGoal))

attack_state authentication_on_aut_tag (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,aut_tag,MGoal,SID) &
 not(witness(A2Goal,A1Goal,aut_tag,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_aut_tag (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,aut_tag,MGoal,SID1).
 request(A1Goal,A2Goal,aut_tag,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

