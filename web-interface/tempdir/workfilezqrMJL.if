%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfilezqrMJL

section signature:

state_server: agent * agent * symmetric_key * hash_func * nat * text * text * text * text * text * text * text * text * text * text * set(agent) * set(agent) * nat -> fact
state_user: agent * agent * symmetric_key * hash_func * nat * text * text * text * text * text * text * text * text * text * text * text * text * nat -> fact


section types:

MGoal, start: message
subs1, subs2, user_server_t, user_server_tn: protocol_id
dummy_hash, h, H: hash_func
dummy_sk, SKus: symmetric_key
ASGoal, Set_60, Set_58, Dummy_Set_60, Dummy_Set_58: set(agent)
Dummy_State, 3, SID, SID2, SID1, State, 10, 5, 8, 6, 4, 2, 1, 0: nat
set_104, set_103: set
A2Goal, A1Goal, u, s, U, S, i: agent
Dummy_A, Dummy_Tnn, Dummy_Tn, Dummy_CIDi, Dummy_XX, Dummy_T, Dummy_PWi, Dummy_Y, Dummy_Ni, Dummy_IDi, dummy_nonce, PWi, Ni, Y, X, T, CIDi, Tn, Tnn, IDi, A, XX, Ni_new, PWi_new, Dummy_X, Dummy_PWi_new, Dummy_Ni_new: text


section inits:

initial_state init1 := 
 iknows(start).
 iknows(u).
 iknows(s).
 iknows(h).
 iknows(i).
 state_user(u,s,dummy_sk,dummy_hash,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,3).
 state_server(s,u,dummy_sk,dummy_hash,1,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_103,set_104,4)


section rules:

step step_0 (U,S,SKus,H,PWi,Ni,Y,T,XX,CIDi,Tn,Tnn,Ni_new,PWi_new,Dummy_IDi,A,SID,IDi) :=
 state_user(U,S,SKus,H,0,PWi,Ni,Y,T,XX,CIDi,Tn,Tnn,Ni_new,PWi_new,Dummy_IDi,A,SID).
 iknows(start)
=[exists IDi]=>
 state_user(U,S,SKus,H,2,PWi,Ni,Y,T,XX,CIDi,Tn,Tnn,Ni_new,PWi_new,IDi,A,SID).
 iknows(scrypt(SKus,IDi))

step step_1 (U,S,SKus,H,PWi,Dummy_Ni,Dummy_Y,T,XX,CIDi,Tn,Tnn,Ni_new,PWi_new,IDi,A,SID,Ni,Y) :=
 state_user(U,S,SKus,H,2,PWi,Dummy_Ni,Dummy_Y,T,XX,CIDi,Tn,Tnn,Ni_new,PWi_new,IDi,A,SID).
 iknows(scrypt(SKus,pair(PWi,pair(H,pair(Ni,Y)))))
 =>
 state_user(U,S,SKus,H,4,PWi,Ni,Y,T,XX,CIDi,Tn,Tnn,Ni_new,PWi_new,IDi,A,SID)

step step_2 (U,S,SKus,H,Dummy_PWi,Dummy_Ni,Dummy_Y,Dummy_T,Dummy_XX,Dummy_CIDi,Tn,Tnn,Ni_new,PWi_new,IDi,A,SID,PWi,Ni,Y,T) :=
 state_user(U,S,SKus,H,4,Dummy_PWi,Dummy_Ni,Dummy_Y,Dummy_T,Dummy_XX,Dummy_CIDi,Tn,Tnn,Ni_new,PWi_new,IDi,A,SID).
 iknows(scrypt(SKus,pair(PWi,pair(H,pair(Ni,Y)))))
=[exists T]=>
 state_user(U,S,SKus,H,6,PWi,Ni,Y,T,xor(apply(H,PWi),apply(H,xor(Ni,xor(Y,T)))),xor(IDi,xor(apply(H,PWi),apply(H,xor(Ni,xor(Y,T))))),Tn,Tnn,Ni_new,PWi_new,IDi,A,SID).
 witness(U,S,user_server_t,T).
 iknows(pair(IDi,pair(xor(IDi,xor(apply(H,PWi),apply(H,xor(Ni,xor(Y,T))))),pair(Ni,T))))

step step_3 (U,S,SKus,H,PWi,Ni,Y,T,XX,CIDi,Dummy_Tn,Dummy_Tnn,Ni_new,PWi_new,IDi,Dummy_A,SID,Tn,Tnn,A) :=
 state_user(U,S,SKus,H,6,PWi,Ni,Y,T,XX,CIDi,Dummy_Tn,Dummy_Tnn,Ni_new,PWi_new,IDi,Dummy_A,SID).
 iknows(pair(A,Tn))
=[exists Tnn]=>
 state_user(U,S,SKus,H,8,PWi,Ni,Y,T,XX,CIDi,Tn,Tnn,Ni_new,PWi_new,IDi,A,SID).
 request(U,S,user_server_tn,Tn,SID)

step step_4 (U,S,SKus,H,PWi,Dummy_Ni,Y,T,XX,CIDi,Tn,Tnn,Dummy_Ni_new,Dummy_PWi_new,IDi,A,SID,PWi_new) :=
 state_user(U,S,SKus,H,8,PWi,Dummy_Ni,Y,T,XX,CIDi,Tn,Tnn,Dummy_Ni_new,Dummy_PWi_new,IDi,A,SID)
=[exists PWi_new]=>
 state_user(U,S,SKus,H,10,PWi,xor(Ni,xor(apply(H,PWi),apply(H,PWi_new))),Y,T,XX,CIDi,Tn,Tnn,xor(xor(Ni,xor(apply(H,PWi),apply(H,PWi_new))),xor(apply(H,PWi),apply(H,PWi_new))),PWi_new,IDi,A,SID)

step step_5 (S,U,SKus,H,Dummy_PWi,Dummy_Ni,Dummy_Y,Dummy_X,T,CIDi,Tn,Tnn,Dummy_IDi,A,Dummy_Set_58,Dummy_Set_60,SID,PWi,Y,X,IDi) :=
 state_server(S,U,SKus,H,1,Dummy_PWi,Dummy_Ni,Dummy_Y,Dummy_X,T,CIDi,Tn,Tnn,Dummy_IDi,A,Dummy_Set_58,Dummy_Set_60,SID).
 iknows(scrypt(SKus,IDi))
=[exists PWi,Y,X]=>
 state_server(S,U,SKus,H,3,PWi,xor(apply(H,PWi),xor(apply(H,X),IDi)),Y,X,T,CIDi,Tn,Tnn,IDi,A,Dummy_Set_58,Dummy_Set_60,SID).
 secret(X,subs1,Dummy_Set_58).
 secret(Y,subs2,Dummy_Set_60).
 iknows(scrypt(SKus,pair(PWi,pair(H,pair(xor(apply(H,PWi),xor(apply(H,X),IDi)),Y))))).
 contains(S,Dummy_Set_58).
 contains(U,Dummy_Set_60).
 contains(S,Dummy_Set_60)

step step_6 (S,U,SKus,H,PWi,Dummy_Ni,Y,X,Dummy_T,Dummy_CIDi,Dummy_Tn,Tnn,Dummy_IDi,Dummy_A,Set_58,Set_60,SID,Ni,T,CIDi,Tn,IDi) :=
 state_server(S,U,SKus,H,3,PWi,Dummy_Ni,Y,X,Dummy_T,Dummy_CIDi,Dummy_Tn,Tnn,Dummy_IDi,Dummy_A,Set_58,Set_60,SID).
 iknows(pair(IDi,pair(CIDi,pair(Ni,T))))
=[exists Tn]=>
 state_server(S,U,SKus,H,5,PWi,Ni,Y,X,T,CIDi,Tn,Tnn,IDi,apply(H,xor(xor(xor(xor(CIDi,apply(H,xor(Ni,xor(Y,T)))),IDi),Y),Tn)),Set_58,Set_60,SID).
 request(S,U,user_server_t,T,SID).
 iknows(pair(apply(H,xor(xor(xor(xor(CIDi,apply(H,xor(Ni,xor(Y,T)))),IDi),Y),Tn)),Tn))


section properties:

property secrecy_of_subs1 (MGoal,ASGoal) :=
 [] ((secret(MGoal,subs1,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_subs2 (MGoal,ASGoal) :=
 [] ((secret(MGoal,subs2,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property authentication_on_user_server_t (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,user_server_t,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,user_server_t,MGoal))
     /\ ((request(A1Goal,A2Goal,user_server_t,MGoal,SID1)
           /\ request(A1Goal,A2Goal,user_server_t,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_user_server_tn (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,user_server_tn,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,user_server_tn,MGoal))
     /\ ((request(A1Goal,A2Goal,user_server_tn,MGoal,SID1)
           /\ request(A1Goal,A2Goal,user_server_tn,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state secrecy_of_subs1 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,subs1,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_subs2 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,subs2,ASGoal) &
 not(contains(i,ASGoal))

attack_state authentication_on_user_server_t (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,user_server_t,MGoal,SID) &
 not(witness(A2Goal,A1Goal,user_server_t,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_user_server_t (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,user_server_t,MGoal,SID1).
 request(A1Goal,A2Goal,user_server_t,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_user_server_tn (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,user_server_tn,MGoal,SID) &
 not(witness(A2Goal,A1Goal,user_server_tn,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_user_server_tn (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,user_server_tn,MGoal,SID1).
 request(A1Goal,A2Goal,user_server_tn,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

