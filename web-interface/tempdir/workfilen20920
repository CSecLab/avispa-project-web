

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% C <- S: Rs
role chap_Resp (S,C : agent,
                Kcs : symmetric_key,
 		F: hash_func,
                Snd, Rcv: channel(dy))
played_by S
def=
           
  local State  : nat,
        Rc, Rs : text

  const sec_kcs2 : protocol_id

  init  State := 0

  transition
   1. State   = 0 /\ Rcv(C') =|>  
      State' := 1 /\ Rs' := new() /\ Snd(Rs')
	           /\ witness(S,C,nc,Rs')

   2. State   = 1 /\ Rcv(Rc'.F(Kcs.Rc'.Rs.C)) =|>
      State' := 2 /\ Snd(F(Kcs.Rc'))
	           /\ request(S,C,nc,Rc') 
		   /\ secret(Kcs,sec_kcs2,{C,S})

end role

%%%%%%%%%%%%%%%%%%%%%%%%%
role session(C,S: agent,
      Kcs: symmetric_key,
      F: hash_func)
def=

  local LC, LS, MC, MS: channel (dy)

  composition
           chap_Init(C, S, Kcs, F, LC, MC)
       /\  chap_Resp(S, C, Kcs, F, LS, MS)
end role

%%%%%%%%%%%%%%%%%%%%%%%%%%%
role environment()
def=

  const c, s          : agent,
        kcs, kci, ksi : symmetric_key,
        f             : hash_func,
        nc, ns        : protocol_id

  intruder_knowledge = {c, s, f, kci, ksi}

  composition
 session(c,s,kcs,f) /\ session(c,i,kci,f) /\ session(s,i,ksi,f)

end role


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

goal

 %secrecy of the shared key
 secrecy_of sec_kcs2 % Addresses G12
                         
 %CHAP_Init authenticates CHAP_Resp on nb
 authentication_on ns  % Addresses G1, G2
 %CHAP_Resp authenticates CHAP_Init on na
 authentication_on nc  % Addresses G1, G2
  
end goal
 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%5%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

environment()
}
 