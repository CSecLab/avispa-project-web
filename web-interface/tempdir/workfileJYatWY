role role_R(R:agent,IdM:text,Ker:symmetric_key,Krn:symmetric_key,Krm:symmetric_key,SND,RCV:channel(dy))
played_by R
def=
	local
		State:nat,Kn:symmetric_key
	init
		State := 0
	transition
		3. State=0 /\ RCV({{IdM.Kn'}_Krn}_Ker) =|> State':=1 /\ SND({{Kn'}_Krm}_Ker)
end role

role role_E(E:agent,S:text,Ker:symmetric_key,SND,RCV:channel(dy))
played_by E
def=
	local
		State:nat,IdM:text,Krn:symmetric_key,Krm:symmetric_key,Kn:symmetric_key
	init
		State := 0
	transition
		2. State=0 /\ RCV({IdM'.Kn'}_Krn') =|> State':=1 /\ SND({{IdM'.Kn'}_Krn'}_Ker)
		4. State=1 /\ RCV({{Kn}_Krm'}_Ker) =|> State':=2 /\ SND({Kn}_Krm')
end role

role role_N(N:agent,Krn:symmetric_key,Kn:symmetric_key,SND,RCV:channel(dy))
played_by N
def=
	local
		State:nat,IdM:text,T:text
	init
		State := 0
	transition
		1. State=0 /\ RCV(IdM') =|> State':=1 /\ SND({IdM'.Kn}_Krn)
		6. State=1 /\ RCV({T'}_Kn) =|> State':=2
end role

role role_M(M:agent,IdM:text,Krm:symmetric_key,SND,RCV:channel(dy))
played_by M
def=
	local
		State:nat,Kn:symmetric_key,T:text
	init
		State := 0
	transition
		1. State=0 /\ RCV(start) =|> State':=1 /\ SND(IdM)
		5. State=1 /\ RCV({Kn'}_Krm) =|> State':=2 /\ T':=new() /\ SND({T'}_Kn')
end role

role session1(Kn:symmetric_key,Krn:symmetric_key,N:agent,R:agent,E:agent,S:text,Ker:symmetric_key,M:agent,IdM:text,Krm:symmetric_key)
def=
	local
		SND4,RCV4,SND3,RCV3,SND2,RCV2,SND1,RCV1:channel(dy)
	composition
		role_M(M,IdM,Krm,SND4,RCV4) /\ role_N(N,Krn,Kn,SND3,RCV3) /\ role_E(E,S,Ker,SND2,RCV2) /\ role_R(R,IdM,Ker,Krn,Krm,SND1,RCV1)
end role

role environment()
def=
	const
		const_1:text,m:agent,s:text,r:agent,key4:symmetric_key,key2:symmetric_key,n:agent,e:agent,key1:symmetric_key,key3:symmetric_key,auth_1:protocol_id
	intruder_knowledge = {}
	composition
		session1(key2,key4,n,r,e,s,key1,m,const_1,key3)
end role

goal
	authentication_on auth_1
end goal

environment()
