%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfile6Cnu9w

section signature:

state_role_MR: agent * agent * agent * agent * agent * agent * hash_func * agent * symmetric_key * symmetric_key * symmetric_key * text * symmetric_key * nat * text * text * text * text * set(agent) * nat -> fact
state_role_MAP1: agent * agent * agent * agent * agent * agent * hash_func * agent * symmetric_key * symmetric_key * nat * text * text * symmetric_key * text * text * symmetric_key * symmetric_key * text * text * text * nat -> fact
state_role_CAAA: agent * agent * agent * agent * hash_func * agent * symmetric_key * symmetric_key * symmetric_key * symmetric_key * nat * text * text * symmetric_key * text * text * text * nat -> fact
state_role_HAAA: agent * agent * agent * agent * agent * agent * hash_func * agent * symmetric_key * symmetric_key * symmetric_key * symmetric_key * nat * text * text * text * set(agent) * nat -> fact
state_role_NAAA: agent * agent * agent * agent * agent * agent * agent * hash_func * symmetric_key * symmetric_key * symmetric_key * symmetric_key * symmetric_key * symmetric_key * nat * symmetric_key * text * symmetric_key * text * text * text * text * symmetric_key * text * set(agent) * set(agent) * nat -> fact
state_role_AR3: agent * agent * agent * agent * agent * hash_func * agent * symmetric_key * nat * text * symmetric_key * symmetric_key * text * nat -> fact
state_role_MAP2: agent * agent * agent * agent * agent * agent * hash_func * agent * symmetric_key * nat * symmetric_key * text * text * text * symmetric_key * text * nat -> fact


section types:

set_278, set_269, set_261, set_260: set
Set_162, Set_141, Set_139, Dummy_Set_29, Dummy_Set_162, Dummy_Set_141, Dummy_Set_139, ASGoal, Set_29: set(agent)
sec_nlk, sec_nsk, auth_2, sec_tk, auth_1, sec_n3: protocol_id
MGoal, start: message
State, 9, SID, 8, 7, 6, 5, 4, Dummy_State, 3, SID2, SID1, 2, 1, 0: nat
N3, N6, N5, N2, N1, N7, Dummy_AR3ID, Dummy_N5, Dummy_N3, AR3ID, Dummy_N2, Dummy_N1, Dummy_N7, Dummy_N6, dummy_nonce, ar3id: text
NSK, TK, KNAAR3, NLK, Ki, KNHAAA, LK, KNAMAP2, KCNAAA, KCAMAP1, Dummy_NLK, Dummy_Ki, Dummy_NSK, Dummy_LK, Dummy_TK, dummy_sk, knamap2, nsk, knhaaa, lk, ki, knaar3, nlk, kcamap1, kcnaaa, tk: symmetric_key
H, h, hash_0: hash_func
NAAA, MAP2, CAAA, MR, MAP1, AR3, HAAA, A2Goal, A1Goal, haaa, mr, map2, map1, caaa, ar3, naaa, i: agent


section inits:

initial_state init1 := 
 iknows(start).
 iknows(mr).
 iknows(map1).
 iknows(map2).
 iknows(ar3).
 iknows(naaa).
 iknows(i).
 state_role_MAP2(map2,map1,mr,caaa,haaa,ar3,h,naaa,knamap2,0,dummy_sk,dummy_nonce,dummy_nonce,dummy_nonce,dummy_sk,dummy_nonce,3).
 state_role_AR3(ar3,map1,mr,caaa,map2,h,naaa,knaar3,0,dummy_nonce,dummy_sk,dummy_sk,dummy_nonce,4).
 state_role_NAAA(naaa,map1,mr,caaa,haaa,map2,ar3,h,knhaaa,kcnaaa,nsk,tk,knaar3,knamap2,0,dummy_sk,dummy_nonce,dummy_sk,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_sk,dummy_nonce,set_260,set_261,5).
 state_role_HAAA(haaa,map1,mr,caaa,map2,ar3,h,naaa,knhaaa,tk,ki,nlk,0,dummy_nonce,dummy_nonce,dummy_nonce,set_269,6).
 state_role_CAAA(caaa,map1,mr,haaa,h,naaa,lk,kcnaaa,kcamap1,tk,0,dummy_nonce,dummy_nonce,dummy_sk,dummy_nonce,dummy_nonce,dummy_nonce,7).
 state_role_MAP1(map1,mr,caaa,haaa,map2,ar3,h,naaa,kcamap1,tk,0,dummy_nonce,dummy_nonce,dummy_sk,dummy_nonce,dummy_nonce,dummy_sk,dummy_sk,dummy_nonce,dummy_nonce,dummy_nonce,8).
 state_role_MR(mr,map1,caaa,haaa,map2,ar3,h,naaa,lk,nsk,ki,ar3id,nlk,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,set_278,9)


section rules:

step step_0 (MAP2,MAP1,MR,CAAA,HAAA,AR3,H,NAAA,KNAMAP2,Dummy_TK,Dummy_N6,Dummy_N7,N1,LK,N2,SID,TK,N6,N7) :=
 state_role_MAP2(MAP2,MAP1,MR,CAAA,HAAA,AR3,H,NAAA,KNAMAP2,0,Dummy_TK,Dummy_N6,Dummy_N7,N1,LK,N2,SID).
 iknows(pair(MAP1,pair(MAP2,scrypt(TK,pair(MAP1,pair(N6,N7))))))
 =>
 state_role_MAP2(MAP2,MAP1,MR,CAAA,HAAA,AR3,H,NAAA,KNAMAP2,1,TK,N6,N7,N1,LK,N2,SID).
 iknows(pair(MAP2,pair(NAAA,scrypt(TK,pair(MAP1,pair(N6,N7))))))

step step_1 (MAP2,MAP1,MR,CAAA,HAAA,AR3,H,NAAA,KNAMAP2,TK,N6,N7,Dummy_N1,Dummy_LK,Dummy_N2,SID,N1,LK,N2) :=
 state_role_MAP2(MAP2,MAP1,MR,CAAA,HAAA,AR3,H,NAAA,KNAMAP2,1,TK,N6,N7,Dummy_N1,Dummy_LK,Dummy_N2,SID).
 iknows(pair(NAAA,pair(MAP2,scrypt(KNAMAP2,apply(H,pair(LK,pair(N2,N1)))))))
 =>
 state_role_MAP2(MAP2,MAP1,MR,CAAA,HAAA,AR3,H,NAAA,KNAMAP2,2,TK,N6,N7,N1,LK,N2,SID).
 iknows(pair(MAP2,pair(MR,apply(H,apply(H,pair(LK,pair(N2,N1)))))))

step step_2 (MAP2,MAP1,MR,CAAA,HAAA,AR3,H,NAAA,KNAMAP2,TK,N6,N7,N1,LK,N2,SID) :=
 state_role_MAP2(MAP2,MAP1,MR,CAAA,HAAA,AR3,H,NAAA,KNAMAP2,2,TK,N6,N7,N1,LK,N2,SID).
 iknows(pair(MR,pair(MAP2,apply(H,apply(H,pair(LK,pair(N2,N1)))))))
 =>
 state_role_MAP2(MAP2,MAP1,MR,CAAA,HAAA,AR3,H,NAAA,KNAMAP2,3,TK,N6,N7,N1,LK,N2,SID)

step step_3 (AR3,MAP1,MR,CAAA,MAP2,H,NAAA,KNAAR3,Dummy_N6,Dummy_TK,NSK,N3,SID,N6,TK) :=
 state_role_AR3(AR3,MAP1,MR,CAAA,MAP2,H,NAAA,KNAAR3,0,Dummy_N6,Dummy_TK,NSK,N3,SID).
 iknows(pair(MAP1,pair(AR3,scrypt(TK,pair(MAP1,N6)))))
 =>
 state_role_AR3(AR3,MAP1,MR,CAAA,MAP2,H,NAAA,KNAAR3,1,N6,TK,NSK,N3,SID).
 iknows(pair(AR3,pair(NAAA,scrypt(TK,pair(MAP1,N6)))))

step step_4 (AR3,MAP1,MR,CAAA,MAP2,H,NAAA,KNAAR3,N6,TK,Dummy_NSK,Dummy_N3,SID,NSK,N3) :=
 state_role_AR3(AR3,MAP1,MR,CAAA,MAP2,H,NAAA,KNAAR3,1,N6,TK,Dummy_NSK,Dummy_N3,SID).
 iknows(pair(NAAA,pair(AR3,pair(scrypt(KNAAR3,pair(NSK,N3)),apply(H,pair(N6,TK))))))
 =>
 state_role_AR3(AR3,MAP1,MR,CAAA,MAP2,H,NAAA,KNAAR3,2,N6,TK,NSK,N3,SID).
 iknows(pair(AR3,pair(MAP1,pair(apply(H,pair(N6,TK)),scrypt(NSK,pair(MAP1,pair(AR3,N3)))))))

step step_5 (AR3,MAP1,MR,CAAA,MAP2,H,NAAA,KNAAR3,N6,TK,NSK,N3,SID) :=
 state_role_AR3(AR3,MAP1,MR,CAAA,MAP2,H,NAAA,KNAAR3,2,N6,TK,NSK,N3,SID).
 iknows(pair(MR,pair(AR3,scrypt(NSK,pair(AR3,pair(MR,N3))))))
 =>
 state_role_AR3(AR3,MAP1,MR,CAAA,MAP2,H,NAAA,KNAAR3,3,N6,TK,NSK,N3,SID)

step step_6 (NAAA,MAP1,MR,CAAA,HAAA,MAP2,AR3,H,KNHAAA,KCNAAA,NSK,TK,KNAAR3,KNAMAP2,Dummy_Ki,Dummy_N5,NLK,Dummy_N3,Dummy_N6,N7,Dummy_N2,Dummy_LK,Dummy_N1,Set_139,Set_141,SID,Ki,N5,N3,N6,N2,LK,N1) :=
 state_role_NAAA(NAAA,MAP1,MR,CAAA,HAAA,MAP2,AR3,H,KNHAAA,KCNAAA,NSK,TK,KNAAR3,KNAMAP2,0,Dummy_Ki,Dummy_N5,NLK,Dummy_N3,Dummy_N6,N7,Dummy_N2,Dummy_LK,Dummy_N1,Set_139,Set_141,SID).
 iknows(pair(CAAA,pair(NAAA,pair(N5,pair(apply(H,pair(MR,pair(N1,Ki))),scrypt(KCNAAA,pair(apply(H,pair(LK,pair(N2,N1))),pair(N3,pair(N6,TK)))))))))
 =>
 state_role_NAAA(NAAA,MAP1,MR,CAAA,HAAA,MAP2,AR3,H,KNHAAA,KCNAAA,NSK,TK,KNAAR3,KNAMAP2,1,Ki,N5,NLK,N3,N6,N7,N2,LK,N1,Set_139,Set_141,SID).
 iknows(pair(NAAA,pair(HAAA,pair(N1,pair(N2,pair(N5,apply(H,pair(MR,pair(N1,Ki)))))))))

step step_7 (NAAA,MAP1,MR,CAAA,HAAA,MAP2,AR3,H,KNHAAA,KCNAAA,NSK,TK,KNAAR3,KNAMAP2,Ki,N5,Dummy_NLK,N3,N6,N7,N2,LK,N1,Dummy_Set_139,Set_141,SID,NLK) :=
 state_role_NAAA(NAAA,MAP1,MR,CAAA,HAAA,MAP2,AR3,H,KNHAAA,KCNAAA,NSK,TK,KNAAR3,KNAMAP2,1,Ki,N5,Dummy_NLK,N3,N6,N7,N2,LK,N1,Dummy_Set_139,Set_141,SID).
 iknows(pair(HAAA,pair(NAAA,scrypt(KNHAAA,pair(HAAA,NLK)))))
 =>
 state_role_NAAA(NAAA,MAP1,MR,CAAA,HAAA,MAP2,AR3,H,KNHAAA,KCNAAA,NSK,TK,KNAAR3,KNAMAP2,2,Ki,N5,NLK,N3,N6,N7,N2,LK,N1,Dummy_Set_139,Set_141,SID).
 secret(NLK,sec_nlk,Dummy_Set_139).
 contains(MR,Dummy_Set_139).
 contains(AR3,Dummy_Set_139).
 contains(HAAA,Dummy_Set_139).
 contains(NAAA,Dummy_Set_139)

step step_8 (NAAA,MAP1,MR,CAAA,HAAA,MAP2,AR3,H,KNHAAA,KCNAAA,NSK,TK,KNAAR3,KNAMAP2,Ki,N5,NLK,N3,N6,N7,N2,LK,N1,Set_139,Dummy_Set_141,SID) :=
 state_role_NAAA(NAAA,MAP1,MR,CAAA,HAAA,MAP2,AR3,H,KNHAAA,KCNAAA,NSK,TK,KNAAR3,KNAMAP2,2,Ki,N5,NLK,N3,N6,N7,N2,LK,N1,Set_139,Dummy_Set_141,SID).
 iknows(pair(AR3,pair(NAAA,scrypt(TK,pair(MAP1,N6)))))
 =>
 state_role_NAAA(NAAA,MAP1,MR,CAAA,HAAA,MAP2,AR3,H,KNHAAA,KCNAAA,NSK,TK,KNAAR3,KNAMAP2,3,Ki,N5,NLK,N3,N6,N7,N2,LK,N1,Set_139,Dummy_Set_141,SID).
 iknows(pair(NAAA,pair(AR3,pair(scrypt(KNAAR3,pair(NSK,N3)),apply(H,pair(N6,TK)))))).
 secret(NSK,sec_nsk,Dummy_Set_141).
 contains(NAAA,Dummy_Set_141).
 contains(AR3,Dummy_Set_141).
 contains(MR,Dummy_Set_141)

step step_9 (NAAA,MAP1,MR,CAAA,HAAA,MAP2,AR3,H,KNHAAA,KCNAAA,NSK,TK,KNAAR3,KNAMAP2,Ki,N5,NLK,N3,N6,Dummy_N7,N2,LK,N1,Set_139,Set_141,SID,N7) :=
 state_role_NAAA(NAAA,MAP1,MR,CAAA,HAAA,MAP2,AR3,H,KNHAAA,KCNAAA,NSK,TK,KNAAR3,KNAMAP2,3,Ki,N5,NLK,N3,N6,Dummy_N7,N2,LK,N1,Set_139,Set_141,SID).
 iknows(pair(MAP2,pair(NAAA,scrypt(TK,pair(MAP1,pair(N6,N7))))))
 =>
 state_role_NAAA(NAAA,MAP1,MR,CAAA,HAAA,MAP2,AR3,H,KNHAAA,KCNAAA,NSK,TK,KNAAR3,KNAMAP2,4,Ki,N5,NLK,N3,N6,N7,N2,LK,N1,Set_139,Set_141,SID).
 iknows(pair(NAAA,pair(MAP2,scrypt(KNAMAP2,apply(H,pair(LK,pair(N2,N1)))))))

step step_10 (HAAA,MAP1,MR,CAAA,MAP2,AR3,H,NAAA,KNHAAA,TK,Ki,NLK,Dummy_N1,Dummy_N2,Dummy_N5,Dummy_Set_162,SID,N1,N2,N5) :=
 state_role_HAAA(HAAA,MAP1,MR,CAAA,MAP2,AR3,H,NAAA,KNHAAA,TK,Ki,NLK,0,Dummy_N1,Dummy_N2,Dummy_N5,Dummy_Set_162,SID).
 iknows(pair(NAAA,pair(HAAA,pair(N1,pair(N2,pair(N5,apply(H,pair(MR,pair(N1,Ki)))))))))
 =>
 state_role_HAAA(HAAA,MAP1,MR,CAAA,MAP2,AR3,H,NAAA,KNHAAA,TK,Ki,NLK,1,N1,N2,N5,Dummy_Set_162,SID).
 secret(NLK,sec_nlk,Dummy_Set_162).
 iknows(pair(HAAA,pair(NAAA,scrypt(KNHAAA,pair(HAAA,NLK))))).
 contains(MR,Dummy_Set_162).
 contains(AR3,Dummy_Set_162).
 contains(HAAA,Dummy_Set_162).
 contains(NAAA,Dummy_Set_162)

step step_11 (CAAA,MAP1,MR,HAAA,H,NAAA,LK,KCNAAA,KCAMAP1,TK,Dummy_N1,Dummy_N3,Dummy_Ki,Dummy_N6,Dummy_N2,Dummy_N5,SID,N1,N3,Ki,N6,N2,N5) :=
 state_role_CAAA(CAAA,MAP1,MR,HAAA,H,NAAA,LK,KCNAAA,KCAMAP1,TK,0,Dummy_N1,Dummy_N3,Dummy_Ki,Dummy_N6,Dummy_N2,Dummy_N5,SID).
 iknows(pair(MAP1,pair(CAAA,pair(N1,pair(N2,pair(scrypt(LK,N3),pair(apply(H,pair(MR,pair(N1,Ki))),apply(H,pair(MR,pair(N2,LK)))))))))).
 request(CAAA,MR,auth_1,apply(H,pair(MR,pair(N2,LK))),SID)
=[exists N5,N6]=>
 state_role_CAAA(CAAA,MAP1,MR,HAAA,H,NAAA,LK,KCNAAA,KCAMAP1,TK,1,N1,N3,Ki,N6,N2,N5,SID).
 iknows(pair(CAAA,pair(NAAA,pair(N5,pair(apply(H,pair(MR,pair(N1,Ki))),scrypt(KCNAAA,pair(apply(H,pair(LK,pair(N2,N1))),pair(N3,pair(N6,TK))))))))).
 iknows(pair(CAAA,pair(MAP1,pair(N5,scrypt(KCAMAP1,pair(apply(H,pair(MR,pair(CAAA,pair(N2,pair(N5,LK))))),pair(CAAA,pair(N6,TK)))))))).
 witness(CAAA,MR,auth_2,apply(H,pair(MR,pair(CAAA,pair(N2,pair(N5,LK))))))

step step_12 (MAP1,MR,CAAA,HAAA,MAP2,AR3,H,NAAA,KCAMAP1,TK,Dummy_AR3ID,Dummy_N1,Dummy_Ki,N5,Dummy_N2,Dummy_LK,NSK,Dummy_N3,N6,N7,SID,AR3ID,N1,Ki,N2,LK,N3) :=
 state_role_MAP1(MAP1,MR,CAAA,HAAA,MAP2,AR3,H,NAAA,KCAMAP1,TK,0,Dummy_AR3ID,Dummy_N1,Dummy_Ki,N5,Dummy_N2,Dummy_LK,NSK,Dummy_N3,N6,N7,SID).
 iknows(pair(MR,pair(MAP1,pair(AR3ID,pair(N1,pair(N2,pair(scrypt(LK,N3),pair(apply(H,pair(MR,pair(N1,Ki))),apply(H,pair(MR,pair(N2,LK)))))))))))
 =>
 state_role_MAP1(MAP1,MR,CAAA,HAAA,MAP2,AR3,H,NAAA,KCAMAP1,TK,1,AR3ID,N1,Ki,N5,N2,LK,NSK,N3,N6,N7,SID).
 iknows(pair(MAP1,pair(CAAA,pair(N1,pair(N2,pair(scrypt(LK,N3),pair(apply(H,pair(MR,pair(N1,Ki))),apply(H,pair(MR,pair(N2,LK))))))))))

step step_13 (MAP1,MR,CAAA,HAAA,MAP2,AR3,H,NAAA,KCAMAP1,TK,AR3ID,N1,Ki,Dummy_N5,N2,LK,NSK,N3,Dummy_N6,N7,SID,N5,N6) :=
 state_role_MAP1(MAP1,MR,CAAA,HAAA,MAP2,AR3,H,NAAA,KCAMAP1,TK,1,AR3ID,N1,Ki,Dummy_N5,N2,LK,NSK,N3,Dummy_N6,N7,SID).
 iknows(pair(CAAA,pair(MAP1,pair(N5,scrypt(KCAMAP1,pair(apply(H,pair(MR,pair(CAAA,pair(N2,pair(N5,LK))))),pair(CAAA,pair(N6,TK))))))))
 =>
 state_role_MAP1(MAP1,MR,CAAA,HAAA,MAP2,AR3,H,NAAA,KCAMAP1,TK,2,AR3ID,N1,Ki,N5,N2,LK,NSK,N3,N6,N7,SID).
 iknows(pair(MAP1,pair(MR,pair(apply(H,apply(H,pair(MR,pair(CAAA,pair(N2,pair(N5,LK)))))),N5)))).
 iknows(pair(MAP1,pair(AR3,scrypt(TK,pair(MAP1,N6)))))

step step_14 (MAP1,MR,CAAA,HAAA,MAP2,AR3,H,NAAA,KCAMAP1,TK,AR3ID,N1,Ki,N5,N2,LK,Dummy_NSK,N3,N6,Dummy_N7,SID,NSK,N7) :=
 state_role_MAP1(MAP1,MR,CAAA,HAAA,MAP2,AR3,H,NAAA,KCAMAP1,TK,2,AR3ID,N1,Ki,N5,N2,LK,Dummy_NSK,N3,N6,Dummy_N7,SID).
 iknows(pair(AR3,pair(MAP1,pair(apply(H,pair(N6,TK)),scrypt(NSK,pair(MAP1,pair(AR3,N3)))))))
=[exists N7]=>
 state_role_MAP1(MAP1,MR,CAAA,HAAA,MAP2,AR3,H,NAAA,KCAMAP1,TK,3,AR3ID,N1,Ki,N5,N2,LK,NSK,N3,N6,N7,SID).
 iknows(pair(MAP1,pair(MR,scrypt(NSK,pair(MAP1,pair(AR3,N3)))))).
 iknows(pair(MAP1,pair(MAP2,scrypt(TK,pair(MAP1,pair(N6,N7))))))

step step_15 (MR,MAP1,CAAA,HAAA,MAP2,AR3,H,NAAA,LK,NSK,Ki,AR3ID,NLK,N5,Dummy_N3,Dummy_N1,Dummy_N2,Dummy_Set_29,SID,N3,N1,N2) :=
 state_role_MR(MR,MAP1,CAAA,HAAA,MAP2,AR3,H,NAAA,LK,NSK,Ki,AR3ID,NLK,0,N5,Dummy_N3,Dummy_N1,Dummy_N2,Dummy_Set_29,SID).
 iknows(start)
=[exists N3,N1,N2]=>
 state_role_MR(MR,MAP1,CAAA,HAAA,MAP2,AR3,H,NAAA,LK,NSK,Ki,AR3ID,NLK,1,N5,N3,N1,N2,Dummy_Set_29,SID).
 iknows(pair(MR,pair(MAP1,pair(AR3ID,pair(N1,pair(N2,pair(scrypt(LK,N3),pair(apply(H,pair(MR,pair(N1,Ki))),apply(H,pair(MR,pair(N2,LK))))))))))).
 secret(NLK,sec_n3,Dummy_Set_29).
 witness(MR,CAAA,auth_1,apply(H,pair(MR,pair(N2,LK)))).
 contains(MR,Dummy_Set_29).
 contains(AR3,Dummy_Set_29).
 contains(NAAA,Dummy_Set_29)

step step_16 (MR,MAP1,CAAA,HAAA,MAP2,AR3,H,NAAA,LK,NSK,Ki,AR3ID,NLK,Dummy_N5,N3,N1,N2,Set_29,SID,N5) :=
 state_role_MR(MR,MAP1,CAAA,HAAA,MAP2,AR3,H,NAAA,LK,NSK,Ki,AR3ID,NLK,1,Dummy_N5,N3,N1,N2,Set_29,SID).
 iknows(pair(MAP1,pair(MR,pair(apply(H,apply(H,pair(MR,pair(CAAA,pair(N2,pair(N5,LK)))))),N5))))
 =>
 state_role_MR(MR,MAP1,CAAA,HAAA,MAP2,AR3,H,NAAA,LK,NSK,Ki,AR3ID,NLK,2,N5,N3,N1,N2,Set_29,SID).
 request(MR,CAAA,auth_2,apply(H,pair(MR,pair(CAAA,pair(N2,pair(N5,LK))))),SID)

step step_17 (MR,MAP1,CAAA,HAAA,MAP2,AR3,H,NAAA,LK,NSK,Ki,AR3ID,NLK,N5,N3,N1,N2,Set_29,SID) :=
 state_role_MR(MR,MAP1,CAAA,HAAA,MAP2,AR3,H,NAAA,LK,NSK,Ki,AR3ID,NLK,2,N5,N3,N1,N2,Set_29,SID).
 iknows(pair(MAP1,pair(MR,scrypt(NSK,pair(MAP1,pair(AR3,N3))))))
 =>
 state_role_MR(MR,MAP1,CAAA,HAAA,MAP2,AR3,H,NAAA,LK,NSK,Ki,AR3ID,NLK,3,N5,N3,N1,N2,Set_29,SID)

step step_18 (MR,MAP1,CAAA,HAAA,MAP2,AR3,H,NAAA,LK,NSK,Ki,AR3ID,NLK,N5,N3,N1,N2,Set_29,SID) :=
 state_role_MR(MR,MAP1,CAAA,HAAA,MAP2,AR3,H,NAAA,LK,NSK,Ki,AR3ID,NLK,3,N5,N3,N1,N2,Set_29,SID).
 iknows(pair(MAP2,pair(MR,apply(H,apply(H,pair(LK,pair(N2,N1)))))))
 =>
 state_role_MR(MR,MAP1,CAAA,HAAA,MAP2,AR3,H,NAAA,LK,NSK,Ki,AR3ID,NLK,4,N5,N3,N1,N2,Set_29,SID).
 iknows(pair(MR,pair(AR3,scrypt(NSK,pair(AR3,pair(MR,N3)))))).
 iknows(pair(MR,pair(MAP2,apply(H,apply(H,pair(LK,pair(N2,N1)))))))


section properties:

property authentication_on_auth_1 (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,auth_1,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,auth_1,MGoal))
     /\ ((request(A1Goal,A2Goal,auth_1,MGoal,SID1)
           /\ request(A1Goal,A2Goal,auth_1,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_auth_2 (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,auth_2,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,auth_2,MGoal))
     /\ ((request(A1Goal,A2Goal,auth_2,MGoal,SID1)
           /\ request(A1Goal,A2Goal,auth_2,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property secrecy_of_sec_n3 (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_n3,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_sec_nsk (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_nsk,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_sec_tk (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_tk,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_sec_nlk (MGoal,ASGoal) :=
 [] ((secret(MGoal,sec_nlk,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))


section attack_states:

attack_state authentication_on_auth_1 (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,auth_1,MGoal,SID) &
 not(witness(A2Goal,A1Goal,auth_1,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_auth_1 (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,auth_1,MGoal,SID1).
 request(A1Goal,A2Goal,auth_1,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_auth_2 (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,auth_2,MGoal,SID) &
 not(witness(A2Goal,A1Goal,auth_2,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_auth_2 (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,auth_2,MGoal,SID1).
 request(A1Goal,A2Goal,auth_2,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state secrecy_of_sec_n3 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_n3,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_sec_nsk (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_nsk,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_sec_tk (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_tk,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_sec_nlk (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sec_nlk,ASGoal) &
 not(contains(i,ASGoal))

