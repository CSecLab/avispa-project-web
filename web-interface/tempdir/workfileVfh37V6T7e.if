%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfileVfh37V6T7e

section signature:

state_regcentre: agent * agent * agent * symmetric_key * symmetric_key * hash_func * hash_func * hash_func * hash_func * nat * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * message * message * message * message * message * message * message * message * message * message * message * message * message * hash_func * set(text) * set(text) * set(agent) * set(text) * nat -> fact
state_bob: agent * agent * agent * symmetric_key * symmetric_key * hash_func * hash_func * hash_func * hash_func * nat * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * message * message * message * message * message * message * message * message * message * message * message * message * message * hash_func * nat -> fact
state_alice: agent * agent * agent * symmetric_key * symmetric_key * hash_func * hash_func * hash_func * hash_func * nat * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * text * message * message * message * message * message * message * message * message * message * message * message * message * message * hash_func * set(text) * set(text) * set(agent) * nat -> fact


section types:

alice_bob, alice_regcentre, bob_alice, regcentre_alice, regcentre_bob, subs1, subs2, subs3, subs4: protocol_id
ASGoal, Set_112, Set_62, Dummy_Set_112, Dummy_Set_62: set(agent)
Set_113, Set_111, Set_110, Set_61, Set_59, Dummy_Set_113, Dummy_Set_111, Dummy_Set_110, Dummy_Set_61, Dummy_Set_59: set(text)
mul, add, sub, Inc, H, Mul, Add, Sub, h, dummy_hash: hash_func
MGoal, Pi, DID, Di, Xi, Gi, Wi, SK, Zi, Ti, Li, Yi, Hi, Ki, start, Dummy_Li, Dummy_Ki, Dummy_Hi, Dummy_Yi, Dummy_Zi, Dummy_SK, Dummy_Wi, Dummy_Gi, Dummy_Xi, Dummy_Ti, Dummy_Di, Dummy_DID, Dummy_Pi, dummy_msg: message
rpwi, pwi, r, bi, idi, ai, ci, fi, nc, g, kru, sidj, x, krs, nr, ns, RPWi, PWi, R, Bi, IDi, Ai, Ci, Fi, Nc, G, KRU, SIDj, X, KRS, Nr, Ns, Dummy_Nr, Dummy_KRU, Dummy_Ns, Dummy_KRS, Dummy_SIDj, Dummy_Nc, Dummy_Ci, Dummy_Ai, Dummy_Fi, Dummy_RPWi, dummy_nonce: text
sk1, skuisj, SK1, SKuisj: symmetric_key
set_274, set_273, set_272, set_271, set_268, set_267, set_266, set_264, set_263, set_262, set_261, set_258, set_257, set_256, set_246, set_245, set_244, set_243, set_211, set_210, set_209: set
State, 13, 12, 11, 3, 2, 9, 1, 8, 0, 7, 5, SID, 4, Dummy_State, SID2, SID1: nat
A1Goal, ui, sj, rc, Ui, Sj, Rc, i, A2Goal: agent


section inits:

initial_state init1 := 
 iknows(start).
 iknows(ui).
 iknows(sj).
 iknows(rc).
 iknows(h).
 iknows(add).
 iknows(sub).
 iknows(mul).
 iknows(ai).
 iknows(ci).
 iknows(fi).
 iknows(i).
 state_alice(ui,sj,rc,skuisj,sk1,h,mul,add,sub,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_hash,set_209,set_210,set_211,3).
 state_bob(sj,ui,rc,skuisj,sk1,h,mul,add,sub,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_hash,4).
 state_regcentre(rc,ui,sj,skuisj,sk1,h,mul,add,sub,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_hash,set_243,set_244,set_245,set_246,5).
 state_alice(ui,sj,rc,skuisj,sk1,h,mul,add,sub,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_hash,set_256,set_257,set_258,7).
 state_bob(sj,ui,rc,skuisj,sk1,h,mul,add,sub,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_hash,8).
 state_regcentre(rc,ui,sj,skuisj,sk1,h,mul,add,sub,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_hash,set_261,set_262,set_263,set_264,9).
 state_alice(sj,ui,rc,skuisj,sk1,h,mul,add,sub,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_hash,set_266,set_267,set_268,11).
 state_bob(ui,sj,rc,skuisj,sk1,h,mul,add,sub,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_hash,12).
 state_regcentre(rc,sj,ui,skuisj,sk1,h,mul,add,sub,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_hash,set_271,set_272,set_273,set_274,13)


section rules:

step step_0 (Ui,Sj,Rc,SKuisj,SK1,H,Mul,Add,Sub,Dummy_RPWi,PWi,R,Bi,IDi,Ai,Ci,Dummy_Fi,Nc,G,KRU,SIDj,X,KRS,Nr,Ns,Pi,DID,Di,Xi,Gi,Wi,SK,Zi,Ti,Li,Yi,Hi,Ki,Inc,Dummy_Set_59,Dummy_Set_61,Dummy_Set_62,SID) :=
 state_alice(Ui,Sj,Rc,SKuisj,SK1,H,Mul,Add,Sub,0,Dummy_RPWi,PWi,R,Bi,IDi,Ai,Ci,Dummy_Fi,Nc,G,KRU,SIDj,X,KRS,Nr,Ns,Pi,DID,Di,Xi,Gi,Wi,SK,Zi,Ti,Li,Yi,Hi,Ki,Inc,Dummy_Set_59,Dummy_Set_61,Dummy_Set_62,SID).
 iknows(start)
 =>
 state_alice(Ui,Sj,Rc,SKuisj,SK1,H,Mul,Add,Sub,1,apply(H,pair(PWi,R)),PWi,R,Bi,IDi,Ai,Ci,apply(H,Bi),Nc,G,KRU,SIDj,X,KRS,Nr,Ns,Pi,DID,Di,Xi,Gi,Wi,SK,Zi,Ti,Li,Yi,Hi,Ki,Inc,Dummy_Set_59,Dummy_Set_61,Dummy_Set_62,SID).
 iknows(scrypt(SKuisj,pair(IDi,pair(apply(H,pair(PWi,R)),apply(H,Bi))))).
 secret(Dummy_Set_59,subs1,Ui).
 secret(Dummy_Set_61,subs2,Dummy_Set_62).
 contains(PWi,Dummy_Set_59).
 contains(R,Dummy_Set_59).
 contains(Bi,Dummy_Set_59).
 contains(IDi,Dummy_Set_61).
 contains(Ui,Dummy_Set_62).
 contains(Sj,Dummy_Set_62).
 contains(Rc,Dummy_Set_62)

step step_1 (Ui,Sj,Rc,SKuisj,SK1,H,Mul,Add,Sub,RPWi,PWi,R,Bi,IDi,Dummy_Ai,Dummy_Ci,Dummy_Fi,Dummy_Nc,G,KRU,SIDj,X,KRS,Nr,Ns,Dummy_Pi,Dummy_DID,Dummy_Di,Xi,Gi,Wi,SK,Zi,Dummy_Ti,Li,Yi,Hi,Ki,Inc,Set_59,Set_61,Set_62,SID,Ai,Ci,Fi,Nc) :=
 state_alice(Ui,Sj,Rc,SKuisj,SK1,H,Mul,Add,Sub,1,RPWi,PWi,R,Bi,IDi,Dummy_Ai,Dummy_Ci,Dummy_Fi,Dummy_Nc,G,KRU,SIDj,X,KRS,Nr,Ns,Dummy_Pi,Dummy_DID,Dummy_Di,Xi,Gi,Wi,SK,Zi,Dummy_Ti,Li,Yi,Hi,Ki,Inc,Set_59,Set_61,Set_62,SID).
 iknows(scrypt(SKuisj,pair(Fi,pair(Ai,Ci))))
=[exists Nc]=>
 state_alice(Ui,Sj,Rc,SKuisj,SK1,H,Mul,Add,Sub,2,RPWi,PWi,R,Bi,IDi,Ai,Ci,Fi,Nc,G,KRU,SIDj,X,KRS,Nr,Ns,apply(Add,pair(apply(Mul,pair(Nc,G)),apply(Mul,pair(KRU,RPWi)))),apply(H,pair(IDi,apply(Mul,pair(Nc,G)))),apply(H,pair(SIDj,pair(RPWi,pair(apply(Mul,pair(Nc,G)),KRU)))),Xi,Gi,Wi,SK,Zi,apply(Mul,pair(Nc,G)),Li,Yi,Hi,Ki,Inc,Set_59,Set_61,Set_62,SID).
 iknows(pair(apply(Add,pair(apply(Mul,pair(Nc,G)),apply(Mul,pair(KRU,RPWi)))),pair(apply(H,pair(IDi,apply(Mul,pair(Nc,G)))),pair(apply(H,pair(SIDj,pair(RPWi,pair(apply(Mul,pair(Nc,G)),KRU)))),SIDj))))

step step_2 (Ui,Sj,Rc,SKuisj,SK1,H,Mul,Add,Sub,RPWi,PWi,R,Bi,IDi,Ai,Ci,Fi,Nc,G,KRU,Dummy_SIDj,X,KRS,Nr,Ns,Pi,DID,Di,Dummy_Xi,Dummy_Gi,Dummy_Wi,Dummy_SK,Dummy_Zi,Ti,Li,Yi,Hi,Ki,Inc,Set_59,Set_61,Set_62,SID,Xi) :=
 state_alice(Ui,Sj,Rc,SKuisj,SK1,H,Mul,Add,Sub,2,RPWi,PWi,R,Bi,IDi,Ai,Ci,Fi,Nc,G,KRU,Dummy_SIDj,X,KRS,Nr,Ns,Pi,DID,Di,Dummy_Xi,Dummy_Gi,Dummy_Wi,Dummy_SK,Dummy_Zi,Ti,Li,Yi,Hi,Ki,Inc,Set_59,Set_61,Set_62,SID).
 iknows(Xi)
 =>
 state_alice(Ui,Sj,Rc,SKuisj,SK1,H,Mul,Add,Sub,3,RPWi,PWi,R,Bi,IDi,Ai,Ci,Fi,Nc,G,KRU,Dummy_SIDj,X,KRS,Nr,Ns,Pi,DID,Di,Xi,Dummy_Gi,Dummy_Wi,apply(Mul,pair(IDi,pair(SIDj,pair(Li,pair(Ti,Hi))))),apply(H,pair(IDi,apply(Mul,pair(IDi,pair(SIDj,pair(Li,pair(Ti,Hi))))))),Ti,Li,Yi,Hi,Ki,Inc,Set_59,Set_61,Set_62,SID).
 iknows(apply(H,pair(IDi,apply(Mul,pair(IDi,pair(SIDj,pair(Li,pair(Ti,Hi))))))))

step step_3 (Sj,Ui,Rc,SKuisj,SK1,H,Mul,Add,Sub,RPWi,PWi,R,Bi,IDi,Ai,Ci,Fi,Nc,G,KRU,Dummy_SIDj,X,KRS,Nr,Ns,Pi,DID,Di,Xi,Gi,Wi,SK,Zi,Ti,Li,Yi,Hi,Ki,Inc,SID,SIDj) :=
 state_bob(Sj,Ui,Rc,SKuisj,SK1,H,Mul,Add,Sub,0,RPWi,PWi,R,Bi,IDi,Ai,Ci,Fi,Nc,G,KRU,Dummy_SIDj,X,KRS,Nr,Ns,Pi,DID,Di,Xi,Gi,Wi,SK,Zi,Ti,Li,Yi,Hi,Ki,Inc,SID).
 iknows(start)
=[exists SIDj]=>
 state_bob(Sj,Ui,Rc,SKuisj,SK1,H,Mul,Add,Sub,1,RPWi,PWi,R,Bi,IDi,Ai,Ci,Fi,Nc,G,KRU,SIDj,X,KRS,Nr,Ns,Pi,DID,Di,Xi,Gi,Wi,SK,Zi,Ti,Li,Yi,Hi,Ki,Inc,SID).
 iknows(SIDj)

step step_4 (Sj,Ui,Rc,SKuisj,SK1,H,Mul,Add,Sub,RPWi,PWi,R,Bi,IDi,Ai,Ci,Fi,Nc,G,KRU,Dummy_SIDj,X,Dummy_KRS,Nr,Dummy_Ns,Pi,DID,Di,Dummy_Xi,Gi,Dummy_Wi,SK,Dummy_Zi,Ti,Li,Dummy_Yi,Dummy_Hi,Dummy_Ki,Inc,SID,SIDj,KRS,Ns,Wi,Yi,Ki) :=
 state_bob(Sj,Ui,Rc,SKuisj,SK1,H,Mul,Add,Sub,1,RPWi,PWi,R,Bi,IDi,Ai,Ci,Fi,Nc,G,KRU,Dummy_SIDj,X,Dummy_KRS,Nr,Dummy_Ns,Pi,DID,Di,Dummy_Xi,Gi,Dummy_Wi,SK,Dummy_Zi,Ti,Li,Dummy_Yi,Dummy_Hi,Dummy_Ki,Inc,SID).
 iknows(pair(scrypt(SK1,KRS),pair(SIDj,pair(Ki,pair(Yi,Wi)))))
=[exists Ns]=>
 state_bob(Sj,Ui,Rc,SKuisj,SK1,H,Mul,Add,Sub,2,RPWi,PWi,R,Bi,IDi,Ai,Ci,Fi,Nc,G,KRU,SIDj,X,KRS,Nr,Ns,Pi,DID,Di,apply(Add,pair(apply(Mul,pair(Ns,G)),Ti)),Gi,Wi,SK,apply(H,pair(Li,pair(IDi,pair(SIDj,apply(Mul,pair(Ns,G)))))),Ti,Li,Yi,apply(Mul,pair(Ns,G)),Ki,Inc,SID).
 iknows(pair(apply(Add,pair(apply(Mul,pair(Ns,G)),Ti)),pair(apply(H,pair(Li,pair(IDi,pair(SIDj,apply(Mul,pair(Ns,G)))))),pair(Wi,SIDj))))

step step_5 (Sj,Ui,Rc,SKuisj,SK1,H,Mul,Add,Sub,RPWi,PWi,R,Bi,IDi,Ai,Ci,Fi,Nc,G,KRU,SIDj,X,KRS,Nr,Ns,Pi,DID,Di,Xi,Gi,Wi,SK,Dummy_Zi,Ti,Li,Yi,Hi,Ki,Inc,SID,Zi) :=
 state_bob(Sj,Ui,Rc,SKuisj,SK1,H,Mul,Add,Sub,2,RPWi,PWi,R,Bi,IDi,Ai,Ci,Fi,Nc,G,KRU,SIDj,X,KRS,Nr,Ns,Pi,DID,Di,Xi,Gi,Wi,SK,Dummy_Zi,Ti,Li,Yi,Hi,Ki,Inc,SID).
 iknows(Zi)
 =>
 state_bob(Sj,Ui,Rc,SKuisj,SK1,H,Mul,Add,Sub,3,RPWi,PWi,R,Bi,IDi,Ai,Ci,Fi,Nc,G,KRU,SIDj,X,KRS,Nr,Ns,Pi,DID,Di,Xi,Gi,Wi,SK,Zi,Ti,Li,Yi,Hi,Ki,Inc,SID)

step step_6 (Rc,Ui,Sj,SKuisj,SK1,H,Mul,Add,Sub,RPWi,PWi,R,Bi,IDi,Ai,Ci,Fi,Nc,G,KRU,Dummy_SIDj,X,Dummy_KRS,Nr,Ns,Pi,DID,Di,Xi,Gi,Wi,SK,Zi,Ti,Li,Yi,Hi,Ki,Inc,Dummy_Set_110,Set_111,Set_112,Set_113,SID,SIDj) :=
 state_regcentre(Rc,Ui,Sj,SKuisj,SK1,H,Mul,Add,Sub,0,RPWi,PWi,R,Bi,IDi,Ai,Ci,Fi,Nc,G,KRU,Dummy_SIDj,X,Dummy_KRS,Nr,Ns,Pi,DID,Di,Xi,Gi,Wi,SK,Zi,Ti,Li,Yi,Hi,Ki,Inc,Dummy_Set_110,Set_111,Set_112,Set_113,SID).
 iknows(SIDj)
 =>
 state_regcentre(Rc,Ui,Sj,SKuisj,SK1,H,Mul,Add,Sub,1,RPWi,PWi,R,Bi,IDi,Ai,Ci,Fi,Nc,G,KRU,SIDj,X,apply(H,pair(SIDj,X)),Nr,Ns,Pi,DID,Di,Xi,Gi,Wi,SK,Zi,Ti,Li,Yi,Hi,Ki,Inc,Dummy_Set_110,Set_111,Set_112,Set_113,SID).
 secret(Dummy_Set_110,subs3,Rc).
 iknows(scrypt(SK1,apply(H,pair(SIDj,X)))).
 contains(X,Dummy_Set_110)

step step_7 (Rc,Ui,Sj,SKuisj,SK1,H,Mul,Add,Sub,Dummy_RPWi,PWi,R,Bi,IDi,Dummy_Ai,Dummy_Ci,Dummy_Fi,Nc,G,Dummy_KRU,SIDj,X,KRS,Nr,Ns,Pi,DID,Di,Xi,Gi,Wi,SK,Zi,Ti,Li,Yi,Hi,Ki,Inc,Set_110,Dummy_Set_111,Dummy_Set_112,Dummy_Set_113,SID,RPWi,Fi) :=
 state_regcentre(Rc,Ui,Sj,SKuisj,SK1,H,Mul,Add,Sub,1,Dummy_RPWi,PWi,R,Bi,IDi,Dummy_Ai,Dummy_Ci,Dummy_Fi,Nc,G,Dummy_KRU,SIDj,X,KRS,Nr,Ns,Pi,DID,Di,Xi,Gi,Wi,SK,Zi,Ti,Li,Yi,Hi,Ki,Inc,Set_110,Dummy_Set_111,Dummy_Set_112,Dummy_Set_113,SID).
 iknows(scrypt(SKuisj,pair(IDi,pair(RPWi,Fi))))
 =>
 state_regcentre(Rc,Ui,Sj,SKuisj,SK1,H,Mul,Add,Sub,2,RPWi,PWi,R,Bi,IDi,apply(Add,pair(apply(Mul,pair(apply(H,pair(IDi,X)),G)),apply(Mul,pair(apply(H,pair(IDi,RPWi)),G)))),apply(h,pair(apply(Mul,pair(apply(H,pair(IDi,X)),G)),pair(IDi,RPWi))),Fi,Nc,G,apply(Mul,pair(apply(H,pair(IDi,X)),G)),SIDj,X,KRS,Nr,Ns,Pi,DID,Di,Xi,Gi,Wi,SK,Zi,Ti,Li,Yi,Hi,Ki,Inc,Set_110,Dummy_Set_111,Dummy_Set_112,Dummy_Set_113,SID).
 secret(Dummy_Set_111,subs2,Dummy_Set_112).
 secret(Dummy_Set_113,subs1,Ui).
 iknows(scrypt(SKuisj,pair(Fi,pair(apply(Add,pair(apply(Mul,pair(apply(H,pair(IDi,X)),G)),apply(Mul,pair(apply(H,pair(IDi,RPWi)),G)))),apply(h,pair(apply(Mul,pair(apply(H,pair(IDi,X)),G)),pair(IDi,RPWi))))))).
 contains(IDi,Dummy_Set_111).
 contains(Ui,Dummy_Set_112).
 contains(Sj,Dummy_Set_112).
 contains(Rc,Dummy_Set_112).
 contains(PWi,Dummy_Set_113).
 contains(R,Dummy_Set_113).
 contains(Bi,Dummy_Set_113)

step step_8 (Rc,Ui,Sj,SKuisj,SK1,H,Mul,Add,Sub,RPWi,PWi,R,Bi,IDi,Ai,Ci,Fi,Nc,G,KRU,Dummy_SIDj,X,KRS,Dummy_Nr,Ns,Dummy_Pi,Dummy_DID,Dummy_Di,Xi,Gi,Dummy_Wi,SK,Zi,Ti,Dummy_Li,Dummy_Yi,Hi,Dummy_Ki,Inc,Set_110,Set_111,Set_112,Set_113,SID,SIDj,Nr,Pi,DID,Di) :=
 state_regcentre(Rc,Ui,Sj,SKuisj,SK1,H,Mul,Add,Sub,2,RPWi,PWi,R,Bi,IDi,Ai,Ci,Fi,Nc,G,KRU,Dummy_SIDj,X,KRS,Dummy_Nr,Ns,Dummy_Pi,Dummy_DID,Dummy_Di,Xi,Gi,Dummy_Wi,SK,Zi,Ti,Dummy_Li,Dummy_Yi,Hi,Dummy_Ki,Inc,Set_110,Set_111,Set_112,Set_113,SID).
 iknows(pair(Pi,pair(DID,pair(Di,SIDj))))
=[exists Nr]=>
 state_regcentre(Rc,Ui,Sj,SKuisj,SK1,H,Mul,Add,Sub,3,RPWi,PWi,R,Bi,IDi,Ai,Ci,Fi,Nc,G,KRU,SIDj,X,KRS,Nr,Ns,Pi,DID,Di,Xi,Gi,apply(Add,pair(apply(Mul,pair(IDi,G)),Dummy_Li)),SK,Zi,Ti,apply(Mul,pair(Nr,G)),apply(Add,pair(apply(Mul,pair(KRS,G)),Ti)),Hi,apply(H,pair(Dummy_Li,pair(apply(Add,pair(apply(Mul,pair(KRS,G)),Ti)),pair(KRS,IDi)))),Inc,Set_110,Set_111,Set_112,Set_113,SID).
 iknows(pair(SIDj,pair(apply(H,pair(Dummy_Li,pair(apply(Add,pair(apply(Mul,pair(KRS,G)),Ti)),pair(KRS,IDi)))),pair(apply(Add,pair(apply(Mul,pair(KRS,G)),Ti)),apply(Add,pair(apply(Mul,pair(IDi,G)),Dummy_Li))))))


section properties:

property secrecy_of_subs1 (MGoal,ASGoal) :=
 [] ((secret(MGoal,subs1,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_subs2 (MGoal,ASGoal) :=
 [] ((secret(MGoal,subs2,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_subs3 (MGoal,ASGoal) :=
 [] ((secret(MGoal,subs3,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_subs4 (MGoal,ASGoal) :=
 [] ((secret(MGoal,subs4,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property authentication_on_alice_regcentre_nc (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,alice_regcentre_nc,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,alice_regcentre_nc,MGoal))
     /\ ((request(A1Goal,A2Goal,alice_regcentre_nc,MGoal,SID1)
           /\ request(A1Goal,A2Goal,alice_regcentre_nc,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_regcentre_bob_nr (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,regcentre_bob_nr,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,regcentre_bob_nr,MGoal))
     /\ ((request(A1Goal,A2Goal,regcentre_bob_nr,MGoal,SID1)
           /\ request(A1Goal,A2Goal,regcentre_bob_nr,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_bob_alice_ns (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,bob_alice_ns,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,bob_alice_ns,MGoal))
     /\ ((request(A1Goal,A2Goal,bob_alice_ns,MGoal,SID1)
           /\ request(A1Goal,A2Goal,bob_alice_ns,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state secrecy_of_subs1 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,subs1,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_subs2 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,subs2,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_subs3 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,subs3,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_subs4 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,subs4,ASGoal) &
 not(contains(i,ASGoal))

attack_state authentication_on_alice_regcentre_nc (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,alice_regcentre_nc,MGoal,SID) &
 not(witness(A2Goal,A1Goal,alice_regcentre_nc,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_alice_regcentre_nc (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,alice_regcentre_nc,MGoal,SID1).
 request(A1Goal,A2Goal,alice_regcentre_nc,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_regcentre_bob_nr (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,regcentre_bob_nr,MGoal,SID) &
 not(witness(A2Goal,A1Goal,regcentre_bob_nr,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_regcentre_bob_nr (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,regcentre_bob_nr,MGoal,SID1).
 request(A1Goal,A2Goal,regcentre_bob_nr,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_bob_alice_ns (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,bob_alice_ns,MGoal,SID) &
 not(witness(A2Goal,A1Goal,bob_alice_ns,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_bob_alice_ns (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,bob_alice_ns,MGoal,SID1).
 request(A1Goal,A2Goal,bob_alice_ns,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

