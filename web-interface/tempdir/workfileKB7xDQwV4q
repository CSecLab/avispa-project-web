role sip_server(SS,UAC : agent, PWD : text, H : hash_func, SND, RCV : channel(dy)) 
played_by SS def=
local  State             : nat, 
Callid, Realm    : text
init State := 1 
transition
0.   State = 1 
/ RCV(sipregister.UAC'.Callid') =|>
State' := 2
/ Realm' := new()
/ SND(sip401.UAC.Callid.Realm'.H(H(UAC.Realm'.PWD).Callid))
/ witness(SS,UAC,yy,H(H(UAC.Realm'.PWD).Callid)) 
1. State = 2 
/RCV(sipregister.UAC.Callid.H(H(H(UAC.Realm.PWD).Callid').PWD.UAC)) =|>
State' := 3
/ SND(sip200)
/ request(SS,UAC,y,H(H(H(UAC.Realm.PWD).Callid).PWD.UAC))
end role
role user_agent_client(UAC,SS : agent, PWD : text, H : hash_func, SND, RCV :channel(dy))
played_by UAC def=
local  State         : nat,
Callid, Realm   : text
init State := 1
transition
2.  State = 1
/ RCV(start) =|> 
State':=2
/ Callid' := new()
/ SND(sipregister.UAC.Callid')
3.   State = 2 
/ RCV(sip401.UAC.Callid.Realm'.H(H(UAC.Realm'.PWD).Callid)) =|>
State':= 3
/SND(sipregister.UAC.Callid.H(H(H(UAC.Realm.PWD).Callid).PWD.UAC)) 
/ witness(UAC,SS,y,H(H(H(UAC.Realm.PWD).Callid).PWD.UAC))
/ request(UAC,SS,yy,H(H(UAC.Realm.PWD).Callid))
4.   State = 3
/ RCV(sip200) =|> State':= 4
end role
role session(UAC,SS:agent, H:hash_func, PWD:text) 
def= local SND, RCV : channel(dy)
composition
sip_server(SS,UAC,PWD,H,SND,RCV)
/  user_agent_client(UAC,SS,PWD,H,SND,RCV) 
end role
role environment() def=
const   uac, ss              : agent,
h                  : hash_func,
y,yy                : protocol_id,
sip401, sip200, sipregister  : protocol_id,
pwd              : text
intruder_knowledge = {uac,ss,sipregister,sip401,sip200,h,i}
composition session(uac,ss,h,pwd)
end role
goal 
authentication_on y
authentication_on yy
end goal
environment() 