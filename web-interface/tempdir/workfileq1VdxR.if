%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfileq1VdxR

section signature:

state_server: agent * agent * hash_func * nat * text * text * text * text * message * text * set(agent) * nat -> fact
state_client: agent * agent * hash_func * nat * text * text * text * text * message * text * set(agent) * nat -> fact


section types:

7, 5, State, 9, 6, 4, 3, SID, 2, 1, 0, Dummy_State: nat
set_81, set_79, set_77, set_76, set_72, set_60: set
Set_41, Set_25, Dummy_Set_41, Dummy_Set_25, ASGoal: set(agent)
MAC, start, Dummy_MAC, dummy_msg, MGoal: message
MSK, Kid, Eap_pay, Nc, Ns, Dummy_Kid, Dummy_MSK, Dummy_Ns, Dummy_Nc, dummy_nonce, nc, ns: text
H1, h1: hash_func
C, S, c, s, g, i, r: agent
s_mac, s_msk: protocol_id


section inits:

initial_state init1 := 
 iknows(start).
 iknows(c).
 iknows(s).
 iknows(g).
 iknows(r).
 iknows(h1).
 iknows(nc).
 iknows(ns).
 iknows(i).
 state_client(c,s,h1,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_nonce,set_60,3).
 state_server(s,c,h1,1,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_nonce,set_72,4).
 state_server(s,i,h1,1,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_nonce,set_77,7).
 state_client(c,i,h1,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_nonce,set_79,9)


section rules:

step step_0 (C,S,H1,Nc,Ns,Eap_pay,Kid,MAC,MSK,Set_25,SID) :=
 state_client(C,S,H1,0,Nc,Ns,Eap_pay,Kid,MAC,MSK,Set_25,SID).
 iknows(start)
 =>
 state_client(C,S,H1,2,Nc,Ns,Eap_pay,Kid,MAC,MSK,Set_25,SID).
 iknows(0)

step step_1 (C,S,H1,Dummy_Nc,Dummy_Ns,Eap_pay,Kid,Dummy_MAC,Dummy_MSK,Set_25,SID,Nc,Ns,MSK) :=
 state_client(C,S,H1,2,Dummy_Nc,Dummy_Ns,Eap_pay,Kid,Dummy_MAC,Dummy_MSK,Set_25,SID).
 iknows(Ns)
=[exists MSK,Nc]=>
 state_client(C,S,H1,4,Nc,Ns,Eap_pay,Kid,apply(H1,pair(MSK,pair(Nc,pair(Ns,Kid)))),MSK,Set_25,SID).
 iknows(Nc)

step step_2 (C,S,H1,Nc,Ns,Eap_pay,Dummy_Kid,Dummy_MAC,MSK,Dummy_Set_25,SID,MAC) :=
 state_client(C,S,H1,4,Nc,Ns,Eap_pay,Dummy_Kid,Dummy_MAC,MSK,Dummy_Set_25,SID).
 iknows(MAC)
 =>
 state_client(C,S,H1,6,Nc,Ns,Eap_pay,Dummy_Kid,MAC,MSK,Dummy_Set_25,SID).
 iknows(MAC).
 contains(C,Dummy_Set_25).
 contains(S,Dummy_Set_25)

step step_3 (S,C,H1,Nc,Dummy_Ns,Eap_pay,Kid,MAC,MSK,Set_41,SID,Ns) :=
 state_server(S,C,H1,1,Nc,Dummy_Ns,Eap_pay,Kid,MAC,MSK,Set_41,SID).
 iknows(0)
=[exists Ns]=>
 state_server(S,C,H1,3,Nc,Ns,Eap_pay,Kid,MAC,MSK,Set_41,SID).
 iknows(Ns)

step step_4 (S,C,H1,Dummy_Nc,Ns,Eap_pay,Dummy_Kid,Dummy_MAC,Dummy_MSK,Dummy_Set_41,SID,Nc,Kid,MSK) :=
 state_server(S,C,H1,3,Dummy_Nc,Ns,Eap_pay,Dummy_Kid,Dummy_MAC,Dummy_MSK,Dummy_Set_41,SID).
 iknows(Nc)
=[exists Kid,MSK]=>
 state_server(S,C,H1,5,Nc,Ns,Eap_pay,Kid,apply(H1,pair(MSK,pair(Nc,pair(Ns,Kid)))),MSK,Dummy_Set_41,SID).
 iknows(apply(H1,pair(MSK,pair(Nc,pair(Ns,Kid))))).
 contains(C,Dummy_Set_41).
 contains(S,Dummy_Set_41)

step step_5 (S,C,H1,Nc,Ns,Eap_pay,Dummy_Kid,Dummy_MAC,MSK,Set_41,SID,MAC) :=
 state_server(S,C,H1,5,Nc,Ns,Eap_pay,Dummy_Kid,Dummy_MAC,MSK,Set_41,SID).
 iknows(MAC)
 =>
 state_server(S,C,H1,7,Nc,Ns,Eap_pay,Dummy_Kid,MAC,MSK,Set_41,SID)


section properties:

property secrecy_of_s_msk (MGoal,ASGoal) :=
 [] ((secret(MGoal,s_msk,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))


section attack_states:

attack_state secrecy_of_s_msk (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,s_msk,ASGoal) &
 not(contains(i,ASGoal))

