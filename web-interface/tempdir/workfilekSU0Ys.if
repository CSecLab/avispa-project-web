%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfilekSU0Ys

section signature:

state_bob: agent * agent * symmetric_key * hash_func * nat * text * text * symmetric_key * symmetric_key * nat -> fact
state_alice: agent * agent * symmetric_key * hash_func * nat * text * text * symmetric_key * symmetric_key * set(agent) * nat -> fact


section types:

set_82, set_80, set_66: set
Na, Nb, Dummy_Nb, Dummy_Na, dummy_nonce: text
5, 3, 1, State, 10, 6, 4, SID, Dummy_State, 2, 0, SID2, SID1: nat
Dummy_Set_21, Set_21, ASGoal: set(agent)
start, MGoal: message
alice_bob_na, na, nb, bob_alice_nb: protocol_id
Hash, dgst: hash_func
Ka, Kb, K, Dummy_Ka, Dummy_Kb, Dummy_K, sk, dummy_sk, ski: symmetric_key
A, B, A2Goal, A1Goal, a, b, i: agent


section inits:

initial_state init1 := 
 iknows(start).
 iknows(a).
 iknows(b).
 iknows(ski).
 iknows(dgst).
 iknows(i).
 state_alice(a,b,sk,dgst,0,dummy_nonce,dummy_nonce,dummy_sk,dummy_sk,set_66,3).
 state_bob(b,a,sk,dgst,1,dummy_nonce,dummy_nonce,dummy_sk,dummy_sk,4).
 state_alice(a,i,sk,dgst,0,dummy_nonce,dummy_nonce,dummy_sk,dummy_sk,set_80,6).
 state_bob(b,i,sk,dgst,1,dummy_nonce,dummy_nonce,dummy_sk,dummy_sk,10)


section rules:

step step_0 (A,B,K,Hash,Dummy_Na,Nb,Ka,Kb,Set_21,SID,Na) :=
 state_alice(A,B,K,Hash,0,Dummy_Na,Nb,Ka,Kb,Set_21,SID).
 iknows(start)
=[exists Na]=>
 state_alice(A,B,K,Hash,2,Na,Nb,Ka,Kb,Set_21,SID).
 iknows(Na)

step step_1 (A,B,Dummy_K,Hash,Na,Dummy_Nb,Ka,Dummy_Kb,Dummy_Set_21,SID,K,Nb) :=
 state_alice(A,B,Dummy_K,Hash,2,Na,Dummy_Nb,Ka,Dummy_Kb,Dummy_Set_21,SID).
 iknows(Nb)
=[exists K]=>
 state_alice(A,B,K,Hash,4,Na,Nb,Ka,pair(Na,Nb),Dummy_Set_21,SID).
 secret(K,sk,Dummy_Set_21).
 iknows(scrypt(pair(Na,Nb),K)).
 contains(A,Dummy_Set_21).
 contains(B,Dummy_Set_21)

step step_2 (A,B,K,Hash,Na,Nb,Ka,Kb,Set_21,SID) :=
 state_alice(A,B,K,Hash,4,Na,Nb,Ka,Kb,Set_21,SID).
 iknows(apply(Hash,A))
 =>
 state_alice(A,B,K,Hash,6,Na,Nb,Ka,Kb,Set_21,SID).
 witness(A,B,alice_bob_na,K)

step step_3 (B,A,K,Hash,Dummy_Na,Dummy_Nb,Dummy_Ka,Dummy_Kb,SID,Na,Nb) :=
 state_bob(B,A,K,Hash,1,Dummy_Na,Dummy_Nb,Dummy_Ka,Dummy_Kb,SID).
 iknows(Na)
=[exists Nb]=>
 state_bob(B,A,K,Hash,3,Na,Nb,pair(Na,Nb),pair(Nb,Na),SID).
 iknows(Nb)

step step_4 (B,A,Dummy_K,Hash,Na,Nb,Ka,Dummy_Kb,SID,K,Kb) :=
 state_bob(B,A,Dummy_K,Hash,3,Na,Nb,Ka,Dummy_Kb,SID).
 iknows(scrypt(Kb,K))
 =>
 state_bob(B,A,K,Hash,5,Na,Nb,Ka,Kb,SID).
 iknows(apply(Hash,Dummy_K)).
 request(B,A,alice_bob_na,Dummy_K,SID)


section properties:

property secrecy_of_sk (MGoal,ASGoal) :=
 [] ((secret(MGoal,sk,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property authentication_on_alice_bob_na (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,alice_bob_na,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,alice_bob_na,MGoal))
     /\ ((request(A1Goal,A2Goal,alice_bob_na,MGoal,SID1)
           /\ request(A1Goal,A2Goal,alice_bob_na,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_bob_alice_nb (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,bob_alice_nb,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,bob_alice_nb,MGoal))
     /\ ((request(A1Goal,A2Goal,bob_alice_nb,MGoal,SID1)
           /\ request(A1Goal,A2Goal,bob_alice_nb,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state secrecy_of_sk (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,sk,ASGoal) &
 not(contains(i,ASGoal))

attack_state authentication_on_alice_bob_na (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,alice_bob_na,MGoal,SID) &
 not(witness(A2Goal,A1Goal,alice_bob_na,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_alice_bob_na (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,alice_bob_na,MGoal,SID1).
 request(A1Goal,A2Goal,alice_bob_na,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_bob_alice_nb (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,bob_alice_nb,MGoal,SID) &
 not(witness(A2Goal,A1Goal,bob_alice_nb,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_bob_alice_nb (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,bob_alice_nb,MGoal,SID1).
 request(A1Goal,A2Goal,bob_alice_nb,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

