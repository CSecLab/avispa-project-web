%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfilexvKeRgv0aB

section signature:

state_server: agent * agent * symmetric_key * hash_func * hash_func * hash_func * nat * text * text * text * text * text * text * text * text * text * message * message * message * message * hash_func * set(text) * set(agent) * nat -> fact
state_alice: agent * agent * symmetric_key * hash_func * hash_func * hash_func * nat * text * text * text * text * text * text * text * text * text * message * message * message * message * hash_func * nat -> fact


section types:

alice_server_n1, server_alice_n2, server_alice, alice_server, subs1, subs2, subs3, subs4, subs5: protocol_id
ASGoal, Set_65, Dummy_Set_65: set(agent)
Set_64, Dummy_Set_64: set(text)
set_130, set_129, set_123, set_122: set
skas, SKas: symmetric_key
h, gen, ren, Inc, H, GEN, REN, dummy_hash: hash_func
MGoal, D, Gi, Pi, SK, start, Dummy_SK, Dummy_Pi, Dummy_D, Dummy_Gi, dummy_msg: message
idi, fi, bi, ri, x, n1, n2, gi, d, pi, ti, ei, IDi, Ri, Fi, Bi, Ti, X, Ei, N1, N2, Dummy_N2, Dummy_Ei, Dummy_N1, Dummy_Ti, Dummy_Bi, Dummy_Ri, dummy_nonce: text
State, 3, 2, 1, 0, 7, 6, 4, SID, Dummy_State, SID2, SID1: nat
ui, s, S, Ui, i, A2Goal, A1Goal: agent


section inits:

initial_state init1 := 
 iknows(start).
 iknows(ui).
 iknows(s).
 iknows(h).
 iknows(gen).
 iknows(ren).
 iknows(ti).
 iknows(pi).
 iknows(d).
 iknows(idi).
 iknows(i).
 state_alice(ui,s,skas,h,gen,ren,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_hash,3).
 state_server(ui,s,skas,h,gen,ren,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_hash,set_122,set_123,4).
 state_alice(s,ui,skas,h,gen,ren,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_hash,6).
 state_server(s,ui,skas,h,gen,ren,0,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_msg,dummy_msg,dummy_msg,dummy_msg,dummy_hash,set_129,set_130,7)


section rules:

step step_0 (Ui,S,SKas,H,GEN,REN,IDi,Ri,Bi,Fi,Ti,N1,N2,X,Ei,Gi,D,Pi,SK,Inc,SID) :=
 state_alice(Ui,S,SKas,H,GEN,REN,0,IDi,Ri,Bi,Fi,Ti,N1,N2,X,Ei,Gi,D,Pi,SK,Inc,SID).
 iknows(start)
 =>
 state_alice(Ui,S,SKas,H,GEN,REN,1,IDi,Ri,Bi,Fi,Ti,N1,N2,X,Ei,Gi,D,Pi,SK,Inc,SID).
 iknows(scrypt(SKas,pair(IDi,Fi)))

step step_1 (Ui,S,SKas,H,GEN,REN,IDi,Dummy_Ri,Dummy_Bi,Fi,Dummy_Ti,Dummy_N1,N2,X,Dummy_Ei,Dummy_Gi,Dummy_D,Pi,SK,Inc,SID,Bi,Ti,N1,Ei) :=
 state_alice(Ui,S,SKas,H,GEN,REN,1,IDi,Dummy_Ri,Dummy_Bi,Fi,Dummy_Ti,Dummy_N1,N2,X,Dummy_Ei,Dummy_Gi,Dummy_D,Pi,SK,Inc,SID).
 iknows(scrypt(SKas,pair(Ti,pair(Ei,Bi))))
=[exists N1]=>
 state_alice(Ui,S,SKas,H,GEN,REN,2,IDi,apply(H,pair(Fi,Dummy_Bi)),Bi,Fi,Ti,N1,N2,X,Ei,xor(apply(H,pair(Fi,Dummy_Bi)),Dummy_Ti),apply(H,pair(xor(apply(H,pair(Fi,Dummy_Bi)),Dummy_Ti),pair(apply(H,pair(Fi,Dummy_Bi)),N1))),Pi,SK,Inc,SID).
 iknows(pair(IDi,pair(Dummy_D,pair(Dummy_N1,Dummy_Ti))))

step step_2 (Ui,S,SKas,H,GEN,REN,IDi,Ri,Bi,Fi,Ti,N1,Dummy_N2,X,Ei,Gi,D,Dummy_Pi,Dummy_SK,Inc,SID,N2,Pi) :=
 state_alice(Ui,S,SKas,H,GEN,REN,2,IDi,Ri,Bi,Fi,Ti,N1,Dummy_N2,X,Ei,Gi,D,Dummy_Pi,Dummy_SK,Inc,SID).
 iknows(pair(Pi,N2))
 =>
 state_alice(Ui,S,SKas,H,GEN,REN,3,IDi,Ri,Bi,Fi,Ti,N1,N2,X,Ei,Gi,D,Pi,apply(H,pair(Ri,pair(apply(H,pair(IDi,X)),pair(N1,Dummy_N2)))),Inc,SID)

step step_3 (S,Ui,SKas,H,GEN,REN,IDi,Dummy_Ri,Fi,Dummy_Bi,Dummy_Ti,X,Dummy_Ei,N1,N2,D,Gi,Pi,SK,Inc,Dummy_Set_64,Dummy_Set_65,SID) :=
 state_server(S,Ui,SKas,H,GEN,REN,0,IDi,Dummy_Ri,Fi,Dummy_Bi,Dummy_Ti,X,Dummy_Ei,N1,N2,D,Gi,Pi,SK,Inc,Dummy_Set_64,Dummy_Set_65,SID).
 iknows(pair(IDi,Fi))
 =>
 state_server(S,Ui,SKas,H,GEN,REN,1,IDi,apply(H,Fi),Fi,apply(H,Fi),xor(apply(H,pair(IDi,X)),apply(H,Fi)),X,apply(H,pair(IDi,apply(H,Fi))),N1,N2,D,Gi,Pi,SK,Inc,Dummy_Set_64,Dummy_Set_65,SID).
 secret(Dummy_Set_64,subs4,Dummy_Set_65).
 iknows(scrypt(SKas,pair(xor(apply(H,pair(IDi,X)),apply(H,Fi)),pair(apply(H,pair(IDi,apply(H,Fi))),apply(H,Fi))))).
 contains(X,Dummy_Set_64).
 contains(S,Dummy_Set_65)

step step_4 (S,Ui,SKas,H,GEN,REN,IDi,Ri,Fi,Bi,Ti,X,Ei,N1,Dummy_N2,D,Gi,Dummy_Pi,Dummy_SK,Inc,Set_64,Set_65,SID,N2) :=
 state_server(S,Ui,SKas,H,GEN,REN,1,IDi,Ri,Fi,Bi,Ti,X,Ei,N1,Dummy_N2,D,Gi,Dummy_Pi,Dummy_SK,Inc,Set_64,Set_65,SID).
 iknows(pair(IDi,pair(D,pair(N1,Ti))))
=[exists N2]=>
 state_server(S,Ui,SKas,H,GEN,REN,2,IDi,Ri,Fi,Bi,Ti,X,Ei,N1,N2,D,Gi,apply(H,pair(Dummy_SK,pair(apply(H,pair(IDi,X)),N2))),apply(H,pair(Ri,pair(apply(H,pair(IDi,X)),pair(N1,N2)))),Inc,Set_64,Set_65,SID).
 iknows(pair(apply(H,pair(Dummy_SK,pair(apply(H,pair(IDi,X)),N2))),N2))


section properties:

property secrecy_of_subs1 (MGoal,ASGoal) :=
 [] ((secret(MGoal,subs1,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_subs2 (MGoal,ASGoal) :=
 [] ((secret(MGoal,subs2,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_subs3 (MGoal,ASGoal) :=
 [] ((secret(MGoal,subs3,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_subs4 (MGoal,ASGoal) :=
 [] ((secret(MGoal,subs4,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property secrecy_of_subs5 (MGoal,ASGoal) :=
 [] ((secret(MGoal,subs5,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))

property authentication_on_alice_server_n1 (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,alice_server_n1,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,alice_server_n1,MGoal))
     /\ ((request(A1Goal,A2Goal,alice_server_n1,MGoal,SID1)
           /\ request(A1Goal,A2Goal,alice_server_n1,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))

property authentication_on_server_alice_n2 (A1Goal,A2Goal,MGoal,SID,SID1,SID2) :=
 [] (((request(A1Goal,A2Goal,server_alice_n2,MGoal,SID)
       /\ ~ equal(A2Goal,i))
      => witness(A2Goal,A1Goal,server_alice_n2,MGoal))
     /\ ((request(A1Goal,A2Goal,server_alice_n2,MGoal,SID1)
           /\ request(A1Goal,A2Goal,server_alice_n2,MGoal,SID2)
           /\ ~ equal(A2Goal,i))
          => equal(SID1,SID2)))


section attack_states:

attack_state secrecy_of_subs1 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,subs1,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_subs2 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,subs2,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_subs3 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,subs3,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_subs4 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,subs4,ASGoal) &
 not(contains(i,ASGoal))

attack_state secrecy_of_subs5 (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,subs5,ASGoal) &
 not(contains(i,ASGoal))

attack_state authentication_on_alice_server_n1 (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,alice_server_n1,MGoal,SID) &
 not(witness(A2Goal,A1Goal,alice_server_n1,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_alice_server_n1 (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,alice_server_n1,MGoal,SID1).
 request(A1Goal,A2Goal,alice_server_n1,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

attack_state authentication_on_server_alice_n2 (A1Goal,A2Goal,MGoal,SID) :=
 request(A1Goal,A2Goal,server_alice_n2,MGoal,SID) &
 not(witness(A2Goal,A1Goal,server_alice_n2,MGoal)) &
 not(equal(A2Goal,i))
attack_state replay_protection_on_server_alice_n2 (A2Goal,A1Goal,MGoal,SID1,SID2) :=
 request(A1Goal,A2Goal,server_alice_n2,MGoal,SID1).
 request(A1Goal,A2Goal,server_alice_n2,MGoal,SID2) &
 not(equal(SID1,SID2)) &
 not(equal(A2Goal,i))

