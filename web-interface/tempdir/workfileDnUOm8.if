%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfileDnUOm8

section signature:

state_u2: agent * agent * agent * agent * public_key * public_key * public_key * public_key * public_key * hash_func * nat * nat * nat * nat * text * nat * nat * text * text * text * symmetric_key * nat -> fact
state_sm: agent * agent * agent * agent * public_key * public_key * public_key * public_key * public_key * hash_func * nat * nat * nat * nat * text * nat * nat * text * text * text * symmetric_key * nat -> fact
state_am: agent * agent * agent * agent * public_key * public_key * public_key * public_key * public_key * hash_func * nat * nat * nat * nat * nat -> fact
state_u1: agent * agent * agent * agent * public_key * public_key * public_key * public_key * public_key * hash_func * nat * nat * nat * text * nat * text * text * text * text * symmetric_key * set * nat -> fact


section types:

set_156, set_152, set_148, Dummy_Set_34, Set_34, set_132: set
ASGoal: set(agent)
start, MGoal: message
session_key: protocol_id
Ks, Dummy_Ks, dummy_sk: symmetric_key
Bye, ServReq, InviteAB, UserAC, ServRes, dummy_nonce: text
H, h: hash_func
Ku1, Kam, Kca, Ku2, Ksm, ku1, kam, kca, ku2, ksm, ki: public_key
U1, AM, SM, U2, u2, am, sm, u1, i: agent
TOKENID, Nonce, UaT, UserbID, UseraID, S, 20, 19, 18, 16, 4, 14, 13, 11, 10, 8, 6, SID, 5, Dummy_Nonce, Dummy_S, 3, dummy_nat, 2, 1, 0, 9: nat


section inits:

initial_state init1 := 
 iknows(start).
 iknows(u1).
 iknows(am).
 iknows(sm).
 iknows(u2).
 iknows(ku1).
 iknows(ku2).
 iknows(kam).
 iknows(ksm).
 iknows(ki).
 iknows(i).
 state_u1(u1,am,sm,u2,ku1,kam,kca,ku2,ksm,h,0,dummy_nat,dummy_nat,dummy_nonce,dummy_nat,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_sk,set_132,3).
 state_am(am,u1,sm,u2,ku1,kam,kca,ku2,ksm,h,2,dummy_nat,dummy_nat,dummy_nat,4).
 state_sm(sm,u1,am,u2,ku1,kam,kca,ku2,ksm,h,1,dummy_nat,dummy_nat,dummy_nat,dummy_nonce,dummy_nat,dummy_nat,dummy_nonce,dummy_nonce,dummy_nonce,dummy_sk,5).
 state_u2(u2,u1,am,sm,ku1,kam,kca,ku2,ksm,h,3,dummy_nat,dummy_nat,dummy_nat,dummy_nonce,dummy_nat,dummy_nat,dummy_nonce,dummy_nonce,dummy_nonce,dummy_sk,6).
 state_u1(u1,i,sm,u2,ku1,ki,kca,ku2,ksm,h,0,dummy_nat,dummy_nat,dummy_nonce,dummy_nat,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_sk,set_148,8).
 state_sm(sm,u1,i,u2,ku1,ki,kca,ku2,ksm,h,1,dummy_nat,dummy_nat,dummy_nat,dummy_nonce,dummy_nat,dummy_nat,dummy_nonce,dummy_nonce,dummy_nonce,dummy_sk,10).
 state_u2(u2,u1,i,sm,ku1,ki,kca,ku2,ksm,h,3,dummy_nat,dummy_nat,dummy_nat,dummy_nonce,dummy_nat,dummy_nat,dummy_nonce,dummy_nonce,dummy_nonce,dummy_sk,11).
 state_u1(u1,am,i,u2,ku1,kam,kca,ku2,ki,h,0,dummy_nat,dummy_nat,dummy_nonce,dummy_nat,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_sk,set_152,13).
 state_am(am,u1,i,u2,ku1,kam,kca,ku2,ki,h,2,dummy_nat,dummy_nat,dummy_nat,14).
 state_u2(u2,u1,am,i,ku1,kam,kca,ku2,ki,h,3,dummy_nat,dummy_nat,dummy_nat,dummy_nonce,dummy_nat,dummy_nat,dummy_nonce,dummy_nonce,dummy_nonce,dummy_sk,16).
 state_u1(u1,am,sm,i,ku1,kam,kca,ki,ksm,h,0,dummy_nat,dummy_nat,dummy_nonce,dummy_nat,dummy_nonce,dummy_nonce,dummy_nonce,dummy_nonce,dummy_sk,set_156,18).
 state_am(am,u1,sm,i,ku1,kam,kca,ki,ksm,h,2,dummy_nat,dummy_nat,dummy_nat,19).
 state_sm(sm,u1,am,i,ku1,kam,kca,ki,ksm,h,1,dummy_nat,dummy_nat,dummy_nat,dummy_nonce,dummy_nat,dummy_nat,dummy_nonce,dummy_nonce,dummy_nonce,dummy_sk,20)


section rules:

step step_0 (U1,AM,SM,U2,Ku1,Kam,Kca,Ku2,Ksm,H,UseraID,UaT,UserAC,Dummy_Nonce,InviteAB,ServReq,ServRes,Bye,Ks,Set_34,SID,Nonce) :=
 state_u1(U1,AM,SM,U2,Ku1,Kam,Kca,Ku2,Ksm,H,0,UseraID,UaT,UserAC,Dummy_Nonce,InviteAB,ServReq,ServRes,Bye,Ks,Set_34,SID).
 iknows(start)
=[exists Nonce]=>
 state_u1(U1,AM,SM,U2,Ku1,Kam,Kca,Ku2,Ksm,H,1,UseraID,UaT,UserAC,Nonce,InviteAB,ServReq,ServRes,Bye,Ks,Set_34,SID).
 iknows(crypt(Kam,pair(UseraID,pair(UserAC,pair(Nonce,crypt(inv(Ku1),apply(H,pair(UseraID,Nonce))))))))

step step_1 (U1,AM,SM,U2,Ku1,Kam,Kca,Ku2,Ksm,H,UseraID,UaT,UserAC,Dummy_Nonce,InviteAB,ServReq,ServRes,Bye,Ks,Set_34,SID,Nonce) :=
 state_u1(U1,AM,SM,U2,Ku1,Kam,Kca,Ku2,Ksm,H,1,UseraID,UaT,UserAC,Dummy_Nonce,InviteAB,ServReq,ServRes,Bye,Ks,Set_34,SID).
 iknows(crypt(inv(Kam),pair(UaT,pair(crypt(inv(Kca),pair(SM,Ksm)),Nonce))))
 =>
 state_u1(U1,AM,SM,U2,Ku1,Kam,Kca,Ku2,Ksm,H,2,UseraID,UaT,UserAC,Nonce,InviteAB,ServReq,ServRes,Bye,Ks,Set_34,SID).
 iknows(pair(InviteAB,crypt(Ksm,pair(UseraID,pair(ServReq,pair(UaT,Dummy_Nonce))))))

step step_2 (U1,AM,SM,U2,Ku1,Kam,Kca,Ku2,Ksm,H,UseraID,UaT,UserAC,Dummy_Nonce,InviteAB,ServReq,ServRes,Bye,Dummy_Ks,Dummy_Set_34,SID,Nonce,Ks) :=
 state_u1(U1,AM,SM,U2,Ku1,Kam,Kca,Ku2,Ksm,H,2,UseraID,UaT,UserAC,Dummy_Nonce,InviteAB,ServReq,ServRes,Bye,Dummy_Ks,Dummy_Set_34,SID).
 iknows(crypt(Ku1,pair(UseraID,pair(ServRes,pair(Ks,pair(crypt(inv(Ksm),apply(H,pair(UseraID,pair(ServRes,pair(Ks,Nonce))))),Nonce))))))
 =>
 state_u1(U1,AM,SM,U2,Ku1,Kam,Kca,Ku2,Ksm,H,3,UseraID,UaT,UserAC,Nonce,InviteAB,ServReq,ServRes,Bye,Ks,Dummy_Set_34,SID).
 secret(Dummy_Ks,session_key,Dummy_Set_34).
 iknows(crypt(inv(Ku1),pair(UseraID,pair(Bye,Nonce)))).
 contains(sm,Dummy_Set_34).
 contains(u1,Dummy_Set_34)

step step_3 (AM,U1,SM,U2,Ku1,Kam,Kca,Ku2,Ksm,H,UaT,Dummy_Nonce,UseraID,SID,Nonce) :=
 state_am(AM,U1,SM,U2,Ku1,Kam,Kca,Ku2,Ksm,H,2,UaT,Dummy_Nonce,UseraID,SID).
 iknows(crypt(Kam,pair(UseraID,pair(Dummy_Nonce,crypt(inv(Ku1),apply(H,pair(UseraID,Dummy_Nonce)))))))
=[exists Nonce]=>
 state_am(AM,U1,SM,U2,Ku1,Kam,Kca,Ku2,Ksm,H,4,UaT,Nonce,UseraID,SID).
 iknows(crypt(inv(Kam),pair(UaT,pair(crypt(inv(Kca),pair(SM,Ksm)),Nonce))))

step step_4 (SM,U1,AM,U2,Ku1,Kam,Kca,Ku2,Ksm,H,UseraID,UserbID,UaT,UserAC,Dummy_Nonce,TOKENID,InviteAB,ServReq,ServRes,Dummy_Ks,SID,Nonce,Ks) :=
 state_sm(SM,U1,AM,U2,Ku1,Kam,Kca,Ku2,Ksm,H,1,UseraID,UserbID,UaT,UserAC,Dummy_Nonce,TOKENID,InviteAB,ServReq,ServRes,Dummy_Ks,SID).
 iknows(pair(InviteAB,crypt(Ksm,pair(UseraID,pair(ServReq,pair(UaT,Dummy_Nonce))))))
=[exists Nonce,Ks]=>
 state_sm(SM,U1,AM,U2,Ku1,Kam,Kca,Ku2,Ksm,H,3,UseraID,UserbID,UaT,UserAC,Nonce,TOKENID,InviteAB,ServReq,ServRes,Ks,SID).
 iknows(pair(InviteAB,crypt(Ku2,pair(UseraID,pair(UserbID,pair(Ks,pair(crypt(inv(Ksm),apply(H,pair(UseraID,pair(Ks,Nonce)))),Nonce))))))).
 iknows(crypt(Ku1,pair(UseraID,pair(ServRes,pair(Ks,pair(crypt(inv(Ksm),apply(H,pair(UseraID,pair(ServRes,pair(Ks,Nonce))))),Nonce))))))

step step_5 (U2,U1,AM,SM,Ku1,Kam,Kca,Ku2,Ksm,H,UseraID,UserbID,UaT,UserAC,Dummy_Nonce,TOKENID,InviteAB,ServReq,Bye,Dummy_Ks,SID,Nonce,Ks) :=
 state_u2(U2,U1,AM,SM,Ku1,Kam,Kca,Ku2,Ksm,H,3,UseraID,UserbID,UaT,UserAC,Dummy_Nonce,TOKENID,InviteAB,ServReq,Bye,Dummy_Ks,SID).
 iknows(pair(InviteAB,crypt(Ku2,pair(UseraID,pair(UserbID,pair(Ks,pair(crypt(inv(Ksm),apply(H,pair(UseraID,pair(Ks,Nonce)))),Nonce)))))))
 =>
 state_u2(U2,U1,AM,SM,Ku1,Kam,Kca,Ku2,Ksm,H,6,UseraID,UserbID,UaT,UserAC,Nonce,TOKENID,InviteAB,ServReq,Bye,Ks,SID)

step step_6 (U2,U1,AM,SM,Ku1,Kam,Kca,Ku2,Ksm,H,UseraID,UserbID,UaT,UserAC,Dummy_Nonce,TOKENID,InviteAB,ServReq,Bye,Ks,SID,Nonce) :=
 state_u2(U2,U1,AM,SM,Ku1,Kam,Kca,Ku2,Ksm,H,6,UseraID,UserbID,UaT,UserAC,Dummy_Nonce,TOKENID,InviteAB,ServReq,Bye,Ks,SID).
 iknows(crypt(inv(Ku1),pair(UseraID,pair(Bye,Nonce))))
 =>
 state_u2(U2,U1,AM,SM,Ku1,Kam,Kca,Ku2,Ksm,H,9,UseraID,UserbID,UaT,UserAC,Nonce,TOKENID,InviteAB,ServReq,Bye,Ks,SID)


section properties:

property secrecy_of_session_key (MGoal,ASGoal) :=
 [] ((secret(MGoal,session_key,ASGoal) /\ iknows(MGoal))
     => contains(i,ASGoal))


section attack_states:

attack_state secrecy_of_session_key (MGoal,ASGoal) :=
 iknows(MGoal).
 secret(MGoal,session_key,ASGoal) &
 not(contains(i,ASGoal))

